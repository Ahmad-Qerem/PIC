

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Apr 08 16:49:58 2022

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    94                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    95                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    96  0000                     
    97                           	psect	idataCOMRAM
    98  005652                     __pidataCOMRAM:
    99                           	opt stack 0
   100                           
   101                           ;initializer for _StateOFF
   102  005652  4F                 	db	79
   103  005653  46                 	db	70
   104  005654  46                 	db	70
   105  005655  00                 	db	0
   106                           
   107                           	psect	idataBANK0
   108  00564A                     __pidataBANK0:
   109                           	opt stack 0
   110                           
   111                           ;initializer for _LCD_INIT_STRING
   112  00564A  28                 	db	40
   113  00564B  0C                 	db	12
   114  00564C  01                 	db	1
   115  00564D  06                 	db	6
   116                           
   117                           ;initializer for _StateON
   118  00564E  20                 	db	32
   119  00564F  4F                 	db	79
   120  005650  4E                 	db	78
   121  005651  00                 	db	0
   122                           
   123                           	psect	idataBANK1
   124  005058                     __pidataBANK1:
   125                           	opt stack 0
   126                           
   127                           ;initializer for _m0
   128  005058  53                 	db	83
   129  005059  45                 	db	69
   130  00505A  43                 	db	67
   131  00505B  20                 	db	32
   132  00505C  20                 	db	32
   133  00505D  20                 	db	32
   134  00505E  20                 	db	32
   135  00505F  20                 	db	32
   136  005060  20                 	db	32
   137  005061  20                 	db	32
   138  005062  20                 	db	32
   139  005063  20                 	db	32
   140  005064  20                 	db	32
   141  005065  00                 	db	0
   142                           
   143                           ;initializer for _m1
   144  005066  53                 	db	83
   145  005067  45                 	db	69
   146  005068  43                 	db	67
   147  005069  20                 	db	32
   148  00506A  20                 	db	32
   149  00506B  20                 	db	32
   150  00506C  20                 	db	32
   151  00506D  20                 	db	32
   152  00506E  20                 	db	32
   153  00506F  20                 	db	32
   154  005070  20                 	db	32
   155  005071  20                 	db	32
   156  005072  20                 	db	32
   157  005073  00                 	db	0
   158                           
   159                           ;initializer for _m2
   160  005074  31                 	db	49
   161  005075  30                 	db	48
   162  005076  53                 	db	83
   163  005077  45                 	db	69
   164  005078  43                 	db	67
   165  005079  20                 	db	32
   166  00507A  20                 	db	32
   167  00507B  20                 	db	32
   168  00507C  20                 	db	32
   169  00507D  20                 	db	32
   170  00507E  20                 	db	32
   171  00507F  20                 	db	32
   172  005080  20                 	db	32
   173  005081  00                 	db	0
   174                           
   175                           ;initializer for _m3
   176  005082  4D                 	db	77
   177  005083  49                 	db	73
   178  005084  4E                 	db	78
   179  005085  20                 	db	32
   180  005086  20                 	db	32
   181  005087  20                 	db	32
   182  005088  20                 	db	32
   183  005089  20                 	db	32
   184  00508A  20                 	db	32
   185  00508B  20                 	db	32
   186  00508C  20                 	db	32
   187  00508D  20                 	db	32
   188  00508E  20                 	db	32
   189  00508F  00                 	db	0
   190                           
   191                           ;initializer for _m4
   192  005090  31                 	db	49
   193  005091  30                 	db	48
   194  005092  4D                 	db	77
   195  005093  49                 	db	73
   196  005094  4E                 	db	78
   197  005095  20                 	db	32
   198  005096  20                 	db	32
   199  005097  20                 	db	32
   200  005098  20                 	db	32
   201  005099  20                 	db	32
   202  00509A  20                 	db	32
   203  00509B  20                 	db	32
   204  00509C  20                 	db	32
   205  00509D  00                 	db	0
   206                           
   207                           ;initializer for _m5
   208  00509E  48                 	db	72
   209  00509F  52                 	db	82
   210  0050A0  20                 	db	32
   211  0050A1  20                 	db	32
   212  0050A2  20                 	db	32
   213  0050A3  20                 	db	32
   214  0050A4  20                 	db	32
   215  0050A5  20                 	db	32
   216  0050A6  20                 	db	32
   217  0050A7  20                 	db	32
   218  0050A8  20                 	db	32
   219  0050A9  20                 	db	32
   220  0050AA  20                 	db	32
   221  0050AB  00                 	db	0
   222                           
   223                           	psect	mediumconst
   224  00FF00                     __pmediumconst:
   225                           	opt stack 0
   226  00FF00  00                 	db	0
   227  00FF01                     _dpowers:
   228                           	opt stack 0
   229  00FF01  0001               	dw	1
   230  00FF03  0000               	dw	0
   231  00FF05  000A               	dw	10
   232  00FF07  0000               	dw	0
   233  00FF09  0064               	dw	100
   234  00FF0B  0000               	dw	0
   235  00FF0D  03E8               	dw	1000
   236  00FF0F  0000               	dw	0
   237  00FF11  2710               	dw	10000
   238  00FF13  0000               	dw	0
   239  00FF15  86A0               	dw	34464
   240  00FF17  0001               	dw	1
   241  00FF19  4240               	dw	16960
   242  00FF1B  000F               	dw	15
   243  00FF1D  9680               	dw	38528
   244  00FF1F  0098               	dw	152
   245  00FF21  E100               	dw	57600
   246  00FF23  05F5               	dw	1525
   247  00FF25  CA00               	dw	51712
   248  00FF27  3B9A               	dw	15258
   249  00FF29                     __end_of_dpowers:
   250                           	opt stack 0
   251  00FF29                     __npowers_:
   252                           	opt stack 0
   253  00FF29  00                 	db	0
   254  00FF2A  80                 	db	128
   255  00FF2B  3F                 	db	63
   256  00FF2C  CD                 	db	205
   257  00FF2D  CC                 	db	204
   258  00FF2E  3D                 	db	61
   259  00FF2F  D7                 	db	215
   260  00FF30  23                 	db	35
   261  00FF31  3C                 	db	60
   262  00FF32  12                 	db	18
   263  00FF33  83                 	db	131
   264  00FF34  3A                 	db	58
   265  00FF35  B7                 	db	183
   266  00FF36  D1                 	db	209
   267  00FF37  38                 	db	56
   268  00FF38  C6                 	db	198
   269  00FF39  27                 	db	39
   270  00FF3A  37                 	db	55
   271  00FF3B  38                 	db	56
   272  00FF3C  86                 	db	134
   273  00FF3D  35                 	db	53
   274  00FF3E  C0                 	db	192
   275  00FF3F  D6                 	db	214
   276  00FF40  33                 	db	51
   277  00FF41  CC                 	db	204
   278  00FF42  2B                 	db	43
   279  00FF43  32                 	db	50
   280  00FF44  70                 	db	112
   281  00FF45  89                 	db	137
   282  00FF46  30                 	db	48
   283  00FF47  E7                 	db	231
   284  00FF48  DB                 	db	219
   285  00FF49  2E                 	db	46
   286  00FF4A  E5                 	db	229
   287  00FF4B  3C                 	db	60
   288  00FF4C  1E                 	db	30
   289  00FF4D  42                 	db	66
   290  00FF4E  A2                 	db	162
   291  00FF4F  0D                 	db	13
   292  00FF50                     __end_of__npowers_:
   293                           	opt stack 0
   294  00FF50                     __powers_:
   295                           	opt stack 0
   296  00FF50  00                 	db	0
   297  00FF51  80                 	db	128
   298  00FF52  3F                 	db	63
   299  00FF53  00                 	db	0
   300  00FF54  20                 	db	32
   301  00FF55  41                 	db	65
   302  00FF56  00                 	db	0
   303  00FF57  C8                 	db	200
   304  00FF58  42                 	db	66
   305  00FF59  00                 	db	0
   306  00FF5A  7A                 	db	122
   307  00FF5B  44                 	db	68
   308  00FF5C  40                 	db	64
   309  00FF5D  1C                 	db	28
   310  00FF5E  46                 	db	70
   311  00FF5F  50                 	db	80
   312  00FF60  C3                 	db	195
   313  00FF61  47                 	db	71
   314  00FF62  24                 	db	36
   315  00FF63  74                 	db	116
   316  00FF64  49                 	db	73
   317  00FF65  97                 	db	151
   318  00FF66  18                 	db	24
   319  00FF67  4B                 	db	75
   320  00FF68  BC                 	db	188
   321  00FF69  BE                 	db	190
   322  00FF6A  4C                 	db	76
   323  00FF6B  6B                 	db	107
   324  00FF6C  6E                 	db	110
   325  00FF6D  4E                 	db	78
   326  00FF6E  03                 	db	3
   327  00FF6F  15                 	db	21
   328  00FF70  50                 	db	80
   329  00FF71  79                 	db	121
   330  00FF72  AD                 	db	173
   331  00FF73  60                 	db	96
   332  00FF74  F3                 	db	243
   333  00FF75  49                 	db	73
   334  00FF76  71                 	db	113
   335  00FF77                     __end_of__powers_:
   336                           	opt stack 0
   337  0000                     _ADCON0	set	4034
   338  0000                     _ADCON0bits	set	4034
   339  0000                     _ADCON1	set	4033
   340  0000                     _ADCON2	set	4032
   341  0000                     _ADRESH	set	4036
   342  0000                     _ADRESL	set	4035
   343  0000                     _INTCON	set	4082
   344  0000                     _INTCON2	set	4081
   345  0000                     _INTCON2bits	set	4081
   346  0000                     _INTCON3	set	4080
   347  0000                     _INTCON3bits	set	4080
   348  0000                     _INTCONbits	set	4082
   349  0000                     _PIE1	set	3997
   350  0000                     _PIE2	set	4000
   351  0000                     _PIR1	set	3998
   352  0000                     _PORTBbits	set	3969
   353  0000                     _PORTCbits	set	3970
   354  0000                     _PORTDbits	set	3971
   355  0000                     _PORTEbits	set	3972
   356  0000                     _RCONbits	set	4048
   357  0000                     _T0CON	set	4053
   358  0000                     _T0CONbits	set	4053
   359  0000                     _TMR0H	set	4055
   360  0000                     _TMR0L	set	4054
   361  0000                     _TRISA	set	3986
   362  0000                     _TRISB	set	3987
   363  0000                     _TRISC	set	3988
   364  0000                     _TRISD	set	3989
   365  0000                     _TRISE	set	3990
   366  00FF77                     STR_1:
   367  00FF77  54                 	db	84	;'T'
   368  00FF78  69                 	db	105	;'i'
   369  00FF79  6D                 	db	109	;'m'
   370  00FF7A  65                 	db	101	;'e'
   371  00FF7B  20                 	db	32
   372  00FF7C  3A                 	db	58	;':'
   373  00FF7D  20                 	db	32
   374  00FF7E  25                 	db	37
   375  00FF7F  30                 	db	48	;'0'
   376  00FF80  32                 	db	50	;'2'
   377  00FF81  64                 	db	100	;'d'
   378  00FF82  3A                 	db	58	;':'
   379  00FF83  25                 	db	37
   380  00FF84  30                 	db	48	;'0'
   381  00FF85  32                 	db	50	;'2'
   382  00FF86  64                 	db	100	;'d'
   383  00FF87  3A                 	db	58	;':'
   384  00FF88  25                 	db	37
   385  00FF89  30                 	db	48	;'0'
   386  00FF8A  32                 	db	50	;'2'
   387  00FF8B  64                 	db	100	;'d'
   388  00FF8C  20                 	db	32
   389  00FF8D  00                 	db	0
   390  00FF8E                     STR_4:
   391  00FF8E  4D                 	db	77	;'M'
   392  00FF8F  44                 	db	68	;'D'
   393  00FF90  3A                 	db	58	;':'
   394  00FF91  53                 	db	83	;'S'
   395  00FF92  45                 	db	69	;'E'
   396  00FF93  43                 	db	67	;'C'
   397  00FF94  20                 	db	32
   398  00FF95  20                 	db	32
   399  00FF96  20                 	db	32
   400  00FF97  20                 	db	32
   401  00FF98  20                 	db	32
   402  00FF99  20                 	db	32
   403  00FF9A  20                 	db	32
   404  00FF9B  20                 	db	32
   405  00FF9C  20                 	db	32
   406  00FF9D  20                 	db	32
   407  00FF9E  00                 	db	0
   408  00FF9F                     STR_7:
   409  00FF9F  54                 	db	84	;'T'
   410  00FFA0  69                 	db	105	;'i'
   411  00FFA1  6D                 	db	109	;'m'
   412  00FFA2  65                 	db	101	;'e'
   413  00FFA3  20                 	db	32
   414  00FFA4  3A                 	db	58	;':'
   415  00FFA5  20                 	db	32
   416  00FFA6  30                 	db	48	;'0'
   417  00FFA7  30                 	db	48	;'0'
   418  00FFA8  3A                 	db	58	;':'
   419  00FFA9  30                 	db	48	;'0'
   420  00FFAA  30                 	db	48	;'0'
   421  00FFAB  3A                 	db	58	;':'
   422  00FFAC  30                 	db	48	;'0'
   423  00FFAD  30                 	db	48	;'0'
   424  00FFAE  20                 	db	32
   425  00FFAF  00                 	db	0
   426  00FFB0                     STR_2:
   427  00FFB0  43                 	db	67	;'C'
   428  00FFB1  54                 	db	84	;'T'
   429  00FFB2  3A                 	db	58	;':'
   430  00FFB3  25                 	db	37
   431  00FFB4  35                 	db	53	;'5'
   432  00FFB5  2E                 	db	46
   433  00FFB6  31                 	db	49	;'1'
   434  00FFB7  66                 	db	102	;'f'
   435  00FFB8  43                 	db	67	;'C'
   436  00FFB9  20                 	db	32
   437  00FFBA  43                 	db	67	;'C'
   438  00FFBB  4B                 	db	75	;'K'
   439  00FFBC  3A                 	db	58	;':'
   440  00FFBD  4F                 	db	79	;'O'
   441  00FFBE  46                 	db	70	;'F'
   442  00FFBF  46                 	db	70	;'F'
   443  00FFC0  00                 	db	0
   444  00FFC1                     STR_3:
   445  00FFC1  53                 	db	83	;'S'
   446  00FFC2  50                 	db	80	;'P'
   447  00FFC3  3A                 	db	58	;':'
   448  00FFC4  25                 	db	37
   449  00FFC5  35                 	db	53	;'5'
   450  00FFC6  2E                 	db	46
   451  00FFC7  31                 	db	49	;'1'
   452  00FFC8  66                 	db	102	;'f'
   453  00FFC9  43                 	db	67	;'C'
   454  00FFCA  20                 	db	32
   455  00FFCB  48                 	db	72	;'H'
   456  00FFCC  54                 	db	84	;'T'
   457  00FFCD  3A                 	db	58	;':'
   458  00FFCE  4F                 	db	79	;'O'
   459  00FFCF  46                 	db	70	;'F'
   460  00FFD0  46                 	db	70	;'F'
   461  00FFD1  00                 	db	0
   462  00FFD2                     STR_16:
   463  00FFD2  43                 	db	67	;'C'
   464  00FFD3  54                 	db	84	;'T'
   465  00FFD4  3A                 	db	58	;':'
   466  00FFD5  25                 	db	37
   467  00FFD6  35                 	db	53	;'5'
   468  00FFD7  2E                 	db	46
   469  00FFD8  31                 	db	49	;'1'
   470  00FFD9  66                 	db	102	;'f'
   471  00FFDA  43                 	db	67	;'C'
   472  00FFDB  20                 	db	32
   473  00FFDC  43                 	db	67	;'C'
   474  00FFDD  4B                 	db	75	;'K'
   475  00FFDE  3A                 	db	58	;':'
   476  00FFDF  25                 	db	37
   477  00FFE0  73                 	db	115	;'s'
   478  00FFE1  00                 	db	0
   479  00FFE2                     STR_18:
   480  00FFE2  53                 	db	83	;'S'
   481  00FFE3  50                 	db	80	;'P'
   482  00FFE4  3A                 	db	58	;':'
   483  00FFE5  25                 	db	37
   484  00FFE6  35                 	db	53	;'5'
   485  00FFE7  2E                 	db	46
   486  00FFE8  31                 	db	49	;'1'
   487  00FFE9  66                 	db	102	;'f'
   488  00FFEA  43                 	db	67	;'C'
   489  00FFEB  20                 	db	32
   490  00FFEC  48                 	db	72	;'H'
   491  00FFED  54                 	db	84	;'T'
   492  00FFEE  3A                 	db	58	;':'
   493  00FFEF  25                 	db	37
   494  00FFF0  73                 	db	115	;'s'
   495  00FFF1  00                 	db	0
   496  00FFF2                     STR_21:
   497  00FFF2  28                 	db	40
   498  00FFF3  6E                 	db	110	;'n'
   499  00FFF4  75                 	db	117	;'u'
   500  00FFF5  6C                 	db	108	;'l'
   501  00FFF6  6C                 	db	108	;'l'
   502  00FFF7  29                 	db	41
   503  00FFF8  00                 	db	0
   504  00FFF9                     STR_20:
   505  00FFF9  4D                 	db	77	;'M'
   506  00FFFA  44                 	db	68	;'D'
   507  00FFFB  3A                 	db	58	;':'
   508  00FFFC  25                 	db	37
   509  00FFFD  73                 	db	115	;'s'
   510  00FFFE  00                 	db	0
   511  0000                     
   512                           ; #config settings
   513  00FFFF  00                 	db	0	; dummy byte at the end
   514  0000                     
   515                           	psect	cinit
   516  004B1E                     __pcinit:
   517                           	opt stack 0
   518  004B1E                     start_initialization:
   519                           	opt stack 0
   520  004B1E                     __initialization:
   521                           	opt stack 0
   522                           
   523                           ; Clear objects allocated to BANK1 (64 bytes)
   524  004B1E  EE01  F054         	lfsr	0,__pbssBANK1
   525  004B22  0E40               	movlw	64
   526  004B24                     clear_0:
   527  004B24  6AEE               	clrf	postinc0,c
   528  004B26  06E8               	decf	wreg,f,c
   529  004B28  E1FD               	bnz	clear_0
   530                           
   531                           ; Clear objects allocated to BANK0 (16 bytes)
   532  004B2A  EE00  F0D9         	lfsr	0,__pbssBANK0
   533  004B2E  0E10               	movlw	16
   534  004B30                     clear_1:
   535  004B30  6AEE               	clrf	postinc0,c
   536  004B32  06E8               	decf	wreg,f,c
   537  004B34  E1FD               	bnz	clear_1
   538                           
   539                           ; Clear objects allocated to COMRAM (4 bytes)
   540  004B36  6A79               	clrf	(__pbssCOMRAM+3)& (0+255),c
   541  004B38  6A78               	clrf	(__pbssCOMRAM+2)& (0+255),c
   542  004B3A  6A77               	clrf	(__pbssCOMRAM+1)& (0+255),c
   543  004B3C  6A76               	clrf	__pbssCOMRAM& (0+255),c
   544                           
   545                           ; Initialize objects allocated to BANK1 (84 bytes)
   546                           ; load TBLPTR registers with __pidataBANK1
   547  004B3E  0E58               	movlw	low __pidataBANK1
   548  004B40  6EF6               	movwf	tblptrl,c
   549  004B42  0E50               	movlw	high __pidataBANK1
   550  004B44  6EF7               	movwf	tblptrh,c
   551  004B46  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   552  004B48  6EF8               	movwf	tblptru,c
   553  004B4A  EE01  F000         	lfsr	0,__pdataBANK1
   554  004B4E  EE10 F054          	lfsr	1,84
   555  004B52                     copy_data0:
   556  004B52  0009               	tblrd		*+
   557  004B54  CFF5 FFEE          	movff	tablat,postinc0
   558  004B58  50E5               	movf	postdec1,w,c
   559  004B5A  50E1               	movf	fsr1l,w,c
   560  004B5C  E1FA               	bnz	copy_data0
   561                           
   562                           ; Initialize objects allocated to BANK0 (8 bytes)
   563                           ; load TBLPTR registers with __pidataBANK0
   564  004B5E  0E4A               	movlw	low __pidataBANK0
   565  004B60  6EF6               	movwf	tblptrl,c
   566  004B62  0E56               	movlw	high __pidataBANK0
   567  004B64  6EF7               	movwf	tblptrh,c
   568  004B66  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   569  004B68  6EF8               	movwf	tblptru,c
   570  004B6A  EE00  F0E9         	lfsr	0,__pdataBANK0
   571  004B6E  EE10 F008          	lfsr	1,8
   572  004B72                     copy_data1:
   573  004B72  0009               	tblrd		*+
   574  004B74  CFF5 FFEE          	movff	tablat,postinc0
   575  004B78  50E5               	movf	postdec1,w,c
   576  004B7A  50E1               	movf	fsr1l,w,c
   577  004B7C  E1FA               	bnz	copy_data1
   578                           
   579                           ; Initialize objects allocated to COMRAM (4 bytes)
   580                           ; load TBLPTR registers with __pidataCOMRAM
   581  004B7E  0E52               	movlw	low __pidataCOMRAM
   582  004B80  6EF6               	movwf	tblptrl,c
   583  004B82  0E56               	movlw	high __pidataCOMRAM
   584  004B84  6EF7               	movwf	tblptrh,c
   585  004B86  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   586  004B88  6EF8               	movwf	tblptru,c
   587  004B8A  EE00  F07A         	lfsr	0,__pdataCOMRAM
   588  004B8E  EE10 F004          	lfsr	1,4
   589  004B92                     copy_data2:
   590  004B92  0009               	tblrd		*+
   591  004B94  CFF5 FFEE          	movff	tablat,postinc0
   592  004B98  50E5               	movf	postdec1,w,c
   593  004B9A  50E1               	movf	fsr1l,w,c
   594  004B9C  E1FA               	bnz	copy_data2
   595  004B9E                     end_of_initialization:
   596                           	opt stack 0
   597  004B9E                     __end_of__initialization:
   598                           	opt stack 0
   599  004B9E  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   600  004BA0  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   601  004BA2  0100               	movlb	0
   602  004BA4  EFE8  F00C         	goto	_main	;jump to C main() function
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           
   612                           	psect	bssCOMRAM
   613  000076                     __pbssCOMRAM:
   614                           	opt stack 0
   615  000076                     _CK_state:
   616                           	opt stack 0
   617  000076                     	ds	2
   618  000078                     _HT_state:
   619                           	opt stack 0
   620  000078                     	ds	2
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1l	equ	0xFE1
   629                           
   630                           	psect	dataCOMRAM
   631  00007A                     __pdataCOMRAM:
   632                           	opt stack 0
   633  00007A                     _StateOFF:
   634                           	opt stack 0
   635  00007A                     	ds	4
   636                           tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           tblptrl	equ	0xFF6
   639                           tablat	equ	0xFF5
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           postdec1	equ	0xFE5
   643                           fsr1l	equ	0xFE1
   644                           
   645                           	psect	bssBANK0
   646  0000D9                     __pbssBANK0:
   647                           	opt stack 0
   648  0000D9                     _CT:
   649                           	opt stack 0
   650  0000D9                     	ds	3
   651  0000DC                     _SP:
   652                           	opt stack 0
   653  0000DC                     	ds	3
   654  0000DF                     _Totsec:
   655                           	opt stack 0
   656  0000DF                     	ds	2
   657  0000E1                     _clock_setup_SMH:
   658                           	opt stack 0
   659  0000E1                     	ds	2
   660  0000E3                     _sec:
   661                           	opt stack 0
   662  0000E3                     	ds	2
   663  0000E5                     _hour:
   664                           	opt stack 0
   665  0000E5                     	ds	2
   666  0000E7                     _min:
   667                           	opt stack 0
   668  0000E7                     	ds	2
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           postdec1	equ	0xFE5
   676                           fsr1l	equ	0xFE1
   677                           
   678                           	psect	dataBANK0
   679  0000E9                     __pdataBANK0:
   680                           	opt stack 0
   681  0000E9                     _LCD_INIT_STRING:
   682                           	opt stack 0
   683  0000E9                     	ds	4
   684  0000ED                     _StateON:
   685                           	opt stack 0
   686  0000ED                     	ds	4
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           tblptrl	equ	0xFF6
   690                           tablat	equ	0xFF5
   691                           postinc0	equ	0xFEE
   692                           wreg	equ	0xFE8
   693                           postdec1	equ	0xFE5
   694                           fsr1l	equ	0xFE1
   695                           
   696                           	psect	bssBANK1
   697  000154                     __pbssBANK1:
   698                           	opt stack 0
   699  000154                     _Buffer1:
   700                           	opt stack 0
   701  000154                     	ds	16
   702  000164                     _Buffer2:
   703                           	opt stack 0
   704  000164                     	ds	16
   705  000174                     _Buffer3:
   706                           	opt stack 0
   707  000174                     	ds	16
   708  000184                     _Buffer4:
   709                           	opt stack 0
   710  000184                     	ds	16
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           postdec1	equ	0xFE5
   718                           fsr1l	equ	0xFE1
   719                           
   720                           	psect	dataBANK1
   721  000100                     __pdataBANK1:
   722                           	opt stack 0
   723  000100                     _m0:
   724                           	opt stack 0
   725  000100                     	ds	14
   726  00010E                     _m1:
   727                           	opt stack 0
   728  00010E                     	ds	14
   729  00011C                     _m2:
   730                           	opt stack 0
   731  00011C                     	ds	14
   732  00012A                     _m3:
   733                           	opt stack 0
   734  00012A                     	ds	14
   735  000138                     _m4:
   736                           	opt stack 0
   737  000138                     	ds	14
   738  000146                     _m5:
   739                           	opt stack 0
   740  000146                     	ds	14
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           postdec1	equ	0xFE5
   748                           fsr1l	equ	0xFE1
   749                           
   750                           	psect	cstackBANK1
   751  000194                     __pcstackBANK1:
   752                           	opt stack 0
   753  000194                     ??_sprintf:
   754                           
   755                           ; 1 bytes @ 0x0
   756  000194                     	ds	6
   757  00019A                     _sprintf$1562:
   758                           	opt stack 0
   759                           
   760                           ; 3 bytes @ 0x6
   761  00019A                     	ds	3
   762  00019D                     sprintf@cp:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x9
   766  00019D                     	ds	2
   767  00019F                     sprintf@ap:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0xB
   771  00019F                     	ds	2
   772  0001A1                     sprintf@len:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0xD
   776  0001A1                     	ds	2
   777  0001A3                     sprintf@tmpval:
   778                           	opt stack 0
   779                           
   780                           ; 4 bytes @ 0xF
   781  0001A3                     	ds	4
   782  0001A7                     sprintf@val:
   783                           	opt stack 0
   784                           
   785                           ; 4 bytes @ 0x13
   786  0001A7                     	ds	4
   787  0001AB                     sprintf@exp:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x17
   791  0001AB                     	ds	2
   792  0001AD                     sprintf@flag:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x19
   796  0001AD                     	ds	2
   797  0001AF                     sprintf@fval:
   798                           	opt stack 0
   799                           
   800                           ; 3 bytes @ 0x1B
   801  0001AF                     	ds	3
   802  0001B2                     sprintf@width:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x1E
   806  0001B2                     	ds	2
   807  0001B4                     sprintf@prec:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x20
   811  0001B4                     	ds	2
   812  0001B6                     sprintf@c:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x22
   816  0001B6                     	ds	1
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           postinc0	equ	0xFEE
   822                           wreg	equ	0xFE8
   823                           postdec1	equ	0xFE5
   824                           fsr1l	equ	0xFE1
   825                           
   826                           	psect	cstackBANK0
   827  000080                     __pcstackBANK0:
   828                           	opt stack 0
   829  000080                     ??_highIsr:
   830                           
   831                           ; 1 bytes @ 0x0
   832  000080                     	ds	14
   833  00008E                     ??_isdigit:
   834  00008E                     ??_delay_cycles:
   835  00008E                     ?___awmod:
   836                           	opt stack 0
   837  00008E                     ?___ftpack:
   838                           	opt stack 0
   839  00008E                     ?___ftneg:
   840                           	opt stack 0
   841  00008E                     ?__tdiv_to_l_:
   842                           	opt stack 0
   843  00008E                     ?__div_to_l_:
   844                           	opt stack 0
   845  00008E                     ?___lldiv:
   846                           	opt stack 0
   847  00008E                     delay_ms@n:
   848                           	opt stack 0
   849  00008E                     ___awmod@dividend:
   850                           	opt stack 0
   851  00008E                     strcpy@to:
   852                           	opt stack 0
   853  00008E                     __div_to_l_@f1:
   854                           	opt stack 0
   855  00008E                     ___ftpack@arg:
   856                           	opt stack 0
   857  00008E                     __tdiv_to_l_@f1:
   858                           	opt stack 0
   859  00008E                     ___ftge@ff1:
   860                           	opt stack 0
   861  00008E                     ___ftneg@f1:
   862                           	opt stack 0
   863  00008E                     ___lldiv@dividend:
   864                           	opt stack 0
   865                           
   866                           ; 4 bytes @ 0xE
   867  00008E                     	ds	1
   868  00008F                     _isdigit$1219:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0xF
   872  00008F                     	ds	1
   873  000090                     isdigit@c:
   874                           	opt stack 0
   875  000090                     delay_ms@x:
   876                           	opt stack 0
   877  000090                     ___awmod@divisor:
   878                           	opt stack 0
   879  000090                     strcpy@from:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x10
   883  000090                     	ds	1
   884  000091                     delay_cycles@n:
   885                           	opt stack 0
   886  000091                     ___ftpack@exp:
   887                           	opt stack 0
   888  000091                     __div_to_l_@f2:
   889                           	opt stack 0
   890  000091                     __tdiv_to_l_@f2:
   891                           	opt stack 0
   892  000091                     ___ftge@ff2:
   893                           	opt stack 0
   894                           
   895                           ; 3 bytes @ 0x11
   896  000091                     	ds	1
   897  000092                     ___awmod@counter:
   898                           	opt stack 0
   899  000092                     ___ftpack@sign:
   900                           	opt stack 0
   901  000092                     delay_cycles@x:
   902                           	opt stack 0
   903  000092                     strcpy@cp:
   904                           	opt stack 0
   905  000092                     ___lldiv@divisor:
   906                           	opt stack 0
   907                           
   908                           ; 4 bytes @ 0x12
   909  000092                     	ds	1
   910  000093                     ??___ftpack:
   911  000093                     ___awmod@sign:
   912                           	opt stack 0
   913                           
   914                           ; 1 bytes @ 0x13
   915  000093                     	ds	1
   916  000094                     ??__tdiv_to_l_:
   917  000094                     ??_lcd_send_nibble:
   918  000094                     ??___ftge:
   919  000094                     ?___awdiv:
   920                           	opt stack 0
   921  000094                     ___awdiv@dividend:
   922                           	opt stack 0
   923  000094                     __div_to_l_@quot:
   924                           	opt stack 0
   925                           
   926                           ; 4 bytes @ 0x14
   927  000094                     	ds	1
   928  000095                     lcd_send_nibble@n:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x15
   932  000095                     	ds	1
   933  000096                     ?___lltoft:
   934                           	opt stack 0
   935  000096                     lcd_send_byte@n:
   936                           	opt stack 0
   937  000096                     ___awdiv@divisor:
   938                           	opt stack 0
   939  000096                     ___lldiv@quotient:
   940                           	opt stack 0
   941  000096                     ___lltoft@c:
   942                           	opt stack 0
   943                           
   944                           ; 4 bytes @ 0x16
   945  000096                     	ds	1
   946  000097                     lcd_send_byte@cm_data:
   947                           	opt stack 0
   948  000097                     __tdiv_to_l_@quot:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x17
   952  000097                     	ds	1
   953  000098                     lcd_init@i:
   954                           	opt stack 0
   955  000098                     lcd_gotoxy@y:
   956                           	opt stack 0
   957  000098                     ___awdiv@counter:
   958                           	opt stack 0
   959  000098                     __div_to_l_@cntr:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x18
   963  000098                     	ds	1
   964  000099                     lcd_gotoxy@x:
   965                           	opt stack 0
   966  000099                     ___awdiv@sign:
   967                           	opt stack 0
   968  000099                     __div_to_l_@exp1:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x19
   972  000099                     	ds	1
   973  00009A                     ??___lltoft:
   974  00009A                     lcd_gotoxy@address:
   975                           	opt stack 0
   976  00009A                     ___lldiv@counter:
   977                           	opt stack 0
   978  00009A                     ___awdiv@quotient:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x1A
   982  00009A                     	ds	1
   983  00009B                     ?___llmod:
   984                           	opt stack 0
   985  00009B                     lcd_putc@c:
   986                           	opt stack 0
   987  00009B                     __tdiv_to_l_@cntr:
   988                           	opt stack 0
   989  00009B                     ___llmod@dividend:
   990                           	opt stack 0
   991                           
   992                           ; 4 bytes @ 0x1B
   993  00009B                     	ds	1
   994  00009C                     ?___wmul:
   995                           	opt stack 0
   996  00009C                     __tdiv_to_l_@exp1:
   997                           	opt stack 0
   998  00009C                     lcd_puts@s:
   999                           	opt stack 0
  1000  00009C                     ___wmul@multiplier:
  1001                           	opt stack 0
  1002                           
  1003                           ; 2 bytes @ 0x1C
  1004  00009C                     	ds	2
  1005  00009E                     ___lltoft@exp:
  1006                           	opt stack 0
  1007  00009E                     ___wmul@multiplicand:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x1E
  1011  00009E                     	ds	1
  1012  00009F                     ___llmod@divisor:
  1013                           	opt stack 0
  1014                           
  1015                           ; 4 bytes @ 0x1F
  1016  00009F                     	ds	1
  1017  0000A0                     ___wmul@product:
  1018                           	opt stack 0
  1019                           
  1020                           ; 2 bytes @ 0x20
  1021  0000A0                     	ds	2
  1022  0000A2                     ?___lwdiv:
  1023                           	opt stack 0
  1024  0000A2                     ?___ftmul:
  1025                           	opt stack 0
  1026  0000A2                     ___lwdiv@dividend:
  1027                           	opt stack 0
  1028  0000A2                     ___ftmul@f1:
  1029                           	opt stack 0
  1030                           
  1031                           ; 3 bytes @ 0x22
  1032  0000A2                     	ds	1
  1033  0000A3                     ___llmod@counter:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x23
  1037  0000A3                     	ds	1
  1038  0000A4                     ___lwdiv@divisor:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x24
  1042  0000A4                     	ds	1
  1043  0000A5                     ___ftmul@f2:
  1044                           	opt stack 0
  1045                           
  1046                           ; 3 bytes @ 0x25
  1047  0000A5                     	ds	1
  1048  0000A6                     ___lwdiv@quotient:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x26
  1052  0000A6                     	ds	2
  1053  0000A8                     ??___ftmul:
  1054  0000A8                     ___lwdiv@counter:
  1055                           	opt stack 0
  1056                           
  1057                           ; 1 bytes @ 0x28
  1058  0000A8                     	ds	3
  1059  0000AB                     ___ftmul@exp:
  1060                           	opt stack 0
  1061                           
  1062                           ; 1 bytes @ 0x2B
  1063  0000AB                     	ds	1
  1064  0000AC                     ___ftmul@f3_as_product:
  1065                           	opt stack 0
  1066                           
  1067                           ; 3 bytes @ 0x2C
  1068  0000AC                     	ds	3
  1069  0000AF                     ___ftmul@cntr:
  1070                           	opt stack 0
  1071                           
  1072                           ; 1 bytes @ 0x2F
  1073  0000AF                     	ds	1
  1074  0000B0                     ___ftmul@sign:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x30
  1078  0000B0                     	ds	1
  1079  0000B1                     ?_fround:
  1080                           	opt stack 0
  1081  0000B1                     ?_scale:
  1082                           	opt stack 0
  1083                           
  1084                           ; 3 bytes @ 0x31
  1085  0000B1                     	ds	3
  1086  0000B4                     _fround$1560:
  1087                           	opt stack 0
  1088  0000B4                     _scale$1561:
  1089                           	opt stack 0
  1090                           
  1091                           ; 3 bytes @ 0x34
  1092  0000B4                     	ds	3
  1093  0000B7                     scale@scl:
  1094                           	opt stack 0
  1095  0000B7                     _fround$1559:
  1096                           	opt stack 0
  1097                           
  1098                           ; 3 bytes @ 0x37
  1099  0000B7                     	ds	1
  1100  0000B8                     ?___fttol:
  1101                           	opt stack 0
  1102  0000B8                     ___fttol@f1:
  1103                           	opt stack 0
  1104                           
  1105                           ; 3 bytes @ 0x38
  1106  0000B8                     	ds	2
  1107  0000BA                     fround@prec:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x3A
  1111  0000BA                     	ds	1
  1112  0000BB                     ?___ftadd:
  1113                           	opt stack 0
  1114  0000BB                     ___ftadd@f1:
  1115                           	opt stack 0
  1116                           
  1117                           ; 3 bytes @ 0x3B
  1118  0000BB                     	ds	1
  1119  0000BC                     ??___fttol:
  1120                           
  1121                           ; 1 bytes @ 0x3C
  1122  0000BC                     	ds	2
  1123  0000BE                     ___ftadd@f2:
  1124                           	opt stack 0
  1125                           
  1126                           ; 3 bytes @ 0x3E
  1127  0000BE                     	ds	3
  1128  0000C1                     ??___ftadd:
  1129  0000C1                     ___fttol@sign1:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0x41
  1133  0000C1                     	ds	1
  1134  0000C2                     ___fttol@lval:
  1135                           	opt stack 0
  1136                           
  1137                           ; 4 bytes @ 0x42
  1138  0000C2                     	ds	2
  1139  0000C4                     ___ftadd@sign:
  1140                           	opt stack 0
  1141                           
  1142                           ; 1 bytes @ 0x44
  1143  0000C4                     	ds	1
  1144  0000C5                     ___ftadd@exp2:
  1145                           	opt stack 0
  1146                           
  1147                           ; 1 bytes @ 0x45
  1148  0000C5                     	ds	1
  1149  0000C6                     ___ftadd@exp1:
  1150                           	opt stack 0
  1151  0000C6                     ___fttol@exp1:
  1152                           	opt stack 0
  1153                           
  1154                           ; 1 bytes @ 0x46
  1155  0000C6                     	ds	1
  1156  0000C7                     ?___ftsub:
  1157                           	opt stack 0
  1158  0000C7                     ___ftsub@f1:
  1159                           	opt stack 0
  1160                           
  1161                           ; 3 bytes @ 0x47
  1162  0000C7                     	ds	3
  1163  0000CA                     ___ftsub@f2:
  1164                           	opt stack 0
  1165                           
  1166                           ; 3 bytes @ 0x4A
  1167  0000CA                     	ds	3
  1168  0000CD                     ?_sprintf:
  1169                           	opt stack 0
  1170  0000CD                     sprintf@sp:
  1171                           	opt stack 0
  1172                           
  1173                           ; 2 bytes @ 0x4D
  1174  0000CD                     	ds	2
  1175  0000CF                     sprintf@f:
  1176                           	opt stack 0
  1177                           
  1178                           ; 2 bytes @ 0x4F
  1179  0000CF                     	ds	8
  1180  0000D7                     ??_main:
  1181                           
  1182                           ; 1 bytes @ 0x57
  1183  0000D7                     	ds	2
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           
  1193                           	psect	cstackCOMRAM
  1194  000001                     __pcstackCOMRAM:
  1195                           	opt stack 0
  1196  000001                     ??i2_delay_cycles:
  1197  000001                     ??i2_isdigit:
  1198  000001                     ?_read_adc_raw_no_lib:
  1199                           	opt stack 0
  1200  000001                     ?i2___awmod:
  1201                           	opt stack 0
  1202  000001                     ?i2___ftpack:
  1203                           	opt stack 0
  1204  000001                     ?i2___ftneg:
  1205                           	opt stack 0
  1206  000001                     ?i2__div_to_l_:
  1207                           	opt stack 0
  1208  000001                     ?i2__tdiv_to_l_:
  1209                           	opt stack 0
  1210  000001                     ?i2___lldiv:
  1211                           	opt stack 0
  1212  000001                     i2delay_ms@n:
  1213                           	opt stack 0
  1214  000001                     i2___awmod@dividend:
  1215                           	opt stack 0
  1216  000001                     i2strcpy@to:
  1217                           	opt stack 0
  1218  000001                     i2__div_to_l_@f1:
  1219                           	opt stack 0
  1220  000001                     i2___ftpack@arg:
  1221                           	opt stack 0
  1222  000001                     i2__tdiv_to_l_@f1:
  1223                           	opt stack 0
  1224  000001                     i2___ftneg@f1:
  1225                           	opt stack 0
  1226  000001                     i2___lldiv@dividend:
  1227                           	opt stack 0
  1228                           
  1229                           ; 4 bytes @ 0x0
  1230  000001                     	ds	1
  1231  000002                     i2_isdigit$1219:
  1232                           	opt stack 0
  1233                           
  1234                           ; 1 bytes @ 0x1
  1235  000002                     	ds	1
  1236  000003                     ??_read_adc_raw_no_lib:
  1237  000003                     i2isdigit@c:
  1238                           	opt stack 0
  1239  000003                     i2delay_ms@x:
  1240                           	opt stack 0
  1241  000003                     i2___awmod@divisor:
  1242                           	opt stack 0
  1243  000003                     i2strcpy@from:
  1244                           	opt stack 0
  1245                           
  1246                           ; 2 bytes @ 0x2
  1247  000003                     	ds	1
  1248  000004                     i2delay_cycles@n:
  1249                           	opt stack 0
  1250  000004                     i2___ftpack@exp:
  1251                           	opt stack 0
  1252  000004                     i2__div_to_l_@f2:
  1253                           	opt stack 0
  1254  000004                     i2__tdiv_to_l_@f2:
  1255                           	opt stack 0
  1256                           
  1257                           ; 3 bytes @ 0x3
  1258  000004                     	ds	1
  1259  000005                     i2___awmod@counter:
  1260                           	opt stack 0
  1261  000005                     i2___ftpack@sign:
  1262                           	opt stack 0
  1263  000005                     read_adc_raw_no_lib@raw_value:
  1264                           	opt stack 0
  1265  000005                     i2delay_cycles@x:
  1266                           	opt stack 0
  1267  000005                     i2strcpy@cp:
  1268                           	opt stack 0
  1269  000005                     i2___lldiv@divisor:
  1270                           	opt stack 0
  1271                           
  1272                           ; 4 bytes @ 0x4
  1273  000005                     	ds	1
  1274  000006                     ??i2___ftpack:
  1275  000006                     i2___awmod@sign:
  1276                           	opt stack 0
  1277                           
  1278                           ; 1 bytes @ 0x5
  1279  000006                     	ds	1
  1280  000007                     ??i2_lcd_send_nibble:
  1281  000007                     ??i2__tdiv_to_l_:
  1282  000007                     ?i2___awdiv:
  1283                           	opt stack 0
  1284  000007                     read_adc_raw_no_lib@channel:
  1285                           	opt stack 0
  1286  000007                     i2___awdiv@dividend:
  1287                           	opt stack 0
  1288  000007                     i2__div_to_l_@quot:
  1289                           	opt stack 0
  1290                           
  1291                           ; 4 bytes @ 0x6
  1292  000007                     	ds	1
  1293  000008                     i2lcd_send_nibble@n:
  1294                           	opt stack 0
  1295                           
  1296                           ; 1 bytes @ 0x7
  1297  000008                     	ds	1
  1298  000009                     ?i2___lltoft:
  1299                           	opt stack 0
  1300  000009                     i2lcd_send_byte@n:
  1301                           	opt stack 0
  1302  000009                     i2___awdiv@divisor:
  1303                           	opt stack 0
  1304  000009                     i2___lldiv@quotient:
  1305                           	opt stack 0
  1306  000009                     i2___lltoft@c:
  1307                           	opt stack 0
  1308                           
  1309                           ; 4 bytes @ 0x8
  1310  000009                     	ds	1
  1311  00000A                     i2lcd_send_byte@cm_data:
  1312                           	opt stack 0
  1313  00000A                     i2__tdiv_to_l_@quot:
  1314                           	opt stack 0
  1315                           
  1316                           ; 4 bytes @ 0x9
  1317  00000A                     	ds	1
  1318  00000B                     i2lcd_gotoxy@y:
  1319                           	opt stack 0
  1320  00000B                     i2___awdiv@counter:
  1321                           	opt stack 0
  1322  00000B                     i2__div_to_l_@cntr:
  1323                           	opt stack 0
  1324                           
  1325                           ; 1 bytes @ 0xA
  1326  00000B                     	ds	1
  1327  00000C                     i2lcd_gotoxy@x:
  1328                           	opt stack 0
  1329  00000C                     i2___awdiv@sign:
  1330                           	opt stack 0
  1331  00000C                     i2__div_to_l_@exp1:
  1332                           	opt stack 0
  1333                           
  1334                           ; 1 bytes @ 0xB
  1335  00000C                     	ds	1
  1336  00000D                     ??i2___lltoft:
  1337  00000D                     i2lcd_gotoxy@address:
  1338                           	opt stack 0
  1339  00000D                     i2___lldiv@counter:
  1340                           	opt stack 0
  1341  00000D                     i2___awdiv@quotient:
  1342                           	opt stack 0
  1343                           
  1344                           ; 2 bytes @ 0xC
  1345  00000D                     	ds	1
  1346  00000E                     ?i2___llmod:
  1347                           	opt stack 0
  1348  00000E                     i2lcd_putc@c:
  1349                           	opt stack 0
  1350  00000E                     i2__tdiv_to_l_@cntr:
  1351                           	opt stack 0
  1352  00000E                     i2___llmod@dividend:
  1353                           	opt stack 0
  1354                           
  1355                           ; 4 bytes @ 0xD
  1356  00000E                     	ds	1
  1357  00000F                     ?i2___wmul:
  1358                           	opt stack 0
  1359  00000F                     i2__tdiv_to_l_@exp1:
  1360                           	opt stack 0
  1361  00000F                     i2lcd_puts@s:
  1362                           	opt stack 0
  1363  00000F                     i2___wmul@multiplier:
  1364                           	opt stack 0
  1365                           
  1366                           ; 2 bytes @ 0xE
  1367  00000F                     	ds	2
  1368  000011                     i2___lltoft@exp:
  1369                           	opt stack 0
  1370  000011                     i2___wmul@multiplicand:
  1371                           	opt stack 0
  1372                           
  1373                           ; 2 bytes @ 0x10
  1374  000011                     	ds	1
  1375  000012                     i2___llmod@divisor:
  1376                           	opt stack 0
  1377                           
  1378                           ; 4 bytes @ 0x11
  1379  000012                     	ds	1
  1380  000013                     i2___wmul@product:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0x12
  1384  000013                     	ds	2
  1385  000015                     ?i2___lwdiv:
  1386                           	opt stack 0
  1387  000015                     ?___awtoft:
  1388                           	opt stack 0
  1389  000015                     ?i2___ftmul:
  1390                           	opt stack 0
  1391  000015                     ___awtoft@c:
  1392                           	opt stack 0
  1393  000015                     i2___lwdiv@dividend:
  1394                           	opt stack 0
  1395  000015                     i2___ftmul@f1:
  1396                           	opt stack 0
  1397                           
  1398                           ; 3 bytes @ 0x14
  1399  000015                     	ds	1
  1400  000016                     i2___llmod@counter:
  1401                           	opt stack 0
  1402                           
  1403                           ; 1 bytes @ 0x15
  1404  000016                     	ds	1
  1405  000017                     i2___lwdiv@divisor:
  1406                           	opt stack 0
  1407                           
  1408                           ; 2 bytes @ 0x16
  1409  000017                     	ds	1
  1410  000018                     ___awtoft@sign:
  1411                           	opt stack 0
  1412  000018                     i2___ftmul@f2:
  1413                           	opt stack 0
  1414                           
  1415                           ; 3 bytes @ 0x17
  1416  000018                     	ds	1
  1417  000019                     ?___ftdiv:
  1418                           	opt stack 0
  1419  000019                     i2___lwdiv@quotient:
  1420                           	opt stack 0
  1421  000019                     ___ftdiv@f1:
  1422                           	opt stack 0
  1423                           
  1424                           ; 3 bytes @ 0x18
  1425  000019                     	ds	2
  1426  00001B                     ??i2___ftmul:
  1427  00001B                     i2___lwdiv@counter:
  1428                           	opt stack 0
  1429                           
  1430                           ; 1 bytes @ 0x1A
  1431  00001B                     	ds	1
  1432  00001C                     ___ftdiv@f2:
  1433                           	opt stack 0
  1434                           
  1435                           ; 3 bytes @ 0x1B
  1436  00001C                     	ds	2
  1437  00001E                     i2___ftmul@exp:
  1438                           	opt stack 0
  1439                           
  1440                           ; 1 bytes @ 0x1D
  1441  00001E                     	ds	1
  1442  00001F                     ??___ftdiv:
  1443  00001F                     i2___ftmul@f3_as_product:
  1444                           	opt stack 0
  1445                           
  1446                           ; 3 bytes @ 0x1E
  1447  00001F                     	ds	3
  1448  000022                     ___ftdiv@cntr:
  1449                           	opt stack 0
  1450  000022                     i2___ftmul@cntr:
  1451                           	opt stack 0
  1452                           
  1453                           ; 1 bytes @ 0x21
  1454  000022                     	ds	1
  1455  000023                     i2___ftmul@sign:
  1456                           	opt stack 0
  1457  000023                     ___ftdiv@f3:
  1458                           	opt stack 0
  1459                           
  1460                           ; 3 bytes @ 0x22
  1461  000023                     	ds	1
  1462  000024                     ?i2_fround:
  1463                           	opt stack 0
  1464  000024                     ?i2_scale:
  1465                           	opt stack 0
  1466  000024                     ?i2___fttol:
  1467                           	opt stack 0
  1468  000024                     i2___fttol@f1:
  1469                           	opt stack 0
  1470                           
  1471                           ; 3 bytes @ 0x23
  1472  000024                     	ds	2
  1473  000026                     ___ftdiv@exp:
  1474                           	opt stack 0
  1475                           
  1476                           ; 1 bytes @ 0x25
  1477  000026                     	ds	1
  1478  000027                     ___ftdiv@sign:
  1479                           	opt stack 0
  1480  000027                     i2_fround$1777:
  1481                           	opt stack 0
  1482  000027                     i2_scale$1778:
  1483                           	opt stack 0
  1484                           
  1485                           ; 3 bytes @ 0x26
  1486  000027                     	ds	1
  1487  000028                     ??i2___fttol:
  1488  000028                     ?_read_adc_temp2:
  1489                           	opt stack 0
  1490  000028                     ?_read_adc_temp:
  1491                           	opt stack 0
  1492                           
  1493                           ; 3 bytes @ 0x27
  1494  000028                     	ds	2
  1495  00002A                     i2scale@scl:
  1496                           	opt stack 0
  1497  00002A                     i2_fround$1776:
  1498                           	opt stack 0
  1499                           
  1500                           ; 3 bytes @ 0x29
  1501  00002A                     	ds	1
  1502  00002B                     read_adc_temp@voltage:
  1503                           	opt stack 0
  1504  00002B                     read_adc_temp2@voltage:
  1505                           	opt stack 0
  1506                           
  1507                           ; 3 bytes @ 0x2A
  1508  00002B                     	ds	2
  1509  00002D                     i2fround@prec:
  1510                           	opt stack 0
  1511  00002D                     i2___fttol@sign1:
  1512                           	opt stack 0
  1513                           
  1514                           ; 1 bytes @ 0x2C
  1515  00002D                     	ds	1
  1516  00002E                     ?i2___ftadd:
  1517                           	opt stack 0
  1518  00002E                     read_adc_temp@temp:
  1519                           	opt stack 0
  1520  00002E                     read_adc_temp2@temp:
  1521                           	opt stack 0
  1522  00002E                     i2___ftadd@f1:
  1523                           	opt stack 0
  1524  00002E                     i2___fttol@lval:
  1525                           	opt stack 0
  1526                           
  1527                           ; 4 bytes @ 0x2D
  1528  00002E                     	ds	3
  1529  000031                     read_adc_temp@raw_value:
  1530                           	opt stack 0
  1531  000031                     read_adc_temp2@raw_value:
  1532                           	opt stack 0
  1533  000031                     i2___ftadd@f2:
  1534                           	opt stack 0
  1535                           
  1536                           ; 3 bytes @ 0x30
  1537  000031                     	ds	1
  1538  000032                     i2___fttol@exp1:
  1539                           	opt stack 0
  1540                           
  1541                           ; 1 bytes @ 0x31
  1542  000032                     	ds	1
  1543  000033                     read_adc_temp@channel:
  1544                           	opt stack 0
  1545  000033                     read_adc_temp2@channel:
  1546                           	opt stack 0
  1547                           
  1548                           ; 1 bytes @ 0x32
  1549  000033                     	ds	1
  1550  000034                     ??i2___ftadd:
  1551                           
  1552                           ; 1 bytes @ 0x33
  1553  000034                     	ds	3
  1554  000037                     i2___ftadd@sign:
  1555                           	opt stack 0
  1556                           
  1557                           ; 1 bytes @ 0x36
  1558  000037                     	ds	1
  1559  000038                     i2___ftadd@exp2:
  1560                           	opt stack 0
  1561                           
  1562                           ; 1 bytes @ 0x37
  1563  000038                     	ds	1
  1564  000039                     i2___ftadd@exp1:
  1565                           	opt stack 0
  1566                           
  1567                           ; 1 bytes @ 0x38
  1568  000039                     	ds	1
  1569  00003A                     ?i2___ftsub:
  1570                           	opt stack 0
  1571  00003A                     i2___ftge@ff1:
  1572                           	opt stack 0
  1573  00003A                     i2___ftsub@f1:
  1574                           	opt stack 0
  1575                           
  1576                           ; 3 bytes @ 0x39
  1577  00003A                     	ds	3
  1578  00003D                     i2___ftge@ff2:
  1579                           	opt stack 0
  1580  00003D                     i2___ftsub@f2:
  1581                           	opt stack 0
  1582                           
  1583                           ; 3 bytes @ 0x3C
  1584  00003D                     	ds	3
  1585  000040                     ??i2___ftge:
  1586  000040                     
  1587                           ; 1 bytes @ 0x3F
  1588  000040                     	ds	3
  1589  000043                     ?i2_sprintf:
  1590                           	opt stack 0
  1591  000043                     i2sprintf@sp:
  1592                           	opt stack 0
  1593                           
  1594                           ; 2 bytes @ 0x42
  1595  000043                     	ds	2
  1596  000045                     i2sprintf@f:
  1597                           	opt stack 0
  1598                           
  1599                           ; 2 bytes @ 0x44
  1600  000045                     	ds	8
  1601  00004D                     ??i2_sprintf:
  1602                           
  1603                           ; 1 bytes @ 0x4C
  1604  00004D                     	ds	6
  1605  000053                     i2_sprintf$1779:
  1606                           	opt stack 0
  1607                           
  1608                           ; 3 bytes @ 0x52
  1609  000053                     	ds	3
  1610  000056                     i2sprintf@cp:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0x55
  1614  000056                     	ds	2
  1615  000058                     i2sprintf@ap:
  1616                           	opt stack 0
  1617                           
  1618                           ; 2 bytes @ 0x57
  1619  000058                     	ds	2
  1620  00005A                     i2sprintf@len:
  1621                           	opt stack 0
  1622                           
  1623                           ; 2 bytes @ 0x59
  1624  00005A                     	ds	2
  1625  00005C                     i2sprintf@tmpval:
  1626                           	opt stack 0
  1627                           
  1628                           ; 4 bytes @ 0x5B
  1629  00005C                     	ds	4
  1630  000060                     i2sprintf@val:
  1631                           	opt stack 0
  1632                           
  1633                           ; 4 bytes @ 0x5F
  1634  000060                     	ds	4
  1635  000064                     i2sprintf@exp:
  1636                           	opt stack 0
  1637                           
  1638                           ; 2 bytes @ 0x63
  1639  000064                     	ds	2
  1640  000066                     i2sprintf@flag:
  1641                           	opt stack 0
  1642                           
  1643                           ; 2 bytes @ 0x65
  1644  000066                     	ds	2
  1645  000068                     i2sprintf@fval:
  1646                           	opt stack 0
  1647                           
  1648                           ; 3 bytes @ 0x67
  1649  000068                     	ds	3
  1650  00006B                     i2sprintf@width:
  1651                           	opt stack 0
  1652                           
  1653                           ; 2 bytes @ 0x6A
  1654  00006B                     	ds	2
  1655  00006D                     i2sprintf@prec:
  1656                           	opt stack 0
  1657                           
  1658                           ; 2 bytes @ 0x6C
  1659  00006D                     	ds	2
  1660  00006F                     i2sprintf@c:
  1661                           	opt stack 0
  1662                           
  1663                           ; 1 bytes @ 0x6E
  1664  00006F                     	ds	1
  1665  000070                     ??_timer0_isr:
  1666  000070                     ??_EXT_Int0_isr:
  1667                           
  1668                           ; 1 bytes @ 0x6F
  1669  000070                     	ds	2
  1670  000072                     timer0_isr@channe2:
  1671                           	opt stack 0
  1672                           
  1673                           ; 1 bytes @ 0x71
  1674  000072                     	ds	1
  1675  000073                     timer0_isr@channe0:
  1676                           	opt stack 0
  1677                           
  1678                           ; 1 bytes @ 0x72
  1679  000073                     	ds	1
  1680  000074                     timer0_isr@i:
  1681                           	opt stack 0
  1682                           
  1683                           ; 2 bytes @ 0x73
  1684  000074                     	ds	2
  1685                           tblptru	equ	0xFF8
  1686                           tblptrh	equ	0xFF7
  1687                           tblptrl	equ	0xFF6
  1688                           tablat	equ	0xFF5
  1689                           postinc0	equ	0xFEE
  1690                           wreg	equ	0xFE8
  1691                           postdec1	equ	0xFE5
  1692                           fsr1l	equ	0xFE1
  1693                           
  1694 ;;
  1695 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1696 ;;
  1697 ;; *************** function _main *****************
  1698 ;; Defined at:
  1699 ;;		line 87 in file "AS1AY.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels required when called:   14
  1719 ;; This function calls:
  1720 ;;		___lwdiv
  1721 ;;		___wmul
  1722 ;;		_delay_ms
  1723 ;;		_init_adc_no_lib
  1724 ;;		_lcd_gotoxy
  1725 ;;		_lcd_init
  1726 ;;		_lcd_puts
  1727 ;;		_setupInterrupts
  1728 ;;		_setupPorts
  1729 ;;		_sprintf
  1730 ;;		_strcpy
  1731 ;; This function is called by:
  1732 ;;		Startup code after reset
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text0
  1737  0019D0                     __ptext0:
  1738                           	opt stack 0
  1739  0019D0                     _main:
  1740                           	opt stack 17
  1741                           
  1742                           ;AS1AY.c: 88: setupPorts();
  1743                           
  1744                           ;incstack = 0
  1745  0019D0  EC0A  F02B         	call	_setupPorts	;wreg free
  1746                           
  1747                           ;AS1AY.c: 89: setupInterrupts();
  1748  0019D4  EC34  F029         	call	_setupInterrupts	;wreg free
  1749                           
  1750                           ;AS1AY.c: 90: lcd_init();
  1751  0019D8  ECD1  F026         	call	_lcd_init	;wreg free
  1752                           
  1753                           ;AS1AY.c: 91: init_adc_no_lib();
  1754  0019DC  EC13  F02B         	call	_init_adc_no_lib	;wreg free
  1755                           
  1756                           ;AS1AY.c: 92: sprintf(Buffer1, "Time : %02d:%02d:%02d ", hour, min, sec);
  1757  0019E0  0E54               	movlw	low _Buffer1
  1758  0019E2  0100               	movlb	0	; () banked
  1759  0019E4  6FCD               	movwf	sprintf@sp& (0+255),b
  1760  0019E6  0E01               	movlw	high _Buffer1
  1761  0019E8  0100               	movlb	0	; () banked
  1762  0019EA  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  1763  0019EC  0E77               	movlw	low STR_1
  1764  0019EE  0100               	movlb	0	; () banked
  1765  0019F0  6FCF               	movwf	sprintf@f& (0+255),b
  1766  0019F2  0EFF               	movlw	high STR_1
  1767  0019F4  0100               	movlb	0	; () banked
  1768  0019F6  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  1769  0019F8  C0E5  F0D1         	movff	_hour,?_sprintf+4
  1770  0019FC  C0E6  F0D2         	movff	_hour+1,?_sprintf+5
  1771  001A00  C0E7  F0D3         	movff	_min,?_sprintf+6
  1772  001A04  C0E8  F0D4         	movff	_min+1,?_sprintf+7
  1773  001A08  C0E3  F0D5         	movff	_sec,?_sprintf+8
  1774  001A0C  C0E4  F0D6         	movff	_sec+1,?_sprintf+9
  1775  001A10  EC0D  F000         	call	_sprintf	;wreg free
  1776                           
  1777                           ;AS1AY.c: 93: lcd_gotoxy(1, 1);
  1778  001A14  0E01               	movlw	1
  1779  001A16  0100               	movlb	0	; () banked
  1780  001A18  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  1781  001A1A  0E01               	movlw	1
  1782  001A1C  EC7F  F028         	call	_lcd_gotoxy
  1783                           
  1784                           ;AS1AY.c: 94: lcd_puts(Buffer1);
  1785  001A20  0E54               	movlw	low _Buffer1
  1786  001A22  0100               	movlb	0	; () banked
  1787  001A24  6F9C               	movwf	lcd_puts@s& (0+255),b
  1788  001A26  0E01               	movlw	high _Buffer1
  1789  001A28  0100               	movlb	0	; () banked
  1790  001A2A  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  1791  001A2C  EC7E  F02A         	call	_lcd_puts	;wreg free
  1792                           
  1793                           ;AS1AY.c: 95: sprintf(Buffer2, "CT:%5.1fC CK:OFF",CT);
  1794  001A30  0E64               	movlw	low _Buffer2
  1795  001A32  0100               	movlb	0	; () banked
  1796  001A34  6FCD               	movwf	sprintf@sp& (0+255),b
  1797  001A36  0E01               	movlw	high _Buffer2
  1798  001A38  0100               	movlb	0	; () banked
  1799  001A3A  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  1800  001A3C  0EB0               	movlw	low STR_2
  1801  001A3E  0100               	movlb	0	; () banked
  1802  001A40  6FCF               	movwf	sprintf@f& (0+255),b
  1803  001A42  0EFF               	movlw	high STR_2
  1804  001A44  0100               	movlb	0	; () banked
  1805  001A46  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  1806  001A48  C0D9  F0D1         	movff	_CT,?_sprintf+4
  1807  001A4C  C0DA  F0D2         	movff	_CT+1,?_sprintf+5
  1808  001A50  C0DB  F0D3         	movff	_CT+2,?_sprintf+6
  1809  001A54  EC0D  F000         	call	_sprintf	;wreg free
  1810                           
  1811                           ;AS1AY.c: 96: lcd_gotoxy(1, 2);
  1812  001A58  0E02               	movlw	2
  1813  001A5A  0100               	movlb	0	; () banked
  1814  001A5C  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  1815  001A5E  0E01               	movlw	1
  1816  001A60  EC7F  F028         	call	_lcd_gotoxy
  1817                           
  1818                           ;AS1AY.c: 97: lcd_puts(Buffer2);
  1819  001A64  0E64               	movlw	low _Buffer2
  1820  001A66  0100               	movlb	0	; () banked
  1821  001A68  6F9C               	movwf	lcd_puts@s& (0+255),b
  1822  001A6A  0E01               	movlw	high _Buffer2
  1823  001A6C  0100               	movlb	0	; () banked
  1824  001A6E  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  1825  001A70  EC7E  F02A         	call	_lcd_puts	;wreg free
  1826                           
  1827                           ;AS1AY.c: 98: sprintf(Buffer3, "SP:%5.1fC HT:OFF",SP);
  1828  001A74  0E74               	movlw	low _Buffer3
  1829  001A76  0100               	movlb	0	; () banked
  1830  001A78  6FCD               	movwf	sprintf@sp& (0+255),b
  1831  001A7A  0E01               	movlw	high _Buffer3
  1832  001A7C  0100               	movlb	0	; () banked
  1833  001A7E  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  1834  001A80  0EC1               	movlw	low STR_3
  1835  001A82  0100               	movlb	0	; () banked
  1836  001A84  6FCF               	movwf	sprintf@f& (0+255),b
  1837  001A86  0EFF               	movlw	high STR_3
  1838  001A88  0100               	movlb	0	; () banked
  1839  001A8A  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  1840  001A8C  C0DC  F0D1         	movff	_SP,?_sprintf+4
  1841  001A90  C0DD  F0D2         	movff	_SP+1,?_sprintf+5
  1842  001A94  C0DE  F0D3         	movff	_SP+2,?_sprintf+6
  1843  001A98  EC0D  F000         	call	_sprintf	;wreg free
  1844                           
  1845                           ;AS1AY.c: 99: lcd_gotoxy(1, 3);
  1846  001A9C  0E03               	movlw	3
  1847  001A9E  0100               	movlb	0	; () banked
  1848  001AA0  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  1849  001AA2  0E01               	movlw	1
  1850  001AA4  EC7F  F028         	call	_lcd_gotoxy
  1851                           
  1852                           ;AS1AY.c: 100: lcd_puts(Buffer3);
  1853  001AA8  0E74               	movlw	low _Buffer3
  1854  001AAA  0100               	movlb	0	; () banked
  1855  001AAC  6F9C               	movwf	lcd_puts@s& (0+255),b
  1856  001AAE  0E01               	movlw	high _Buffer3
  1857  001AB0  0100               	movlb	0	; () banked
  1858  001AB2  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  1859  001AB4  EC7E  F02A         	call	_lcd_puts	;wreg free
  1860                           
  1861                           ;AS1AY.c: 101: sprintf(Buffer4, "MD:SEC          ");
  1862  001AB8  0E84               	movlw	low _Buffer4
  1863  001ABA  0100               	movlb	0	; () banked
  1864  001ABC  6FCD               	movwf	sprintf@sp& (0+255),b
  1865  001ABE  0E01               	movlw	high _Buffer4
  1866  001AC0  0100               	movlb	0	; () banked
  1867  001AC2  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  1868  001AC4  0E8E               	movlw	low STR_4
  1869  001AC6  0100               	movlb	0	; () banked
  1870  001AC8  6FCF               	movwf	sprintf@f& (0+255),b
  1871  001ACA  0EFF               	movlw	high STR_4
  1872  001ACC  0100               	movlb	0	; () banked
  1873  001ACE  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  1874  001AD0  EC0D  F000         	call	_sprintf	;wreg free
  1875                           
  1876                           ;AS1AY.c: 102: lcd_gotoxy(1, 4);
  1877  001AD4  0E04               	movlw	4
  1878  001AD6  0100               	movlb	0	; () banked
  1879  001AD8  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  1880  001ADA  0E01               	movlw	1
  1881  001ADC  EC7F  F028         	call	_lcd_gotoxy
  1882                           
  1883                           ;AS1AY.c: 103: lcd_puts(Buffer4);
  1884  001AE0  0E84               	movlw	low _Buffer4
  1885  001AE2  0100               	movlb	0	; () banked
  1886  001AE4  6F9C               	movwf	lcd_puts@s& (0+255),b
  1887  001AE6  0E01               	movlw	high _Buffer4
  1888  001AE8  0100               	movlb	0	; () banked
  1889  001AEA  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  1890  001AEC  EC7E  F02A         	call	_lcd_puts	;wreg free
  1891                           
  1892                           ;AS1AY.c: 104: clock_setup_SMH = 0, sec = 0, min = 0, hour = 0, CK_state = 0, HT_state =
      +                           0;
  1893  001AF0  0E00               	movlw	0
  1894  001AF2  0100               	movlb	0	; () banked
  1895  001AF4  6FE2               	movwf	(_clock_setup_SMH+1)& (0+255),b
  1896  001AF6  0E00               	movlw	0
  1897  001AF8  6FE1               	movwf	_clock_setup_SMH& (0+255),b
  1898                           
  1899                           ; BSR set to: 0
  1900  001AFA  0E00               	movlw	0
  1901  001AFC  0100               	movlb	0	; () banked
  1902  001AFE  6FE4               	movwf	(_sec+1)& (0+255),b
  1903  001B00  0E00               	movlw	0
  1904  001B02  6FE3               	movwf	_sec& (0+255),b
  1905                           
  1906                           ; BSR set to: 0
  1907  001B04  0E00               	movlw	0
  1908  001B06  0100               	movlb	0	; () banked
  1909  001B08  6FE8               	movwf	(_min+1)& (0+255),b
  1910  001B0A  0E00               	movlw	0
  1911  001B0C  6FE7               	movwf	_min& (0+255),b
  1912                           
  1913                           ; BSR set to: 0
  1914  001B0E  0E00               	movlw	0
  1915  001B10  0100               	movlb	0	; () banked
  1916  001B12  6FE6               	movwf	(_hour+1)& (0+255),b
  1917  001B14  0E00               	movlw	0
  1918  001B16  6FE5               	movwf	_hour& (0+255),b
  1919                           
  1920                           ; BSR set to: 0
  1921  001B18  0E00               	movlw	0
  1922  001B1A  6E77               	movwf	_CK_state+1,c
  1923  001B1C  0E00               	movlw	0
  1924  001B1E  6E76               	movwf	_CK_state,c
  1925                           
  1926                           ; BSR set to: 0
  1927  001B20  0E00               	movlw	0
  1928  001B22  6E79               	movwf	_HT_state+1,c
  1929  001B24  0E00               	movlw	0
  1930  001B26  6E78               	movwf	_HT_state,c
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;AS1AY.c: 105: PORTCbits.RC5 = 0;
  1934  001B28  9A82               	bcf	3970,5,c	;volatile
  1935  001B2A                     l123:
  1936  001B2A  0004               	clrwdt		;# 
  1937                           
  1938                           ;AS1AY.c: 108: delay_ms(200);
  1939  001B2C  0E00               	movlw	0
  1940  001B2E  0100               	movlb	0	; () banked
  1941  001B30  6F8F               	movwf	(delay_ms@n+1)& (0+255),b
  1942  001B32  0EC8               	movlw	200
  1943  001B34  6F8E               	movwf	delay_ms@n& (0+255),b
  1944  001B36  ECF9  F029         	call	_delay_ms	;wreg free
  1945                           
  1946                           ;AS1AY.c: 109: if (PORTBbits.RB3 == 0) {
  1947  001B3A  B681               	btfsc	3969,3,c	;volatile
  1948  001B3C  D0E5               	goto	l124
  1949                           
  1950                           ;AS1AY.c: 110: delay_ms(200);
  1951  001B3E  0E00               	movlw	0
  1952  001B40  0100               	movlb	0	; () banked
  1953  001B42  6F8F               	movwf	(delay_ms@n+1)& (0+255),b
  1954  001B44  0EC8               	movlw	200
  1955  001B46  6F8E               	movwf	delay_ms@n& (0+255),b
  1956  001B48  ECF9  F029         	call	_delay_ms	;wreg free
  1957                           
  1958                           ;AS1AY.c: 111: if (clock_setup_SMH == 0) {
  1959  001B4C  0100               	movlb	0	; () banked
  1960  001B4E  51E1               	movf	_clock_setup_SMH& (0+255),w,b
  1961  001B50  0100               	movlb	0	; () banked
  1962  001B52  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  1963  001B54  A4D8               	btfss	status,2,c
  1964  001B56  D002               	goto	l6789
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;AS1AY.c: 112: Totsec = Totsec + 1;
  1968  001B58  0E01               	movlw	1
  1969  001B5A  D010               	goto	L2
  1970  001B5C                     l6789:
  1971                           
  1972                           ; BSR set to: 0
  1973  001B5C  0100               	movlb	0	; () banked
  1974  001B5E  05E1               	decf	_clock_setup_SMH& (0+255),w,b
  1975  001B60  0100               	movlb	0	; () banked
  1976  001B62  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  1977  001B64  A4D8               	btfss	status,2,c
  1978  001B66  D002               	goto	l6793
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;AS1AY.c: 114: Totsec = Totsec + 10;
  1982  001B68  0E0A               	movlw	10
  1983  001B6A  D008               	goto	L2
  1984  001B6C                     l6793:
  1985                           
  1986                           ; BSR set to: 0
  1987  001B6C  0E02               	movlw	2
  1988  001B6E  0100               	movlb	0	; () banked
  1989  001B70  19E1               	xorwf	_clock_setup_SMH& (0+255),w,b
  1990  001B72  0100               	movlb	0	; () banked
  1991  001B74  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  1992  001B76  A4D8               	btfss	status,2,c
  1993  001B78  D007               	goto	l6797
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;AS1AY.c: 116: Totsec = Totsec + 60;
  1997  001B7A  0E3C               	movlw	60
  1998  001B7C                     L2:
  1999  001B7C  0100               	movlb	0	; () banked
  2000  001B7E  25DF               	addwf	_Totsec& (0+255),w,b
  2001  001B80  0100               	movlb	0	; () banked
  2002  001B82  6FDF               	movwf	_Totsec& (0+255),b
  2003  001B84  0E00               	movlw	0
  2004  001B86  D01B               	goto	L4
  2005  001B88                     l6797:
  2006                           
  2007                           ; BSR set to: 0
  2008  001B88  0E03               	movlw	3
  2009  001B8A  0100               	movlb	0	; () banked
  2010  001B8C  19E1               	xorwf	_clock_setup_SMH& (0+255),w,b
  2011  001B8E  0100               	movlb	0	; () banked
  2012  001B90  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  2013  001B92  A4D8               	btfss	status,2,c
  2014  001B94  D007               	goto	l6801
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;AS1AY.c: 118: Totsec = Totsec + 600;
  2018  001B96  0E58               	movlw	88
  2019  001B98  0100               	movlb	0	; () banked
  2020  001B9A  25DF               	addwf	_Totsec& (0+255),w,b
  2021  001B9C  0100               	movlb	0	; () banked
  2022  001B9E  6FDF               	movwf	_Totsec& (0+255),b
  2023  001BA0  0E02               	movlw	2
  2024  001BA2  D00D               	goto	L4
  2025  001BA4                     l6801:
  2026                           
  2027                           ; BSR set to: 0
  2028  001BA4  0E04               	movlw	4
  2029  001BA6  0100               	movlb	0	; () banked
  2030  001BA8  19E1               	xorwf	_clock_setup_SMH& (0+255),w,b
  2031  001BAA  0100               	movlb	0	; () banked
  2032  001BAC  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  2033  001BAE  A4D8               	btfss	status,2,c
  2034  001BB0  D00A               	goto	l126
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;AS1AY.c: 120: Totsec = Totsec + 3600;
  2038  001BB2  0E10               	movlw	16
  2039  001BB4  0100               	movlb	0	; () banked
  2040  001BB6  25DF               	addwf	_Totsec& (0+255),w,b
  2041  001BB8  0100               	movlb	0	; () banked
  2042  001BBA  6FDF               	movwf	_Totsec& (0+255),b
  2043  001BBC  0E0E               	movlw	14
  2044  001BBE                     L4:
  2045  001BBE  0100               	movlb	0	; () banked
  2046  001BC0  21E0               	addwfc	(_Totsec+1)& (0+255),w,b
  2047  001BC2  0100               	movlb	0	; () banked
  2048  001BC4  6FE0               	movwf	(_Totsec+1)& (0+255),b
  2049  001BC6                     l126:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;AS1AY.c: 121: }
  2053                           ;AS1AY.c: 122: if (Totsec<0 ||Totsec>36000)Totsec=36000;
  2054  001BC6  0EA1               	movlw	161
  2055  001BC8  0100               	movlb	0	; () banked
  2056  001BCA  5DDF               	subwf	_Totsec& (0+255),w,b
  2057  001BCC  0E8C               	movlw	140
  2058  001BCE  0100               	movlb	0	; () banked
  2059  001BD0  59E0               	subwfb	(_Totsec+1)& (0+255),w,b
  2060  001BD2  A0D8               	btfss	status,0,c
  2061  001BD4  D005               	goto	l6807
  2062                           
  2063                           ; BSR set to: 0
  2064  001BD6  0E8C               	movlw	140
  2065  001BD8  0100               	movlb	0	; () banked
  2066  001BDA  6FE0               	movwf	(_Totsec+1)& (0+255),b
  2067  001BDC  0EA0               	movlw	160
  2068  001BDE  6FDF               	movwf	_Totsec& (0+255),b
  2069  001BE0                     l6807:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;AS1AY.c: 123: hour = (Totsec/3600);
  2073  001BE0  C0DF  F0A2         	movff	_Totsec,___lwdiv@dividend
  2074  001BE4  C0E0  F0A3         	movff	_Totsec+1,___lwdiv@dividend+1
  2075  001BE8  0E0E               	movlw	14
  2076  001BEA  0100               	movlb	0	; () banked
  2077  001BEC  6FA5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2078  001BEE  0E10               	movlw	16
  2079  001BF0  6FA4               	movwf	___lwdiv@divisor& (0+255),b
  2080  001BF2  EC95  F026         	call	___lwdiv	;wreg free
  2081  001BF6  C0A2  F0E5         	movff	?___lwdiv,_hour
  2082  001BFA  C0A3  F0E6         	movff	?___lwdiv+1,_hour+1
  2083                           
  2084                           ;AS1AY.c: 124: min = (Totsec -(3600*hour))/60;
  2085  001BFE  C0E5  F09C         	movff	_hour,___wmul@multiplier
  2086  001C02  C0E6  F09D         	movff	_hour+1,___wmul@multiplier+1
  2087  001C06  0E0E               	movlw	14
  2088  001C08  0100               	movlb	0	; () banked
  2089  001C0A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2090  001C0C  0E10               	movlw	16
  2091  001C0E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2092  001C10  ECAD  F029         	call	___wmul	;wreg free
  2093  001C14  0100               	movlb	0	; () banked
  2094  001C16  1F9C               	comf	?___wmul& (0+255),f,b
  2095  001C18  0100               	movlb	0	; () banked
  2096  001C1A  1F9D               	comf	(?___wmul+1)& (0+255),f,b
  2097  001C1C  0100               	movlb	0	; () banked
  2098  001C1E  4B9C               	infsnz	?___wmul& (0+255),f,b
  2099  001C20  2B9D               	incf	(?___wmul+1)& (0+255),f,b
  2100  001C22  0100               	movlb	0	; () banked
  2101  001C24  51DF               	movf	_Totsec& (0+255),w,b
  2102  001C26  0100               	movlb	0	; () banked
  2103  001C28  259C               	addwf	?___wmul& (0+255),w,b
  2104  001C2A  0100               	movlb	0	; () banked
  2105  001C2C  6FA2               	movwf	___lwdiv@dividend& (0+255),b
  2106  001C2E  0100               	movlb	0	; () banked
  2107  001C30  51E0               	movf	(_Totsec+1)& (0+255),w,b
  2108  001C32  0100               	movlb	0	; () banked
  2109  001C34  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  2110  001C36  0100               	movlb	0	; () banked
  2111  001C38  6FA3               	movwf	(___lwdiv@dividend+1)& (0+255),b
  2112  001C3A  0E00               	movlw	0
  2113  001C3C  0100               	movlb	0	; () banked
  2114  001C3E  6FA5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2115  001C40  0E3C               	movlw	60
  2116  001C42  6FA4               	movwf	___lwdiv@divisor& (0+255),b
  2117  001C44  EC95  F026         	call	___lwdiv	;wreg free
  2118  001C48  C0A2  F0E7         	movff	?___lwdiv,_min
  2119  001C4C  C0A3  F0E8         	movff	?___lwdiv+1,_min+1
  2120                           
  2121                           ;AS1AY.c: 125: sec = (Totsec -(3600*hour)-(min*60));
  2122  001C50  C0E5  F09C         	movff	_hour,___wmul@multiplier
  2123  001C54  C0E6  F09D         	movff	_hour+1,___wmul@multiplier+1
  2124  001C58  0E0E               	movlw	14
  2125  001C5A  0100               	movlb	0	; () banked
  2126  001C5C  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2127  001C5E  0E10               	movlw	16
  2128  001C60  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2129  001C62  ECAD  F029         	call	___wmul	;wreg free
  2130  001C66  C09C  F0D7         	movff	?___wmul,??_main
  2131  001C6A  C09D  F0D8         	movff	?___wmul+1,??_main+1
  2132  001C6E  C0E7  F09C         	movff	_min,___wmul@multiplier
  2133  001C72  C0E8  F09D         	movff	_min+1,___wmul@multiplier+1
  2134  001C76  0E00               	movlw	0
  2135  001C78  0100               	movlb	0	; () banked
  2136  001C7A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2137  001C7C  0E3C               	movlw	60
  2138  001C7E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2139  001C80  ECAD  F029         	call	___wmul	;wreg free
  2140  001C84  0100               	movlb	0	; () banked
  2141  001C86  519C               	movf	?___wmul& (0+255),w,b
  2142  001C88  0100               	movlb	0	; () banked
  2143  001C8A  27D7               	addwf	??_main& (0+255),f,b
  2144  001C8C  0100               	movlb	0	; () banked
  2145  001C8E  519D               	movf	(?___wmul+1)& (0+255),w,b
  2146  001C90  0100               	movlb	0	; () banked
  2147  001C92  23D8               	addwfc	(??_main+1)& (0+255),f,b
  2148  001C94  0100               	movlb	0	; () banked
  2149  001C96  1FD7               	comf	??_main& (0+255),f,b
  2150  001C98  1FD8               	comf	(??_main+1)& (0+255),f,b
  2151  001C9A  4BD7               	infsnz	??_main& (0+255),f,b
  2152  001C9C  2BD8               	incf	(??_main+1)& (0+255),f,b
  2153  001C9E  0100               	movlb	0	; () banked
  2154  001CA0  51DF               	movf	_Totsec& (0+255),w,b
  2155  001CA2  0100               	movlb	0	; () banked
  2156  001CA4  25D7               	addwf	??_main& (0+255),w,b
  2157  001CA6  0100               	movlb	0	; () banked
  2158  001CA8  6FE3               	movwf	_sec& (0+255),b
  2159  001CAA  0100               	movlb	0	; () banked
  2160  001CAC  51E0               	movf	(_Totsec+1)& (0+255),w,b
  2161  001CAE  0100               	movlb	0	; () banked
  2162  001CB0  21D8               	addwfc	(??_main+1)& (0+255),w,b
  2163  001CB2  0100               	movlb	0	; () banked
  2164  001CB4  6FE4               	movwf	(_sec+1)& (0+255),b
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;AS1AY.c: 126: sprintf(Buffer1, "Time : %02d:%02d:%02d ", hour, min, sec);
  2168  001CB6  0E54               	movlw	low _Buffer1
  2169  001CB8  0100               	movlb	0	; () banked
  2170  001CBA  6FCD               	movwf	sprintf@sp& (0+255),b
  2171  001CBC  0E01               	movlw	high _Buffer1
  2172  001CBE  0100               	movlb	0	; () banked
  2173  001CC0  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  2174  001CC2  0E77               	movlw	low STR_1
  2175  001CC4  0100               	movlb	0	; () banked
  2176  001CC6  6FCF               	movwf	sprintf@f& (0+255),b
  2177  001CC8  0EFF               	movlw	high STR_1
  2178  001CCA  0100               	movlb	0	; () banked
  2179  001CCC  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  2180  001CCE  C0E5  F0D1         	movff	_hour,?_sprintf+4
  2181  001CD2  C0E6  F0D2         	movff	_hour+1,?_sprintf+5
  2182  001CD6  C0E7  F0D3         	movff	_min,?_sprintf+6
  2183  001CDA  C0E8  F0D4         	movff	_min+1,?_sprintf+7
  2184  001CDE  C0E3  F0D5         	movff	_sec,?_sprintf+8
  2185  001CE2  C0E4  F0D6         	movff	_sec+1,?_sprintf+9
  2186  001CE6  EC0D  F000         	call	_sprintf	;wreg free
  2187                           
  2188                           ;AS1AY.c: 127: lcd_gotoxy(1, 1);
  2189  001CEA  0E01               	movlw	1
  2190  001CEC  0100               	movlb	0	; () banked
  2191  001CEE  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  2192  001CF0  0E01               	movlw	1
  2193  001CF2  EC7F  F028         	call	_lcd_gotoxy
  2194                           
  2195                           ;AS1AY.c: 128: lcd_puts(Buffer1);
  2196  001CF6  0E54               	movlw	low _Buffer1
  2197  001CF8  0100               	movlb	0	; () banked
  2198  001CFA  6F9C               	movwf	lcd_puts@s& (0+255),b
  2199  001CFC  0E01               	movlw	high _Buffer1
  2200  001CFE  0100               	movlb	0	; () banked
  2201  001D00  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  2202  001D02  EC7E  F02A         	call	_lcd_puts	;wreg free
  2203                           
  2204                           ;AS1AY.c: 129: } else if (PORTBbits.RB4 == 0) {
  2205  001D06  D711               	goto	l123
  2206  001D08                     l124:
  2207  001D08  B881               	btfsc	3969,4,c	;volatile
  2208  001D0A  D0E5               	goto	l136
  2209                           
  2210                           ;AS1AY.c: 130: delay_ms(200);
  2211  001D0C  0E00               	movlw	0
  2212  001D0E  0100               	movlb	0	; () banked
  2213  001D10  6F8F               	movwf	(delay_ms@n+1)& (0+255),b
  2214  001D12  0EC8               	movlw	200
  2215  001D14  6F8E               	movwf	delay_ms@n& (0+255),b
  2216  001D16  ECF9  F029         	call	_delay_ms	;wreg free
  2217                           
  2218                           ;AS1AY.c: 131: if (clock_setup_SMH == 0) {
  2219  001D1A  0100               	movlb	0	; () banked
  2220  001D1C  51E1               	movf	_clock_setup_SMH& (0+255),w,b
  2221  001D1E  0100               	movlb	0	; () banked
  2222  001D20  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  2223  001D22  A4D8               	btfss	status,2,c
  2224  001D24  D002               	goto	l6825
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;AS1AY.c: 132: Totsec = Totsec - 1;
  2228  001D26  0EFF               	movlw	255
  2229  001D28  D010               	goto	L6
  2230  001D2A                     l6825:
  2231                           
  2232                           ; BSR set to: 0
  2233  001D2A  0100               	movlb	0	; () banked
  2234  001D2C  05E1               	decf	_clock_setup_SMH& (0+255),w,b
  2235  001D2E  0100               	movlb	0	; () banked
  2236  001D30  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  2237  001D32  A4D8               	btfss	status,2,c
  2238  001D34  D002               	goto	l6829
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;AS1AY.c: 134: Totsec = Totsec - 10;
  2242  001D36  0EF6               	movlw	246
  2243  001D38  D008               	goto	L6
  2244  001D3A                     l6829:
  2245                           
  2246                           ; BSR set to: 0
  2247  001D3A  0E02               	movlw	2
  2248  001D3C  0100               	movlb	0	; () banked
  2249  001D3E  19E1               	xorwf	_clock_setup_SMH& (0+255),w,b
  2250  001D40  0100               	movlb	0	; () banked
  2251  001D42  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  2252  001D44  A4D8               	btfss	status,2,c
  2253  001D46  D007               	goto	l6833
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;AS1AY.c: 136: Totsec = Totsec - 60;
  2257  001D48  0EC4               	movlw	196
  2258  001D4A                     L6:
  2259  001D4A  0100               	movlb	0	; () banked
  2260  001D4C  25DF               	addwf	_Totsec& (0+255),w,b
  2261  001D4E  0100               	movlb	0	; () banked
  2262  001D50  6FDF               	movwf	_Totsec& (0+255),b
  2263  001D52  0EFF               	movlw	255
  2264  001D54  D01B               	goto	L8
  2265  001D56                     l6833:
  2266                           
  2267                           ; BSR set to: 0
  2268  001D56  0E03               	movlw	3
  2269  001D58  0100               	movlb	0	; () banked
  2270  001D5A  19E1               	xorwf	_clock_setup_SMH& (0+255),w,b
  2271  001D5C  0100               	movlb	0	; () banked
  2272  001D5E  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  2273  001D60  A4D8               	btfss	status,2,c
  2274  001D62  D007               	goto	l6837
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;AS1AY.c: 138: Totsec = Totsec - 600;
  2278  001D64  0EA8               	movlw	168
  2279  001D66  0100               	movlb	0	; () banked
  2280  001D68  25DF               	addwf	_Totsec& (0+255),w,b
  2281  001D6A  0100               	movlb	0	; () banked
  2282  001D6C  6FDF               	movwf	_Totsec& (0+255),b
  2283  001D6E  0EFD               	movlw	253
  2284  001D70  D00D               	goto	L8
  2285  001D72                     l6837:
  2286                           
  2287                           ; BSR set to: 0
  2288  001D72  0E04               	movlw	4
  2289  001D74  0100               	movlb	0	; () banked
  2290  001D76  19E1               	xorwf	_clock_setup_SMH& (0+255),w,b
  2291  001D78  0100               	movlb	0	; () banked
  2292  001D7A  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
  2293  001D7C  A4D8               	btfss	status,2,c
  2294  001D7E  D00A               	goto	l138
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;AS1AY.c: 140: Totsec = Totsec - 3600;
  2298  001D80  0EF0               	movlw	240
  2299  001D82  0100               	movlb	0	; () banked
  2300  001D84  25DF               	addwf	_Totsec& (0+255),w,b
  2301  001D86  0100               	movlb	0	; () banked
  2302  001D88  6FDF               	movwf	_Totsec& (0+255),b
  2303  001D8A  0EF1               	movlw	241
  2304  001D8C                     L8:
  2305  001D8C  0100               	movlb	0	; () banked
  2306  001D8E  21E0               	addwfc	(_Totsec+1)& (0+255),w,b
  2307  001D90  0100               	movlb	0	; () banked
  2308  001D92  6FE0               	movwf	(_Totsec+1)& (0+255),b
  2309  001D94                     l138:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;AS1AY.c: 141: }
  2313                           ;AS1AY.c: 142: if (Totsec<0 ||Totsec>36000 )Totsec=0;
  2314  001D94  0EA1               	movlw	161
  2315  001D96  0100               	movlb	0	; () banked
  2316  001D98  5DDF               	subwf	_Totsec& (0+255),w,b
  2317  001D9A  0E8C               	movlw	140
  2318  001D9C  0100               	movlb	0	; () banked
  2319  001D9E  59E0               	subwfb	(_Totsec+1)& (0+255),w,b
  2320  001DA0  A0D8               	btfss	status,0,c
  2321  001DA2  D005               	goto	l6843
  2322                           
  2323                           ; BSR set to: 0
  2324  001DA4  0E00               	movlw	0
  2325  001DA6  0100               	movlb	0	; () banked
  2326  001DA8  6FE0               	movwf	(_Totsec+1)& (0+255),b
  2327  001DAA  0E00               	movlw	0
  2328  001DAC  6FDF               	movwf	_Totsec& (0+255),b
  2329  001DAE                     l6843:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;AS1AY.c: 143: hour = (Totsec/3600);
  2333  001DAE  C0DF  F0A2         	movff	_Totsec,___lwdiv@dividend
  2334  001DB2  C0E0  F0A3         	movff	_Totsec+1,___lwdiv@dividend+1
  2335  001DB6  0E0E               	movlw	14
  2336  001DB8  0100               	movlb	0	; () banked
  2337  001DBA  6FA5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2338  001DBC  0E10               	movlw	16
  2339  001DBE  6FA4               	movwf	___lwdiv@divisor& (0+255),b
  2340  001DC0  EC95  F026         	call	___lwdiv	;wreg free
  2341  001DC4  C0A2  F0E5         	movff	?___lwdiv,_hour
  2342  001DC8  C0A3  F0E6         	movff	?___lwdiv+1,_hour+1
  2343                           
  2344                           ;AS1AY.c: 144: min = (Totsec -(3600*hour))/60;
  2345  001DCC  C0E5  F09C         	movff	_hour,___wmul@multiplier
  2346  001DD0  C0E6  F09D         	movff	_hour+1,___wmul@multiplier+1
  2347  001DD4  0E0E               	movlw	14
  2348  001DD6  0100               	movlb	0	; () banked
  2349  001DD8  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2350  001DDA  0E10               	movlw	16
  2351  001DDC  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2352  001DDE  ECAD  F029         	call	___wmul	;wreg free
  2353  001DE2  0100               	movlb	0	; () banked
  2354  001DE4  1F9C               	comf	?___wmul& (0+255),f,b
  2355  001DE6  0100               	movlb	0	; () banked
  2356  001DE8  1F9D               	comf	(?___wmul+1)& (0+255),f,b
  2357  001DEA  0100               	movlb	0	; () banked
  2358  001DEC  4B9C               	infsnz	?___wmul& (0+255),f,b
  2359  001DEE  2B9D               	incf	(?___wmul+1)& (0+255),f,b
  2360  001DF0  0100               	movlb	0	; () banked
  2361  001DF2  51DF               	movf	_Totsec& (0+255),w,b
  2362  001DF4  0100               	movlb	0	; () banked
  2363  001DF6  259C               	addwf	?___wmul& (0+255),w,b
  2364  001DF8  0100               	movlb	0	; () banked
  2365  001DFA  6FA2               	movwf	___lwdiv@dividend& (0+255),b
  2366  001DFC  0100               	movlb	0	; () banked
  2367  001DFE  51E0               	movf	(_Totsec+1)& (0+255),w,b
  2368  001E00  0100               	movlb	0	; () banked
  2369  001E02  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  2370  001E04  0100               	movlb	0	; () banked
  2371  001E06  6FA3               	movwf	(___lwdiv@dividend+1)& (0+255),b
  2372  001E08  0E00               	movlw	0
  2373  001E0A  0100               	movlb	0	; () banked
  2374  001E0C  6FA5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2375  001E0E  0E3C               	movlw	60
  2376  001E10  6FA4               	movwf	___lwdiv@divisor& (0+255),b
  2377  001E12  EC95  F026         	call	___lwdiv	;wreg free
  2378  001E16  C0A2  F0E7         	movff	?___lwdiv,_min
  2379  001E1A  C0A3  F0E8         	movff	?___lwdiv+1,_min+1
  2380                           
  2381                           ;AS1AY.c: 145: sec = (Totsec -(3600*hour)-(min*60));
  2382  001E1E  C0E5  F09C         	movff	_hour,___wmul@multiplier
  2383  001E22  C0E6  F09D         	movff	_hour+1,___wmul@multiplier+1
  2384  001E26  0E0E               	movlw	14
  2385  001E28  0100               	movlb	0	; () banked
  2386  001E2A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2387  001E2C  0E10               	movlw	16
  2388  001E2E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2389  001E30  ECAD  F029         	call	___wmul	;wreg free
  2390  001E34  C09C  F0D7         	movff	?___wmul,??_main
  2391  001E38  C09D  F0D8         	movff	?___wmul+1,??_main+1
  2392  001E3C  C0E7  F09C         	movff	_min,___wmul@multiplier
  2393  001E40  C0E8  F09D         	movff	_min+1,___wmul@multiplier+1
  2394  001E44  0E00               	movlw	0
  2395  001E46  0100               	movlb	0	; () banked
  2396  001E48  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2397  001E4A  0E3C               	movlw	60
  2398  001E4C  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2399  001E4E  ECAD  F029         	call	___wmul	;wreg free
  2400  001E52  0100               	movlb	0	; () banked
  2401  001E54  519C               	movf	?___wmul& (0+255),w,b
  2402  001E56  0100               	movlb	0	; () banked
  2403  001E58  27D7               	addwf	??_main& (0+255),f,b
  2404  001E5A  0100               	movlb	0	; () banked
  2405  001E5C  519D               	movf	(?___wmul+1)& (0+255),w,b
  2406  001E5E  0100               	movlb	0	; () banked
  2407  001E60  23D8               	addwfc	(??_main+1)& (0+255),f,b
  2408  001E62  0100               	movlb	0	; () banked
  2409  001E64  1FD7               	comf	??_main& (0+255),f,b
  2410  001E66  1FD8               	comf	(??_main+1)& (0+255),f,b
  2411  001E68  4BD7               	infsnz	??_main& (0+255),f,b
  2412  001E6A  2BD8               	incf	(??_main+1)& (0+255),f,b
  2413  001E6C  0100               	movlb	0	; () banked
  2414  001E6E  51DF               	movf	_Totsec& (0+255),w,b
  2415  001E70  0100               	movlb	0	; () banked
  2416  001E72  25D7               	addwf	??_main& (0+255),w,b
  2417  001E74  0100               	movlb	0	; () banked
  2418  001E76  6FE3               	movwf	_sec& (0+255),b
  2419  001E78  0100               	movlb	0	; () banked
  2420  001E7A  51E0               	movf	(_Totsec+1)& (0+255),w,b
  2421  001E7C  0100               	movlb	0	; () banked
  2422  001E7E  21D8               	addwfc	(??_main+1)& (0+255),w,b
  2423  001E80  0100               	movlb	0	; () banked
  2424  001E82  6FE4               	movwf	(_sec+1)& (0+255),b
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;AS1AY.c: 146: sprintf(Buffer1, "Time : %02d:%02d:%02d ", hour, min, sec);
  2428  001E84  0E54               	movlw	low _Buffer1
  2429  001E86  0100               	movlb	0	; () banked
  2430  001E88  6FCD               	movwf	sprintf@sp& (0+255),b
  2431  001E8A  0E01               	movlw	high _Buffer1
  2432  001E8C  0100               	movlb	0	; () banked
  2433  001E8E  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  2434  001E90  0E77               	movlw	low STR_1
  2435  001E92  0100               	movlb	0	; () banked
  2436  001E94  6FCF               	movwf	sprintf@f& (0+255),b
  2437  001E96  0EFF               	movlw	high STR_1
  2438  001E98  0100               	movlb	0	; () banked
  2439  001E9A  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  2440  001E9C  C0E5  F0D1         	movff	_hour,?_sprintf+4
  2441  001EA0  C0E6  F0D2         	movff	_hour+1,?_sprintf+5
  2442  001EA4  C0E7  F0D3         	movff	_min,?_sprintf+6
  2443  001EA8  C0E8  F0D4         	movff	_min+1,?_sprintf+7
  2444  001EAC  C0E3  F0D5         	movff	_sec,?_sprintf+8
  2445  001EB0  C0E4  F0D6         	movff	_sec+1,?_sprintf+9
  2446  001EB4  EC0D  F000         	call	_sprintf	;wreg free
  2447                           
  2448                           ;AS1AY.c: 147: lcd_gotoxy(1, 1);
  2449  001EB8  0E01               	movlw	1
  2450  001EBA  0100               	movlb	0	; () banked
  2451  001EBC  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  2452  001EBE  0E01               	movlw	1
  2453  001EC0  EC7F  F028         	call	_lcd_gotoxy
  2454                           
  2455                           ;AS1AY.c: 148: lcd_puts(Buffer1);
  2456  001EC4  0E54               	movlw	low _Buffer1
  2457  001EC6  0100               	movlb	0	; () banked
  2458  001EC8  6F9C               	movwf	lcd_puts@s& (0+255),b
  2459  001ECA  0E01               	movlw	high _Buffer1
  2460  001ECC  0100               	movlb	0	; () banked
  2461  001ECE  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  2462  001ED0  EC7E  F02A         	call	_lcd_puts	;wreg free
  2463                           
  2464                           ;AS1AY.c: 149: } else if (PORTBbits.RB5 == 0) {
  2465  001ED4  D62A               	goto	l123
  2466  001ED6                     l136:
  2467  001ED6  BA81               	btfsc	3969,5,c	;volatile
  2468  001ED8  D628               	goto	l123
  2469                           
  2470                           ;AS1AY.c: 150: delay_ms(200);
  2471  001EDA  0E00               	movlw	0
  2472  001EDC  0100               	movlb	0	; () banked
  2473  001EDE  6F8F               	movwf	(delay_ms@n+1)& (0+255),b
  2474  001EE0  0EC8               	movlw	200
  2475  001EE2  6F8E               	movwf	delay_ms@n& (0+255),b
  2476  001EE4  ECF9  F029         	call	_delay_ms	;wreg free
  2477                           
  2478                           ;AS1AY.c: 151: clock_setup_SMH = 0;
  2479  001EE8  0E00               	movlw	0
  2480  001EEA  0100               	movlb	0	; () banked
  2481  001EEC  6FE2               	movwf	(_clock_setup_SMH+1)& (0+255),b
  2482  001EEE  0E00               	movlw	0
  2483  001EF0  6FE1               	movwf	_clock_setup_SMH& (0+255),b
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;AS1AY.c: 152: sec = 0, min = 0, hour = 0;
  2487  001EF2  0E00               	movlw	0
  2488  001EF4  0100               	movlb	0	; () banked
  2489  001EF6  6FE4               	movwf	(_sec+1)& (0+255),b
  2490  001EF8  0E00               	movlw	0
  2491  001EFA  6FE3               	movwf	_sec& (0+255),b
  2492                           
  2493                           ; BSR set to: 0
  2494  001EFC  0E00               	movlw	0
  2495  001EFE  0100               	movlb	0	; () banked
  2496  001F00  6FE8               	movwf	(_min+1)& (0+255),b
  2497  001F02  0E00               	movlw	0
  2498  001F04  6FE7               	movwf	_min& (0+255),b
  2499                           
  2500                           ; BSR set to: 0
  2501  001F06  0E00               	movlw	0
  2502  001F08  0100               	movlb	0	; () banked
  2503  001F0A  6FE6               	movwf	(_hour+1)& (0+255),b
  2504  001F0C  0E00               	movlw	0
  2505  001F0E  6FE5               	movwf	_hour& (0+255),b
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;AS1AY.c: 153: Totsec=0;
  2509  001F10  0E00               	movlw	0
  2510  001F12  0100               	movlb	0	; () banked
  2511  001F14  6FE0               	movwf	(_Totsec+1)& (0+255),b
  2512  001F16  0E00               	movlw	0
  2513  001F18  6FDF               	movwf	_Totsec& (0+255),b
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;AS1AY.c: 154: CK_state = 0, HT_state = 0;
  2517  001F1A  0E00               	movlw	0
  2518  001F1C  6E77               	movwf	_CK_state+1,c
  2519  001F1E  0E00               	movlw	0
  2520  001F20  6E76               	movwf	_CK_state,c
  2521                           
  2522                           ; BSR set to: 0
  2523  001F22  0E00               	movlw	0
  2524  001F24  6E79               	movwf	_HT_state+1,c
  2525  001F26  0E00               	movlw	0
  2526  001F28  6E78               	movwf	_HT_state,c
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;AS1AY.c: 155: CT=0;
  2530  001F2A  0E00               	movlw	0
  2531  001F2C  0100               	movlb	0	; () banked
  2532  001F2E  6FD9               	movwf	_CT& (0+255),b
  2533  001F30  0E00               	movlw	0
  2534  001F32  0100               	movlb	0	; () banked
  2535  001F34  6FDA               	movwf	(_CT+1)& (0+255),b
  2536  001F36  0E00               	movlw	0
  2537  001F38  0100               	movlb	0	; () banked
  2538  001F3A  6FDB               	movwf	(_CT+2)& (0+255),b
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;AS1AY.c: 156: SP=0;
  2542  001F3C  0E00               	movlw	0
  2543  001F3E  0100               	movlb	0	; () banked
  2544  001F40  6FDC               	movwf	_SP& (0+255),b
  2545  001F42  0E00               	movlw	0
  2546  001F44  0100               	movlb	0	; () banked
  2547  001F46  6FDD               	movwf	(_SP+1)& (0+255),b
  2548  001F48  0E00               	movlw	0
  2549  001F4A  0100               	movlb	0	; () banked
  2550  001F4C  6FDE               	movwf	(_SP+2)& (0+255),b
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;AS1AY.c: 157: strcpy(m0,m1);
  2554  001F4E  0E00               	movlw	low _m0
  2555  001F50  0100               	movlb	0	; () banked
  2556  001F52  6F8E               	movwf	strcpy@to& (0+255),b
  2557  001F54  0E01               	movlw	high _m0
  2558  001F56  0100               	movlb	0	; () banked
  2559  001F58  6F8F               	movwf	(strcpy@to+1)& (0+255),b
  2560  001F5A  0E0E               	movlw	low _m1
  2561  001F5C  0100               	movlb	0	; () banked
  2562  001F5E  6F90               	movwf	strcpy@from& (0+255),b
  2563  001F60  0E01               	movlw	high _m1
  2564  001F62  0100               	movlb	0	; () banked
  2565  001F64  6F91               	movwf	(strcpy@from+1)& (0+255),b
  2566  001F66  ECC8  F029         	call	_strcpy	;wreg free
  2567                           
  2568                           ;AS1AY.c: 158: PORTCbits.RC5=0;
  2569  001F6A  9A82               	bcf	3970,5,c	;volatile
  2570                           
  2571                           ;AS1AY.c: 159: sprintf(Buffer1, "Time : 00:00:00 ");
  2572  001F6C  0E54               	movlw	low _Buffer1
  2573  001F6E  0100               	movlb	0	; () banked
  2574  001F70  6FCD               	movwf	sprintf@sp& (0+255),b
  2575  001F72  0E01               	movlw	high _Buffer1
  2576  001F74  0100               	movlb	0	; () banked
  2577  001F76  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  2578  001F78  0E9F               	movlw	low STR_7
  2579  001F7A  0100               	movlb	0	; () banked
  2580  001F7C  6FCF               	movwf	sprintf@f& (0+255),b
  2581  001F7E  0EFF               	movlw	high STR_7
  2582  001F80  0100               	movlb	0	; () banked
  2583  001F82  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  2584  001F84  EC0D  F000         	call	_sprintf	;wreg free
  2585                           
  2586                           ;AS1AY.c: 160: lcd_gotoxy(1, 1);
  2587  001F88  0E01               	movlw	1
  2588  001F8A  0100               	movlb	0	; () banked
  2589  001F8C  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  2590  001F8E  0E01               	movlw	1
  2591  001F90  EC7F  F028         	call	_lcd_gotoxy
  2592                           
  2593                           ;AS1AY.c: 161: lcd_puts(Buffer1);
  2594  001F94  0E54               	movlw	low _Buffer1
  2595  001F96  0100               	movlb	0	; () banked
  2596  001F98  6F9C               	movwf	lcd_puts@s& (0+255),b
  2597  001F9A  0E01               	movlw	high _Buffer1
  2598  001F9C  0100               	movlb	0	; () banked
  2599  001F9E  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  2600  001FA0  EC7E  F02A         	call	_lcd_puts	;wreg free
  2601                           
  2602                           ;AS1AY.c: 162: sprintf(Buffer2, "CT:%5.1fC CK:OFF",CT);
  2603  001FA4  0E64               	movlw	low _Buffer2
  2604  001FA6  0100               	movlb	0	; () banked
  2605  001FA8  6FCD               	movwf	sprintf@sp& (0+255),b
  2606  001FAA  0E01               	movlw	high _Buffer2
  2607  001FAC  0100               	movlb	0	; () banked
  2608  001FAE  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  2609  001FB0  0EB0               	movlw	low STR_2
  2610  001FB2  0100               	movlb	0	; () banked
  2611  001FB4  6FCF               	movwf	sprintf@f& (0+255),b
  2612  001FB6  0EFF               	movlw	high STR_2
  2613  001FB8  0100               	movlb	0	; () banked
  2614  001FBA  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  2615  001FBC  C0D9  F0D1         	movff	_CT,?_sprintf+4
  2616  001FC0  C0DA  F0D2         	movff	_CT+1,?_sprintf+5
  2617  001FC4  C0DB  F0D3         	movff	_CT+2,?_sprintf+6
  2618  001FC8  EC0D  F000         	call	_sprintf	;wreg free
  2619                           
  2620                           ;AS1AY.c: 163: lcd_gotoxy(1, 2);
  2621  001FCC  0E02               	movlw	2
  2622  001FCE  0100               	movlb	0	; () banked
  2623  001FD0  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  2624  001FD2  0E01               	movlw	1
  2625  001FD4  EC7F  F028         	call	_lcd_gotoxy
  2626                           
  2627                           ;AS1AY.c: 164: lcd_puts(Buffer2);
  2628  001FD8  0E64               	movlw	low _Buffer2
  2629  001FDA  0100               	movlb	0	; () banked
  2630  001FDC  6F9C               	movwf	lcd_puts@s& (0+255),b
  2631  001FDE  0E01               	movlw	high _Buffer2
  2632  001FE0  0100               	movlb	0	; () banked
  2633  001FE2  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  2634  001FE4  EC7E  F02A         	call	_lcd_puts	;wreg free
  2635                           
  2636                           ;AS1AY.c: 165: sprintf(Buffer3, "SP:%5.1fC HT:OFF",SP);
  2637  001FE8  0E74               	movlw	low _Buffer3
  2638  001FEA  0100               	movlb	0	; () banked
  2639  001FEC  6FCD               	movwf	sprintf@sp& (0+255),b
  2640  001FEE  0E01               	movlw	high _Buffer3
  2641  001FF0  0100               	movlb	0	; () banked
  2642  001FF2  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  2643  001FF4  0EC1               	movlw	low STR_3
  2644  001FF6  0100               	movlb	0	; () banked
  2645  001FF8  6FCF               	movwf	sprintf@f& (0+255),b
  2646  001FFA  0EFF               	movlw	high STR_3
  2647  001FFC  0100               	movlb	0	; () banked
  2648  001FFE  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  2649  002000  C0DC  F0D1         	movff	_SP,?_sprintf+4
  2650  002004  C0DD  F0D2         	movff	_SP+1,?_sprintf+5
  2651  002008  C0DE  F0D3         	movff	_SP+2,?_sprintf+6
  2652  00200C  EC0D  F000         	call	_sprintf	;wreg free
  2653                           
  2654                           ;AS1AY.c: 166: lcd_gotoxy(1, 3);
  2655  002010  0E03               	movlw	3
  2656  002012  0100               	movlb	0	; () banked
  2657  002014  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  2658  002016  0E01               	movlw	1
  2659  002018  EC7F  F028         	call	_lcd_gotoxy
  2660                           
  2661                           ;AS1AY.c: 167: lcd_puts(Buffer3);
  2662  00201C  0E74               	movlw	low _Buffer3
  2663  00201E  0100               	movlb	0	; () banked
  2664  002020  6F9C               	movwf	lcd_puts@s& (0+255),b
  2665  002022  0E01               	movlw	high _Buffer3
  2666  002024  0100               	movlb	0	; () banked
  2667  002026  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  2668  002028  EC7E  F02A         	call	_lcd_puts	;wreg free
  2669                           
  2670                           ;AS1AY.c: 168: sprintf(Buffer4, "MD:SEC          ");
  2671  00202C  0E84               	movlw	low _Buffer4
  2672  00202E  0100               	movlb	0	; () banked
  2673  002030  6FCD               	movwf	sprintf@sp& (0+255),b
  2674  002032  0E01               	movlw	high _Buffer4
  2675  002034  0100               	movlb	0	; () banked
  2676  002036  6FCE               	movwf	(sprintf@sp+1)& (0+255),b
  2677  002038  0E8E               	movlw	low STR_4
  2678  00203A  0100               	movlb	0	; () banked
  2679  00203C  6FCF               	movwf	sprintf@f& (0+255),b
  2680  00203E  0EFF               	movlw	high STR_4
  2681  002040  0100               	movlb	0	; () banked
  2682  002042  6FD0               	movwf	(sprintf@f+1)& (0+255),b
  2683  002044  EC0D  F000         	call	_sprintf	;wreg free
  2684                           
  2685                           ;AS1AY.c: 169: lcd_gotoxy(1, 4);
  2686  002048  0E04               	movlw	4
  2687  00204A  0100               	movlb	0	; () banked
  2688  00204C  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  2689  00204E  0E01               	movlw	1
  2690  002050  EC7F  F028         	call	_lcd_gotoxy
  2691                           
  2692                           ;AS1AY.c: 170: lcd_puts(Buffer4);
  2693  002054  0E84               	movlw	low _Buffer4
  2694  002056  0100               	movlb	0	; () banked
  2695  002058  6F9C               	movwf	lcd_puts@s& (0+255),b
  2696  00205A  0E01               	movlw	high _Buffer4
  2697  00205C  0100               	movlb	0	; () banked
  2698  00205E  6F9D               	movwf	(lcd_puts@s+1)& (0+255),b
  2699  002060  EC7E  F02A         	call	_lcd_puts	;wreg free
  2700  002064  D562               	goto	l123
  2701  002066                     __end_of_main:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           postinc0	equ	0xFEE
  2708                           wreg	equ	0xFE8
  2709                           postdec1	equ	0xFE5
  2710                           fsr1l	equ	0xFE1
  2711                           status	equ	0xFD8
  2712                           
  2713 ;; *************** function _strcpy *****************
  2714 ;; Defined at:
  2715 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\strcpy.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  to              2   14[BANK0 ] PTR unsigned char 
  2718 ;;		 -> m0(14), 
  2719 ;;  from            2   16[BANK0 ] PTR const unsigned char 
  2720 ;;		 -> m5(14), m4(14), m3(14), m2(14), 
  2721 ;;		 -> m1(14), 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  cp              2   18[BANK0 ] PTR unsigned char 
  2724 ;;		 -> m0(14), 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  2   14[BANK0 ] PTR unsigned char 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2734 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;Total ram usage:        6 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    8
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text1
  2749  005390                     __ptext1:
  2750                           	opt stack 0
  2751  005390                     _strcpy:
  2752                           	opt stack 22
  2753                           
  2754                           ;incstack = 0
  2755  005390  C08E  F092         	movff	strcpy@to,strcpy@cp
  2756  005394  C08F  F093         	movff	strcpy@to+1,strcpy@cp+1
  2757  005398  D006               	goto	l5969
  2758  00539A                     l5967:
  2759  00539A  0100               	movlb	0	; () banked
  2760  00539C  4B92               	infsnz	strcpy@cp& (0+255),f,b
  2761  00539E  2B93               	incf	(strcpy@cp+1)& (0+255),f,b
  2762  0053A0  0100               	movlb	0	; () banked
  2763  0053A2  4B90               	infsnz	strcpy@from& (0+255),f,b
  2764  0053A4  2B91               	incf	(strcpy@from+1)& (0+255),f,b
  2765  0053A6                     l5969:
  2766  0053A6  C090  FFD9         	movff	strcpy@from,fsr2l
  2767  0053AA  C091  FFDA         	movff	strcpy@from+1,fsr2h
  2768  0053AE  C092  FFE1         	movff	strcpy@cp,fsr1l
  2769  0053B2  C093  FFE2         	movff	strcpy@cp+1,fsr1h
  2770  0053B6  CFDF FFE7          	movff	indf2,indf1
  2771  0053BA  50E7               	movf	indf1,w,c
  2772  0053BC  B4D8               	btfsc	status,2,c
  2773  0053BE  0012               	return	
  2774  0053C0  D7EC               	goto	l5967
  2775  0053C2                     __end_of_strcpy:
  2776                           	opt stack 0
  2777                           tblptru	equ	0xFF8
  2778                           tblptrh	equ	0xFF7
  2779                           tblptrl	equ	0xFF6
  2780                           tablat	equ	0xFF5
  2781                           postinc0	equ	0xFEE
  2782                           wreg	equ	0xFE8
  2783                           indf1	equ	0xFE7
  2784                           postdec1	equ	0xFE5
  2785                           fsr1h	equ	0xFE2
  2786                           fsr1l	equ	0xFE1
  2787                           indf2	equ	0xFDF
  2788                           fsr2h	equ	0xFDA
  2789                           fsr2l	equ	0xFD9
  2790                           status	equ	0xFD8
  2791                           
  2792 ;; *************** function _sprintf *****************
  2793 ;; Defined at:
  2794 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  sp              2   77[BANK0 ] PTR unsigned char 
  2797 ;;		 -> Buffer4(16), Buffer3(16), Buffer2(16), Buffer1(16), 
  2798 ;;  f               2   79[BANK0 ] PTR const unsigned char 
  2799 ;;		 -> STR_20(6), STR_19(16), STR_18(16), STR_17(16), 
  2800 ;;		 -> STR_16(16), STR_15(23), STR_14(17), STR_13(17), 
  2801 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2802 ;;		 -> STR_8(17), STR_7(17), STR_6(23), STR_5(23), 
  2803 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(23), 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  val             4   19[BANK1 ] unsigned long 
  2806 ;;  tmpval          4   15[BANK1 ] struct .
  2807 ;;  fval            3   27[BANK1 ] struct .
  2808 ;;  prec            2   32[BANK1 ] int 
  2809 ;;  width           2   30[BANK1 ] int 
  2810 ;;  flag            2   25[BANK1 ] unsigned short 
  2811 ;;  exp             2   23[BANK1 ] int 
  2812 ;;  len             2   13[BANK1 ] unsigned int 
  2813 ;;  ap              2   11[BANK1 ] PTR void [1]
  2814 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  2815 ;;  cp              2    9[BANK1 ] PTR const unsigned char 
  2816 ;;		 -> STR_21(7), StateOFF(4), StateON(4), m0(14), 
  2817 ;;  c               1   34[BANK1 ] char 
  2818 ;;  d               1    0        unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  2   77[BANK0 ] int 
  2821 ;; Registers used:
  2822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2828 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Totals:         0      10      35       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;Total ram usage:       45 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:   11
  2835 ;; This function calls:
  2836 ;;		___awdiv
  2837 ;;		___ftadd
  2838 ;;		___ftge
  2839 ;;		___ftmul
  2840 ;;		___ftneg
  2841 ;;		___ftsub
  2842 ;;		___fttol
  2843 ;;		___lldiv
  2844 ;;		___llmod
  2845 ;;		___lltoft
  2846 ;;		___wmul
  2847 ;;		__div_to_l_
  2848 ;;		__tdiv_to_l_
  2849 ;;		_fround
  2850 ;;		_isdigit
  2851 ;;		_scale
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text2
  2858  00001A                     __ptext2:
  2859                           	opt stack 0
  2860  00001A                     _sprintf:
  2861                           	opt stack 19
  2862                           
  2863                           ;doprnt.c: 494: va_list ap;
  2864                           ;doprnt.c: 499: signed char c;
  2865                           ;doprnt.c: 501: int width;
  2866                           ;doprnt.c: 504: int prec;
  2867                           ;doprnt.c: 508: unsigned short flag;
  2868                           ;doprnt.c: 515: char d;
  2869                           ;doprnt.c: 516: double fval;
  2870                           ;doprnt.c: 517: int exp;
  2871                           ;doprnt.c: 523: union {
  2872                           ;doprnt.c: 524: unsigned long vd;
  2873                           ;doprnt.c: 525: double integ;
  2874                           ;doprnt.c: 526: } tmpval;
  2875                           ;doprnt.c: 528: unsigned long val;
  2876                           ;doprnt.c: 529: unsigned len;
  2877                           ;doprnt.c: 530: const char * cp;
  2878                           ;doprnt.c: 533: *ap = __va_start();
  2879                           
  2880                           ;incstack = 0
  2881  00001A  0ED1               	movlw	low (?_sprintf+4)
  2882  00001C  0101               	movlb	1	; () banked
  2883  00001E  6F9F               	movwf	sprintf@ap& (0+255),b
  2884  000020  0E00               	movlw	high (?_sprintf+4)
  2885  000022  0101               	movlb	1	; () banked
  2886  000024  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
  2887                           
  2888                           ;doprnt.c: 536: while(c = *f++) {
  2889  000026  EF08  F007         	goto	l6729
  2890  00002A                     l6365:
  2891                           
  2892                           ; BSR set to: 1
  2893                           ;doprnt.c: 538: if(c != '%')
  2894  00002A  0E25               	movlw	37
  2895  00002C  0101               	movlb	1	; () banked
  2896  00002E  19B6               	xorwf	sprintf@c& (0+255),w,b
  2897  000030  B4D8               	btfsc	status,2,c
  2898  000032  D00B               	goto	l6371
  2899                           
  2900                           ; BSR set to: 1
  2901                           ;doprnt.c: 540: {
  2902                           ;doprnt.c: 541: ((*sp++ = (c)));
  2903  000034  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  2904  000038  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  2905  00003C  C1B6  FFDF         	movff	sprintf@c,indf2
  2906                           
  2907                           ; BSR set to: 1
  2908  000040  0100               	movlb	0	; () banked
  2909  000042  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  2910  000044  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  2911                           
  2912                           ;doprnt.c: 542: continue;
  2913  000046  EF08  F007         	goto	l6729
  2914  00004A                     l6371:
  2915                           
  2916                           ;doprnt.c: 543: }
  2917                           ;doprnt.c: 546: width = 0;
  2918  00004A  0E00               	movlw	0
  2919  00004C  0101               	movlb	1	; () banked
  2920  00004E  6FB3               	movwf	(sprintf@width+1)& (0+255),b
  2921  000050  0E00               	movlw	0
  2922  000052  6FB2               	movwf	sprintf@width& (0+255),b
  2923                           
  2924                           ;doprnt.c: 548: flag = 0;
  2925  000054  0E00               	movlw	0
  2926  000056  0101               	movlb	1	; () banked
  2927  000058  6FAE               	movwf	(sprintf@flag+1)& (0+255),b
  2928  00005A  0E00               	movlw	0
  2929  00005C  6FAD               	movwf	sprintf@flag& (0+255),b
  2930                           
  2931                           ; BSR set to: 1
  2932                           ;doprnt.c: 551: switch(*f) {
  2933                           
  2934                           ;doprnt.c: 550: for(;;) {
  2935  00005E  D005               	goto	l6377
  2936  000060                     l6373:
  2937                           
  2938                           ;doprnt.c: 580: flag |= 0x04;
  2939  000060  0101               	movlb	1	; () banked
  2940  000062  85AD               	bsf	sprintf@flag& (0+255),2,b
  2941                           
  2942                           ;doprnt.c: 581: f++;
  2943  000064  0100               	movlb	0	; () banked
  2944  000066  4BCF               	infsnz	sprintf@f& (0+255),f,b
  2945  000068  2BD0               	incf	(sprintf@f+1)& (0+255),f,b
  2946  00006A                     l6377:
  2947  00006A  C0CF  FFF6         	movff	sprintf@f,tblptrl
  2948  00006E  C0D0  FFF7         	movff	sprintf@f+1,tblptrh
  2949  000072                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2950  000072  6AF8               	clrf	tblptru,c
  2951  000074                     	endif
  2952  000074                     	if	0	;tblptru may be non-zero
  2953  000074                     	endif
  2954  000074  0008               	tblrd		*
  2955  000076  50F5               	movf	tablat,w,c
  2956                           
  2957                           ; Switch size 1, requested type "space"
  2958                           ; Number of cases is 1, Range of values is 48 to 48
  2959                           ; switch strategies available:
  2960                           ; Name         Instructions Cycles
  2961                           ; simple_byte            4     3 (average)
  2962                           ;	Chosen strategy is simple_byte
  2963  000078  0A30               	xorlw	48	; case 48
  2964  00007A  B4D8               	btfsc	status,2,c
  2965  00007C  D7F1               	goto	l6373
  2966                           
  2967                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2968                           
  2969                           ;doprnt.c: 586: }
  2970                           
  2971                           ;doprnt.c: 585: break;
  2972  00007E  C0CF  FFF6         	movff	sprintf@f,tblptrl
  2973  000082  C0D0  FFF7         	movff	sprintf@f+1,tblptrh
  2974  000086                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2975  000086  6AF8               	clrf	tblptru,c
  2976  000088                     	endif
  2977  000088                     	if	0	;tblptru may be non-zero
  2978  000088                     	endif
  2979  000088  0008               	tblrd		*
  2980  00008A  50F5               	movf	tablat,w,c
  2981  00008C  EC55  F02A         	call	_isdigit
  2982  000090  A0D8               	btfss	status,0,c
  2983  000092  D042               	goto	l6391
  2984                           
  2985                           ;doprnt.c: 598: width = 0;
  2986  000094  0E00               	movlw	0
  2987  000096  0101               	movlb	1	; () banked
  2988  000098  6FB3               	movwf	(sprintf@width+1)& (0+255),b
  2989  00009A  0E00               	movlw	0
  2990  00009C  6FB2               	movwf	sprintf@width& (0+255),b
  2991  00009E                     l6383:
  2992                           
  2993                           ;doprnt.c: 600: width *= 10;
  2994  00009E  C1B2  F09C         	movff	sprintf@width,___wmul@multiplier
  2995  0000A2  C1B3  F09D         	movff	sprintf@width+1,___wmul@multiplier+1
  2996  0000A6  0E00               	movlw	0
  2997  0000A8  0100               	movlb	0	; () banked
  2998  0000AA  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2999  0000AC  0E0A               	movlw	10
  3000  0000AE  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  3001  0000B0  ECAD  F029         	call	___wmul	;wreg free
  3002  0000B4  C09C  F1B2         	movff	?___wmul,sprintf@width
  3003  0000B8  C09D  F1B3         	movff	?___wmul+1,sprintf@width+1
  3004                           
  3005                           ;doprnt.c: 601: width += *f++ - '0';
  3006  0000BC  0ED0               	movlw	208
  3007  0000BE  0101               	movlb	1	; () banked
  3008  0000C0  6F94               	movwf	??_sprintf& (0+255),b
  3009  0000C2  0EFF               	movlw	255
  3010  0000C4  0101               	movlb	1	; () banked
  3011  0000C6  6F95               	movwf	(??_sprintf+1)& (0+255),b
  3012  0000C8  C0CF  FFF6         	movff	sprintf@f,tblptrl
  3013  0000CC  C0D0  FFF7         	movff	sprintf@f+1,tblptrh
  3014  0000D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3015  0000D0  6AF8               	clrf	tblptru,c
  3016  0000D2                     	endif
  3017  0000D2                     	if	0	;tblptru may be non-zero
  3018  0000D2                     	endif
  3019  0000D2  0008               	tblrd		*
  3020  0000D4  50F5               	movf	tablat,w,c
  3021  0000D6  0101               	movlb	1	; () banked
  3022  0000D8  6F96               	movwf	(??_sprintf+2)& (0+255),b
  3023  0000DA  6B97               	clrf	(??_sprintf+3)& (0+255),b
  3024  0000DC  0101               	movlb	1	; () banked
  3025  0000DE  5194               	movf	??_sprintf& (0+255),w,b
  3026  0000E0  0101               	movlb	1	; () banked
  3027  0000E2  2796               	addwf	(??_sprintf+2)& (0+255),f,b
  3028  0000E4  0101               	movlb	1	; () banked
  3029  0000E6  5195               	movf	(??_sprintf+1)& (0+255),w,b
  3030  0000E8  0101               	movlb	1	; () banked
  3031  0000EA  2397               	addwfc	(??_sprintf+3)& (0+255),f,b
  3032  0000EC  0101               	movlb	1	; () banked
  3033  0000EE  5196               	movf	(??_sprintf+2)& (0+255),w,b
  3034  0000F0  0101               	movlb	1	; () banked
  3035  0000F2  27B2               	addwf	sprintf@width& (0+255),f,b
  3036  0000F4  0101               	movlb	1	; () banked
  3037  0000F6  5197               	movf	(??_sprintf+3)& (0+255),w,b
  3038  0000F8  0101               	movlb	1	; () banked
  3039  0000FA  23B3               	addwfc	(sprintf@width+1)& (0+255),f,b
  3040                           
  3041                           ; BSR set to: 1
  3042  0000FC  0100               	movlb	0	; () banked
  3043  0000FE  4BCF               	infsnz	sprintf@f& (0+255),f,b
  3044  000100  2BD0               	incf	(sprintf@f+1)& (0+255),f,b
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3048  000102  C0CF  FFF6         	movff	sprintf@f,tblptrl
  3049  000106  C0D0  FFF7         	movff	sprintf@f+1,tblptrh
  3050  00010A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3051  00010A  6AF8               	clrf	tblptru,c
  3052  00010C                     	endif
  3053  00010C                     	if	0	;tblptru may be non-zero
  3054  00010C                     	endif
  3055  00010C  0008               	tblrd		*
  3056  00010E  50F5               	movf	tablat,w,c
  3057  000110  EC55  F02A         	call	_isdigit
  3058  000114  B0D8               	btfsc	status,0,c
  3059  000116  D7C3               	goto	l6383
  3060  000118                     l6391:
  3061                           
  3062                           ;doprnt.c: 608: }
  3063                           ;doprnt.c: 611: if(*f == '.') {
  3064  000118  C0CF  FFF6         	movff	sprintf@f,tblptrl
  3065  00011C  C0D0  FFF7         	movff	sprintf@f+1,tblptrh
  3066  000120                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3067  000120  6AF8               	clrf	tblptru,c
  3068  000122                     	endif
  3069  000122                     	if	0	;tblptru may be non-zero
  3070  000122                     	endif
  3071  000122  0008               	tblrd		*
  3072  000124  50F5               	movf	tablat,w,c
  3073  000126  0A2E               	xorlw	46
  3074  000128  A4D8               	btfss	status,2,c
  3075  00012A  D03B               	goto	l6403
  3076                           
  3077                           ;doprnt.c: 612: flag |= 0x4000;
  3078  00012C  0101               	movlb	1	; () banked
  3079  00012E  8DAE               	bsf	(sprintf@flag+1)& (0+255),6,b
  3080                           
  3081                           ;doprnt.c: 613: f++;
  3082  000130  0100               	movlb	0	; () banked
  3083  000132  4BCF               	infsnz	sprintf@f& (0+255),f,b
  3084  000134  2BD0               	incf	(sprintf@f+1)& (0+255),f,b
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;doprnt.c: 620: {
  3088                           ;doprnt.c: 621: prec = 0;
  3089  000136  0E00               	movlw	0
  3090  000138  0101               	movlb	1	; () banked
  3091  00013A  6FB5               	movwf	(sprintf@prec+1)& (0+255),b
  3092  00013C  0E00               	movlw	0
  3093  00013E  6FB4               	movwf	sprintf@prec& (0+255),b
  3094                           
  3095                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3096  000140  D024               	goto	l6401
  3097  000142                     l6397:
  3098                           
  3099                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3100  000142  C1B4  F09C         	movff	sprintf@prec,___wmul@multiplier
  3101  000146  C1B5  F09D         	movff	sprintf@prec+1,___wmul@multiplier+1
  3102  00014A  0E00               	movlw	0
  3103  00014C  0100               	movlb	0	; () banked
  3104  00014E  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3105  000150  0E0A               	movlw	10
  3106  000152  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  3107  000154  ECAD  F029         	call	___wmul	;wreg free
  3108  000158  C0CF  FFF6         	movff	sprintf@f,tblptrl
  3109  00015C  C0D0  FFF7         	movff	sprintf@f+1,tblptrh
  3110  000160                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3111  000160  6AF8               	clrf	tblptru,c
  3112  000162                     	endif
  3113  000162                     	if	0	;tblptru may be non-zero
  3114  000162                     	endif
  3115  000162  0008               	tblrd		*
  3116  000164  50F5               	movf	tablat,w,c
  3117  000166  0100               	movlb	0	; () banked
  3118  000168  279C               	addwf	?___wmul& (0+255),f,b
  3119  00016A  0E00               	movlw	0
  3120  00016C  0100               	movlb	0	; () banked
  3121  00016E  239D               	addwfc	(?___wmul+1)& (0+255),f,b
  3122  000170  0ED0               	movlw	208
  3123  000172  0100               	movlb	0	; () banked
  3124  000174  259C               	addwf	?___wmul& (0+255),w,b
  3125  000176  0101               	movlb	1	; () banked
  3126  000178  6FB4               	movwf	sprintf@prec& (0+255),b
  3127  00017A  0EFF               	movlw	255
  3128  00017C  0100               	movlb	0	; () banked
  3129  00017E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  3130  000180  0101               	movlb	1	; () banked
  3131  000182  6FB5               	movwf	(sprintf@prec+1)& (0+255),b
  3132                           
  3133                           ; BSR set to: 1
  3134  000184  0100               	movlb	0	; () banked
  3135  000186  4BCF               	infsnz	sprintf@f& (0+255),f,b
  3136  000188  2BD0               	incf	(sprintf@f+1)& (0+255),f,b
  3137  00018A                     l6401:
  3138  00018A  C0CF  FFF6         	movff	sprintf@f,tblptrl
  3139  00018E  C0D0  FFF7         	movff	sprintf@f+1,tblptrh
  3140  000192                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3141  000192  6AF8               	clrf	tblptru,c
  3142  000194                     	endif
  3143  000194                     	if	0	;tblptru may be non-zero
  3144  000194                     	endif
  3145  000194  0008               	tblrd		*
  3146  000196  50F5               	movf	tablat,w,c
  3147  000198  EC55  F02A         	call	_isdigit
  3148  00019C  A0D8               	btfss	status,0,c
  3149  00019E  D0B9               	goto	l6451
  3150  0001A0  D7D0               	goto	l6397
  3151  0001A2                     l6403:
  3152                           
  3153                           ;doprnt.c: 626: prec = 0;
  3154  0001A2  0E00               	movlw	0
  3155  0001A4  0101               	movlb	1	; () banked
  3156  0001A6  6FB5               	movwf	(sprintf@prec+1)& (0+255),b
  3157  0001A8  0E00               	movlw	0
  3158  0001AA  6FB4               	movwf	sprintf@prec& (0+255),b
  3159                           
  3160                           ; BSR set to: 1
  3161                           ;doprnt.c: 628: flag |= 0x1000;
  3162  0001AC  0101               	movlb	1	; () banked
  3163  0001AE  89AE               	bsf	(sprintf@flag+1)& (0+255),4,b
  3164                           
  3165                           ; BSR set to: 1
  3166                           ;doprnt.c: 630: }
  3167                           ;doprnt.c: 635: switch(c = *f++) {
  3168  0001B0  D0B0               	goto	l6451
  3169  0001B2                     l6407:
  3170                           
  3171                           ; BSR set to: 1
  3172                           ;doprnt.c: 663: flag |= 0x400;
  3173  0001B2  0101               	movlb	1	; () banked
  3174  0001B4  85AE               	bsf	(sprintf@flag+1)& (0+255),2,b
  3175                           
  3176                           ; BSR set to: 1
  3177                           ;doprnt.c: 698: case 'i':
  3178                           ;doprnt.c: 699: break;
  3179                           
  3180                           ; BSR set to: 1
  3181                           
  3182                           ;doprnt.c: 697: case 'd':
  3183                           
  3184                           ;doprnt.c: 664: break;
  3185  0001B6  D0CC               	goto	l6453
  3186  0001B8                     l6409:
  3187                           
  3188                           ; BSR set to: 1
  3189                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3190  0001B8  C19F  FFD9         	movff	sprintf@ap,fsr2l
  3191  0001BC  C1A0  FFDA         	movff	sprintf@ap+1,fsr2h
  3192  0001C0  CFDE F19D          	movff	postinc2,sprintf@cp
  3193  0001C4  CFDD F19E          	movff	postdec2,sprintf@cp+1
  3194                           
  3195                           ; BSR set to: 1
  3196  0001C8  0E02               	movlw	2
  3197  0001CA  0101               	movlb	1	; () banked
  3198  0001CC  279F               	addwf	sprintf@ap& (0+255),f,b
  3199  0001CE  0E00               	movlw	0
  3200  0001D0  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3201                           
  3202                           ; BSR set to: 1
  3203                           ;doprnt.c: 740: if(!cp)
  3204  0001D2  0101               	movlb	1	; () banked
  3205  0001D4  519D               	movf	sprintf@cp& (0+255),w,b
  3206  0001D6  0101               	movlb	1	; () banked
  3207  0001D8  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
  3208  0001DA  A4D8               	btfss	status,2,c
  3209  0001DC  D006               	goto	l6417
  3210                           
  3211                           ; BSR set to: 1
  3212                           ;doprnt.c: 741: cp = "(null)";
  3213  0001DE  0EF2               	movlw	low STR_21
  3214  0001E0  0101               	movlb	1	; () banked
  3215  0001E2  6F9D               	movwf	sprintf@cp& (0+255),b
  3216  0001E4  0EFF               	movlw	high STR_21
  3217  0001E6  0101               	movlb	1	; () banked
  3218  0001E8  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
  3219  0001EA                     l6417:
  3220                           
  3221                           ; BSR set to: 1
  3222                           ;doprnt.c: 745: len = 0;
  3223  0001EA  0E00               	movlw	0
  3224  0001EC  0101               	movlb	1	; () banked
  3225  0001EE  6FA2               	movwf	(sprintf@len+1)& (0+255),b
  3226  0001F0  0E00               	movlw	0
  3227  0001F2  6FA1               	movwf	sprintf@len& (0+255),b
  3228                           
  3229                           ;doprnt.c: 746: while(cp[len])
  3230  0001F4  D003               	goto	l6421
  3231  0001F6                     l6419:
  3232                           
  3233                           ;doprnt.c: 747: len++;
  3234  0001F6  0101               	movlb	1	; () banked
  3235  0001F8  4BA1               	infsnz	sprintf@len& (0+255),f,b
  3236  0001FA  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
  3237  0001FC                     l6421:
  3238                           
  3239                           ; BSR set to: 1
  3240  0001FC  0101               	movlb	1	; () banked
  3241  0001FE  51A1               	movf	sprintf@len& (0+255),w,b
  3242  000200  0101               	movlb	1	; () banked
  3243  000202  259D               	addwf	sprintf@cp& (0+255),w,b
  3244  000204  0101               	movlb	1	; () banked
  3245  000206  6F94               	movwf	??_sprintf& (0+255),b
  3246  000208  0101               	movlb	1	; () banked
  3247  00020A  51A2               	movf	(sprintf@len+1)& (0+255),w,b
  3248  00020C  0101               	movlb	1	; () banked
  3249  00020E  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
  3250  000210  0101               	movlb	1	; () banked
  3251  000212  6F95               	movwf	(??_sprintf+1)& (0+255),b
  3252  000214  C194  FFF6         	movff	??_sprintf,tblptrl
  3253  000218  C195  FFF7         	movff	??_sprintf+1,tblptrh
  3254  00021C  0E00               	movlw	low (__mediumconst shr (0+16))
  3255  00021E  6EF8               	movwf	tblptru,c
  3256  000220  0E0F               	movlw	(high __ramtop+-1)
  3257  000222  64F7               	cpfsgt	tblptrh,c
  3258  000224  D003               	bra	u7707
  3259  000226  0008               	tblrd		*
  3260  000228  50F5               	movf	tablat,w,c
  3261  00022A  D005               	bra	u7700
  3262  00022C                     u7707:
  3263  00022C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3264  000230  CFF7 FFE2          	movff	tblptrh,fsr1h
  3265  000234  50E7               	movf	indf1,w,c
  3266  000236                     u7700:
  3267  000236  0900               	iorlw	0
  3268  000238  A4D8               	btfss	status,2,c
  3269  00023A  D7DD               	goto	l6419
  3270                           
  3271                           ;doprnt.c: 753: if(prec && prec < len)
  3272  00023C  0101               	movlb	1	; () banked
  3273  00023E  51B4               	movf	sprintf@prec& (0+255),w,b
  3274  000240  0101               	movlb	1	; () banked
  3275  000242  11B5               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3276  000244  B4D8               	btfsc	status,2,c
  3277  000246  D00E               	goto	l6429
  3278                           
  3279                           ; BSR set to: 1
  3280  000248  0101               	movlb	1	; () banked
  3281  00024A  51A1               	movf	sprintf@len& (0+255),w,b
  3282  00024C  0101               	movlb	1	; () banked
  3283  00024E  5DB4               	subwf	sprintf@prec& (0+255),w,b
  3284  000250  0101               	movlb	1	; () banked
  3285  000252  51A2               	movf	(sprintf@len+1)& (0+255),w,b
  3286  000254  0101               	movlb	1	; () banked
  3287  000256  59B5               	subwfb	(sprintf@prec+1)& (0+255),w,b
  3288  000258  B0D8               	btfsc	status,0,c
  3289  00025A  D004               	goto	l6429
  3290                           
  3291                           ; BSR set to: 1
  3292                           ;doprnt.c: 754: len = prec;
  3293  00025C  C1B4  F1A1         	movff	sprintf@prec,sprintf@len
  3294  000260  C1B5  F1A2         	movff	sprintf@prec+1,sprintf@len+1
  3295  000264                     l6429:
  3296                           
  3297                           ; BSR set to: 1
  3298                           ;doprnt.c: 757: if(width > len)
  3299  000264  0101               	movlb	1	; () banked
  3300  000266  51B2               	movf	sprintf@width& (0+255),w,b
  3301  000268  0101               	movlb	1	; () banked
  3302  00026A  5DA1               	subwf	sprintf@len& (0+255),w,b
  3303  00026C  0101               	movlb	1	; () banked
  3304  00026E  51B3               	movf	(sprintf@width+1)& (0+255),w,b
  3305  000270  0101               	movlb	1	; () banked
  3306  000272  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
  3307  000274  B0D8               	btfsc	status,0,c
  3308  000276  D009               	goto	l6433
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;doprnt.c: 758: width -= len;
  3312  000278  0101               	movlb	1	; () banked
  3313  00027A  51A1               	movf	sprintf@len& (0+255),w,b
  3314  00027C  0101               	movlb	1	; () banked
  3315  00027E  5FB2               	subwf	sprintf@width& (0+255),f,b
  3316  000280  0101               	movlb	1	; () banked
  3317  000282  51A2               	movf	(sprintf@len+1)& (0+255),w,b
  3318  000284  0101               	movlb	1	; () banked
  3319  000286  5BB3               	subwfb	(sprintf@width+1)& (0+255),f,b
  3320  000288  D00F               	goto	l6439
  3321  00028A                     l6433:
  3322                           
  3323                           ; BSR set to: 1
  3324                           ;doprnt.c: 759: else
  3325                           ;doprnt.c: 760: width = 0;
  3326  00028A  0E00               	movlw	0
  3327  00028C  0101               	movlb	1	; () banked
  3328  00028E  6FB3               	movwf	(sprintf@width+1)& (0+255),b
  3329  000290  0E00               	movlw	0
  3330  000292  6FB2               	movwf	sprintf@width& (0+255),b
  3331                           
  3332                           ; BSR set to: 1
  3333                           ;doprnt.c: 764: while(width--)
  3334  000294  D009               	goto	l6439
  3335  000296                     l6435:
  3336                           
  3337                           ; BSR set to: 1
  3338                           ;doprnt.c: 765: ((*sp++ = (' ')));
  3339  000296  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  3340  00029A  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  3341  00029E  0E20               	movlw	32
  3342  0002A0  6EDF               	movwf	indf2,c
  3343                           
  3344                           ; BSR set to: 1
  3345  0002A2  0100               	movlb	0	; () banked
  3346  0002A4  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  3347  0002A6  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  3348  0002A8                     l6439:
  3349  0002A8  0101               	movlb	1	; () banked
  3350  0002AA  07B2               	decf	sprintf@width& (0+255),f,b
  3351  0002AC  A0D8               	btfss	status,0,c
  3352  0002AE  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  3353  0002B0  0101               	movlb	1	; () banked
  3354  0002B2  29B2               	incf	sprintf@width& (0+255),w,b
  3355  0002B4  E1F0               	bnz	l6435
  3356  0002B6  0101               	movlb	1	; () banked
  3357  0002B8  29B3               	incf	(sprintf@width+1)& (0+255),w,b
  3358  0002BA  B4D8               	btfsc	status,2,c
  3359  0002BC  D01D               	goto	l6447
  3360  0002BE  D7EB               	goto	l6435
  3361  0002C0                     l6441:
  3362                           
  3363                           ; BSR set to: 1
  3364                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  3365  0002C0  C19D  FFF6         	movff	sprintf@cp,tblptrl
  3366  0002C4  C19E  FFF7         	movff	sprintf@cp+1,tblptrh
  3367  0002C8  0E00               	movlw	low (__mediumconst shr (0+16))
  3368  0002CA  6EF8               	movwf	tblptru,c
  3369  0002CC  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  3370  0002D0  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  3371  0002D4  0E0F               	movlw	(high __ramtop+-1)
  3372  0002D6  64F7               	cpfsgt	tblptrh,c
  3373  0002D8  D003               	bra	u7767
  3374  0002DA  0008               	tblrd		*
  3375  0002DC  50F5               	movf	tablat,w,c
  3376  0002DE  D005               	bra	u7760
  3377  0002E0                     u7767:
  3378  0002E0  CFF6 FFE1          	movff	tblptrl,fsr1l
  3379  0002E4  CFF7 FFE2          	movff	tblptrh,fsr1h
  3380  0002E8  50E7               	movf	indf1,w,c
  3381  0002EA                     u7760:
  3382  0002EA  6EDF               	movwf	indf2,c
  3383  0002EC  0101               	movlb	1	; () banked
  3384  0002EE  4B9D               	infsnz	sprintf@cp& (0+255),f,b
  3385  0002F0  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
  3386                           
  3387                           ; BSR set to: 1
  3388  0002F2  0100               	movlb	0	; () banked
  3389  0002F4  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  3390  0002F6  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  3391  0002F8                     l6447:
  3392  0002F8  0101               	movlb	1	; () banked
  3393  0002FA  07A1               	decf	sprintf@len& (0+255),f,b
  3394  0002FC  A0D8               	btfss	status,0,c
  3395  0002FE  07A2               	decf	(sprintf@len+1)& (0+255),f,b
  3396  000300  0101               	movlb	1	; () banked
  3397  000302  29A1               	incf	sprintf@len& (0+255),w,b
  3398  000304  E1DD               	bnz	l6441
  3399  000306  0101               	movlb	1	; () banked
  3400  000308  29A2               	incf	(sprintf@len+1)& (0+255),w,b
  3401  00030A  B4D8               	btfsc	status,2,c
  3402  00030C  EF08  F007         	goto	l6729
  3403  000310  D7D7               	goto	l6441
  3404  000312                     l6451:
  3405  000312  C0CF  FFF6         	movff	sprintf@f,tblptrl
  3406  000316  C0D0  FFF7         	movff	sprintf@f+1,tblptrh
  3407  00031A  0100               	movlb	0	; () banked
  3408  00031C  4BCF               	infsnz	sprintf@f& (0+255),f,b
  3409  00031E  2BD0               	incf	(sprintf@f+1)& (0+255),f,b
  3410  000320                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3411  000320  6AF8               	clrf	tblptru,c
  3412  000322                     	endif
  3413  000322                     	if	0	;tblptru may be non-zero
  3414  000322                     	endif
  3415  000322  0008               	tblrd		*
  3416  000324  CFF5 F1B6          	movff	tablat,sprintf@c
  3417  000328  0101               	movlb	1	; () banked
  3418  00032A  51B6               	movf	sprintf@c& (0+255),w,b
  3419                           
  3420                           ; Switch size 1, requested type "space"
  3421                           ; Number of cases is 5, Range of values is 0 to 115
  3422                           ; switch strategies available:
  3423                           ; Name         Instructions Cycles
  3424                           ; simple_byte           16     9 (average)
  3425                           ;	Chosen strategy is simple_byte
  3426  00032C  0A00               	xorlw	0	; case 0
  3427  00032E  B4D8               	btfsc	status,2,c
  3428  000330  EF18  F007         	goto	l6731
  3429  000334  0A64               	xorlw	100	; case 100
  3430  000336  B4D8               	btfsc	status,2,c
  3431  000338  D00B               	goto	l6453
  3432  00033A  0A02               	xorlw	2	; case 102
  3433  00033C  B4D8               	btfsc	status,2,c
  3434  00033E  D739               	goto	l6407
  3435  000340  0A0F               	xorlw	15	; case 105
  3436  000342  B4D8               	btfsc	status,2,c
  3437  000344  D005               	goto	l6453
  3438  000346  0A1A               	xorlw	26	; case 115
  3439  000348  B4D8               	btfsc	status,2,c
  3440  00034A  D736               	goto	l6409
  3441  00034C  EF08  F007         	goto	l6729
  3442  000350                     l6453:
  3443                           
  3444                           ; BSR set to: 1
  3445                           ;doprnt.c: 825: if(flag & (0x700)) {
  3446  000350  0E07               	movlw	7
  3447  000352  0101               	movlb	1	; () banked
  3448  000354  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  3449  000356  B4D8               	btfsc	status,2,c
  3450  000358  D3BD               	goto	l6633
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;doprnt.c: 827: if(flag & 0x1000)
  3454  00035A  0101               	movlb	1	; () banked
  3455  00035C  A9AE               	btfss	(sprintf@flag+1)& (0+255),4,b
  3456  00035E  D005               	goto	l6459
  3457                           
  3458                           ; BSR set to: 1
  3459                           ;doprnt.c: 829: prec = 6;
  3460  000360  0E00               	movlw	0
  3461  000362  0101               	movlb	1	; () banked
  3462  000364  6FB5               	movwf	(sprintf@prec+1)& (0+255),b
  3463  000366  0E06               	movlw	6
  3464  000368  6FB4               	movwf	sprintf@prec& (0+255),b
  3465  00036A                     l6459:
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3469  00036A  C19F  FFD9         	movff	sprintf@ap,fsr2l
  3470  00036E  C1A0  FFDA         	movff	sprintf@ap+1,fsr2h
  3471  000372  CFDE F1AF          	movff	postinc2,sprintf@fval
  3472  000376  CFDE F1B0          	movff	postinc2,sprintf@fval+1
  3473  00037A  CFDD F1B1          	movff	postdec2,sprintf@fval+2
  3474                           
  3475                           ; BSR set to: 1
  3476  00037E  0E03               	movlw	3
  3477  000380  0101               	movlb	1	; () banked
  3478  000382  279F               	addwf	sprintf@ap& (0+255),f,b
  3479  000384  0E00               	movlw	0
  3480  000386  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3481                           
  3482                           ; BSR set to: 1
  3483                           ;doprnt.c: 831: if(fval < 0.0) {
  3484  000388  0101               	movlb	1	; () banked
  3485  00038A  AFB1               	btfss	(sprintf@fval+2)& (0+255),7,b
  3486  00038C  D011               	goto	l6469
  3487                           
  3488                           ; BSR set to: 1
  3489                           ;doprnt.c: 832: fval = -fval;
  3490  00038E  C1AF  F08E         	movff	sprintf@fval,___ftneg@f1
  3491  000392  C1B0  F08F         	movff	sprintf@fval+1,___ftneg@f1+1
  3492  000396  C1B1  F090         	movff	sprintf@fval+2,___ftneg@f1+2
  3493  00039A  ECE1  F029         	call	___ftneg	;wreg free
  3494  00039E  C08E  F1AF         	movff	?___ftneg,sprintf@fval
  3495  0003A2  C08F  F1B0         	movff	?___ftneg+1,sprintf@fval+1
  3496  0003A6  C090  F1B1         	movff	?___ftneg+2,sprintf@fval+2
  3497                           
  3498                           ;doprnt.c: 833: flag |= 0x03;
  3499  0003AA  0E03               	movlw	3
  3500  0003AC  0101               	movlb	1	; () banked
  3501  0003AE  13AD               	iorwf	sprintf@flag& (0+255),f,b
  3502  0003B0                     l6469:
  3503                           
  3504                           ; BSR set to: 1
  3505                           ;doprnt.c: 834: }
  3506                           ;doprnt.c: 835: exp = 0;
  3507  0003B0  0E00               	movlw	0
  3508  0003B2  0101               	movlb	1	; () banked
  3509  0003B4  6FAC               	movwf	(sprintf@exp+1)& (0+255),b
  3510  0003B6  0E00               	movlw	0
  3511  0003B8  6FAB               	movwf	sprintf@exp& (0+255),b
  3512                           
  3513                           ; BSR set to: 1
  3514                           ;doprnt.c: 836: if( fval!=0) {
  3515  0003BA  0101               	movlb	1	; () banked
  3516  0003BC  51AF               	movf	sprintf@fval& (0+255),w,b
  3517  0003BE  0101               	movlb	1	; () banked
  3518  0003C0  11B0               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3519  0003C2  0101               	movlb	1	; () banked
  3520  0003C4  11B1               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3521  0003C6  B4D8               	btfsc	status,2,c
  3522  0003C8  D09B               	goto	l6497
  3523                           
  3524                           ; BSR set to: 1
  3525                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  3526  0003CA  0E82               	movlw	130
  3527  0003CC  0101               	movlb	1	; () banked
  3528  0003CE  6F94               	movwf	??_sprintf& (0+255),b
  3529  0003D0  0EFF               	movlw	255
  3530  0003D2  0101               	movlb	1	; () banked
  3531  0003D4  6F95               	movwf	(??_sprintf+1)& (0+255),b
  3532  0003D6  C1AF  F196         	movff	sprintf@fval,??_sprintf+2
  3533  0003DA  C1B0  F197         	movff	sprintf@fval+1,??_sprintf+3
  3534  0003DE  C1B1  F198         	movff	sprintf@fval+2,??_sprintf+4
  3535  0003E2  C1B2  F199         	movff	sprintf@fval+3,??_sprintf+5
  3536  0003E6  0E10               	movlw	16
  3537  0003E8  D006               	goto	u7820
  3538  0003EA                     u7825:
  3539  0003EA  0101               	movlb	1	; () banked
  3540  0003EC  90D8               	bcf	status,0,c
  3541  0003EE  3399               	rrcf	(??_sprintf+5)& (0+255),f,b
  3542  0003F0  3398               	rrcf	(??_sprintf+4)& (0+255),f,b
  3543  0003F2  3397               	rrcf	(??_sprintf+3)& (0+255),f,b
  3544  0003F4  3396               	rrcf	(??_sprintf+2)& (0+255),f,b
  3545  0003F6                     u7820:
  3546  0003F6  2EE8               	decfsz	wreg,f,c
  3547  0003F8  D7F8               	goto	u7825
  3548  0003FA  0101               	movlb	1	; () banked
  3549  0003FC  5196               	movf	(??_sprintf+2)& (0+255),w,b
  3550  0003FE  0101               	movlb	1	; () banked
  3551  000400  2594               	addwf	??_sprintf& (0+255),w,b
  3552  000402  0101               	movlb	1	; () banked
  3553  000404  6FAB               	movwf	sprintf@exp& (0+255),b
  3554  000406  0E00               	movlw	0
  3555  000408  0101               	movlb	1	; () banked
  3556  00040A  2195               	addwfc	(??_sprintf+1)& (0+255),w,b
  3557  00040C  0101               	movlb	1	; () banked
  3558  00040E  6FAC               	movwf	(sprintf@exp+1)& (0+255),b
  3559                           
  3560                           ; BSR set to: 1
  3561                           ;doprnt.c: 838: exp--;
  3562  000410  0101               	movlb	1	; () banked
  3563  000412  07AB               	decf	sprintf@exp& (0+255),f,b
  3564  000414  A0D8               	btfss	status,0,c
  3565  000416  07AC               	decf	(sprintf@exp+1)& (0+255),f,b
  3566                           
  3567                           ; BSR set to: 1
  3568                           ;doprnt.c: 839: exp *= 3;
  3569  000418  C1AB  F09C         	movff	sprintf@exp,___wmul@multiplier
  3570  00041C  C1AC  F09D         	movff	sprintf@exp+1,___wmul@multiplier+1
  3571  000420  0E00               	movlw	0
  3572  000422  0100               	movlb	0	; () banked
  3573  000424  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3574  000426  0E03               	movlw	3
  3575  000428  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  3576  00042A  ECAD  F029         	call	___wmul	;wreg free
  3577  00042E  C09C  F1AB         	movff	?___wmul,sprintf@exp
  3578  000432  C09D  F1AC         	movff	?___wmul+1,sprintf@exp+1
  3579                           
  3580                           ;doprnt.c: 840: exp /= 10;
  3581  000436  C1AB  F094         	movff	sprintf@exp,___awdiv@dividend
  3582  00043A  C1AC  F095         	movff	sprintf@exp+1,___awdiv@dividend+1
  3583  00043E  0E00               	movlw	0
  3584  000440  0100               	movlb	0	; () banked
  3585  000442  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  3586  000444  0E0A               	movlw	10
  3587  000446  6F96               	movwf	___awdiv@divisor& (0+255),b
  3588  000448  ECBE  F022         	call	___awdiv	;wreg free
  3589  00044C  C094  F1AB         	movff	?___awdiv,sprintf@exp
  3590  000450  C095  F1AC         	movff	?___awdiv+1,sprintf@exp+1
  3591                           
  3592                           ;doprnt.c: 841: if(exp < 0)
  3593  000454  0101               	movlb	1	; () banked
  3594  000456  AFAC               	btfss	(sprintf@exp+1)& (0+255),7,b
  3595  000458  D004               	goto	l6485
  3596                           
  3597                           ; BSR set to: 1
  3598                           ;doprnt.c: 842: exp--;
  3599  00045A  0101               	movlb	1	; () banked
  3600  00045C  07AB               	decf	sprintf@exp& (0+255),f,b
  3601  00045E  A0D8               	btfss	status,0,c
  3602  000460  07AC               	decf	(sprintf@exp+1)& (0+255),f,b
  3603  000462                     l6485:
  3604                           
  3605                           ; BSR set to: 1
  3606                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3607  000462  0101               	movlb	1	; () banked
  3608  000464  51AB               	movf	sprintf@exp& (0+255),w,b
  3609  000466  0800               	sublw	0
  3610  000468  EC33  F010         	call	_scale
  3611  00046C  C0B1  F1A3         	movff	?_scale,sprintf@tmpval
  3612  000470  C0B2  F1A4         	movff	?_scale+1,sprintf@tmpval+1
  3613  000474  C0B3  F1A5         	movff	?_scale+2,sprintf@tmpval+2
  3614                           
  3615                           ;doprnt.c: 847: tmpval.integ *= fval;
  3616  000478  C1A3  F0A2         	movff	sprintf@tmpval,___ftmul@f1
  3617  00047C  C1A4  F0A3         	movff	sprintf@tmpval+1,___ftmul@f1+1
  3618  000480  C1A5  F0A4         	movff	sprintf@tmpval+2,___ftmul@f1+2
  3619  000484  C1AF  F0A5         	movff	sprintf@fval,___ftmul@f2
  3620  000488  C1B0  F0A6         	movff	sprintf@fval+1,___ftmul@f2+1
  3621  00048C  C1B1  F0A7         	movff	sprintf@fval+2,___ftmul@f2+2
  3622  000490  ECEF  F01D         	call	___ftmul	;wreg free
  3623  000494  C0A2  F1A3         	movff	?___ftmul,sprintf@tmpval
  3624  000498  C0A3  F1A4         	movff	?___ftmul+1,sprintf@tmpval+1
  3625  00049C  C0A4  F1A5         	movff	?___ftmul+2,sprintf@tmpval+2
  3626                           
  3627                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3628  0004A0  C1A3  F08E         	movff	sprintf@tmpval,___ftge@ff1
  3629  0004A4  C1A4  F08F         	movff	sprintf@tmpval+1,___ftge@ff1+1
  3630  0004A8  C1A5  F090         	movff	sprintf@tmpval+2,___ftge@ff1+2
  3631  0004AC  0E00               	movlw	0
  3632  0004AE  0100               	movlb	0	; () banked
  3633  0004B0  6F91               	movwf	___ftge@ff2& (0+255),b
  3634  0004B2  0E80               	movlw	128
  3635  0004B4  0100               	movlb	0	; () banked
  3636  0004B6  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  3637  0004B8  0E3F               	movlw	63
  3638  0004BA  0100               	movlb	0	; () banked
  3639  0004BC  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  3640  0004BE  EC5A  F022         	call	___ftge	;wreg free
  3641  0004C2  0100               	movlb	0	; () banked
  3642  0004C4  B0D8               	btfsc	status,0,c
  3643  0004C6  D005               	goto	l6493
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;doprnt.c: 849: exp--;
  3647  0004C8  0101               	movlb	1	; () banked
  3648  0004CA  07AB               	decf	sprintf@exp& (0+255),f,b
  3649  0004CC  A0D8               	btfss	status,0,c
  3650  0004CE  07AC               	decf	(sprintf@exp+1)& (0+255),f,b
  3651  0004D0  D017               	goto	l6497
  3652  0004D2                     l6493:
  3653                           
  3654                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3655  0004D2  C1A3  F08E         	movff	sprintf@tmpval,___ftge@ff1
  3656  0004D6  C1A4  F08F         	movff	sprintf@tmpval+1,___ftge@ff1+1
  3657  0004DA  C1A5  F090         	movff	sprintf@tmpval+2,___ftge@ff1+2
  3658  0004DE  0E00               	movlw	0
  3659  0004E0  0100               	movlb	0	; () banked
  3660  0004E2  6F91               	movwf	___ftge@ff2& (0+255),b
  3661  0004E4  0E20               	movlw	32
  3662  0004E6  0100               	movlb	0	; () banked
  3663  0004E8  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  3664  0004EA  0E41               	movlw	65
  3665  0004EC  0100               	movlb	0	; () banked
  3666  0004EE  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  3667  0004F0  EC5A  F022         	call	___ftge	;wreg free
  3668  0004F4  0100               	movlb	0	; () banked
  3669  0004F6  A0D8               	btfss	status,0,c
  3670  0004F8  D003               	goto	l6497
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;doprnt.c: 851: exp++;
  3674  0004FA  0101               	movlb	1	; () banked
  3675  0004FC  4BAB               	infsnz	sprintf@exp& (0+255),f,b
  3676  0004FE  2BAC               	incf	(sprintf@exp+1)& (0+255),f,b
  3677  000500                     l6497:
  3678                           
  3679                           ;doprnt.c: 852: }
  3680                           ;doprnt.c: 1112: if(prec <= 12)
  3681  000500  0101               	movlb	1	; () banked
  3682  000502  BFB5               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3683  000504  D008               	goto	l6499
  3684  000506  0101               	movlb	1	; () banked
  3685  000508  51B5               	movf	(sprintf@prec+1)& (0+255),w,b
  3686  00050A  E11D               	bnz	l6501
  3687  00050C  0E0D               	movlw	13
  3688  00050E  0101               	movlb	1	; () banked
  3689  000510  5DB4               	subwf	sprintf@prec& (0+255),w,b
  3690  000512  B0D8               	btfsc	status,0,c
  3691  000514  D018               	goto	l6501
  3692  000516                     l6499:
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;doprnt.c: 1113: fval += fround(prec);
  3696  000516  C1AF  F0BB         	movff	sprintf@fval,___ftadd@f1
  3697  00051A  C1B0  F0BC         	movff	sprintf@fval+1,___ftadd@f1+1
  3698  00051E  C1B1  F0BD         	movff	sprintf@fval+2,___ftadd@f1+2
  3699  000522  0101               	movlb	1	; () banked
  3700  000524  51B4               	movf	sprintf@prec& (0+255),w,b
  3701  000526  EC04  F017         	call	_fround
  3702  00052A  C0B1  F0BE         	movff	?_fround,___ftadd@f2
  3703  00052E  C0B2  F0BF         	movff	?_fround+1,___ftadd@f2+1
  3704  000532  C0B3  F0C0         	movff	?_fround+2,___ftadd@f2+2
  3705  000536  ECA1  F019         	call	___ftadd	;wreg free
  3706  00053A  C0BB  F1AF         	movff	?___ftadd,sprintf@fval
  3707  00053E  C0BC  F1B0         	movff	?___ftadd+1,sprintf@fval+1
  3708  000542  C0BD  F1B1         	movff	?___ftadd+2,sprintf@fval+2
  3709  000546                     l6501:
  3710                           
  3711                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3712  000546  0101               	movlb	1	; () banked
  3713  000548  BFAC               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3714  00054A  D008               	goto	l6503
  3715  00054C  0101               	movlb	1	; () banked
  3716  00054E  51AC               	movf	(sprintf@exp+1)& (0+255),w,b
  3717  000550  E12A               	bnz	l6509
  3718  000552  0E0A               	movlw	10
  3719  000554  0101               	movlb	1	; () banked
  3720  000556  5DAB               	subwf	sprintf@exp& (0+255),w,b
  3721  000558  B0D8               	btfsc	status,0,c
  3722  00055A  D025               	goto	l6509
  3723  00055C                     l6503:
  3724                           
  3725                           ; BSR set to: 1
  3726  00055C  0101               	movlb	1	; () banked
  3727  00055E  51AF               	movf	sprintf@fval& (0+255),w,b
  3728  000560  0101               	movlb	1	; () banked
  3729  000562  11B0               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3730  000564  0101               	movlb	1	; () banked
  3731  000566  11B1               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3732  000568  B4D8               	btfsc	status,2,c
  3733  00056A  D063               	goto	l6523
  3734                           
  3735                           ; BSR set to: 1
  3736  00056C  C1AF  F0B8         	movff	sprintf@fval,___fttol@f1
  3737  000570  C1B0  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
  3738  000574  C1B1  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
  3739  000578  EC9E  F01E         	call	___fttol	;wreg free
  3740  00057C  0100               	movlb	0	; () banked
  3741  00057E  51B8               	movf	?___fttol& (0+255),w,b
  3742  000580  0100               	movlb	0	; () banked
  3743  000582  11B9               	iorwf	(?___fttol+1)& (0+255),w,b
  3744  000584  0100               	movlb	0	; () banked
  3745  000586  11BA               	iorwf	(?___fttol+2)& (0+255),w,b
  3746  000588  0100               	movlb	0	; () banked
  3747  00058A  11BB               	iorwf	(?___fttol+3)& (0+255),w,b
  3748  00058C  A4D8               	btfss	status,2,c
  3749  00058E  D051               	goto	l6523
  3750                           
  3751                           ; BSR set to: 0
  3752  000590  0101               	movlb	1	; () banked
  3753  000592  BFAC               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3754  000594  D04E               	goto	l6523
  3755  000596  0101               	movlb	1	; () banked
  3756  000598  51AC               	movf	(sprintf@exp+1)& (0+255),w,b
  3757  00059A  E105               	bnz	l6509
  3758  00059C  0E02               	movlw	2
  3759  00059E  0101               	movlb	1	; () banked
  3760  0005A0  5DAB               	subwf	sprintf@exp& (0+255),w,b
  3761  0005A2  A0D8               	btfss	status,0,c
  3762  0005A4  D046               	goto	l6523
  3763  0005A6                     l6509:
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3767  0005A6  C1A3  F08E         	movff	sprintf@tmpval,___ftge@ff1
  3768  0005AA  C1A4  F08F         	movff	sprintf@tmpval+1,___ftge@ff1+1
  3769  0005AE  C1A5  F090         	movff	sprintf@tmpval+2,___ftge@ff1+2
  3770  0005B2  0E70               	movlw	112
  3771  0005B4  0100               	movlb	0	; () banked
  3772  0005B6  6F91               	movwf	___ftge@ff2& (0+255),b
  3773  0005B8  0E89               	movlw	137
  3774  0005BA  0100               	movlb	0	; () banked
  3775  0005BC  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  3776  0005BE  0E40               	movlw	64
  3777  0005C0  0100               	movlb	0	; () banked
  3778  0005C2  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  3779  0005C4  EC5A  F022         	call	___ftge	;wreg free
  3780  0005C8  0100               	movlb	0	; () banked
  3781  0005CA  B0D8               	btfsc	status,0,c
  3782  0005CC  D003               	goto	l6513
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3786  0005CE  0101               	movlb	1	; () banked
  3787  0005D0  0EF7               	movlw	247
  3788  0005D2  D002               	goto	L9
  3789  0005D4                     l6513:
  3790                           
  3791                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3792  0005D4  0101               	movlb	1	; () banked
  3793  0005D6  0EF8               	movlw	248
  3794  0005D8                     L9:
  3795  0005D8  27AB               	addwf	sprintf@exp& (0+255),f,b
  3796  0005DA  0EFF               	movlw	255
  3797  0005DC  23AC               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3798                           
  3799                           ; BSR set to: 1
  3800                           ;doprnt.c: 1124: }
  3801                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  3802                           
  3803                           ; BSR set to: 1
  3804  0005DE  0101               	movlb	1	; () banked
  3805  0005E0  51AB               	movf	sprintf@exp& (0+255),w,b
  3806  0005E2  EC33  F010         	call	_scale
  3807  0005E6  C0B1  F1A3         	movff	?_scale,sprintf@tmpval
  3808  0005EA  C0B2  F1A4         	movff	?_scale+1,sprintf@tmpval+1
  3809  0005EE  C0B3  F1A5         	movff	?_scale+2,sprintf@tmpval+2
  3810                           
  3811                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3812  0005F2  C1AF  F08E         	movff	sprintf@fval,__tdiv_to_l_@f1
  3813  0005F6  C1B0  F08F         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  3814  0005FA  C1B1  F090         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  3815  0005FE  C1A3  F091         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  3816  000602  C1A4  F092         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  3817  000606  C1A5  F093         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  3818  00060A  ECAB  F01B         	call	__tdiv_to_l_	;wreg free
  3819  00060E  C08E  F1A7         	movff	?__tdiv_to_l_,sprintf@val
  3820  000612  C08F  F1A8         	movff	?__tdiv_to_l_+1,sprintf@val+1
  3821  000616  C090  F1A9         	movff	?__tdiv_to_l_+2,sprintf@val+2
  3822  00061A  C091  F1AA         	movff	?__tdiv_to_l_+3,sprintf@val+3
  3823                           
  3824                           ;doprnt.c: 1129: fval = 0.0;
  3825  00061E  0E00               	movlw	0
  3826  000620  0101               	movlb	1	; () banked
  3827  000622  6FAF               	movwf	sprintf@fval& (0+255),b
  3828  000624  0E00               	movlw	0
  3829  000626  0101               	movlb	1	; () banked
  3830  000628  6FB0               	movwf	(sprintf@fval+1)& (0+255),b
  3831  00062A  0E00               	movlw	0
  3832  00062C  0101               	movlb	1	; () banked
  3833  00062E  6FB1               	movwf	(sprintf@fval+2)& (0+255),b
  3834                           
  3835                           ;doprnt.c: 1130: } else {
  3836  000630  D033               	goto	l6527
  3837  000632                     l6523:
  3838                           
  3839                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3840  000632  C1AF  F0B8         	movff	sprintf@fval,___fttol@f1
  3841  000636  C1B0  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
  3842  00063A  C1B1  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
  3843  00063E  EC9E  F01E         	call	___fttol	;wreg free
  3844  000642  C0B8  F1A7         	movff	?___fttol,sprintf@val
  3845  000646  C0B9  F1A8         	movff	?___fttol+1,sprintf@val+1
  3846  00064A  C0BA  F1A9         	movff	?___fttol+2,sprintf@val+2
  3847  00064E  C0BB  F1AA         	movff	?___fttol+3,sprintf@val+3
  3848                           
  3849                           ;doprnt.c: 1132: fval -= (double)val;
  3850  000652  C1AF  F0C7         	movff	sprintf@fval,___ftsub@f1
  3851  000656  C1B0  F0C8         	movff	sprintf@fval+1,___ftsub@f1+1
  3852  00065A  C1B1  F0C9         	movff	sprintf@fval+2,___ftsub@f1+2
  3853  00065E  C1A7  F096         	movff	sprintf@val,___lltoft@c
  3854  000662  C1A8  F097         	movff	sprintf@val+1,___lltoft@c+1
  3855  000666  C1A9  F098         	movff	sprintf@val+2,___lltoft@c+2
  3856  00066A  C1AA  F099         	movff	sprintf@val+3,___lltoft@c+3
  3857  00066E  EC57  F026         	call	___lltoft	;wreg free
  3858  000672  C096  F0CA         	movff	?___lltoft,___ftsub@f2
  3859  000676  C097  F0CB         	movff	?___lltoft+1,___ftsub@f2+1
  3860  00067A  C098  F0CC         	movff	?___lltoft+2,___ftsub@f2+2
  3861  00067E  ECA7  F028         	call	___ftsub	;wreg free
  3862  000682  C0C7  F1AF         	movff	?___ftsub,sprintf@fval
  3863  000686  C0C8  F1B0         	movff	?___ftsub+1,sprintf@fval+1
  3864  00068A  C0C9  F1B1         	movff	?___ftsub+2,sprintf@fval+2
  3865                           
  3866                           ;doprnt.c: 1133: exp = 0;
  3867  00068E  0E00               	movlw	0
  3868  000690  0101               	movlb	1	; () banked
  3869  000692  6FAC               	movwf	(sprintf@exp+1)& (0+255),b
  3870  000694  0E00               	movlw	0
  3871  000696  6FAB               	movwf	sprintf@exp& (0+255),b
  3872  000698                     l6527:
  3873                           
  3874                           ; BSR set to: 1
  3875                           ;doprnt.c: 1134: }
  3876                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3877  000698  0E01               	movlw	1
  3878  00069A  0101               	movlb	1	; () banked
  3879  00069C  6FB6               	movwf	sprintf@c& (0+255),b
  3880  00069E                     l6529:
  3881                           
  3882                           ; BSR set to: 1
  3883  00069E  0E0A               	movlw	10
  3884  0006A0  0101               	movlb	1	; () banked
  3885  0006A2  19B6               	xorwf	sprintf@c& (0+255),w,b
  3886  0006A4  B4D8               	btfsc	status,2,c
  3887  0006A6  D021               	goto	l6541
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;doprnt.c: 1137: if(val < dpowers[c])
  3891                           
  3892                           ; BSR set to: 1
  3893                           
  3894                           ; BSR set to: 1
  3895  0006A8  0101               	movlb	1	; () banked
  3896  0006AA  51B6               	movf	sprintf@c& (0+255),w,b
  3897  0006AC  0D04               	mullw	4
  3898  0006AE  0E01               	movlw	low _dpowers
  3899  0006B0  24F3               	addwf	prodl,w,c
  3900  0006B2  6EF6               	movwf	tblptrl,c
  3901  0006B4  0EFF               	movlw	high _dpowers
  3902  0006B6  20F4               	addwfc	prodh,w,c
  3903  0006B8  6EF7               	movwf	tblptrh,c
  3904  0006BA                     	if	1	;There are 3 active tblptr bytes
  3905  0006BA  6AF8               	clrf	tblptru,c
  3906  0006BC  0E00               	movlw	low (__mediumconst shr (0+16))
  3907  0006BE  22F8               	addwfc	tblptru,f,c
  3908  0006C0                     	endif
  3909  0006C0  0009               	tblrd		*+
  3910  0006C2  50F5               	movf	tablat,w,c
  3911  0006C4  0101               	movlb	1	; () banked
  3912  0006C6  5DA7               	subwf	sprintf@val& (0+255),w,b
  3913  0006C8  0009               	tblrd		*+
  3914  0006CA  50F5               	movf	tablat,w,c
  3915  0006CC  0101               	movlb	1	; () banked
  3916  0006CE  59A8               	subwfb	(sprintf@val+1)& (0+255),w,b
  3917  0006D0  0009               	tblrd		*+
  3918  0006D2  50F5               	movf	tablat,w,c
  3919  0006D4  0101               	movlb	1	; () banked
  3920  0006D6  59A9               	subwfb	(sprintf@val+2)& (0+255),w,b
  3921  0006D8  0009               	tblrd		*+
  3922  0006DA  50F5               	movf	tablat,w,c
  3923  0006DC  0101               	movlb	1	; () banked
  3924  0006DE  59AA               	subwfb	(sprintf@val+3)& (0+255),w,b
  3925  0006E0  A0D8               	btfss	status,0,c
  3926  0006E2  D003               	goto	l6541
  3927                           
  3928                           ; BSR set to: 1
  3929                           
  3930                           ; BSR set to: 1
  3931                           
  3932                           ; BSR set to: 1
  3933                           ;doprnt.c: 1138: break;
  3934  0006E4  0101               	movlb	1	; () banked
  3935  0006E6  2BB6               	incf	sprintf@c& (0+255),f,b
  3936  0006E8  D7DA               	goto	l6529
  3937  0006EA                     l6541:
  3938                           
  3939                           ; BSR set to: 1
  3940                           ;doprnt.c: 1142: width -= prec + c + exp;
  3941  0006EA  C1B6  F194         	movff	sprintf@c,??_sprintf
  3942  0006EE  0101               	movlb	1	; () banked
  3943  0006F0  6B95               	clrf	(??_sprintf+1)& (0+255),b
  3944  0006F2  BF94               	btfsc	??_sprintf& (0+255),7,b
  3945  0006F4  0795               	decf	(??_sprintf+1)& (0+255),f,b
  3946  0006F6  0101               	movlb	1	; () banked
  3947  0006F8  51B4               	movf	sprintf@prec& (0+255),w,b
  3948  0006FA  0101               	movlb	1	; () banked
  3949  0006FC  2794               	addwf	??_sprintf& (0+255),f,b
  3950  0006FE  0101               	movlb	1	; () banked
  3951  000700  51B5               	movf	(sprintf@prec+1)& (0+255),w,b
  3952  000702  0101               	movlb	1	; () banked
  3953  000704  2395               	addwfc	(??_sprintf+1)& (0+255),f,b
  3954  000706  0101               	movlb	1	; () banked
  3955  000708  51AB               	movf	sprintf@exp& (0+255),w,b
  3956  00070A  0101               	movlb	1	; () banked
  3957  00070C  2794               	addwf	??_sprintf& (0+255),f,b
  3958  00070E  0101               	movlb	1	; () banked
  3959  000710  51AC               	movf	(sprintf@exp+1)& (0+255),w,b
  3960  000712  0101               	movlb	1	; () banked
  3961  000714  2395               	addwfc	(??_sprintf+1)& (0+255),f,b
  3962  000716  0101               	movlb	1	; () banked
  3963  000718  5194               	movf	??_sprintf& (0+255),w,b
  3964  00071A  0101               	movlb	1	; () banked
  3965  00071C  5FB2               	subwf	sprintf@width& (0+255),f,b
  3966  00071E  0101               	movlb	1	; () banked
  3967  000720  5195               	movf	(??_sprintf+1)& (0+255),w,b
  3968  000722  0101               	movlb	1	; () banked
  3969  000724  5BB3               	subwfb	(sprintf@width+1)& (0+255),f,b
  3970                           
  3971                           ;doprnt.c: 1143: if(
  3972                           ;doprnt.c: 1147: prec)
  3973  000726  0101               	movlb	1	; () banked
  3974  000728  51B4               	movf	sprintf@prec& (0+255),w,b
  3975  00072A  0101               	movlb	1	; () banked
  3976  00072C  11B5               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3977  00072E  B4D8               	btfsc	status,2,c
  3978  000730  D004               	goto	l6545
  3979                           
  3980                           ; BSR set to: 1
  3981                           ;doprnt.c: 1148: width--;
  3982  000732  0101               	movlb	1	; () banked
  3983  000734  07B2               	decf	sprintf@width& (0+255),f,b
  3984  000736  A0D8               	btfss	status,0,c
  3985  000738  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  3986  00073A                     l6545:
  3987                           
  3988                           ; BSR set to: 1
  3989                           ;doprnt.c: 1149: if(flag & 0x03)
  3990  00073A  0E03               	movlw	3
  3991  00073C  0101               	movlb	1	; () banked
  3992  00073E  15AD               	andwf	sprintf@flag& (0+255),w,b
  3993  000740  0101               	movlb	1	; () banked
  3994  000742  6F94               	movwf	??_sprintf& (0+255),b
  3995  000744  0E00               	movlw	0
  3996  000746  0101               	movlb	1	; () banked
  3997  000748  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  3998  00074A  0101               	movlb	1	; () banked
  3999  00074C  6F95               	movwf	(??_sprintf+1)& (0+255),b
  4000  00074E  0101               	movlb	1	; () banked
  4001  000750  5194               	movf	??_sprintf& (0+255),w,b
  4002  000752  0101               	movlb	1	; () banked
  4003  000754  1195               	iorwf	(??_sprintf+1)& (0+255),w,b
  4004  000756  B4D8               	btfsc	status,2,c
  4005  000758  D004               	goto	l6549
  4006                           
  4007                           ; BSR set to: 1
  4008                           ;doprnt.c: 1150: width--;
  4009  00075A  0101               	movlb	1	; () banked
  4010  00075C  07B2               	decf	sprintf@width& (0+255),f,b
  4011  00075E  A0D8               	btfss	status,0,c
  4012  000760  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  4013  000762                     l6549:
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;doprnt.c: 1153: if(flag & 0x04) {
  4017  000762  0101               	movlb	1	; () banked
  4018  000764  A5AD               	btfss	sprintf@flag& (0+255),2,b
  4019  000766  D03F               	goto	l6571
  4020                           
  4021                           ; BSR set to: 1
  4022                           ;doprnt.c: 1157: if(flag & 0x03)
  4023  000768  0E03               	movlw	3
  4024  00076A  0101               	movlb	1	; () banked
  4025  00076C  15AD               	andwf	sprintf@flag& (0+255),w,b
  4026  00076E  0101               	movlb	1	; () banked
  4027  000770  6F94               	movwf	??_sprintf& (0+255),b
  4028  000772  0E00               	movlw	0
  4029  000774  0101               	movlb	1	; () banked
  4030  000776  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  4031  000778  0101               	movlb	1	; () banked
  4032  00077A  6F95               	movwf	(??_sprintf+1)& (0+255),b
  4033  00077C  0101               	movlb	1	; () banked
  4034  00077E  5194               	movf	??_sprintf& (0+255),w,b
  4035  000780  0101               	movlb	1	; () banked
  4036  000782  1195               	iorwf	(??_sprintf+1)& (0+255),w,b
  4037  000784  B4D8               	btfsc	status,2,c
  4038  000786  D017               	goto	l6563
  4039                           
  4040                           ; BSR set to: 1
  4041                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  4042  000788  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4043  00078C  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4044  000790  0E2D               	movlw	45
  4045  000792  6EDF               	movwf	indf2,c
  4046                           
  4047                           ; BSR set to: 1
  4048  000794  0100               	movlb	0	; () banked
  4049  000796  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4050  000798  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;doprnt.c: 1168: while(width > 0) {
  4054  00079A  D00D               	goto	l6563
  4055  00079C                     l6557:
  4056                           
  4057                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  4058  00079C  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4059  0007A0  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4060  0007A4  0E30               	movlw	48
  4061  0007A6  6EDF               	movwf	indf2,c
  4062  0007A8  0100               	movlb	0	; () banked
  4063  0007AA  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4064  0007AC  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;doprnt.c: 1170: width--;
  4068  0007AE  0101               	movlb	1	; () banked
  4069  0007B0  07B2               	decf	sprintf@width& (0+255),f,b
  4070  0007B2  A0D8               	btfss	status,0,c
  4071  0007B4  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  4072  0007B6                     l6563:
  4073  0007B6  0101               	movlb	1	; () banked
  4074  0007B8  BFB3               	btfsc	(sprintf@width+1)& (0+255),7,b
  4075  0007BA  D087               	goto	l6587
  4076  0007BC  0101               	movlb	1	; () banked
  4077  0007BE  51B3               	movf	(sprintf@width+1)& (0+255),w,b
  4078  0007C0  E1ED               	bnz	l6557
  4079  0007C2  0101               	movlb	1	; () banked
  4080  0007C4  05B2               	decf	sprintf@width& (0+255),w,b
  4081  0007C6  A0D8               	btfss	status,0,c
  4082  0007C8  D080               	goto	l6587
  4083  0007CA  D7E8               	goto	l6557
  4084  0007CC                     l6565:
  4085                           
  4086                           ; BSR set to: 1
  4087                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  4088  0007CC  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4089  0007D0  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4090  0007D4  0E20               	movlw	32
  4091  0007D6  6EDF               	movwf	indf2,c
  4092                           
  4093                           ; BSR set to: 1
  4094  0007D8  0100               	movlb	0	; () banked
  4095  0007DA  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4096  0007DC  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;doprnt.c: 1182: width--;
  4100  0007DE  0101               	movlb	1	; () banked
  4101  0007E0  07B2               	decf	sprintf@width& (0+255),f,b
  4102  0007E2  A0D8               	btfss	status,0,c
  4103  0007E4  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  4104  0007E6                     l6571:
  4105                           
  4106                           ; BSR set to: 1
  4107  0007E6  0101               	movlb	1	; () banked
  4108  0007E8  BFB3               	btfsc	(sprintf@width+1)& (0+255),7,b
  4109  0007EA  D007               	goto	l6573
  4110  0007EC  0101               	movlb	1	; () banked
  4111  0007EE  51B3               	movf	(sprintf@width+1)& (0+255),w,b
  4112  0007F0  E1ED               	bnz	l6565
  4113  0007F2  0101               	movlb	1	; () banked
  4114  0007F4  05B2               	decf	sprintf@width& (0+255),w,b
  4115  0007F6  B0D8               	btfsc	status,0,c
  4116  0007F8  D7E9               	goto	l6565
  4117  0007FA                     l6573:
  4118                           
  4119                           ; BSR set to: 1
  4120                           ;doprnt.c: 1183: }
  4121                           ;doprnt.c: 1188: if(flag & 0x03)
  4122  0007FA  0E03               	movlw	3
  4123  0007FC  0101               	movlb	1	; () banked
  4124  0007FE  15AD               	andwf	sprintf@flag& (0+255),w,b
  4125  000800  0101               	movlb	1	; () banked
  4126  000802  6F94               	movwf	??_sprintf& (0+255),b
  4127  000804  0E00               	movlw	0
  4128  000806  0101               	movlb	1	; () banked
  4129  000808  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  4130  00080A  0101               	movlb	1	; () banked
  4131  00080C  6F95               	movwf	(??_sprintf+1)& (0+255),b
  4132  00080E  0101               	movlb	1	; () banked
  4133  000810  5194               	movf	??_sprintf& (0+255),w,b
  4134  000812  0101               	movlb	1	; () banked
  4135  000814  1195               	iorwf	(??_sprintf+1)& (0+255),w,b
  4136  000816  B4D8               	btfsc	status,2,c
  4137  000818  D058               	goto	l6587
  4138                           
  4139                           ; BSR set to: 1
  4140                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  4141  00081A  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4142  00081E  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4143  000822  0E2D               	movlw	45
  4144  000824  D050               	goto	L10
  4145  000826                     l6577:
  4146                           
  4147                           ; BSR set to: 1
  4148  000826  0100               	movlb	0	; () banked
  4149  000828  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4150  00082A  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;doprnt.c: 1195: }
  4154                           ;doprnt.c: 1196: while(c--) {
  4155                           
  4156                           ; BSR set to: 0
  4157  00082C  D04E               	goto	l6587
  4158  00082E                     l6579:
  4159                           
  4160                           ;doprnt.c: 1200: {
  4161                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  4162  00082E  C1A7  F08E         	movff	sprintf@val,___lldiv@dividend
  4163  000832  C1A8  F08F         	movff	sprintf@val+1,___lldiv@dividend+1
  4164  000836  C1A9  F090         	movff	sprintf@val+2,___lldiv@dividend+2
  4165  00083A  C1AA  F091         	movff	sprintf@val+3,___lldiv@dividend+3
  4166  00083E  0101               	movlb	1	; () banked
  4167  000840  51B6               	movf	sprintf@c& (0+255),w,b
  4168  000842  0D04               	mullw	4
  4169  000844  0E01               	movlw	low _dpowers
  4170  000846  24F3               	addwf	prodl,w,c
  4171  000848  6EF6               	movwf	tblptrl,c
  4172  00084A  0EFF               	movlw	high _dpowers
  4173  00084C  20F4               	addwfc	prodh,w,c
  4174  00084E  6EF7               	movwf	tblptrh,c
  4175  000850                     	if	1	;There are 3 active tblptr bytes
  4176  000850  6AF8               	clrf	tblptru,c
  4177  000852  0E00               	movlw	low (__mediumconst shr (0+16))
  4178  000854  22F8               	addwfc	tblptru,f,c
  4179  000856                     	endif
  4180  000856  0009               	tblrd		*+
  4181  000858  CFF5 F092          	movff	tablat,___lldiv@divisor
  4182  00085C  0009               	tblrd		*+
  4183  00085E  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  4184  000862  0009               	tblrd		*+
  4185  000864  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  4186  000868  000A               	tblrd		*-
  4187  00086A  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  4188  00086E  EC1D  F023         	call	___lldiv	;wreg free
  4189  000872  C08E  F1A3         	movff	?___lldiv,sprintf@tmpval
  4190  000876  C08F  F1A4         	movff	?___lldiv+1,sprintf@tmpval+1
  4191  00087A  C090  F1A5         	movff	?___lldiv+2,sprintf@tmpval+2
  4192  00087E  C091  F1A6         	movff	?___lldiv+3,sprintf@tmpval+3
  4193                           
  4194                           ;doprnt.c: 1202: tmpval.vd %= 10;
  4195  000882  C1A3  F09B         	movff	sprintf@tmpval,___llmod@dividend
  4196  000886  C1A4  F09C         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4197  00088A  C1A5  F09D         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4198  00088E  C1A6  F09E         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4199  000892  0E0A               	movlw	10
  4200  000894  0100               	movlb	0	; () banked
  4201  000896  6F9F               	movwf	___llmod@divisor& (0+255),b
  4202  000898  0E00               	movlw	0
  4203  00089A  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
  4204  00089C  0E00               	movlw	0
  4205  00089E  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
  4206  0008A0  0E00               	movlw	0
  4207  0008A2  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
  4208  0008A4  EC23  F024         	call	___llmod	;wreg free
  4209  0008A8  C09B  F1A3         	movff	?___llmod,sprintf@tmpval
  4210  0008AC  C09C  F1A4         	movff	?___llmod+1,sprintf@tmpval+1
  4211  0008B0  C09D  F1A5         	movff	?___llmod+2,sprintf@tmpval+2
  4212  0008B4  C09E  F1A6         	movff	?___llmod+3,sprintf@tmpval+3
  4213                           
  4214                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  4215  0008B8  0101               	movlb	1	; () banked
  4216  0008BA  51A3               	movf	sprintf@tmpval& (0+255),w,b
  4217  0008BC  0F30               	addlw	48
  4218  0008BE  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4219  0008C2  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4220  0008C6                     L10:
  4221  0008C6  6EDF               	movwf	indf2,c
  4222  0008C8  D7AE               	goto	l6577
  4223  0008CA                     l6587:
  4224  0008CA  0101               	movlb	1	; () banked
  4225  0008CC  07B6               	decf	sprintf@c& (0+255),f,b
  4226  0008CE  0101               	movlb	1	; () banked
  4227  0008D0  29B6               	incf	sprintf@c& (0+255),w,b
  4228  0008D2  B4D8               	btfsc	status,2,c
  4229  0008D4  D00E               	goto	l6595
  4230  0008D6  D7AB               	goto	l6579
  4231  0008D8                     l6589:
  4232                           
  4233                           ; BSR set to: 1
  4234                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  4235  0008D8  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4236  0008DC  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4237  0008E0  0E30               	movlw	48
  4238  0008E2  6EDF               	movwf	indf2,c
  4239                           
  4240                           ; BSR set to: 1
  4241  0008E4  0100               	movlb	0	; () banked
  4242  0008E6  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4243  0008E8  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;doprnt.c: 1209: exp--;
  4247  0008EA  0101               	movlb	1	; () banked
  4248  0008EC  07AB               	decf	sprintf@exp& (0+255),f,b
  4249  0008EE  A0D8               	btfss	status,0,c
  4250  0008F0  07AC               	decf	(sprintf@exp+1)& (0+255),f,b
  4251  0008F2                     l6595:
  4252                           
  4253                           ; BSR set to: 1
  4254  0008F2  0101               	movlb	1	; () banked
  4255  0008F4  BFAC               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4256  0008F6  D007               	goto	l6597
  4257  0008F8  0101               	movlb	1	; () banked
  4258  0008FA  51AC               	movf	(sprintf@exp+1)& (0+255),w,b
  4259  0008FC  E1ED               	bnz	l6589
  4260  0008FE  0101               	movlb	1	; () banked
  4261  000900  05AB               	decf	sprintf@exp& (0+255),w,b
  4262  000902  B0D8               	btfsc	status,0,c
  4263  000904  D7E9               	goto	l6589
  4264  000906                     l6597:
  4265                           
  4266                           ; BSR set to: 1
  4267                           ;doprnt.c: 1210: }
  4268                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4269  000906  0101               	movlb	1	; () banked
  4270  000908  BFB5               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4271  00090A  D00C               	goto	l419
  4272  00090C  0101               	movlb	1	; () banked
  4273  00090E  51B5               	movf	(sprintf@prec+1)& (0+255),w,b
  4274  000910  E105               	bnz	u8040
  4275  000912  0E09               	movlw	9
  4276  000914  0101               	movlb	1	; () banked
  4277  000916  5DB4               	subwf	sprintf@prec& (0+255),w,b
  4278  000918  A0D8               	btfss	status,0,c
  4279  00091A  D004               	goto	l419
  4280  00091C                     u8040:
  4281                           
  4282                           ; BSR set to: 1
  4283                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4284  00091C  0E08               	movlw	8
  4285  00091E  0101               	movlb	1	; () banked
  4286  000920  6FB6               	movwf	sprintf@c& (0+255),b
  4287  000922  D002               	goto	l6601
  4288  000924                     l419:
  4289                           
  4290                           ; BSR set to: 1
  4291                           ;doprnt.c: 1213: else
  4292                           ;doprnt.c: 1214: c = prec;
  4293  000924  C1B4  F1B6         	movff	sprintf@prec,sprintf@c
  4294  000928                     l6601:
  4295                           
  4296                           ; BSR set to: 1
  4297                           ;doprnt.c: 1215: prec -= c;
  4298  000928  0101               	movlb	1	; () banked
  4299  00092A  51B6               	movf	sprintf@c& (0+255),w,b
  4300  00092C  0101               	movlb	1	; () banked
  4301  00092E  5FB4               	subwf	sprintf@prec& (0+255),f,b
  4302  000930  0E00               	movlw	0
  4303  000932  0101               	movlb	1	; () banked
  4304  000934  BFB6               	btfsc	sprintf@c& (0+255),7,b
  4305  000936  0EFF               	movlw	255
  4306  000938  0101               	movlb	1	; () banked
  4307  00093A  5BB5               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4308                           
  4309                           ; BSR set to: 1
  4310                           ;doprnt.c: 1219: if(c)
  4311  00093C  0101               	movlb	1	; () banked
  4312  00093E  51B6               	movf	sprintf@c& (0+255),w,b
  4313  000940  0101               	movlb	1	; () banked
  4314  000942  B4D8               	btfsc	status,2,c
  4315  000944  D009               	goto	l6609
  4316                           
  4317                           ; BSR set to: 1
  4318                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  4319  000946  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4320  00094A  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4321  00094E  0E2E               	movlw	46
  4322  000950  6EDF               	movwf	indf2,c
  4323                           
  4324                           ; BSR set to: 1
  4325  000952  0100               	movlb	0	; () banked
  4326  000954  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4327  000956  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4328  000958                     l6609:
  4329                           
  4330                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4331  000958  0101               	movlb	1	; () banked
  4332  00095A  51B6               	movf	sprintf@c& (0+255),w,b
  4333  00095C  EC33  F010         	call	_scale
  4334  000960  C0B1  F19A         	movff	?_scale,_sprintf$1562
  4335  000964  C0B2  F19B         	movff	?_scale+1,_sprintf$1562+1
  4336  000968  C0B3  F19C         	movff	?_scale+2,_sprintf$1562+2
  4337                           
  4338                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4339  00096C  C1AF  F0A5         	movff	sprintf@fval,___ftmul@f2
  4340  000970  C1B0  F0A6         	movff	sprintf@fval+1,___ftmul@f2+1
  4341  000974  C1B1  F0A7         	movff	sprintf@fval+2,___ftmul@f2+2
  4342  000978  C19A  F0A2         	movff	_sprintf$1562,___ftmul@f1
  4343  00097C  C19B  F0A3         	movff	_sprintf$1562+1,___ftmul@f1+1
  4344  000980  C19C  F0A4         	movff	_sprintf$1562+2,___ftmul@f1+2
  4345  000984  ECEF  F01D         	call	___ftmul	;wreg free
  4346  000988  C0A2  F0B8         	movff	?___ftmul,___fttol@f1
  4347  00098C  C0A3  F0B9         	movff	?___ftmul+1,___fttol@f1+1
  4348  000990  C0A4  F0BA         	movff	?___ftmul+2,___fttol@f1+2
  4349  000994  EC9E  F01E         	call	___fttol	;wreg free
  4350  000998  C0B8  F1A7         	movff	?___fttol,sprintf@val
  4351  00099C  C0B9  F1A8         	movff	?___fttol+1,sprintf@val+1
  4352  0009A0  C0BA  F1A9         	movff	?___fttol+2,sprintf@val+2
  4353  0009A4  C0BB  F1AA         	movff	?___fttol+3,sprintf@val+3
  4354                           
  4355                           ;doprnt.c: 1228: while(c--) {
  4356  0009A8  D07A               	goto	l6623
  4357  0009AA                     l6613:
  4358                           
  4359                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  4360  0009AA  C1A7  F08E         	movff	sprintf@val,___lldiv@dividend
  4361  0009AE  C1A8  F08F         	movff	sprintf@val+1,___lldiv@dividend+1
  4362  0009B2  C1A9  F090         	movff	sprintf@val+2,___lldiv@dividend+2
  4363  0009B6  C1AA  F091         	movff	sprintf@val+3,___lldiv@dividend+3
  4364  0009BA  0101               	movlb	1	; () banked
  4365  0009BC  51B6               	movf	sprintf@c& (0+255),w,b
  4366  0009BE  0D04               	mullw	4
  4367  0009C0  0E01               	movlw	low _dpowers
  4368  0009C2  24F3               	addwf	prodl,w,c
  4369  0009C4  6EF6               	movwf	tblptrl,c
  4370  0009C6  0EFF               	movlw	high _dpowers
  4371  0009C8  20F4               	addwfc	prodh,w,c
  4372  0009CA  6EF7               	movwf	tblptrh,c
  4373  0009CC                     	if	1	;There are 3 active tblptr bytes
  4374  0009CC  6AF8               	clrf	tblptru,c
  4375  0009CE  0E00               	movlw	low (__mediumconst shr (0+16))
  4376  0009D0  22F8               	addwfc	tblptru,f,c
  4377  0009D2                     	endif
  4378  0009D2  0009               	tblrd		*+
  4379  0009D4  CFF5 F092          	movff	tablat,___lldiv@divisor
  4380  0009D8  0009               	tblrd		*+
  4381  0009DA  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  4382  0009DE  0009               	tblrd		*+
  4383  0009E0  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  4384  0009E4  000A               	tblrd		*-
  4385  0009E6  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  4386  0009EA  EC1D  F023         	call	___lldiv	;wreg free
  4387  0009EE  C08E  F1A3         	movff	?___lldiv,sprintf@tmpval
  4388  0009F2  C08F  F1A4         	movff	?___lldiv+1,sprintf@tmpval+1
  4389  0009F6  C090  F1A5         	movff	?___lldiv+2,sprintf@tmpval+2
  4390  0009FA  C091  F1A6         	movff	?___lldiv+3,sprintf@tmpval+3
  4391                           
  4392                           ;doprnt.c: 1230: tmpval.vd %= 10;
  4393  0009FE  C1A3  F09B         	movff	sprintf@tmpval,___llmod@dividend
  4394  000A02  C1A4  F09C         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4395  000A06  C1A5  F09D         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4396  000A0A  C1A6  F09E         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4397  000A0E  0E0A               	movlw	10
  4398  000A10  0100               	movlb	0	; () banked
  4399  000A12  6F9F               	movwf	___llmod@divisor& (0+255),b
  4400  000A14  0E00               	movlw	0
  4401  000A16  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
  4402  000A18  0E00               	movlw	0
  4403  000A1A  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
  4404  000A1C  0E00               	movlw	0
  4405  000A1E  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
  4406  000A20  EC23  F024         	call	___llmod	;wreg free
  4407  000A24  C09B  F1A3         	movff	?___llmod,sprintf@tmpval
  4408  000A28  C09C  F1A4         	movff	?___llmod+1,sprintf@tmpval+1
  4409  000A2C  C09D  F1A5         	movff	?___llmod+2,sprintf@tmpval+2
  4410  000A30  C09E  F1A6         	movff	?___llmod+3,sprintf@tmpval+3
  4411                           
  4412                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  4413  000A34  0101               	movlb	1	; () banked
  4414  000A36  51A3               	movf	sprintf@tmpval& (0+255),w,b
  4415  000A38  0F30               	addlw	48
  4416  000A3A  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4417  000A3E  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4418  000A42  6EDF               	movwf	indf2,c
  4419                           
  4420                           ; BSR set to: 1
  4421  000A44  0100               	movlb	0	; () banked
  4422  000A46  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4423  000A48  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;doprnt.c: 1232: val %= dpowers[c];
  4427  000A4A  C1A7  F09B         	movff	sprintf@val,___llmod@dividend
  4428  000A4E  C1A8  F09C         	movff	sprintf@val+1,___llmod@dividend+1
  4429  000A52  C1A9  F09D         	movff	sprintf@val+2,___llmod@dividend+2
  4430  000A56  C1AA  F09E         	movff	sprintf@val+3,___llmod@dividend+3
  4431  000A5A  0101               	movlb	1	; () banked
  4432  000A5C  51B6               	movf	sprintf@c& (0+255),w,b
  4433  000A5E  0D04               	mullw	4
  4434  000A60  0E01               	movlw	low _dpowers
  4435  000A62  24F3               	addwf	prodl,w,c
  4436  000A64  6EF6               	movwf	tblptrl,c
  4437  000A66  0EFF               	movlw	high _dpowers
  4438  000A68  20F4               	addwfc	prodh,w,c
  4439  000A6A  6EF7               	movwf	tblptrh,c
  4440  000A6C                     	if	1	;There are 3 active tblptr bytes
  4441  000A6C  6AF8               	clrf	tblptru,c
  4442  000A6E  0E00               	movlw	low (__mediumconst shr (0+16))
  4443  000A70  22F8               	addwfc	tblptru,f,c
  4444  000A72                     	endif
  4445  000A72  0009               	tblrd		*+
  4446  000A74  CFF5 F09F          	movff	tablat,___llmod@divisor
  4447  000A78  0009               	tblrd		*+
  4448  000A7A  CFF5 F0A0          	movff	tablat,___llmod@divisor+1
  4449  000A7E  0009               	tblrd		*+
  4450  000A80  CFF5 F0A1          	movff	tablat,___llmod@divisor+2
  4451  000A84  000A               	tblrd		*-
  4452  000A86  CFF5 F0A2          	movff	tablat,___llmod@divisor+3
  4453  000A8A  EC23  F024         	call	___llmod	;wreg free
  4454  000A8E  C09B  F1A7         	movff	?___llmod,sprintf@val
  4455  000A92  C09C  F1A8         	movff	?___llmod+1,sprintf@val+1
  4456  000A96  C09D  F1A9         	movff	?___llmod+2,sprintf@val+2
  4457  000A9A  C09E  F1AA         	movff	?___llmod+3,sprintf@val+3
  4458  000A9E                     l6623:
  4459  000A9E  0101               	movlb	1	; () banked
  4460  000AA0  07B6               	decf	sprintf@c& (0+255),f,b
  4461  000AA2  0101               	movlb	1	; () banked
  4462  000AA4  29B6               	incf	sprintf@c& (0+255),w,b
  4463  000AA6  B4D8               	btfsc	status,2,c
  4464  000AA8  D00E               	goto	l6631
  4465  000AAA  D77F               	goto	l6613
  4466  000AAC                     l6625:
  4467                           
  4468                           ; BSR set to: 1
  4469                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4470  000AAC  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4471  000AB0  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4472  000AB4  0E30               	movlw	48
  4473  000AB6  6EDF               	movwf	indf2,c
  4474                           
  4475                           ; BSR set to: 1
  4476  000AB8  0100               	movlb	0	; () banked
  4477  000ABA  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4478  000ABC  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;doprnt.c: 1237: prec--;
  4482  000ABE  0101               	movlb	1	; () banked
  4483  000AC0  07B4               	decf	sprintf@prec& (0+255),f,b
  4484  000AC2  A0D8               	btfss	status,0,c
  4485  000AC4  07B5               	decf	(sprintf@prec+1)& (0+255),f,b
  4486  000AC6                     l6631:
  4487                           
  4488                           ; BSR set to: 1
  4489  000AC6  0101               	movlb	1	; () banked
  4490  000AC8  51B4               	movf	sprintf@prec& (0+255),w,b
  4491  000ACA  0101               	movlb	1	; () banked
  4492  000ACC  11B5               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4493  000ACE  B4D8               	btfsc	status,2,c
  4494  000AD0  D19F               	goto	l6729
  4495  000AD2  D7EC               	goto	l6625
  4496  000AD4                     l6633:
  4497                           
  4498                           ; BSR set to: 1
  4499                           ;doprnt.c: 1246: }
  4500                           ;doprnt.c: 1253: {
  4501                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  4502  000AD4  C19F  FFD9         	movff	sprintf@ap,fsr2l
  4503  000AD8  C1A0  FFDA         	movff	sprintf@ap+1,fsr2h
  4504  000ADC  CFDE F1A7          	movff	postinc2,sprintf@val
  4505  000AE0  CFDD F1A8          	movff	postdec2,sprintf@val+1
  4506  000AE4  0101               	movlb	1	; () banked
  4507  000AE6  0E00               	movlw	0
  4508  000AE8  BFA8               	btfsc	(sprintf@val+1)& (0+255),7,b
  4509  000AEA  0EFF               	movlw	-1
  4510  000AEC  6FA9               	movwf	(sprintf@val+2)& (0+255),b
  4511  000AEE  6FAA               	movwf	(sprintf@val+3)& (0+255),b
  4512                           
  4513                           ; BSR set to: 1
  4514  000AF0  0E02               	movlw	2
  4515  000AF2  0101               	movlb	1	; () banked
  4516  000AF4  279F               	addwf	sprintf@ap& (0+255),f,b
  4517  000AF6  0E00               	movlw	0
  4518  000AF8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4519                           
  4520                           ; BSR set to: 1
  4521                           ;doprnt.c: 1261: if((long)val < 0) {
  4522  000AFA  0101               	movlb	1	; () banked
  4523  000AFC  AFAA               	btfss	(sprintf@val+3)& (0+255),7,b
  4524  000AFE  D00C               	goto	l6643
  4525                           
  4526                           ; BSR set to: 1
  4527                           ;doprnt.c: 1262: flag |= 0x03;
  4528  000B00  0E03               	movlw	3
  4529  000B02  0101               	movlb	1	; () banked
  4530  000B04  13AD               	iorwf	sprintf@flag& (0+255),f,b
  4531                           
  4532                           ; BSR set to: 1
  4533                           ;doprnt.c: 1263: val = -val;
  4534  000B06  0101               	movlb	1	; () banked
  4535  000B08  1FAA               	comf	(sprintf@val+3)& (0+255),f,b
  4536  000B0A  1FA9               	comf	(sprintf@val+2)& (0+255),f,b
  4537  000B0C  1FA8               	comf	(sprintf@val+1)& (0+255),f,b
  4538  000B0E  6DA7               	negf	sprintf@val& (0+255),b
  4539  000B10  0E00               	movlw	0
  4540  000B12  23A8               	addwfc	(sprintf@val+1)& (0+255),f,b
  4541  000B14  23A9               	addwfc	(sprintf@val+2)& (0+255),f,b
  4542  000B16  23AA               	addwfc	(sprintf@val+3)& (0+255),f,b
  4543  000B18                     l6643:
  4544                           
  4545                           ; BSR set to: 1
  4546                           ;doprnt.c: 1264: }
  4547                           ;doprnt.c: 1266: }
  4548                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4549  000B18  0101               	movlb	1	; () banked
  4550  000B1A  51B4               	movf	sprintf@prec& (0+255),w,b
  4551  000B1C  0101               	movlb	1	; () banked
  4552  000B1E  11B5               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4553  000B20  A4D8               	btfss	status,2,c
  4554  000B22  D00D               	goto	l6649
  4555                           
  4556                           ; BSR set to: 1
  4557  000B24  0101               	movlb	1	; () banked
  4558  000B26  51A7               	movf	sprintf@val& (0+255),w,b
  4559  000B28  0101               	movlb	1	; () banked
  4560  000B2A  11A8               	iorwf	(sprintf@val+1)& (0+255),w,b
  4561  000B2C  0101               	movlb	1	; () banked
  4562  000B2E  11A9               	iorwf	(sprintf@val+2)& (0+255),w,b
  4563  000B30  0101               	movlb	1	; () banked
  4564  000B32  11AA               	iorwf	(sprintf@val+3)& (0+255),w,b
  4565  000B34  A4D8               	btfss	status,2,c
  4566  000B36  D003               	goto	l6649
  4567                           
  4568                           ; BSR set to: 1
  4569                           ;doprnt.c: 1291: prec++;
  4570  000B38  0101               	movlb	1	; () banked
  4571  000B3A  4BB4               	infsnz	sprintf@prec& (0+255),f,b
  4572  000B3C  2BB5               	incf	(sprintf@prec+1)& (0+255),f,b
  4573  000B3E                     l6649:
  4574                           
  4575                           ; BSR set to: 1
  4576                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4577  000B3E  0E01               	movlw	1
  4578  000B40  0101               	movlb	1	; () banked
  4579  000B42  6FB6               	movwf	sprintf@c& (0+255),b
  4580  000B44                     l6651:
  4581                           
  4582                           ; BSR set to: 1
  4583  000B44  0E0A               	movlw	10
  4584  000B46  0101               	movlb	1	; () banked
  4585  000B48  19B6               	xorwf	sprintf@c& (0+255),w,b
  4586  000B4A  B4D8               	btfsc	status,2,c
  4587  000B4C  D021               	goto	l6663
  4588                           
  4589                           ; BSR set to: 1
  4590                           ;doprnt.c: 1306: if(val < dpowers[c])
  4591                           
  4592                           ; BSR set to: 1
  4593                           
  4594                           ; BSR set to: 1
  4595  000B4E  0101               	movlb	1	; () banked
  4596  000B50  51B6               	movf	sprintf@c& (0+255),w,b
  4597  000B52  0D04               	mullw	4
  4598  000B54  0E01               	movlw	low _dpowers
  4599  000B56  24F3               	addwf	prodl,w,c
  4600  000B58  6EF6               	movwf	tblptrl,c
  4601  000B5A  0EFF               	movlw	high _dpowers
  4602  000B5C  20F4               	addwfc	prodh,w,c
  4603  000B5E  6EF7               	movwf	tblptrh,c
  4604  000B60                     	if	1	;There are 3 active tblptr bytes
  4605  000B60  6AF8               	clrf	tblptru,c
  4606  000B62  0E00               	movlw	low (__mediumconst shr (0+16))
  4607  000B64  22F8               	addwfc	tblptru,f,c
  4608  000B66                     	endif
  4609  000B66  0009               	tblrd		*+
  4610  000B68  50F5               	movf	tablat,w,c
  4611  000B6A  0101               	movlb	1	; () banked
  4612  000B6C  5DA7               	subwf	sprintf@val& (0+255),w,b
  4613  000B6E  0009               	tblrd		*+
  4614  000B70  50F5               	movf	tablat,w,c
  4615  000B72  0101               	movlb	1	; () banked
  4616  000B74  59A8               	subwfb	(sprintf@val+1)& (0+255),w,b
  4617  000B76  0009               	tblrd		*+
  4618  000B78  50F5               	movf	tablat,w,c
  4619  000B7A  0101               	movlb	1	; () banked
  4620  000B7C  59A9               	subwfb	(sprintf@val+2)& (0+255),w,b
  4621  000B7E  0009               	tblrd		*+
  4622  000B80  50F5               	movf	tablat,w,c
  4623  000B82  0101               	movlb	1	; () banked
  4624  000B84  59AA               	subwfb	(sprintf@val+3)& (0+255),w,b
  4625  000B86  A0D8               	btfss	status,0,c
  4626  000B88  D003               	goto	l6663
  4627                           
  4628                           ; BSR set to: 1
  4629                           
  4630                           ; BSR set to: 1
  4631                           
  4632                           ; BSR set to: 1
  4633                           ;doprnt.c: 1307: break;
  4634  000B8A  0101               	movlb	1	; () banked
  4635  000B8C  2BB6               	incf	sprintf@c& (0+255),f,b
  4636  000B8E  D7DA               	goto	l6651
  4637  000B90                     l6663:
  4638                           
  4639                           ; BSR set to: 1
  4640                           ;doprnt.c: 1339: if(c < prec)
  4641  000B90  0E80               	movlw	128
  4642  000B92  0101               	movlb	1	; () banked
  4643  000B94  BFB6               	btfsc	sprintf@c& (0+255),7,b
  4644  000B96  0E7F               	movlw	127
  4645  000B98  0101               	movlb	1	; () banked
  4646  000B9A  6F94               	movwf	??_sprintf& (0+255),b
  4647  000B9C  0101               	movlb	1	; () banked
  4648  000B9E  51B4               	movf	sprintf@prec& (0+255),w,b
  4649  000BA0  0101               	movlb	1	; () banked
  4650  000BA2  5DB6               	subwf	sprintf@c& (0+255),w,b
  4651  000BA4  0101               	movlb	1	; () banked
  4652  000BA6  51B5               	movf	(sprintf@prec+1)& (0+255),w,b
  4653  000BA8  0A80               	xorlw	128
  4654  000BAA  0101               	movlb	1	; () banked
  4655  000BAC  5994               	subwfb	??_sprintf& (0+255),w,b
  4656  000BAE  B0D8               	btfsc	status,0,c
  4657  000BB0  D003               	goto	l6667
  4658                           
  4659                           ; BSR set to: 1
  4660                           ;doprnt.c: 1340: c = prec;
  4661  000BB2  C1B4  F1B6         	movff	sprintf@prec,sprintf@c
  4662  000BB6  D018               	goto	l6671
  4663  000BB8                     l6667:
  4664                           
  4665                           ; BSR set to: 1
  4666                           ;doprnt.c: 1341: else if(prec < c)
  4667  000BB8  0101               	movlb	1	; () banked
  4668  000BBA  51B5               	movf	(sprintf@prec+1)& (0+255),w,b
  4669  000BBC  0A80               	xorlw	128
  4670  000BBE  0101               	movlb	1	; () banked
  4671  000BC0  6F94               	movwf	??_sprintf& (0+255),b
  4672  000BC2  0101               	movlb	1	; () banked
  4673  000BC4  51B6               	movf	sprintf@c& (0+255),w,b
  4674  000BC6  0101               	movlb	1	; () banked
  4675  000BC8  5DB4               	subwf	sprintf@prec& (0+255),w,b
  4676  000BCA  0E80               	movlw	128
  4677  000BCC  0101               	movlb	1	; () banked
  4678  000BCE  BFB6               	btfsc	sprintf@c& (0+255),7,b
  4679  000BD0  0E7F               	movlw	127
  4680  000BD2  0101               	movlb	1	; () banked
  4681  000BD4  5994               	subwfb	??_sprintf& (0+255),w,b
  4682  000BD6  B0D8               	btfsc	status,0,c
  4683  000BD8  D007               	goto	l6671
  4684                           
  4685                           ; BSR set to: 1
  4686                           ;doprnt.c: 1342: prec = c;
  4687  000BDA  0101               	movlb	1	; () banked
  4688  000BDC  51B6               	movf	sprintf@c& (0+255),w,b
  4689  000BDE  0101               	movlb	1	; () banked
  4690  000BE0  6FB4               	movwf	sprintf@prec& (0+255),b
  4691  000BE2  6BB5               	clrf	(sprintf@prec+1)& (0+255),b
  4692  000BE4  BFB4               	btfsc	sprintf@prec& (0+255),7,b
  4693  000BE6  07B5               	decf	(sprintf@prec+1)& (0+255),f,b
  4694  000BE8                     l6671:
  4695                           
  4696                           ; BSR set to: 1
  4697                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4698  000BE8  0101               	movlb	1	; () banked
  4699  000BEA  51B2               	movf	sprintf@width& (0+255),w,b
  4700  000BEC  0101               	movlb	1	; () banked
  4701  000BEE  11B3               	iorwf	(sprintf@width+1)& (0+255),w,b
  4702  000BF0  B4D8               	btfsc	status,2,c
  4703  000BF2  D014               	goto	l6677
  4704                           
  4705                           ; BSR set to: 1
  4706  000BF4  0E03               	movlw	3
  4707  000BF6  0101               	movlb	1	; () banked
  4708  000BF8  15AD               	andwf	sprintf@flag& (0+255),w,b
  4709  000BFA  0101               	movlb	1	; () banked
  4710  000BFC  6F94               	movwf	??_sprintf& (0+255),b
  4711  000BFE  0E00               	movlw	0
  4712  000C00  0101               	movlb	1	; () banked
  4713  000C02  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  4714  000C04  0101               	movlb	1	; () banked
  4715  000C06  6F95               	movwf	(??_sprintf+1)& (0+255),b
  4716  000C08  0101               	movlb	1	; () banked
  4717  000C0A  5194               	movf	??_sprintf& (0+255),w,b
  4718  000C0C  0101               	movlb	1	; () banked
  4719  000C0E  1195               	iorwf	(??_sprintf+1)& (0+255),w,b
  4720  000C10  B4D8               	btfsc	status,2,c
  4721  000C12  D004               	goto	l6677
  4722                           
  4723                           ; BSR set to: 1
  4724                           ;doprnt.c: 1346: width--;
  4725  000C14  0101               	movlb	1	; () banked
  4726  000C16  07B2               	decf	sprintf@width& (0+255),f,b
  4727  000C18  A0D8               	btfss	status,0,c
  4728  000C1A  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  4729  000C1C                     l6677:
  4730                           
  4731                           ; BSR set to: 1
  4732                           ;doprnt.c: 1348: if(flag & 0x4000) {
  4733  000C1C  0101               	movlb	1	; () banked
  4734  000C1E  ADAE               	btfss	(sprintf@flag+1)& (0+255),6,b
  4735  000C20  D01E               	goto	l6685
  4736                           
  4737                           ; BSR set to: 1
  4738                           ;doprnt.c: 1349: if(width > prec)
  4739  000C22  0101               	movlb	1	; () banked
  4740  000C24  51B2               	movf	sprintf@width& (0+255),w,b
  4741  000C26  0101               	movlb	1	; () banked
  4742  000C28  5DB4               	subwf	sprintf@prec& (0+255),w,b
  4743  000C2A  0101               	movlb	1	; () banked
  4744  000C2C  51B5               	movf	(sprintf@prec+1)& (0+255),w,b
  4745  000C2E  0A80               	xorlw	128
  4746  000C30  0101               	movlb	1	; () banked
  4747  000C32  6F94               	movwf	??_sprintf& (0+255),b
  4748  000C34  0101               	movlb	1	; () banked
  4749  000C36  51B3               	movf	(sprintf@width+1)& (0+255),w,b
  4750  000C38  0A80               	xorlw	128
  4751  000C3A  0101               	movlb	1	; () banked
  4752  000C3C  5994               	subwfb	??_sprintf& (0+255),w,b
  4753  000C3E  B0D8               	btfsc	status,0,c
  4754  000C40  D009               	goto	l6683
  4755                           
  4756                           ; BSR set to: 1
  4757                           ;doprnt.c: 1350: width -= prec;
  4758  000C42  0101               	movlb	1	; () banked
  4759  000C44  51B4               	movf	sprintf@prec& (0+255),w,b
  4760  000C46  0101               	movlb	1	; () banked
  4761  000C48  5FB2               	subwf	sprintf@width& (0+255),f,b
  4762  000C4A  0101               	movlb	1	; () banked
  4763  000C4C  51B5               	movf	(sprintf@prec+1)& (0+255),w,b
  4764  000C4E  0101               	movlb	1	; () banked
  4765  000C50  5BB3               	subwfb	(sprintf@width+1)& (0+255),f,b
  4766  000C52  D005               	goto	l6685
  4767  000C54                     l6683:
  4768                           
  4769                           ; BSR set to: 1
  4770                           ;doprnt.c: 1351: else
  4771                           ;doprnt.c: 1352: width = 0;
  4772  000C54  0E00               	movlw	0
  4773  000C56  0101               	movlb	1	; () banked
  4774  000C58  6FB3               	movwf	(sprintf@width+1)& (0+255),b
  4775  000C5A  0E00               	movlw	0
  4776  000C5C  6FB2               	movwf	sprintf@width& (0+255),b
  4777  000C5E                     l6685:
  4778                           
  4779                           ; BSR set to: 1
  4780                           ;doprnt.c: 1353: }
  4781                           ;doprnt.c: 1381: if(width > c)
  4782  000C5E  0E80               	movlw	128
  4783  000C60  0101               	movlb	1	; () banked
  4784  000C62  BFB6               	btfsc	sprintf@c& (0+255),7,b
  4785  000C64  0E7F               	movlw	127
  4786  000C66  0101               	movlb	1	; () banked
  4787  000C68  6F94               	movwf	??_sprintf& (0+255),b
  4788  000C6A  0101               	movlb	1	; () banked
  4789  000C6C  51B2               	movf	sprintf@width& (0+255),w,b
  4790  000C6E  0101               	movlb	1	; () banked
  4791  000C70  5DB6               	subwf	sprintf@c& (0+255),w,b
  4792  000C72  0101               	movlb	1	; () banked
  4793  000C74  51B3               	movf	(sprintf@width+1)& (0+255),w,b
  4794  000C76  0A80               	xorlw	128
  4795  000C78  0101               	movlb	1	; () banked
  4796  000C7A  5994               	subwfb	??_sprintf& (0+255),w,b
  4797  000C7C  B0D8               	btfsc	status,0,c
  4798  000C7E  D00B               	goto	l6689
  4799                           
  4800                           ; BSR set to: 1
  4801                           ;doprnt.c: 1382: width -= c;
  4802  000C80  0101               	movlb	1	; () banked
  4803  000C82  51B6               	movf	sprintf@c& (0+255),w,b
  4804  000C84  0101               	movlb	1	; () banked
  4805  000C86  5FB2               	subwf	sprintf@width& (0+255),f,b
  4806  000C88  0E00               	movlw	0
  4807  000C8A  0101               	movlb	1	; () banked
  4808  000C8C  BFB6               	btfsc	sprintf@c& (0+255),7,b
  4809  000C8E  0EFF               	movlw	255
  4810  000C90  0101               	movlb	1	; () banked
  4811  000C92  5BB3               	subwfb	(sprintf@width+1)& (0+255),f,b
  4812  000C94  D005               	goto	l6691
  4813  000C96                     l6689:
  4814                           
  4815                           ; BSR set to: 1
  4816                           ;doprnt.c: 1383: else
  4817                           ;doprnt.c: 1384: width = 0;
  4818  000C96  0E00               	movlw	0
  4819  000C98  0101               	movlb	1	; () banked
  4820  000C9A  6FB3               	movwf	(sprintf@width+1)& (0+255),b
  4821  000C9C  0E00               	movlw	0
  4822  000C9E  6FB2               	movwf	sprintf@width& (0+255),b
  4823  000CA0                     l6691:
  4824                           
  4825                           ; BSR set to: 1
  4826                           ;doprnt.c: 1387: if(flag & 0x04) {
  4827  000CA0  0101               	movlb	1	; () banked
  4828  000CA2  A5AD               	btfss	sprintf@flag& (0+255),2,b
  4829  000CA4  D02D               	goto	l6707
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;doprnt.c: 1392: if(flag & 0x03)
  4833  000CA6  0E03               	movlw	3
  4834  000CA8  0101               	movlb	1	; () banked
  4835  000CAA  15AD               	andwf	sprintf@flag& (0+255),w,b
  4836  000CAC  0101               	movlb	1	; () banked
  4837  000CAE  6F94               	movwf	??_sprintf& (0+255),b
  4838  000CB0  0E00               	movlw	0
  4839  000CB2  0101               	movlb	1	; () banked
  4840  000CB4  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  4841  000CB6  0101               	movlb	1	; () banked
  4842  000CB8  6F95               	movwf	(??_sprintf+1)& (0+255),b
  4843  000CBA  0101               	movlb	1	; () banked
  4844  000CBC  5194               	movf	??_sprintf& (0+255),w,b
  4845  000CBE  0101               	movlb	1	; () banked
  4846  000CC0  1195               	iorwf	(??_sprintf+1)& (0+255),w,b
  4847  000CC2  B4D8               	btfsc	status,2,c
  4848  000CC4  D009               	goto	l6699
  4849                           
  4850                           ; BSR set to: 1
  4851                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4852  000CC6  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4853  000CCA  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4854  000CCE  0E2D               	movlw	45
  4855  000CD0  6EDF               	movwf	indf2,c
  4856                           
  4857                           ; BSR set to: 1
  4858  000CD2  0100               	movlb	0	; () banked
  4859  000CD4  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4860  000CD6  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4861  000CD8                     l6699:
  4862                           
  4863                           ;doprnt.c: 1415: if(width)
  4864  000CD8  0101               	movlb	1	; () banked
  4865  000CDA  51B2               	movf	sprintf@width& (0+255),w,b
  4866  000CDC  0101               	movlb	1	; () banked
  4867  000CDE  11B3               	iorwf	(sprintf@width+1)& (0+255),w,b
  4868  000CE0  B4D8               	btfsc	status,2,c
  4869  000CE2  D08B               	goto	l6727
  4870                           
  4871                           ; BSR set to: 1
  4872                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4873                           
  4874                           ; BSR set to: 1
  4875                           
  4876                           ;doprnt.c: 1416: do
  4877  000CE4  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4878  000CE8  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4879  000CEC  0E30               	movlw	48
  4880  000CEE  6EDF               	movwf	indf2,c
  4881                           
  4882                           ; BSR set to: 1
  4883  000CF0  0100               	movlb	0	; () banked
  4884  000CF2  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4885  000CF4  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;doprnt.c: 1418: while(--width);
  4889  000CF6  0101               	movlb	1	; () banked
  4890  000CF8  07B2               	decf	sprintf@width& (0+255),f,b
  4891  000CFA  A0D8               	btfss	status,0,c
  4892  000CFC  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  4893  000CFE  D7EC               	goto	l6699
  4894  000D00                     l6707:
  4895                           
  4896                           ; BSR set to: 1
  4897                           ;doprnt.c: 1422: {
  4898                           ;doprnt.c: 1424: if(width
  4899                           ;doprnt.c: 1428: )
  4900  000D00  0101               	movlb	1	; () banked
  4901  000D02  51B2               	movf	sprintf@width& (0+255),w,b
  4902  000D04  0101               	movlb	1	; () banked
  4903  000D06  11B3               	iorwf	(sprintf@width+1)& (0+255),w,b
  4904  000D08  B4D8               	btfsc	status,2,c
  4905  000D0A  D013               	goto	l6715
  4906  000D0C                     l6709:
  4907                           
  4908                           ; BSR set to: 1
  4909                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4910  000D0C  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4911  000D10  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4912  000D14  0E20               	movlw	32
  4913  000D16  6EDF               	movwf	indf2,c
  4914                           
  4915                           ; BSR set to: 1
  4916  000D18  0100               	movlb	0	; () banked
  4917  000D1A  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  4918  000D1C  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;doprnt.c: 1431: while(--width);
  4922  000D1E  0101               	movlb	1	; () banked
  4923  000D20  07B2               	decf	sprintf@width& (0+255),f,b
  4924  000D22  A0D8               	btfss	status,0,c
  4925  000D24  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  4926  000D26  0101               	movlb	1	; () banked
  4927  000D28  51B2               	movf	sprintf@width& (0+255),w,b
  4928  000D2A  0101               	movlb	1	; () banked
  4929  000D2C  11B3               	iorwf	(sprintf@width+1)& (0+255),w,b
  4930  000D2E  A4D8               	btfss	status,2,c
  4931  000D30  D7ED               	goto	l6709
  4932  000D32                     l6715:
  4933                           
  4934                           ; BSR set to: 1
  4935                           ;doprnt.c: 1438: if(flag & 0x03)
  4936  000D32  0E03               	movlw	3
  4937  000D34  0101               	movlb	1	; () banked
  4938  000D36  15AD               	andwf	sprintf@flag& (0+255),w,b
  4939  000D38  0101               	movlb	1	; () banked
  4940  000D3A  6F94               	movwf	??_sprintf& (0+255),b
  4941  000D3C  0E00               	movlw	0
  4942  000D3E  0101               	movlb	1	; () banked
  4943  000D40  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  4944  000D42  0101               	movlb	1	; () banked
  4945  000D44  6F95               	movwf	(??_sprintf+1)& (0+255),b
  4946  000D46  0101               	movlb	1	; () banked
  4947  000D48  5194               	movf	??_sprintf& (0+255),w,b
  4948  000D4A  0101               	movlb	1	; () banked
  4949  000D4C  1195               	iorwf	(??_sprintf+1)& (0+255),w,b
  4950  000D4E  B4D8               	btfsc	status,2,c
  4951  000D50  D054               	goto	l6727
  4952                           
  4953                           ; BSR set to: 1
  4954                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4955  000D52  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  4956  000D56  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  4957  000D5A  0E2D               	movlw	45
  4958  000D5C  6EDF               	movwf	indf2,c
  4959  000D5E  D04A               	goto	l6725
  4960  000D60                     l6721:
  4961                           
  4962                           ;doprnt.c: 1478: {
  4963                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4964  000D60  C1B4  F194         	movff	sprintf@prec,??_sprintf
  4965  000D64  C1B5  F195         	movff	sprintf@prec+1,??_sprintf+1
  4966  000D68  0101               	movlb	1	; () banked
  4967  000D6A  90D8               	bcf	status,0,c
  4968  000D6C  3794               	rlcf	??_sprintf& (0+255),f,b
  4969  000D6E  3795               	rlcf	(??_sprintf+1)& (0+255),f,b
  4970  000D70  0101               	movlb	1	; () banked
  4971  000D72  90D8               	bcf	status,0,c
  4972  000D74  3794               	rlcf	??_sprintf& (0+255),f,b
  4973  000D76  3795               	rlcf	(??_sprintf+1)& (0+255),f,b
  4974  000D78  0E01               	movlw	low _dpowers
  4975  000D7A  0101               	movlb	1	; () banked
  4976  000D7C  2594               	addwf	??_sprintf& (0+255),w,b
  4977  000D7E  6EF6               	movwf	tblptrl,c
  4978  000D80  0EFF               	movlw	high _dpowers
  4979  000D82  2195               	addwfc	(??_sprintf+1)& (0+255),w,b
  4980  000D84  6EF7               	movwf	tblptrh,c
  4981  000D86                     	if	1	;There are 3 active tblptr bytes
  4982  000D86  6AF8               	clrf	tblptru,c
  4983  000D88  0E00               	movlw	low (__mediumconst shr (0+16))
  4984  000D8A  22F8               	addwfc	tblptru,f,c
  4985  000D8C                     	endif
  4986  000D8C  0009               	tblrd		*+
  4987  000D8E  CFF5 F092          	movff	tablat,___lldiv@divisor
  4988  000D92  0009               	tblrd		*+
  4989  000D94  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  4990  000D98  0009               	tblrd		*+
  4991  000D9A  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  4992  000D9E  000A               	tblrd		*-
  4993  000DA0  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  4994  000DA4  C1A7  F08E         	movff	sprintf@val,___lldiv@dividend
  4995  000DA8  C1A8  F08F         	movff	sprintf@val+1,___lldiv@dividend+1
  4996  000DAC  C1A9  F090         	movff	sprintf@val+2,___lldiv@dividend+2
  4997  000DB0  C1AA  F091         	movff	sprintf@val+3,___lldiv@dividend+3
  4998  000DB4  EC1D  F023         	call	___lldiv	;wreg free
  4999  000DB8  C08E  F09B         	movff	?___lldiv,___llmod@dividend
  5000  000DBC  C08F  F09C         	movff	?___lldiv+1,___llmod@dividend+1
  5001  000DC0  C090  F09D         	movff	?___lldiv+2,___llmod@dividend+2
  5002  000DC4  C091  F09E         	movff	?___lldiv+3,___llmod@dividend+3
  5003  000DC8  0E0A               	movlw	10
  5004  000DCA  0100               	movlb	0	; () banked
  5005  000DCC  6F9F               	movwf	___llmod@divisor& (0+255),b
  5006  000DCE  0E00               	movlw	0
  5007  000DD0  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
  5008  000DD2  0E00               	movlw	0
  5009  000DD4  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
  5010  000DD6  0E00               	movlw	0
  5011  000DD8  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
  5012  000DDA  EC23  F024         	call	___llmod	;wreg free
  5013  000DDE  0100               	movlb	0	; () banked
  5014  000DE0  519B               	movf	?___llmod& (0+255),w,b
  5015  000DE2  0F30               	addlw	48
  5016  000DE4  0101               	movlb	1	; () banked
  5017  000DE6  6FB6               	movwf	sprintf@c& (0+255),b
  5018                           
  5019                           ; BSR set to: 1
  5020                           ;doprnt.c: 1523: }
  5021                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5022  000DE8  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  5023  000DEC  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  5024  000DF0  C1B6  FFDF         	movff	sprintf@c,indf2
  5025  000DF4                     l6725:
  5026                           
  5027                           ; BSR set to: 1
  5028  000DF4  0100               	movlb	0	; () banked
  5029  000DF6  4BCD               	infsnz	sprintf@sp& (0+255),f,b
  5030  000DF8  2BCE               	incf	(sprintf@sp+1)& (0+255),f,b
  5031  000DFA                     l6727:
  5032  000DFA  0101               	movlb	1	; () banked
  5033  000DFC  07B4               	decf	sprintf@prec& (0+255),f,b
  5034  000DFE  A0D8               	btfss	status,0,c
  5035  000E00  07B5               	decf	(sprintf@prec+1)& (0+255),f,b
  5036  000E02  0101               	movlb	1	; () banked
  5037  000E04  29B4               	incf	sprintf@prec& (0+255),w,b
  5038  000E06  E1AC               	bnz	l6721
  5039  000E08  0101               	movlb	1	; () banked
  5040  000E0A  29B5               	incf	(sprintf@prec+1)& (0+255),w,b
  5041  000E0C  A4D8               	btfss	status,2,c
  5042  000E0E  D7A8               	goto	l6721
  5043  000E10                     l6729:
  5044  000E10  C0CF  FFF6         	movff	sprintf@f,tblptrl
  5045  000E14  C0D0  FFF7         	movff	sprintf@f+1,tblptrh
  5046  000E18  0100               	movlb	0	; () banked
  5047  000E1A  4BCF               	infsnz	sprintf@f& (0+255),f,b
  5048  000E1C  2BD0               	incf	(sprintf@f+1)& (0+255),f,b
  5049  000E1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5050  000E1E  6AF8               	clrf	tblptru,c
  5051  000E20                     	endif
  5052  000E20                     	if	0	;tblptru may be non-zero
  5053  000E20                     	endif
  5054  000E20  0008               	tblrd		*
  5055  000E22  CFF5 F1B6          	movff	tablat,sprintf@c
  5056  000E26  0101               	movlb	1	; () banked
  5057  000E28  51B6               	movf	sprintf@c& (0+255),w,b
  5058  000E2A  A4D8               	btfss	status,2,c
  5059  000E2C  EF15  F000         	goto	l6365
  5060  000E30                     l6731:
  5061                           
  5062                           ; BSR set to: 1
  5063                           ;doprnt.c: 1538: *sp = 0;
  5064  000E30  C0CD  FFD9         	movff	sprintf@sp,fsr2l
  5065  000E34  C0CE  FFDA         	movff	sprintf@sp+1,fsr2h
  5066  000E38  0E00               	movlw	0
  5067  000E3A  6EDF               	movwf	indf2,c
  5068  000E3C  0012               	return	
  5069  000E3E                     __end_of_sprintf:
  5070                           	opt stack 0
  5071                           tblptru	equ	0xFF8
  5072                           tblptrh	equ	0xFF7
  5073                           tblptrl	equ	0xFF6
  5074                           tablat	equ	0xFF5
  5075                           prodh	equ	0xFF4
  5076                           prodl	equ	0xFF3
  5077                           postinc0	equ	0xFEE
  5078                           wreg	equ	0xFE8
  5079                           indf1	equ	0xFE7
  5080                           postdec1	equ	0xFE5
  5081                           fsr1h	equ	0xFE2
  5082                           fsr1l	equ	0xFE1
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           postdec2	equ	0xFDD
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           
  5090 ;; *************** function _scale *****************
  5091 ;; Defined at:
  5092 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  scl             1    wreg     char 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  scl             1   55[BANK0 ] char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  3   49[BANK0 ] char 
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5106 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;Total ram usage:        7 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:   10
  5113 ;; This function calls:
  5114 ;;		___awdiv
  5115 ;;		___awmod
  5116 ;;		___ftmul
  5117 ;;		___wmul
  5118 ;; This function is called by:
  5119 ;;		_sprintf
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text3
  5124  002066                     __ptext3:
  5125                           	opt stack 0
  5126  002066                     _scale:
  5127                           	opt stack 19
  5128                           
  5129                           ; BSR set to: 1
  5130                           ;incstack = 0
  5131                           ;scale@scl stored from wreg
  5132  002066  0100               	movlb	0	; () banked
  5133  002068  6FB7               	movwf	scale@scl& (0+255),b
  5134                           
  5135                           ;doprnt.c: 428: if(scl < 0) {
  5136  00206A  0100               	movlb	0	; () banked
  5137  00206C  AFB7               	btfss	scale@scl& (0+255),7,b
  5138  00206E  D13C               	goto	l4833
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;doprnt.c: 429: scl = -scl;
  5142  002070  0100               	movlb	0	; () banked
  5143  002072  6DB7               	negf	scale@scl& (0+255),b
  5144                           
  5145                           ;doprnt.c: 430: if(scl>=110)
  5146  002074  0100               	movlb	0	; () banked
  5147  002076  51B7               	movf	scale@scl& (0+255),w,b
  5148  002078  0A80               	xorlw	128
  5149  00207A  0F12               	addlw	-238
  5150  00207C  A0D8               	btfss	status,0,c
  5151  00207E  D0B5               	goto	l4823
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5155  002080  0E00               	movlw	0
  5156  002082  0100               	movlb	0	; () banked
  5157  002084  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5158  002086  0E03               	movlw	3
  5159  002088  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5160  00208A  0E00               	movlw	0
  5161  00208C  0100               	movlb	0	; () banked
  5162  00208E  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5163  002090  0E0A               	movlw	10
  5164  002092  6F96               	movwf	___awdiv@divisor& (0+255),b
  5165  002094  0E00               	movlw	0
  5166  002096  0100               	movlb	0	; () banked
  5167  002098  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5168  00209A  0E64               	movlw	100
  5169  00209C  6F90               	movwf	___awmod@divisor& (0+255),b
  5170  00209E  0100               	movlb	0	; () banked
  5171  0020A0  51B7               	movf	scale@scl& (0+255),w,b
  5172  0020A2  0100               	movlb	0	; () banked
  5173  0020A4  6F8E               	movwf	___awmod@dividend& (0+255),b
  5174  0020A6  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5175  0020A8  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5176  0020AA  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5177  0020AC  ECD2  F023         	call	___awmod	;wreg free
  5178  0020B0  C08E  F094         	movff	?___awmod,___awdiv@dividend
  5179  0020B4  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  5180  0020B8  ECBE  F022         	call	___awdiv	;wreg free
  5181  0020BC  0E09               	movlw	9
  5182  0020BE  0100               	movlb	0	; () banked
  5183  0020C0  2594               	addwf	?___awdiv& (0+255),w,b
  5184  0020C2  0100               	movlb	0	; () banked
  5185  0020C4  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5186  0020C6  0E00               	movlw	0
  5187  0020C8  0100               	movlb	0	; () banked
  5188  0020CA  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5189  0020CC  0100               	movlb	0	; () banked
  5190  0020CE  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5191  0020D0  ECAD  F029         	call	___wmul	;wreg free
  5192  0020D4  0E29               	movlw	low __npowers_
  5193  0020D6  0100               	movlb	0	; () banked
  5194  0020D8  259C               	addwf	?___wmul& (0+255),w,b
  5195  0020DA  6EF6               	movwf	tblptrl,c
  5196  0020DC  0EFF               	movlw	high __npowers_
  5197  0020DE  0100               	movlb	0	; () banked
  5198  0020E0  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5199  0020E2  6EF7               	movwf	tblptrh,c
  5200  0020E4                     	if	1	;There are 3 active tblptr bytes
  5201  0020E4  6AF8               	clrf	tblptru,c
  5202  0020E6  0E00               	movlw	low (__mediumconst shr (0+16))
  5203  0020E8  22F8               	addwfc	tblptru,f,c
  5204  0020EA                     	endif
  5205  0020EA  0009               	tblrd		*+
  5206  0020EC  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5207  0020F0  0009               	tblrd		*+
  5208  0020F2  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5209  0020F6  000A               	tblrd		*-
  5210  0020F8  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5211  0020FC  0E00               	movlw	0
  5212  0020FE  0100               	movlb	0	; () banked
  5213  002100  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5214  002102  0E64               	movlw	100
  5215  002104  6F96               	movwf	___awdiv@divisor& (0+255),b
  5216  002106  0100               	movlb	0	; () banked
  5217  002108  51B7               	movf	scale@scl& (0+255),w,b
  5218  00210A  0100               	movlb	0	; () banked
  5219  00210C  6F94               	movwf	___awdiv@dividend& (0+255),b
  5220  00210E  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5221  002110  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  5222  002112  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5223  002114  ECBE  F022         	call	___awdiv	;wreg free
  5224  002118  0E12               	movlw	18
  5225  00211A  0100               	movlb	0	; () banked
  5226  00211C  2594               	addwf	?___awdiv& (0+255),w,b
  5227  00211E  0100               	movlb	0	; () banked
  5228  002120  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5229  002122  0E00               	movlw	0
  5230  002124  0100               	movlb	0	; () banked
  5231  002126  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5232  002128  0100               	movlb	0	; () banked
  5233  00212A  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5234  00212C  0E00               	movlw	0
  5235  00212E  0100               	movlb	0	; () banked
  5236  002130  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5237  002132  0E03               	movlw	3
  5238  002134  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5239  002136  ECAD  F029         	call	___wmul	;wreg free
  5240  00213A  0E29               	movlw	low __npowers_
  5241  00213C  0100               	movlb	0	; () banked
  5242  00213E  259C               	addwf	?___wmul& (0+255),w,b
  5243  002140  6EF6               	movwf	tblptrl,c
  5244  002142  0EFF               	movlw	high __npowers_
  5245  002144  0100               	movlb	0	; () banked
  5246  002146  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5247  002148  6EF7               	movwf	tblptrh,c
  5248  00214A                     	if	1	;There are 3 active tblptr bytes
  5249  00214A  6AF8               	clrf	tblptru,c
  5250  00214C  0E00               	movlw	low (__mediumconst shr (0+16))
  5251  00214E  22F8               	addwfc	tblptru,f,c
  5252  002150                     	endif
  5253  002150  0009               	tblrd		*+
  5254  002152  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5255  002156  0009               	tblrd		*+
  5256  002158  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5257  00215C  000A               	tblrd		*-
  5258  00215E  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5259  002162  ECEF  F01D         	call	___ftmul	;wreg free
  5260  002166  C0A2  F0B4         	movff	?___ftmul,_scale$1561
  5261  00216A  C0A3  F0B5         	movff	?___ftmul+1,_scale$1561+1
  5262  00216E  C0A4  F0B6         	movff	?___ftmul+2,_scale$1561+2
  5263                           
  5264                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5265  002172  C0B4  F0A2         	movff	_scale$1561,___ftmul@f1
  5266  002176  C0B5  F0A3         	movff	_scale$1561+1,___ftmul@f1+1
  5267  00217A  C0B6  F0A4         	movff	_scale$1561+2,___ftmul@f1+2
  5268  00217E  0E00               	movlw	0
  5269  002180  0100               	movlb	0	; () banked
  5270  002182  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5271  002184  0E03               	movlw	3
  5272  002186  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5273  002188  0E00               	movlw	0
  5274  00218A  0100               	movlb	0	; () banked
  5275  00218C  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5276  00218E  0E0A               	movlw	10
  5277  002190  6F90               	movwf	___awmod@divisor& (0+255),b
  5278  002192  0100               	movlb	0	; () banked
  5279  002194  51B7               	movf	scale@scl& (0+255),w,b
  5280  002196  0100               	movlb	0	; () banked
  5281  002198  6F8E               	movwf	___awmod@dividend& (0+255),b
  5282  00219A  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5283  00219C  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5284  00219E  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5285  0021A0  ECD2  F023         	call	___awmod	;wreg free
  5286  0021A4  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5287  0021A8  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5288  0021AC  ECAD  F029         	call	___wmul	;wreg free
  5289  0021B0  0E29               	movlw	low __npowers_
  5290  0021B2  0100               	movlb	0	; () banked
  5291  0021B4  259C               	addwf	?___wmul& (0+255),w,b
  5292  0021B6  6EF6               	movwf	tblptrl,c
  5293  0021B8  0EFF               	movlw	high __npowers_
  5294  0021BA  0100               	movlb	0	; () banked
  5295  0021BC  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5296  0021BE  6EF7               	movwf	tblptrh,c
  5297  0021C0                     	if	1	;There are 3 active tblptr bytes
  5298  0021C0  6AF8               	clrf	tblptru,c
  5299  0021C2  0E00               	movlw	low (__mediumconst shr (0+16))
  5300  0021C4  22F8               	addwfc	tblptru,f,c
  5301  0021C6                     	endif
  5302  0021C6  0009               	tblrd		*+
  5303  0021C8  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5304  0021CC  0009               	tblrd		*+
  5305  0021CE  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5306  0021D2  000A               	tblrd		*-
  5307  0021D4  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5308  0021D8  ECEF  F01D         	call	___ftmul	;wreg free
  5309  0021DC  C0A2  F0B1         	movff	?___ftmul,?_scale
  5310  0021E0  C0A3  F0B2         	movff	?___ftmul+1,?_scale+1
  5311  0021E4  C0A4  F0B3         	movff	?___ftmul+2,?_scale+2
  5312  0021E8  0012               	return	
  5313  0021EA                     l4823:
  5314                           
  5315                           ;doprnt.c: 432: else if(scl > 10)
  5316  0021EA  0100               	movlb	0	; () banked
  5317  0021EC  51B7               	movf	scale@scl& (0+255),w,b
  5318  0021EE  0A80               	xorlw	128
  5319  0021F0  0F75               	addlw	-139
  5320  0021F2  A0D8               	btfss	status,0,c
  5321  0021F4  D063               	goto	l4829
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  5325  0021F6  0E00               	movlw	0
  5326  0021F8  0100               	movlb	0	; () banked
  5327  0021FA  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5328  0021FC  0E0A               	movlw	10
  5329  0021FE  6F96               	movwf	___awdiv@divisor& (0+255),b
  5330  002200  0100               	movlb	0	; () banked
  5331  002202  51B7               	movf	scale@scl& (0+255),w,b
  5332  002204  0100               	movlb	0	; () banked
  5333  002206  6F94               	movwf	___awdiv@dividend& (0+255),b
  5334  002208  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5335  00220A  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  5336  00220C  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5337  00220E  ECBE  F022         	call	___awdiv	;wreg free
  5338  002212  0E09               	movlw	9
  5339  002214  0100               	movlb	0	; () banked
  5340  002216  2594               	addwf	?___awdiv& (0+255),w,b
  5341  002218  0100               	movlb	0	; () banked
  5342  00221A  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5343  00221C  0E00               	movlw	0
  5344  00221E  0100               	movlb	0	; () banked
  5345  002220  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5346  002222  0100               	movlb	0	; () banked
  5347  002224  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5348  002226  0E00               	movlw	0
  5349  002228  0100               	movlb	0	; () banked
  5350  00222A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5351  00222C  0E03               	movlw	3
  5352  00222E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5353  002230  ECAD  F029         	call	___wmul	;wreg free
  5354  002234  0E29               	movlw	low __npowers_
  5355  002236  0100               	movlb	0	; () banked
  5356  002238  259C               	addwf	?___wmul& (0+255),w,b
  5357  00223A  6EF6               	movwf	tblptrl,c
  5358  00223C  0EFF               	movlw	high __npowers_
  5359  00223E  0100               	movlb	0	; () banked
  5360  002240  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5361  002242  6EF7               	movwf	tblptrh,c
  5362  002244                     	if	1	;There are 3 active tblptr bytes
  5363  002244  6AF8               	clrf	tblptru,c
  5364  002246  0E00               	movlw	low (__mediumconst shr (0+16))
  5365  002248  22F8               	addwfc	tblptru,f,c
  5366  00224A                     	endif
  5367  00224A  0009               	tblrd		*+
  5368  00224C  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5369  002250  0009               	tblrd		*+
  5370  002252  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5371  002256  000A               	tblrd		*-
  5372  002258  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5373  00225C  0E00               	movlw	0
  5374  00225E  0100               	movlb	0	; () banked
  5375  002260  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5376  002262  0E03               	movlw	3
  5377  002264  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5378  002266  0E00               	movlw	0
  5379  002268  0100               	movlb	0	; () banked
  5380  00226A  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5381  00226C  0E0A               	movlw	10
  5382  00226E  6F90               	movwf	___awmod@divisor& (0+255),b
  5383  002270  0100               	movlb	0	; () banked
  5384  002272  51B7               	movf	scale@scl& (0+255),w,b
  5385  002274  0100               	movlb	0	; () banked
  5386  002276  6F8E               	movwf	___awmod@dividend& (0+255),b
  5387  002278  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5388  00227A  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5389  00227C  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5390  00227E  ECD2  F023         	call	___awmod	;wreg free
  5391  002282  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5392  002286  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5393  00228A  ECAD  F029         	call	___wmul	;wreg free
  5394  00228E  0E29               	movlw	low __npowers_
  5395  002290  0100               	movlb	0	; () banked
  5396  002292  259C               	addwf	?___wmul& (0+255),w,b
  5397  002294  6EF6               	movwf	tblptrl,c
  5398  002296  0EFF               	movlw	high __npowers_
  5399  002298  0100               	movlb	0	; () banked
  5400  00229A  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5401  00229C  6EF7               	movwf	tblptrh,c
  5402  00229E                     	if	1	;There are 3 active tblptr bytes
  5403  00229E  6AF8               	clrf	tblptru,c
  5404  0022A0  0E00               	movlw	low (__mediumconst shr (0+16))
  5405  0022A2  22F8               	addwfc	tblptru,f,c
  5406  0022A4                     	endif
  5407  0022A4  0009               	tblrd		*+
  5408  0022A6  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5409  0022AA  0009               	tblrd		*+
  5410  0022AC  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5411  0022B0  000A               	tblrd		*-
  5412  0022B2  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5413  0022B6  ECEF  F01D         	call	___ftmul	;wreg free
  5414  0022BA  D790               	goto	L11
  5415  0022BC                     l4829:
  5416                           
  5417                           ;doprnt.c: 434: return _npowers_[scl];
  5418  0022BC  0100               	movlb	0	; () banked
  5419  0022BE  51B7               	movf	scale@scl& (0+255),w,b
  5420  0022C0  0D03               	mullw	3
  5421  0022C2  0E29               	movlw	low __npowers_
  5422  0022C4  24F3               	addwf	prodl,w,c
  5423  0022C6  6EF6               	movwf	tblptrl,c
  5424  0022C8  0EFF               	movlw	high __npowers_
  5425  0022CA  20F4               	addwfc	prodh,w,c
  5426  0022CC  6EF7               	movwf	tblptrh,c
  5427  0022CE                     	if	1	;There are 3 active tblptr bytes
  5428  0022CE  6AF8               	clrf	tblptru,c
  5429  0022D0  0E00               	movlw	low (__mediumconst shr (0+16))
  5430  0022D2  22F8               	addwfc	tblptru,f,c
  5431  0022D4                     	endif
  5432  0022D4  0009               	tblrd		*+
  5433  0022D6  CFF5 F0B1          	movff	tablat,?_scale
  5434  0022DA  0009               	tblrd		*+
  5435  0022DC  CFF5 F0B2          	movff	tablat,?_scale+1
  5436  0022E0  000A               	tblrd		*-
  5437  0022E2  CFF5 F0B3          	movff	tablat,?_scale+2
  5438                           
  5439                           ; BSR set to: 0
  5440  0022E6  0012               	return	
  5441  0022E8                     l4833:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;doprnt.c: 435: }
  5445                           ;doprnt.c: 436: if(scl>=110)
  5446  0022E8  0100               	movlb	0	; () banked
  5447  0022EA  51B7               	movf	scale@scl& (0+255),w,b
  5448  0022EC  0A80               	xorlw	128
  5449  0022EE  0F12               	addlw	-238
  5450  0022F0  A0D8               	btfss	status,0,c
  5451  0022F2  D0B5               	goto	l4841
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5455  0022F4  0E00               	movlw	0
  5456  0022F6  0100               	movlb	0	; () banked
  5457  0022F8  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5458  0022FA  0E03               	movlw	3
  5459  0022FC  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5460  0022FE  0E00               	movlw	0
  5461  002300  0100               	movlb	0	; () banked
  5462  002302  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5463  002304  0E0A               	movlw	10
  5464  002306  6F96               	movwf	___awdiv@divisor& (0+255),b
  5465  002308  0E00               	movlw	0
  5466  00230A  0100               	movlb	0	; () banked
  5467  00230C  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5468  00230E  0E64               	movlw	100
  5469  002310  6F90               	movwf	___awmod@divisor& (0+255),b
  5470  002312  0100               	movlb	0	; () banked
  5471  002314  51B7               	movf	scale@scl& (0+255),w,b
  5472  002316  0100               	movlb	0	; () banked
  5473  002318  6F8E               	movwf	___awmod@dividend& (0+255),b
  5474  00231A  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5475  00231C  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5476  00231E  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5477  002320  ECD2  F023         	call	___awmod	;wreg free
  5478  002324  C08E  F094         	movff	?___awmod,___awdiv@dividend
  5479  002328  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  5480  00232C  ECBE  F022         	call	___awdiv	;wreg free
  5481  002330  0E09               	movlw	9
  5482  002332  0100               	movlb	0	; () banked
  5483  002334  2594               	addwf	?___awdiv& (0+255),w,b
  5484  002336  0100               	movlb	0	; () banked
  5485  002338  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5486  00233A  0E00               	movlw	0
  5487  00233C  0100               	movlb	0	; () banked
  5488  00233E  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5489  002340  0100               	movlb	0	; () banked
  5490  002342  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5491  002344  ECAD  F029         	call	___wmul	;wreg free
  5492  002348  0E50               	movlw	low __powers_
  5493  00234A  0100               	movlb	0	; () banked
  5494  00234C  259C               	addwf	?___wmul& (0+255),w,b
  5495  00234E  6EF6               	movwf	tblptrl,c
  5496  002350  0EFF               	movlw	high __powers_
  5497  002352  0100               	movlb	0	; () banked
  5498  002354  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5499  002356  6EF7               	movwf	tblptrh,c
  5500  002358                     	if	1	;There are 3 active tblptr bytes
  5501  002358  6AF8               	clrf	tblptru,c
  5502  00235A  0E00               	movlw	low (__mediumconst shr (0+16))
  5503  00235C  22F8               	addwfc	tblptru,f,c
  5504  00235E                     	endif
  5505  00235E  0009               	tblrd		*+
  5506  002360  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5507  002364  0009               	tblrd		*+
  5508  002366  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5509  00236A  000A               	tblrd		*-
  5510  00236C  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5511  002370  0E00               	movlw	0
  5512  002372  0100               	movlb	0	; () banked
  5513  002374  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5514  002376  0E64               	movlw	100
  5515  002378  6F96               	movwf	___awdiv@divisor& (0+255),b
  5516  00237A  0100               	movlb	0	; () banked
  5517  00237C  51B7               	movf	scale@scl& (0+255),w,b
  5518  00237E  0100               	movlb	0	; () banked
  5519  002380  6F94               	movwf	___awdiv@dividend& (0+255),b
  5520  002382  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5521  002384  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  5522  002386  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5523  002388  ECBE  F022         	call	___awdiv	;wreg free
  5524  00238C  0E12               	movlw	18
  5525  00238E  0100               	movlb	0	; () banked
  5526  002390  2594               	addwf	?___awdiv& (0+255),w,b
  5527  002392  0100               	movlb	0	; () banked
  5528  002394  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5529  002396  0E00               	movlw	0
  5530  002398  0100               	movlb	0	; () banked
  5531  00239A  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5532  00239C  0100               	movlb	0	; () banked
  5533  00239E  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5534  0023A0  0E00               	movlw	0
  5535  0023A2  0100               	movlb	0	; () banked
  5536  0023A4  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5537  0023A6  0E03               	movlw	3
  5538  0023A8  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5539  0023AA  ECAD  F029         	call	___wmul	;wreg free
  5540  0023AE  0E50               	movlw	low __powers_
  5541  0023B0  0100               	movlb	0	; () banked
  5542  0023B2  259C               	addwf	?___wmul& (0+255),w,b
  5543  0023B4  6EF6               	movwf	tblptrl,c
  5544  0023B6  0EFF               	movlw	high __powers_
  5545  0023B8  0100               	movlb	0	; () banked
  5546  0023BA  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5547  0023BC  6EF7               	movwf	tblptrh,c
  5548  0023BE                     	if	1	;There are 3 active tblptr bytes
  5549  0023BE  6AF8               	clrf	tblptru,c
  5550  0023C0  0E00               	movlw	low (__mediumconst shr (0+16))
  5551  0023C2  22F8               	addwfc	tblptru,f,c
  5552  0023C4                     	endif
  5553  0023C4  0009               	tblrd		*+
  5554  0023C6  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5555  0023CA  0009               	tblrd		*+
  5556  0023CC  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5557  0023D0  000A               	tblrd		*-
  5558  0023D2  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5559  0023D6  ECEF  F01D         	call	___ftmul	;wreg free
  5560  0023DA  C0A2  F0B4         	movff	?___ftmul,_scale$1561
  5561  0023DE  C0A3  F0B5         	movff	?___ftmul+1,_scale$1561+1
  5562  0023E2  C0A4  F0B6         	movff	?___ftmul+2,_scale$1561+2
  5563                           
  5564                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5565  0023E6  C0B4  F0A2         	movff	_scale$1561,___ftmul@f1
  5566  0023EA  C0B5  F0A3         	movff	_scale$1561+1,___ftmul@f1+1
  5567  0023EE  C0B6  F0A4         	movff	_scale$1561+2,___ftmul@f1+2
  5568  0023F2  0E00               	movlw	0
  5569  0023F4  0100               	movlb	0	; () banked
  5570  0023F6  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5571  0023F8  0E03               	movlw	3
  5572  0023FA  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5573  0023FC  0E00               	movlw	0
  5574  0023FE  0100               	movlb	0	; () banked
  5575  002400  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5576  002402  0E0A               	movlw	10
  5577  002404  6F90               	movwf	___awmod@divisor& (0+255),b
  5578  002406  0100               	movlb	0	; () banked
  5579  002408  51B7               	movf	scale@scl& (0+255),w,b
  5580  00240A  0100               	movlb	0	; () banked
  5581  00240C  6F8E               	movwf	___awmod@dividend& (0+255),b
  5582  00240E  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5583  002410  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5584  002412  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5585  002414  ECD2  F023         	call	___awmod	;wreg free
  5586  002418  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5587  00241C  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5588  002420  ECAD  F029         	call	___wmul	;wreg free
  5589  002424  0E50               	movlw	low __powers_
  5590  002426  0100               	movlb	0	; () banked
  5591  002428  259C               	addwf	?___wmul& (0+255),w,b
  5592  00242A  6EF6               	movwf	tblptrl,c
  5593  00242C  0EFF               	movlw	high __powers_
  5594  00242E  0100               	movlb	0	; () banked
  5595  002430  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5596  002432  6EF7               	movwf	tblptrh,c
  5597  002434                     	if	1	;There are 3 active tblptr bytes
  5598  002434  6AF8               	clrf	tblptru,c
  5599  002436  0E00               	movlw	low (__mediumconst shr (0+16))
  5600  002438  22F8               	addwfc	tblptru,f,c
  5601  00243A                     	endif
  5602  00243A  0009               	tblrd		*+
  5603  00243C  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5604  002440  0009               	tblrd		*+
  5605  002442  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5606  002446  000A               	tblrd		*-
  5607  002448  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5608  00244C  ECEF  F01D         	call	___ftmul	;wreg free
  5609  002450  C0A2  F0B1         	movff	?___ftmul,?_scale
  5610  002454  C0A3  F0B2         	movff	?___ftmul+1,?_scale+1
  5611  002458  C0A4  F0B3         	movff	?___ftmul+2,?_scale+2
  5612  00245C  0012               	return	
  5613  00245E                     l4841:
  5614                           
  5615                           ;doprnt.c: 438: else if(scl > 10)
  5616  00245E  0100               	movlb	0	; () banked
  5617  002460  51B7               	movf	scale@scl& (0+255),w,b
  5618  002462  0A80               	xorlw	128
  5619  002464  0F75               	addlw	-139
  5620  002466  A0D8               	btfss	status,0,c
  5621  002468  D063               	goto	l4847
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5625  00246A  0E00               	movlw	0
  5626  00246C  0100               	movlb	0	; () banked
  5627  00246E  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5628  002470  0E0A               	movlw	10
  5629  002472  6F96               	movwf	___awdiv@divisor& (0+255),b
  5630  002474  0100               	movlb	0	; () banked
  5631  002476  51B7               	movf	scale@scl& (0+255),w,b
  5632  002478  0100               	movlb	0	; () banked
  5633  00247A  6F94               	movwf	___awdiv@dividend& (0+255),b
  5634  00247C  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5635  00247E  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  5636  002480  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5637  002482  ECBE  F022         	call	___awdiv	;wreg free
  5638  002486  0E09               	movlw	9
  5639  002488  0100               	movlb	0	; () banked
  5640  00248A  2594               	addwf	?___awdiv& (0+255),w,b
  5641  00248C  0100               	movlb	0	; () banked
  5642  00248E  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5643  002490  0E00               	movlw	0
  5644  002492  0100               	movlb	0	; () banked
  5645  002494  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5646  002496  0100               	movlb	0	; () banked
  5647  002498  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5648  00249A  0E00               	movlw	0
  5649  00249C  0100               	movlb	0	; () banked
  5650  00249E  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5651  0024A0  0E03               	movlw	3
  5652  0024A2  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5653  0024A4  ECAD  F029         	call	___wmul	;wreg free
  5654  0024A8  0E50               	movlw	low __powers_
  5655  0024AA  0100               	movlb	0	; () banked
  5656  0024AC  259C               	addwf	?___wmul& (0+255),w,b
  5657  0024AE  6EF6               	movwf	tblptrl,c
  5658  0024B0  0EFF               	movlw	high __powers_
  5659  0024B2  0100               	movlb	0	; () banked
  5660  0024B4  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5661  0024B6  6EF7               	movwf	tblptrh,c
  5662  0024B8                     	if	1	;There are 3 active tblptr bytes
  5663  0024B8  6AF8               	clrf	tblptru,c
  5664  0024BA  0E00               	movlw	low (__mediumconst shr (0+16))
  5665  0024BC  22F8               	addwfc	tblptru,f,c
  5666  0024BE                     	endif
  5667  0024BE  0009               	tblrd		*+
  5668  0024C0  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5669  0024C4  0009               	tblrd		*+
  5670  0024C6  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5671  0024CA  000A               	tblrd		*-
  5672  0024CC  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5673  0024D0  0E00               	movlw	0
  5674  0024D2  0100               	movlb	0	; () banked
  5675  0024D4  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5676  0024D6  0E03               	movlw	3
  5677  0024D8  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5678  0024DA  0E00               	movlw	0
  5679  0024DC  0100               	movlb	0	; () banked
  5680  0024DE  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5681  0024E0  0E0A               	movlw	10
  5682  0024E2  6F90               	movwf	___awmod@divisor& (0+255),b
  5683  0024E4  0100               	movlb	0	; () banked
  5684  0024E6  51B7               	movf	scale@scl& (0+255),w,b
  5685  0024E8  0100               	movlb	0	; () banked
  5686  0024EA  6F8E               	movwf	___awmod@dividend& (0+255),b
  5687  0024EC  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5688  0024EE  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5689  0024F0  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5690  0024F2  ECD2  F023         	call	___awmod	;wreg free
  5691  0024F6  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5692  0024FA  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5693  0024FE  ECAD  F029         	call	___wmul	;wreg free
  5694  002502  0E50               	movlw	low __powers_
  5695  002504  0100               	movlb	0	; () banked
  5696  002506  259C               	addwf	?___wmul& (0+255),w,b
  5697  002508  6EF6               	movwf	tblptrl,c
  5698  00250A  0EFF               	movlw	high __powers_
  5699  00250C  0100               	movlb	0	; () banked
  5700  00250E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5701  002510  6EF7               	movwf	tblptrh,c
  5702  002512                     	if	1	;There are 3 active tblptr bytes
  5703  002512  6AF8               	clrf	tblptru,c
  5704  002514  0E00               	movlw	low (__mediumconst shr (0+16))
  5705  002516  22F8               	addwfc	tblptru,f,c
  5706  002518                     	endif
  5707  002518  0009               	tblrd		*+
  5708  00251A  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5709  00251E  0009               	tblrd		*+
  5710  002520  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5711  002524  000A               	tblrd		*-
  5712  002526  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5713  00252A  ECEF  F01D         	call	___ftmul	;wreg free
  5714  00252E  D790               	goto	L12
  5715  002530                     l4847:
  5716                           
  5717                           ;doprnt.c: 440: return _powers_[scl];
  5718  002530  0100               	movlb	0	; () banked
  5719  002532  51B7               	movf	scale@scl& (0+255),w,b
  5720  002534  0D03               	mullw	3
  5721  002536  0E50               	movlw	low __powers_
  5722  002538  24F3               	addwf	prodl,w,c
  5723  00253A  6EF6               	movwf	tblptrl,c
  5724  00253C  0EFF               	movlw	high __powers_
  5725  00253E  20F4               	addwfc	prodh,w,c
  5726  002540  6EF7               	movwf	tblptrh,c
  5727  002542                     	if	1	;There are 3 active tblptr bytes
  5728  002542  6AF8               	clrf	tblptru,c
  5729  002544  0E00               	movlw	low (__mediumconst shr (0+16))
  5730  002546  22F8               	addwfc	tblptru,f,c
  5731  002548                     	endif
  5732  002548  0009               	tblrd		*+
  5733  00254A  CFF5 F0B1          	movff	tablat,?_scale
  5734  00254E  0009               	tblrd		*+
  5735  002550  CFF5 F0B2          	movff	tablat,?_scale+1
  5736  002554  000A               	tblrd		*-
  5737  002556  CFF5 F0B3          	movff	tablat,?_scale+2
  5738  00255A  0012               	return	
  5739  00255C                     __end_of_scale:
  5740                           	opt stack 0
  5741                           tblptru	equ	0xFF8
  5742                           tblptrh	equ	0xFF7
  5743                           tblptrl	equ	0xFF6
  5744                           tablat	equ	0xFF5
  5745                           prodh	equ	0xFF4
  5746                           prodl	equ	0xFF3
  5747                           postinc0	equ	0xFEE
  5748                           wreg	equ	0xFE8
  5749                           indf1	equ	0xFE7
  5750                           postdec1	equ	0xFE5
  5751                           fsr1h	equ	0xFE2
  5752                           fsr1l	equ	0xFE1
  5753                           indf2	equ	0xFDF
  5754                           postinc2	equ	0xFDE
  5755                           postdec2	equ	0xFDD
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function _isdigit *****************
  5761 ;; Defined at:
  5762 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  c               1    wreg     unsigned char 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  c               1   16[BANK0 ] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;		None               void
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;Total ram usage:        3 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    8
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_sprintf
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text4
  5791  0054AA                     __ptext4:
  5792                           	opt stack 0
  5793  0054AA                     _isdigit:
  5794                           	opt stack 21
  5795                           
  5796                           ;incstack = 0
  5797                           ;isdigit@c stored from wreg
  5798  0054AA  0100               	movlb	0	; () banked
  5799  0054AC  6F90               	movwf	isdigit@c& (0+255),b
  5800  0054AE  0E00               	movlw	0
  5801  0054B0  0100               	movlb	0	; () banked
  5802  0054B2  6F8F               	movwf	_isdigit$1219& (0+255),b
  5803                           
  5804                           ; BSR set to: 0
  5805  0054B4  0E3A               	movlw	58
  5806  0054B6  0100               	movlb	0	; () banked
  5807  0054B8  6190               	cpfslt	isdigit@c& (0+255),b
  5808  0054BA  D007               	goto	l4859
  5809                           
  5810                           ; BSR set to: 0
  5811  0054BC  0E2F               	movlw	47
  5812  0054BE  0100               	movlb	0	; () banked
  5813  0054C0  6590               	cpfsgt	isdigit@c& (0+255),b
  5814  0054C2  D003               	goto	l4859
  5815                           
  5816                           ; BSR set to: 0
  5817  0054C4  0E01               	movlw	1
  5818  0054C6  0100               	movlb	0	; () banked
  5819  0054C8  6F8F               	movwf	_isdigit$1219& (0+255),b
  5820  0054CA                     l4859:
  5821                           
  5822                           ; BSR set to: 0
  5823  0054CA  C08F  F08E         	movff	_isdigit$1219,??_isdigit
  5824  0054CE  0100               	movlb	0	; () banked
  5825  0054D0  318E               	rrcf	??_isdigit& (0+255),w,b
  5826  0054D2  0012               	return	
  5827  0054D4                     __end_of_isdigit:
  5828                           	opt stack 0
  5829                           tblptru	equ	0xFF8
  5830                           tblptrh	equ	0xFF7
  5831                           tblptrl	equ	0xFF6
  5832                           tablat	equ	0xFF5
  5833                           prodh	equ	0xFF4
  5834                           prodl	equ	0xFF3
  5835                           postinc0	equ	0xFEE
  5836                           wreg	equ	0xFE8
  5837                           indf1	equ	0xFE7
  5838                           postdec1	equ	0xFE5
  5839                           fsr1h	equ	0xFE2
  5840                           fsr1l	equ	0xFE1
  5841                           indf2	equ	0xFDF
  5842                           postinc2	equ	0xFDE
  5843                           postdec2	equ	0xFDD
  5844                           fsr2h	equ	0xFDA
  5845                           fsr2l	equ	0xFD9
  5846                           status	equ	0xFD8
  5847                           
  5848 ;; *************** function _fround *****************
  5849 ;; Defined at:
  5850 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;  prec            1    wreg     unsigned char 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  prec            1   58[BANK0 ] unsigned char 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  3   49[BANK0 ] unsigned char 
  5857 ;; Registers used:
  5858 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5864 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;Total ram usage:       10 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:   10
  5871 ;; This function calls:
  5872 ;;		___awdiv
  5873 ;;		___awmod
  5874 ;;		___ftmul
  5875 ;;		___wmul
  5876 ;; This function is called by:
  5877 ;;		_sprintf
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text5
  5882  002E08                     __ptext5:
  5883                           	opt stack 0
  5884  002E08                     _fround:
  5885                           	opt stack 19
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;incstack = 0
  5889                           ;fround@prec stored from wreg
  5890  002E08  0100               	movlb	0	; () banked
  5891  002E0A  6FBA               	movwf	fround@prec& (0+255),b
  5892                           
  5893                           ;doprnt.c: 413: if(prec>=110)
  5894  002E0C  0E6D               	movlw	109
  5895  002E0E  0100               	movlb	0	; () banked
  5896  002E10  65BA               	cpfsgt	fround@prec& (0+255),b
  5897  002E12  D0C3               	goto	l4801
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5901  002E14  0E00               	movlw	0
  5902  002E16  0100               	movlb	0	; () banked
  5903  002E18  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5904  002E1A  0E03               	movlw	3
  5905  002E1C  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5906  002E1E  0E00               	movlw	0
  5907  002E20  0100               	movlb	0	; () banked
  5908  002E22  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5909  002E24  0E0A               	movlw	10
  5910  002E26  6F96               	movwf	___awdiv@divisor& (0+255),b
  5911  002E28  0E00               	movlw	0
  5912  002E2A  0100               	movlb	0	; () banked
  5913  002E2C  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5914  002E2E  0E64               	movlw	100
  5915  002E30  6F90               	movwf	___awmod@divisor& (0+255),b
  5916  002E32  C0BA  F08E         	movff	fround@prec,___awmod@dividend
  5917  002E36  0100               	movlb	0	; () banked
  5918  002E38  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5919  002E3A  ECD2  F023         	call	___awmod	;wreg free
  5920  002E3E  C08E  F094         	movff	?___awmod,___awdiv@dividend
  5921  002E42  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  5922  002E46  ECBE  F022         	call	___awdiv	;wreg free
  5923  002E4A  0E09               	movlw	9
  5924  002E4C  0100               	movlb	0	; () banked
  5925  002E4E  2594               	addwf	?___awdiv& (0+255),w,b
  5926  002E50  0100               	movlb	0	; () banked
  5927  002E52  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5928  002E54  0E00               	movlw	0
  5929  002E56  0100               	movlb	0	; () banked
  5930  002E58  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5931  002E5A  0100               	movlb	0	; () banked
  5932  002E5C  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5933  002E5E  ECAD  F029         	call	___wmul	;wreg free
  5934  002E62  0E29               	movlw	low __npowers_
  5935  002E64  0100               	movlb	0	; () banked
  5936  002E66  259C               	addwf	?___wmul& (0+255),w,b
  5937  002E68  6EF6               	movwf	tblptrl,c
  5938  002E6A  0EFF               	movlw	high __npowers_
  5939  002E6C  0100               	movlb	0	; () banked
  5940  002E6E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5941  002E70  6EF7               	movwf	tblptrh,c
  5942  002E72                     	if	1	;There are 3 active tblptr bytes
  5943  002E72  6AF8               	clrf	tblptru,c
  5944  002E74  0E00               	movlw	low (__mediumconst shr (0+16))
  5945  002E76  22F8               	addwfc	tblptru,f,c
  5946  002E78                     	endif
  5947  002E78  0009               	tblrd		*+
  5948  002E7A  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5949  002E7E  0009               	tblrd		*+
  5950  002E80  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5951  002E84  000A               	tblrd		*-
  5952  002E86  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5953  002E8A  0E00               	movlw	0
  5954  002E8C  0100               	movlb	0	; () banked
  5955  002E8E  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5956  002E90  0E64               	movlw	100
  5957  002E92  6F96               	movwf	___awdiv@divisor& (0+255),b
  5958  002E94  C0BA  F094         	movff	fround@prec,___awdiv@dividend
  5959  002E98  0100               	movlb	0	; () banked
  5960  002E9A  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5961  002E9C  ECBE  F022         	call	___awdiv	;wreg free
  5962  002EA0  0E12               	movlw	18
  5963  002EA2  0100               	movlb	0	; () banked
  5964  002EA4  2594               	addwf	?___awdiv& (0+255),w,b
  5965  002EA6  0100               	movlb	0	; () banked
  5966  002EA8  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5967  002EAA  0E00               	movlw	0
  5968  002EAC  0100               	movlb	0	; () banked
  5969  002EAE  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5970  002EB0  0100               	movlb	0	; () banked
  5971  002EB2  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5972  002EB4  0E00               	movlw	0
  5973  002EB6  0100               	movlb	0	; () banked
  5974  002EB8  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5975  002EBA  0E03               	movlw	3
  5976  002EBC  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5977  002EBE  ECAD  F029         	call	___wmul	;wreg free
  5978  002EC2  0E29               	movlw	low __npowers_
  5979  002EC4  0100               	movlb	0	; () banked
  5980  002EC6  259C               	addwf	?___wmul& (0+255),w,b
  5981  002EC8  6EF6               	movwf	tblptrl,c
  5982  002ECA  0EFF               	movlw	high __npowers_
  5983  002ECC  0100               	movlb	0	; () banked
  5984  002ECE  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5985  002ED0  6EF7               	movwf	tblptrh,c
  5986  002ED2                     	if	1	;There are 3 active tblptr bytes
  5987  002ED2  6AF8               	clrf	tblptru,c
  5988  002ED4  0E00               	movlw	low (__mediumconst shr (0+16))
  5989  002ED6  22F8               	addwfc	tblptru,f,c
  5990  002ED8                     	endif
  5991  002ED8  0009               	tblrd		*+
  5992  002EDA  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5993  002EDE  0009               	tblrd		*+
  5994  002EE0  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5995  002EE4  000A               	tblrd		*-
  5996  002EE6  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5997  002EEA  ECEF  F01D         	call	___ftmul	;wreg free
  5998  002EEE  C0A2  F0B7         	movff	?___ftmul,_fround$1559
  5999  002EF2  C0A3  F0B8         	movff	?___ftmul+1,_fround$1559+1
  6000  002EF6  C0A4  F0B9         	movff	?___ftmul+2,_fround$1559+2
  6001                           
  6002                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6003  002EFA  0E00               	movlw	0
  6004  002EFC  0100               	movlb	0	; () banked
  6005  002EFE  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6006  002F00  0E03               	movlw	3
  6007  002F02  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  6008  002F04  0E00               	movlw	0
  6009  002F06  0100               	movlb	0	; () banked
  6010  002F08  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  6011  002F0A  0E0A               	movlw	10
  6012  002F0C  6F90               	movwf	___awmod@divisor& (0+255),b
  6013  002F0E  C0BA  F08E         	movff	fround@prec,___awmod@dividend
  6014  002F12  0100               	movlb	0	; () banked
  6015  002F14  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  6016  002F16  ECD2  F023         	call	___awmod	;wreg free
  6017  002F1A  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  6018  002F1E  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  6019  002F22  ECAD  F029         	call	___wmul	;wreg free
  6020  002F26  0E29               	movlw	low __npowers_
  6021  002F28  0100               	movlb	0	; () banked
  6022  002F2A  259C               	addwf	?___wmul& (0+255),w,b
  6023  002F2C  6EF6               	movwf	tblptrl,c
  6024  002F2E  0EFF               	movlw	high __npowers_
  6025  002F30  0100               	movlb	0	; () banked
  6026  002F32  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  6027  002F34  6EF7               	movwf	tblptrh,c
  6028  002F36                     	if	1	;There are 3 active tblptr bytes
  6029  002F36  6AF8               	clrf	tblptru,c
  6030  002F38  0E00               	movlw	low (__mediumconst shr (0+16))
  6031  002F3A  22F8               	addwfc	tblptru,f,c
  6032  002F3C                     	endif
  6033  002F3C  0009               	tblrd		*+
  6034  002F3E  CFF5 F0A5          	movff	tablat,___ftmul@f2
  6035  002F42  0009               	tblrd		*+
  6036  002F44  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  6037  002F48  000A               	tblrd		*-
  6038  002F4A  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  6039  002F4E  C0B7  F0A2         	movff	_fround$1559,___ftmul@f1
  6040  002F52  C0B8  F0A3         	movff	_fround$1559+1,___ftmul@f1+1
  6041  002F56  C0B9  F0A4         	movff	_fround$1559+2,___ftmul@f1+2
  6042  002F5A  ECEF  F01D         	call	___ftmul	;wreg free
  6043  002F5E  C0A2  F0B4         	movff	?___ftmul,_fround$1560
  6044  002F62  C0A3  F0B5         	movff	?___ftmul+1,_fround$1560+1
  6045  002F66  C0A4  F0B6         	movff	?___ftmul+2,_fround$1560+2
  6046                           
  6047                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6048  002F6A  C0B4  F0A2         	movff	_fround$1560,___ftmul@f1
  6049  002F6E  C0B5  F0A3         	movff	_fround$1560+1,___ftmul@f1+1
  6050  002F72  C0B6  F0A4         	movff	_fround$1560+2,___ftmul@f1+2
  6051  002F76  0E00               	movlw	0
  6052  002F78  0100               	movlb	0	; () banked
  6053  002F7A  6FA5               	movwf	___ftmul@f2& (0+255),b
  6054  002F7C  0E00               	movlw	0
  6055  002F7E  0100               	movlb	0	; () banked
  6056  002F80  6FA6               	movwf	(___ftmul@f2+1)& (0+255),b
  6057  002F82  0E3F               	movlw	63
  6058  002F84  0100               	movlb	0	; () banked
  6059  002F86  6FA7               	movwf	(___ftmul@f2+2)& (0+255),b
  6060  002F88  ECEF  F01D         	call	___ftmul	;wreg free
  6061  002F8C  C0A2  F0B1         	movff	?___ftmul,?_fround
  6062  002F90  C0A3  F0B2         	movff	?___ftmul+1,?_fround+1
  6063  002F94  C0A4  F0B3         	movff	?___ftmul+2,?_fround+2
  6064  002F98  0012               	return	
  6065  002F9A                     l4801:
  6066                           
  6067                           ;doprnt.c: 415: else if(prec > 10)
  6068  002F9A  0E0A               	movlw	10
  6069  002F9C  0100               	movlb	0	; () banked
  6070  002F9E  65BA               	cpfsgt	fround@prec& (0+255),b
  6071  002FA0  D074               	goto	l4809
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6075  002FA2  0E00               	movlw	0
  6076  002FA4  0100               	movlb	0	; () banked
  6077  002FA6  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6078  002FA8  0E03               	movlw	3
  6079  002FAA  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  6080  002FAC  0E00               	movlw	0
  6081  002FAE  0100               	movlb	0	; () banked
  6082  002FB0  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  6083  002FB2  0E0A               	movlw	10
  6084  002FB4  6F90               	movwf	___awmod@divisor& (0+255),b
  6085  002FB6  C0BA  F08E         	movff	fround@prec,___awmod@dividend
  6086  002FBA  0100               	movlb	0	; () banked
  6087  002FBC  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  6088  002FBE  ECD2  F023         	call	___awmod	;wreg free
  6089  002FC2  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  6090  002FC6  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  6091  002FCA  ECAD  F029         	call	___wmul	;wreg free
  6092  002FCE  0E29               	movlw	low __npowers_
  6093  002FD0  0100               	movlb	0	; () banked
  6094  002FD2  259C               	addwf	?___wmul& (0+255),w,b
  6095  002FD4  6EF6               	movwf	tblptrl,c
  6096  002FD6  0EFF               	movlw	high __npowers_
  6097  002FD8  0100               	movlb	0	; () banked
  6098  002FDA  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  6099  002FDC  6EF7               	movwf	tblptrh,c
  6100  002FDE                     	if	1	;There are 3 active tblptr bytes
  6101  002FDE  6AF8               	clrf	tblptru,c
  6102  002FE0  0E00               	movlw	low (__mediumconst shr (0+16))
  6103  002FE2  22F8               	addwfc	tblptru,f,c
  6104  002FE4                     	endif
  6105  002FE4  0009               	tblrd		*+
  6106  002FE6  CFF5 F0A5          	movff	tablat,___ftmul@f2
  6107  002FEA  0009               	tblrd		*+
  6108  002FEC  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  6109  002FF0  000A               	tblrd		*-
  6110  002FF2  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  6111  002FF6  0E00               	movlw	0
  6112  002FF8  0100               	movlb	0	; () banked
  6113  002FFA  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  6114  002FFC  0E0A               	movlw	10
  6115  002FFE  6F96               	movwf	___awdiv@divisor& (0+255),b
  6116  003000  C0BA  F094         	movff	fround@prec,___awdiv@dividend
  6117  003004  0100               	movlb	0	; () banked
  6118  003006  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  6119  003008  ECBE  F022         	call	___awdiv	;wreg free
  6120  00300C  0E09               	movlw	9
  6121  00300E  0100               	movlb	0	; () banked
  6122  003010  2594               	addwf	?___awdiv& (0+255),w,b
  6123  003012  0100               	movlb	0	; () banked
  6124  003014  6F9C               	movwf	___wmul@multiplier& (0+255),b
  6125  003016  0E00               	movlw	0
  6126  003018  0100               	movlb	0	; () banked
  6127  00301A  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  6128  00301C  0100               	movlb	0	; () banked
  6129  00301E  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  6130  003020  0E00               	movlw	0
  6131  003022  0100               	movlb	0	; () banked
  6132  003024  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6133  003026  0E03               	movlw	3
  6134  003028  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  6135  00302A  ECAD  F029         	call	___wmul	;wreg free
  6136  00302E  0E29               	movlw	low __npowers_
  6137  003030  0100               	movlb	0	; () banked
  6138  003032  259C               	addwf	?___wmul& (0+255),w,b
  6139  003034  6EF6               	movwf	tblptrl,c
  6140  003036  0EFF               	movlw	high __npowers_
  6141  003038  0100               	movlb	0	; () banked
  6142  00303A  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  6143  00303C  6EF7               	movwf	tblptrh,c
  6144  00303E                     	if	1	;There are 3 active tblptr bytes
  6145  00303E  6AF8               	clrf	tblptru,c
  6146  003040  0E00               	movlw	low (__mediumconst shr (0+16))
  6147  003042  22F8               	addwfc	tblptru,f,c
  6148  003044                     	endif
  6149  003044  0009               	tblrd		*+
  6150  003046  CFF5 F0A2          	movff	tablat,___ftmul@f1
  6151  00304A  0009               	tblrd		*+
  6152  00304C  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  6153  003050  000A               	tblrd		*-
  6154  003052  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  6155  003056  ECEF  F01D         	call	___ftmul	;wreg free
  6156  00305A  C0A2  F0B7         	movff	?___ftmul,_fround$1559
  6157  00305E  C0A3  F0B8         	movff	?___ftmul+1,_fround$1559+1
  6158  003062  C0A4  F0B9         	movff	?___ftmul+2,_fround$1559+2
  6159                           
  6160                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6161  003066  C0B7  F0A2         	movff	_fround$1559,___ftmul@f1
  6162  00306A  C0B8  F0A3         	movff	_fround$1559+1,___ftmul@f1+1
  6163  00306E  C0B9  F0A4         	movff	_fround$1559+2,___ftmul@f1+2
  6164  003072  0E00               	movlw	0
  6165  003074  0100               	movlb	0	; () banked
  6166  003076  6FA5               	movwf	___ftmul@f2& (0+255),b
  6167  003078  0E00               	movlw	0
  6168  00307A  0100               	movlb	0	; () banked
  6169  00307C  6FA6               	movwf	(___ftmul@f2+1)& (0+255),b
  6170  00307E  0E3F               	movlw	63
  6171  003080  0100               	movlb	0	; () banked
  6172  003082  6FA7               	movwf	(___ftmul@f2+2)& (0+255),b
  6173  003084  ECEF  F01D         	call	___ftmul	;wreg free
  6174  003088  D781               	goto	L13
  6175  00308A                     l4809:
  6176                           
  6177                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6178  00308A  0100               	movlb	0	; () banked
  6179  00308C  51BA               	movf	fround@prec& (0+255),w,b
  6180  00308E  0D03               	mullw	3
  6181  003090  0E29               	movlw	low __npowers_
  6182  003092  24F3               	addwf	prodl,w,c
  6183  003094  6EF6               	movwf	tblptrl,c
  6184  003096  0EFF               	movlw	high __npowers_
  6185  003098  20F4               	addwfc	prodh,w,c
  6186  00309A  6EF7               	movwf	tblptrh,c
  6187  00309C                     	if	1	;There are 3 active tblptr bytes
  6188  00309C  6AF8               	clrf	tblptru,c
  6189  00309E  0E00               	movlw	low (__mediumconst shr (0+16))
  6190  0030A0  22F8               	addwfc	tblptru,f,c
  6191  0030A2                     	endif
  6192  0030A2  0009               	tblrd		*+
  6193  0030A4  CFF5 F0A2          	movff	tablat,___ftmul@f1
  6194  0030A8  0009               	tblrd		*+
  6195  0030AA  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  6196  0030AE  000A               	tblrd		*-
  6197  0030B0  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  6198  0030B4  0E00               	movlw	0
  6199  0030B6  0100               	movlb	0	; () banked
  6200  0030B8  6FA5               	movwf	___ftmul@f2& (0+255),b
  6201  0030BA  0E00               	movlw	0
  6202  0030BC  0100               	movlb	0	; () banked
  6203  0030BE  6FA6               	movwf	(___ftmul@f2+1)& (0+255),b
  6204  0030C0  0E3F               	movlw	63
  6205  0030C2  0100               	movlb	0	; () banked
  6206  0030C4  6FA7               	movwf	(___ftmul@f2+2)& (0+255),b
  6207  0030C6  ECEF  F01D         	call	___ftmul	;wreg free
  6208  0030CA  C0A2  F0B1         	movff	?___ftmul,?_fround
  6209  0030CE  C0A3  F0B2         	movff	?___ftmul+1,?_fround+1
  6210  0030D2  C0A4  F0B3         	movff	?___ftmul+2,?_fround+2
  6211  0030D6  0012               	return	
  6212  0030D8                     __end_of_fround:
  6213                           	opt stack 0
  6214                           tblptru	equ	0xFF8
  6215                           tblptrh	equ	0xFF7
  6216                           tblptrl	equ	0xFF6
  6217                           tablat	equ	0xFF5
  6218                           prodh	equ	0xFF4
  6219                           prodl	equ	0xFF3
  6220                           postinc0	equ	0xFEE
  6221                           wreg	equ	0xFE8
  6222                           indf1	equ	0xFE7
  6223                           postdec1	equ	0xFE5
  6224                           fsr1h	equ	0xFE2
  6225                           fsr1l	equ	0xFE1
  6226                           indf2	equ	0xFDF
  6227                           postinc2	equ	0xFDE
  6228                           postdec2	equ	0xFDD
  6229                           fsr2h	equ	0xFDA
  6230                           fsr2l	equ	0xFD9
  6231                           status	equ	0xFD8
  6232                           
  6233 ;; *************** function ___wmul *****************
  6234 ;; Defined at:
  6235 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  multiplier      2   28[BANK0 ] unsigned int 
  6238 ;;  multiplicand    2   30[BANK0 ] unsigned int 
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  product         2   32[BANK0 ] unsigned int 
  6241 ;; Return value:  Size  Location     Type
  6242 ;;                  2   28[BANK0 ] unsigned int 
  6243 ;; Registers used:
  6244 ;;		wreg, status,2, status,0, prodl, prodh
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;Total ram usage:        6 bytes
  6255 ;; Hardware stack levels used:    1
  6256 ;; Hardware stack levels required when called:    8
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_main
  6261 ;;		_fround
  6262 ;;		_scale
  6263 ;;		_sprintf
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text6
  6268  00535A                     __ptext6:
  6269                           	opt stack 0
  6270  00535A                     ___wmul:
  6271                           	opt stack 20
  6272                           
  6273                           ;incstack = 0
  6274  00535A  0100               	movlb	0	; () banked
  6275  00535C  519C               	movf	___wmul@multiplier& (0+255),w,b
  6276  00535E  0100               	movlb	0	; () banked
  6277  005360  039E               	mulwf	___wmul@multiplicand& (0+255),b
  6278  005362  CFF3 F0A0          	movff	prodl,___wmul@product
  6279  005366  CFF4 F0A1          	movff	prodh,___wmul@product+1
  6280  00536A  0100               	movlb	0	; () banked
  6281  00536C  519C               	movf	___wmul@multiplier& (0+255),w,b
  6282  00536E  0100               	movlb	0	; () banked
  6283  005370  039F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6284  005372  50F3               	movf	prodl,w,c
  6285  005374  0100               	movlb	0	; () banked
  6286  005376  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  6287  005378  0100               	movlb	0	; () banked
  6288  00537A  519D               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6289  00537C  0100               	movlb	0	; () banked
  6290  00537E  039E               	mulwf	___wmul@multiplicand& (0+255),b
  6291  005380  50F3               	movf	prodl,w,c
  6292  005382  0100               	movlb	0	; () banked
  6293  005384  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  6294                           
  6295                           ; BSR set to: 0
  6296  005386  C0A0  F09C         	movff	___wmul@product,?___wmul
  6297  00538A  C0A1  F09D         	movff	___wmul@product+1,?___wmul+1
  6298  00538E  0012               	return	
  6299  005390                     __end_of___wmul:
  6300                           	opt stack 0
  6301                           tblptru	equ	0xFF8
  6302                           tblptrh	equ	0xFF7
  6303                           tblptrl	equ	0xFF6
  6304                           tablat	equ	0xFF5
  6305                           prodh	equ	0xFF4
  6306                           prodl	equ	0xFF3
  6307                           postinc0	equ	0xFEE
  6308                           wreg	equ	0xFE8
  6309                           indf1	equ	0xFE7
  6310                           postdec1	equ	0xFE5
  6311                           fsr1h	equ	0xFE2
  6312                           fsr1l	equ	0xFE1
  6313                           indf2	equ	0xFDF
  6314                           postinc2	equ	0xFDE
  6315                           postdec2	equ	0xFDD
  6316                           fsr2h	equ	0xFDA
  6317                           fsr2l	equ	0xFD9
  6318                           status	equ	0xFD8
  6319                           
  6320 ;; *************** function ___ftmul *****************
  6321 ;; Defined at:
  6322 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;  f1              3   34[BANK0 ] float 
  6325 ;;  f2              3   37[BANK0 ] float 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  f3_as_produc    3   44[BANK0 ] unsigned um
  6328 ;;  sign            1   48[BANK0 ] unsigned char 
  6329 ;;  cntr            1   47[BANK0 ] unsigned char 
  6330 ;;  exp             1   43[BANK0 ] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  3   34[BANK0 ] float 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6340 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;Total ram usage:       15 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    9
  6347 ;; This function calls:
  6348 ;;		___ftpack
  6349 ;; This function is called by:
  6350 ;;		_fround
  6351 ;;		_scale
  6352 ;;		_sprintf
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text7
  6357  003BDE                     __ptext7:
  6358                           	opt stack 0
  6359  003BDE                     ___ftmul:
  6360                           	opt stack 19
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;incstack = 0
  6364  003BDE  C0A4  F0A8         	movff	___ftmul@f1+2,??___ftmul
  6365  003BE2  0100               	movlb	0	; () banked
  6366  003BE4  6BA9               	clrf	(??___ftmul+1)& (0+255),b
  6367  003BE6  6BAA               	clrf	(??___ftmul+2)& (0+255),b
  6368  003BE8  0100               	movlb	0	; () banked
  6369  003BEA  35A3               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6370  003BEC  0100               	movlb	0	; () banked
  6371  003BEE  37A8               	rlcf	??___ftmul& (0+255),f,b
  6372  003BF0  E301               	bnc	u4731
  6373  003BF2  81A9               	bsf	(??___ftmul+1)& (0+255),0,b
  6374  003BF4                     u4731:
  6375  003BF4  0100               	movlb	0	; () banked
  6376  003BF6  51A8               	movf	??___ftmul& (0+255),w,b
  6377  003BF8  0100               	movlb	0	; () banked
  6378  003BFA  6FAB               	movwf	___ftmul@exp& (0+255),b
  6379  003BFC  0100               	movlb	0	; () banked
  6380  003BFE  51AB               	movf	___ftmul@exp& (0+255),w,b
  6381  003C00  A4D8               	btfss	status,2,c
  6382  003C02  D00A               	goto	l4295
  6383                           
  6384                           ; BSR set to: 0
  6385  003C04  0E00               	movlw	0
  6386  003C06  0100               	movlb	0	; () banked
  6387  003C08  6FA2               	movwf	?___ftmul& (0+255),b
  6388  003C0A  0E00               	movlw	0
  6389  003C0C  0100               	movlb	0	; () banked
  6390  003C0E  6FA3               	movwf	(?___ftmul+1)& (0+255),b
  6391  003C10  0E00               	movlw	0
  6392  003C12  0100               	movlb	0	; () banked
  6393  003C14  6FA4               	movwf	(?___ftmul+2)& (0+255),b
  6394                           
  6395                           ; BSR set to: 0
  6396  003C16  0012               	return	
  6397  003C18                     l4295:
  6398                           
  6399                           ; BSR set to: 0
  6400  003C18  C0A7  F0A8         	movff	___ftmul@f2+2,??___ftmul
  6401  003C1C  0100               	movlb	0	; () banked
  6402  003C1E  6BA9               	clrf	(??___ftmul+1)& (0+255),b
  6403  003C20  6BAA               	clrf	(??___ftmul+2)& (0+255),b
  6404  003C22  0100               	movlb	0	; () banked
  6405  003C24  35A6               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6406  003C26  0100               	movlb	0	; () banked
  6407  003C28  37A8               	rlcf	??___ftmul& (0+255),f,b
  6408  003C2A  E301               	bnc	u4751
  6409  003C2C  81A9               	bsf	(??___ftmul+1)& (0+255),0,b
  6410  003C2E                     u4751:
  6411  003C2E  0100               	movlb	0	; () banked
  6412  003C30  51A8               	movf	??___ftmul& (0+255),w,b
  6413  003C32  0100               	movlb	0	; () banked
  6414  003C34  6FB0               	movwf	___ftmul@sign& (0+255),b
  6415  003C36  0100               	movlb	0	; () banked
  6416  003C38  51B0               	movf	___ftmul@sign& (0+255),w,b
  6417  003C3A  A4D8               	btfss	status,2,c
  6418  003C3C  D00A               	goto	l4301
  6419                           
  6420                           ; BSR set to: 0
  6421  003C3E  0E00               	movlw	0
  6422  003C40  0100               	movlb	0	; () banked
  6423  003C42  6FA2               	movwf	?___ftmul& (0+255),b
  6424  003C44  0E00               	movlw	0
  6425  003C46  0100               	movlb	0	; () banked
  6426  003C48  6FA3               	movwf	(?___ftmul+1)& (0+255),b
  6427  003C4A  0E00               	movlw	0
  6428  003C4C  0100               	movlb	0	; () banked
  6429  003C4E  6FA4               	movwf	(?___ftmul+2)& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432  003C50  0012               	return	
  6433  003C52                     l4301:
  6434                           
  6435                           ; BSR set to: 0
  6436  003C52  0100               	movlb	0	; () banked
  6437  003C54  51B0               	movf	___ftmul@sign& (0+255),w,b
  6438  003C56  0F7B               	addlw	123
  6439  003C58  0100               	movlb	0	; () banked
  6440  003C5A  27AB               	addwf	___ftmul@exp& (0+255),f,b
  6441                           
  6442                           ; BSR set to: 0
  6443  003C5C  C0A4  F0B0         	movff	___ftmul@f1+2,___ftmul@sign
  6444  003C60  0100               	movlb	0	; () banked
  6445  003C62  51A7               	movf	(___ftmul@f2+2)& (0+255),w,b
  6446  003C64  0100               	movlb	0	; () banked
  6447  003C66  1BB0               	xorwf	___ftmul@sign& (0+255),f,b
  6448  003C68  0E80               	movlw	128
  6449  003C6A  0100               	movlb	0	; () banked
  6450  003C6C  17B0               	andwf	___ftmul@sign& (0+255),f,b
  6451                           
  6452                           ; BSR set to: 0
  6453  003C6E  0100               	movlb	0	; () banked
  6454  003C70  8FA3               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6455                           
  6456                           ; BSR set to: 0
  6457  003C72  0100               	movlb	0	; () banked
  6458  003C74  8FA6               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6459                           
  6460                           ; BSR set to: 0
  6461  003C76  0EFF               	movlw	255
  6462  003C78  0100               	movlb	0	; () banked
  6463  003C7A  17A5               	andwf	___ftmul@f2& (0+255),f,b
  6464  003C7C  0EFF               	movlw	255
  6465  003C7E  0100               	movlb	0	; () banked
  6466  003C80  17A6               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6467  003C82  0E00               	movlw	0
  6468  003C84  0100               	movlb	0	; () banked
  6469  003C86  17A7               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6470                           
  6471                           ; BSR set to: 0
  6472  003C88  0E00               	movlw	0
  6473  003C8A  0100               	movlb	0	; () banked
  6474  003C8C  6FAC               	movwf	___ftmul@f3_as_product& (0+255),b
  6475  003C8E  0E00               	movlw	0
  6476  003C90  0100               	movlb	0	; () banked
  6477  003C92  6FAD               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6478  003C94  0E00               	movlw	0
  6479  003C96  0100               	movlb	0	; () banked
  6480  003C98  6FAE               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6481                           
  6482                           ; BSR set to: 0
  6483  003C9A  0E07               	movlw	7
  6484  003C9C  0100               	movlb	0	; () banked
  6485  003C9E  6FAF               	movwf	___ftmul@cntr& (0+255),b
  6486  003CA0                     l4315:
  6487                           
  6488                           ; BSR set to: 0
  6489  003CA0  0100               	movlb	0	; () banked
  6490  003CA2  A1A2               	btfss	___ftmul@f1& (0+255),0,b
  6491  003CA4  D00C               	goto	l4319
  6492                           
  6493                           ; BSR set to: 0
  6494  003CA6  0100               	movlb	0	; () banked
  6495  003CA8  51A5               	movf	___ftmul@f2& (0+255),w,b
  6496  003CAA  0100               	movlb	0	; () banked
  6497  003CAC  27AC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6498  003CAE  0100               	movlb	0	; () banked
  6499  003CB0  51A6               	movf	(___ftmul@f2+1)& (0+255),w,b
  6500  003CB2  0100               	movlb	0	; () banked
  6501  003CB4  23AD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6502  003CB6  0100               	movlb	0	; () banked
  6503  003CB8  51A7               	movf	(___ftmul@f2+2)& (0+255),w,b
  6504  003CBA  0100               	movlb	0	; () banked
  6505  003CBC  23AE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6506  003CBE                     l4319:
  6507                           
  6508                           ; BSR set to: 0
  6509  003CBE  0100               	movlb	0	; () banked
  6510  003CC0  90D8               	bcf	status,0,c
  6511  003CC2  33A4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6512  003CC4  33A3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6513  003CC6  33A2               	rrcf	___ftmul@f1& (0+255),f,b
  6514  003CC8  0100               	movlb	0	; () banked
  6515  003CCA  90D8               	bcf	status,0,c
  6516  003CCC  37A5               	rlcf	___ftmul@f2& (0+255),f,b
  6517  003CCE  37A6               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6518  003CD0  37A7               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6519                           
  6520                           ; BSR set to: 0
  6521  003CD2  0100               	movlb	0	; () banked
  6522  003CD4  2FAF               	decfsz	___ftmul@cntr& (0+255),f,b
  6523  003CD6  D7E4               	goto	l4315
  6524                           
  6525                           ; BSR set to: 0
  6526                           
  6527                           ; BSR set to: 0
  6528  003CD8  0E09               	movlw	9
  6529  003CDA  0100               	movlb	0	; () banked
  6530  003CDC  6FAF               	movwf	___ftmul@cntr& (0+255),b
  6531  003CDE                     l4325:
  6532                           
  6533                           ; BSR set to: 0
  6534  003CDE  0100               	movlb	0	; () banked
  6535  003CE0  A1A2               	btfss	___ftmul@f1& (0+255),0,b
  6536  003CE2  D00C               	goto	l4329
  6537                           
  6538                           ; BSR set to: 0
  6539  003CE4  0100               	movlb	0	; () banked
  6540  003CE6  51A5               	movf	___ftmul@f2& (0+255),w,b
  6541  003CE8  0100               	movlb	0	; () banked
  6542  003CEA  27AC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6543  003CEC  0100               	movlb	0	; () banked
  6544  003CEE  51A6               	movf	(___ftmul@f2+1)& (0+255),w,b
  6545  003CF0  0100               	movlb	0	; () banked
  6546  003CF2  23AD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6547  003CF4  0100               	movlb	0	; () banked
  6548  003CF6  51A7               	movf	(___ftmul@f2+2)& (0+255),w,b
  6549  003CF8  0100               	movlb	0	; () banked
  6550  003CFA  23AE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6551  003CFC                     l4329:
  6552                           
  6553                           ; BSR set to: 0
  6554  003CFC  0100               	movlb	0	; () banked
  6555  003CFE  90D8               	bcf	status,0,c
  6556  003D00  33A4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6557  003D02  33A3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6558  003D04  33A2               	rrcf	___ftmul@f1& (0+255),f,b
  6559  003D06  0100               	movlb	0	; () banked
  6560  003D08  90D8               	bcf	status,0,c
  6561  003D0A  33AE               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6562  003D0C  33AD               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6563  003D0E  33AC               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6564                           
  6565                           ; BSR set to: 0
  6566  003D10  0100               	movlb	0	; () banked
  6567  003D12  2FAF               	decfsz	___ftmul@cntr& (0+255),f,b
  6568  003D14  D7E4               	goto	l4325
  6569                           
  6570                           ; BSR set to: 0
  6571                           
  6572                           ; BSR set to: 0
  6573  003D16  C0AC  F08E         	movff	___ftmul@f3_as_product,___ftpack@arg
  6574  003D1A  C0AD  F08F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6575  003D1E  C0AE  F090         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6576  003D22  C0AB  F091         	movff	___ftmul@exp,___ftpack@exp
  6577  003D26  C0B0  F092         	movff	___ftmul@sign,___ftpack@sign
  6578  003D2A  EC6D  F020         	call	___ftpack	;wreg free
  6579  003D2E  C08E  F0A2         	movff	?___ftpack,?___ftmul
  6580  003D32  C08F  F0A3         	movff	?___ftpack+1,?___ftmul+1
  6581  003D36  C090  F0A4         	movff	?___ftpack+2,?___ftmul+2
  6582  003D3A  0012               	return	
  6583  003D3C                     __end_of___ftmul:
  6584                           	opt stack 0
  6585                           tblptru	equ	0xFF8
  6586                           tblptrh	equ	0xFF7
  6587                           tblptrl	equ	0xFF6
  6588                           tablat	equ	0xFF5
  6589                           prodh	equ	0xFF4
  6590                           prodl	equ	0xFF3
  6591                           postinc0	equ	0xFEE
  6592                           wreg	equ	0xFE8
  6593                           indf1	equ	0xFE7
  6594                           postdec1	equ	0xFE5
  6595                           fsr1h	equ	0xFE2
  6596                           fsr1l	equ	0xFE1
  6597                           indf2	equ	0xFDF
  6598                           postinc2	equ	0xFDE
  6599                           postdec2	equ	0xFDD
  6600                           fsr2h	equ	0xFDA
  6601                           fsr2l	equ	0xFD9
  6602                           status	equ	0xFD8
  6603                           
  6604 ;; *************** function ___awmod *****************
  6605 ;; Defined at:
  6606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  dividend        2   14[BANK0 ] int 
  6609 ;;  divisor         2   16[BANK0 ] int 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  sign            1   19[BANK0 ] unsigned char 
  6612 ;;  counter         1   18[BANK0 ] unsigned char 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  2   14[BANK0 ] int 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6622 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;Total ram usage:        6 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    8
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_fround
  6633 ;;		_scale
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text8
  6638  0047A4                     __ptext8:
  6639                           	opt stack 0
  6640  0047A4                     ___awmod:
  6641                           	opt stack 20
  6642                           
  6643                           ;incstack = 0
  6644  0047A4  0E00               	movlw	0
  6645  0047A6  0100               	movlb	0	; () banked
  6646  0047A8  6F93               	movwf	___awmod@sign& (0+255),b
  6647                           
  6648                           ; BSR set to: 0
  6649  0047AA  0100               	movlb	0	; () banked
  6650  0047AC  AF8F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6651  0047AE  D008               	goto	l4389
  6652                           
  6653                           ; BSR set to: 0
  6654  0047B0  0100               	movlb	0	; () banked
  6655  0047B2  6D8E               	negf	___awmod@dividend& (0+255),b
  6656  0047B4  1F8F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6657  0047B6  B0D8               	btfsc	status,0,c
  6658  0047B8  2B8F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6659                           
  6660                           ; BSR set to: 0
  6661  0047BA  0E01               	movlw	1
  6662  0047BC  0100               	movlb	0	; () banked
  6663  0047BE  6F93               	movwf	___awmod@sign& (0+255),b
  6664  0047C0                     l4389:
  6665                           
  6666                           ; BSR set to: 0
  6667  0047C0  0100               	movlb	0	; () banked
  6668  0047C2  AF91               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6669  0047C4  D005               	goto	l4393
  6670                           
  6671                           ; BSR set to: 0
  6672  0047C6  0100               	movlb	0	; () banked
  6673  0047C8  6D90               	negf	___awmod@divisor& (0+255),b
  6674  0047CA  1F91               	comf	(___awmod@divisor+1)& (0+255),f,b
  6675  0047CC  B0D8               	btfsc	status,0,c
  6676  0047CE  2B91               	incf	(___awmod@divisor+1)& (0+255),f,b
  6677  0047D0                     l4393:
  6678                           
  6679                           ; BSR set to: 0
  6680  0047D0  0100               	movlb	0	; () banked
  6681  0047D2  5190               	movf	___awmod@divisor& (0+255),w,b
  6682  0047D4  0100               	movlb	0	; () banked
  6683  0047D6  1191               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6684  0047D8  B4D8               	btfsc	status,2,c
  6685  0047DA  D026               	goto	l4409
  6686                           
  6687                           ; BSR set to: 0
  6688  0047DC  0E01               	movlw	1
  6689  0047DE  0100               	movlb	0	; () banked
  6690  0047E0  6F92               	movwf	___awmod@counter& (0+255),b
  6691  0047E2  D006               	goto	l4399
  6692  0047E4                     l4397:
  6693                           
  6694                           ; BSR set to: 0
  6695  0047E4  0100               	movlb	0	; () banked
  6696  0047E6  90D8               	bcf	status,0,c
  6697  0047E8  3790               	rlcf	___awmod@divisor& (0+255),f,b
  6698  0047EA  3791               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6699  0047EC  0100               	movlb	0	; () banked
  6700  0047EE  2B92               	incf	___awmod@counter& (0+255),f,b
  6701  0047F0                     l4399:
  6702                           
  6703                           ; BSR set to: 0
  6704  0047F0  0100               	movlb	0	; () banked
  6705  0047F2  AF91               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6706  0047F4  D7F7               	goto	l4397
  6707  0047F6                     l4401:
  6708                           
  6709                           ; BSR set to: 0
  6710  0047F6  0100               	movlb	0	; () banked
  6711  0047F8  5190               	movf	___awmod@divisor& (0+255),w,b
  6712  0047FA  0100               	movlb	0	; () banked
  6713  0047FC  5D8E               	subwf	___awmod@dividend& (0+255),w,b
  6714  0047FE  0100               	movlb	0	; () banked
  6715  004800  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6716  004802  0100               	movlb	0	; () banked
  6717  004804  598F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6718  004806  A0D8               	btfss	status,0,c
  6719  004808  D008               	goto	l4405
  6720                           
  6721                           ; BSR set to: 0
  6722  00480A  0100               	movlb	0	; () banked
  6723  00480C  5190               	movf	___awmod@divisor& (0+255),w,b
  6724  00480E  0100               	movlb	0	; () banked
  6725  004810  5F8E               	subwf	___awmod@dividend& (0+255),f,b
  6726  004812  0100               	movlb	0	; () banked
  6727  004814  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6728  004816  0100               	movlb	0	; () banked
  6729  004818  5B8F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6730  00481A                     l4405:
  6731                           
  6732                           ; BSR set to: 0
  6733  00481A  0100               	movlb	0	; () banked
  6734  00481C  90D8               	bcf	status,0,c
  6735  00481E  3391               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6736  004820  3390               	rrcf	___awmod@divisor& (0+255),f,b
  6737                           
  6738                           ; BSR set to: 0
  6739  004822  0100               	movlb	0	; () banked
  6740  004824  2F92               	decfsz	___awmod@counter& (0+255),f,b
  6741  004826  D7E7               	goto	l4401
  6742  004828                     l4409:
  6743                           
  6744                           ; BSR set to: 0
  6745  004828  0100               	movlb	0	; () banked
  6746  00482A  5193               	movf	___awmod@sign& (0+255),w,b
  6747  00482C  0100               	movlb	0	; () banked
  6748  00482E  B4D8               	btfsc	status,2,c
  6749  004830  D005               	goto	l4413
  6750                           
  6751                           ; BSR set to: 0
  6752  004832  0100               	movlb	0	; () banked
  6753  004834  6D8E               	negf	___awmod@dividend& (0+255),b
  6754  004836  1F8F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6755  004838  B0D8               	btfsc	status,0,c
  6756  00483A  2B8F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6757  00483C                     l4413:
  6758                           
  6759                           ; BSR set to: 0
  6760  00483C  C08E  F08E         	movff	___awmod@dividend,?___awmod
  6761  004840  C08F  F08F         	movff	___awmod@dividend+1,?___awmod+1
  6762  004844  0012               	return	
  6763  004846                     __end_of___awmod:
  6764                           	opt stack 0
  6765                           tblptru	equ	0xFF8
  6766                           tblptrh	equ	0xFF7
  6767                           tblptrl	equ	0xFF6
  6768                           tablat	equ	0xFF5
  6769                           prodh	equ	0xFF4
  6770                           prodl	equ	0xFF3
  6771                           postinc0	equ	0xFEE
  6772                           wreg	equ	0xFE8
  6773                           indf1	equ	0xFE7
  6774                           postdec1	equ	0xFE5
  6775                           fsr1h	equ	0xFE2
  6776                           fsr1l	equ	0xFE1
  6777                           indf2	equ	0xFDF
  6778                           postinc2	equ	0xFDE
  6779                           postdec2	equ	0xFDD
  6780                           fsr2h	equ	0xFDA
  6781                           fsr2l	equ	0xFD9
  6782                           status	equ	0xFD8
  6783                           
  6784 ;; *************** function ___awdiv *****************
  6785 ;; Defined at:
  6786 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  dividend        2   20[BANK0 ] int 
  6789 ;;  divisor         2   22[BANK0 ] int 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  quotient        2   26[BANK0 ] int 
  6792 ;;  sign            1   25[BANK0 ] unsigned char 
  6793 ;;  counter         1   24[BANK0 ] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  2   20[BANK0 ] int 
  6796 ;; Registers used:
  6797 ;;		wreg, status,2, status,0
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;Total ram usage:        8 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:    8
  6810 ;; This function calls:
  6811 ;;		Nothing
  6812 ;; This function is called by:
  6813 ;;		_fround
  6814 ;;		_scale
  6815 ;;		_sprintf
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819                           	psect	text9
  6820  00457C                     __ptext9:
  6821                           	opt stack 0
  6822  00457C                     ___awdiv:
  6823                           	opt stack 20
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;incstack = 0
  6827  00457C  0E00               	movlw	0
  6828  00457E  0100               	movlb	0	; () banked
  6829  004580  6F99               	movwf	___awdiv@sign& (0+255),b
  6830                           
  6831                           ; BSR set to: 0
  6832  004582  0100               	movlb	0	; () banked
  6833  004584  AF97               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6834  004586  D008               	goto	l4345
  6835                           
  6836                           ; BSR set to: 0
  6837  004588  0100               	movlb	0	; () banked
  6838  00458A  6D96               	negf	___awdiv@divisor& (0+255),b
  6839  00458C  1F97               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6840  00458E  B0D8               	btfsc	status,0,c
  6841  004590  2B97               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6842                           
  6843                           ; BSR set to: 0
  6844  004592  0E01               	movlw	1
  6845  004594  0100               	movlb	0	; () banked
  6846  004596  6F99               	movwf	___awdiv@sign& (0+255),b
  6847  004598                     l4345:
  6848                           
  6849                           ; BSR set to: 0
  6850  004598  0100               	movlb	0	; () banked
  6851  00459A  AF95               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6852  00459C  D008               	goto	l4351
  6853                           
  6854                           ; BSR set to: 0
  6855  00459E  0100               	movlb	0	; () banked
  6856  0045A0  6D94               	negf	___awdiv@dividend& (0+255),b
  6857  0045A2  1F95               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6858  0045A4  B0D8               	btfsc	status,0,c
  6859  0045A6  2B95               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6860                           
  6861                           ; BSR set to: 0
  6862  0045A8  0E01               	movlw	1
  6863  0045AA  0100               	movlb	0	; () banked
  6864  0045AC  1B99               	xorwf	___awdiv@sign& (0+255),f,b
  6865  0045AE                     l4351:
  6866                           
  6867                           ; BSR set to: 0
  6868  0045AE  0E00               	movlw	0
  6869  0045B0  0100               	movlb	0	; () banked
  6870  0045B2  6F9B               	movwf	(___awdiv@quotient+1)& (0+255),b
  6871  0045B4  0E00               	movlw	0
  6872  0045B6  6F9A               	movwf	___awdiv@quotient& (0+255),b
  6873                           
  6874                           ; BSR set to: 0
  6875  0045B8  0100               	movlb	0	; () banked
  6876  0045BA  5196               	movf	___awdiv@divisor& (0+255),w,b
  6877  0045BC  0100               	movlb	0	; () banked
  6878  0045BE  1197               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6879  0045C0  B4D8               	btfsc	status,2,c
  6880  0045C2  D02C               	goto	l4373
  6881                           
  6882                           ; BSR set to: 0
  6883  0045C4  0E01               	movlw	1
  6884  0045C6  0100               	movlb	0	; () banked
  6885  0045C8  6F98               	movwf	___awdiv@counter& (0+255),b
  6886  0045CA  D006               	goto	l4359
  6887  0045CC                     l4357:
  6888                           
  6889                           ; BSR set to: 0
  6890  0045CC  0100               	movlb	0	; () banked
  6891  0045CE  90D8               	bcf	status,0,c
  6892  0045D0  3796               	rlcf	___awdiv@divisor& (0+255),f,b
  6893  0045D2  3797               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6894  0045D4  0100               	movlb	0	; () banked
  6895  0045D6  2B98               	incf	___awdiv@counter& (0+255),f,b
  6896  0045D8                     l4359:
  6897                           
  6898                           ; BSR set to: 0
  6899  0045D8  0100               	movlb	0	; () banked
  6900  0045DA  AF97               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6901  0045DC  D7F7               	goto	l4357
  6902  0045DE                     l4361:
  6903                           
  6904                           ; BSR set to: 0
  6905  0045DE  0100               	movlb	0	; () banked
  6906  0045E0  90D8               	bcf	status,0,c
  6907  0045E2  379A               	rlcf	___awdiv@quotient& (0+255),f,b
  6908  0045E4  379B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6909                           
  6910                           ; BSR set to: 0
  6911  0045E6  0100               	movlb	0	; () banked
  6912  0045E8  5196               	movf	___awdiv@divisor& (0+255),w,b
  6913  0045EA  0100               	movlb	0	; () banked
  6914  0045EC  5D94               	subwf	___awdiv@dividend& (0+255),w,b
  6915  0045EE  0100               	movlb	0	; () banked
  6916  0045F0  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6917  0045F2  0100               	movlb	0	; () banked
  6918  0045F4  5995               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6919  0045F6  A0D8               	btfss	status,0,c
  6920  0045F8  D00A               	goto	l4369
  6921                           
  6922                           ; BSR set to: 0
  6923  0045FA  0100               	movlb	0	; () banked
  6924  0045FC  5196               	movf	___awdiv@divisor& (0+255),w,b
  6925  0045FE  0100               	movlb	0	; () banked
  6926  004600  5F94               	subwf	___awdiv@dividend& (0+255),f,b
  6927  004602  0100               	movlb	0	; () banked
  6928  004604  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6929  004606  0100               	movlb	0	; () banked
  6930  004608  5B95               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6931                           
  6932                           ; BSR set to: 0
  6933  00460A  0100               	movlb	0	; () banked
  6934  00460C  819A               	bsf	___awdiv@quotient& (0+255),0,b
  6935  00460E                     l4369:
  6936                           
  6937                           ; BSR set to: 0
  6938  00460E  0100               	movlb	0	; () banked
  6939  004610  90D8               	bcf	status,0,c
  6940  004612  3397               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6941  004614  3396               	rrcf	___awdiv@divisor& (0+255),f,b
  6942                           
  6943                           ; BSR set to: 0
  6944  004616  0100               	movlb	0	; () banked
  6945  004618  2F98               	decfsz	___awdiv@counter& (0+255),f,b
  6946  00461A  D7E1               	goto	l4361
  6947  00461C                     l4373:
  6948                           
  6949                           ; BSR set to: 0
  6950  00461C  0100               	movlb	0	; () banked
  6951  00461E  5199               	movf	___awdiv@sign& (0+255),w,b
  6952  004620  0100               	movlb	0	; () banked
  6953  004622  B4D8               	btfsc	status,2,c
  6954  004624  D005               	goto	l4377
  6955                           
  6956                           ; BSR set to: 0
  6957  004626  0100               	movlb	0	; () banked
  6958  004628  6D9A               	negf	___awdiv@quotient& (0+255),b
  6959  00462A  1F9B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6960  00462C  B0D8               	btfsc	status,0,c
  6961  00462E  2B9B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6962  004630                     l4377:
  6963                           
  6964                           ; BSR set to: 0
  6965  004630  C09A  F094         	movff	___awdiv@quotient,?___awdiv
  6966  004634  C09B  F095         	movff	___awdiv@quotient+1,?___awdiv+1
  6967  004638  0012               	return	
  6968  00463A                     __end_of___awdiv:
  6969                           	opt stack 0
  6970                           tblptru	equ	0xFF8
  6971                           tblptrh	equ	0xFF7
  6972                           tblptrl	equ	0xFF6
  6973                           tablat	equ	0xFF5
  6974                           prodh	equ	0xFF4
  6975                           prodl	equ	0xFF3
  6976                           postinc0	equ	0xFEE
  6977                           wreg	equ	0xFE8
  6978                           indf1	equ	0xFE7
  6979                           postdec1	equ	0xFE5
  6980                           fsr1h	equ	0xFE2
  6981                           fsr1l	equ	0xFE1
  6982                           indf2	equ	0xFDF
  6983                           postinc2	equ	0xFDE
  6984                           postdec2	equ	0xFDD
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8
  6988                           
  6989 ;; *************** function __tdiv_to_l_ *****************
  6990 ;; Defined at:
  6991 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  f1              3   14[BANK0 ] float 
  6994 ;;  f2              3   17[BANK0 ] float 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  quot            4   23[BANK0 ] unsigned long 
  6997 ;;  exp1            1   28[BANK0 ] unsigned char 
  6998 ;;  cntr            1   27[BANK0 ] unsigned char 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  4   14[BANK0 ] unsigned long 
  7001 ;; Registers used:
  7002 ;;		wreg, status,2, status,0
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7008 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7009 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;Total ram usage:       15 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; Hardware stack levels required when called:    8
  7015 ;; This function calls:
  7016 ;;		Nothing
  7017 ;; This function is called by:
  7018 ;;		_sprintf
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text10
  7023  003756                     __ptext10:
  7024                           	opt stack 0
  7025  003756                     __tdiv_to_l_:
  7026                           	opt stack 21
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;incstack = 0
  7030  003756  C090  F094         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7031  00375A  0100               	movlb	0	; () banked
  7032  00375C  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7033  00375E  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7034  003760  0100               	movlb	0	; () banked
  7035  003762  358F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7036  003764  0100               	movlb	0	; () banked
  7037  003766  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7038  003768  E301               	bnc	u5461
  7039  00376A  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7040  00376C                     u5461:
  7041  00376C  0100               	movlb	0	; () banked
  7042  00376E  5194               	movf	??__tdiv_to_l_& (0+255),w,b
  7043  003770  0100               	movlb	0	; () banked
  7044  003772  6F9C               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7045  003774  0100               	movlb	0	; () banked
  7046  003776  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7047  003778  A4D8               	btfss	status,2,c
  7048  00377A  D00A               	goto	l4869
  7049                           
  7050                           ; BSR set to: 0
  7051  00377C  0E00               	movlw	0
  7052  00377E  0100               	movlb	0	; () banked
  7053  003780  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  7054  003782  0E00               	movlw	0
  7055  003784  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7056  003786  0E00               	movlw	0
  7057  003788  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7058  00378A  0E00               	movlw	0
  7059  00378C  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7060                           
  7061                           ; BSR set to: 0
  7062  00378E  0012               	return	
  7063  003790                     l4869:
  7064                           
  7065                           ; BSR set to: 0
  7066  003790  C093  F094         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7067  003794  0100               	movlb	0	; () banked
  7068  003796  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7069  003798  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7070  00379A  0100               	movlb	0	; () banked
  7071  00379C  3592               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7072  00379E  0100               	movlb	0	; () banked
  7073  0037A0  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7074  0037A2  E301               	bnc	u5481
  7075  0037A4  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7076  0037A6                     u5481:
  7077  0037A6  0100               	movlb	0	; () banked
  7078  0037A8  5194               	movf	??__tdiv_to_l_& (0+255),w,b
  7079  0037AA  0100               	movlb	0	; () banked
  7080  0037AC  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7081  0037AE  0100               	movlb	0	; () banked
  7082  0037B0  519B               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7083  0037B2  A4D8               	btfss	status,2,c
  7084  0037B4  D00A               	goto	l4875
  7085                           
  7086                           ; BSR set to: 0
  7087  0037B6  0E00               	movlw	0
  7088  0037B8  0100               	movlb	0	; () banked
  7089  0037BA  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  7090  0037BC  0E00               	movlw	0
  7091  0037BE  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7092  0037C0  0E00               	movlw	0
  7093  0037C2  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7094  0037C4  0E00               	movlw	0
  7095  0037C6  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7096                           
  7097                           ; BSR set to: 0
  7098  0037C8  0012               	return	
  7099  0037CA                     l4875:
  7100                           
  7101                           ; BSR set to: 0
  7102  0037CA  0100               	movlb	0	; () banked
  7103  0037CC  8F8F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7104                           
  7105                           ; BSR set to: 0
  7106  0037CE  0EFF               	movlw	255
  7107  0037D0  0100               	movlb	0	; () banked
  7108  0037D2  178E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7109  0037D4  0EFF               	movlw	255
  7110  0037D6  0100               	movlb	0	; () banked
  7111  0037D8  178F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7112  0037DA  0E00               	movlw	0
  7113  0037DC  0100               	movlb	0	; () banked
  7114  0037DE  1790               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7115  0037E0  0100               	movlb	0	; () banked
  7116  0037E2  8F92               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7117                           
  7118                           ; BSR set to: 0
  7119  0037E4  0EFF               	movlw	255
  7120  0037E6  0100               	movlb	0	; () banked
  7121  0037E8  1791               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7122  0037EA  0EFF               	movlw	255
  7123  0037EC  0100               	movlb	0	; () banked
  7124  0037EE  1792               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7125  0037F0  0E00               	movlw	0
  7126  0037F2  0100               	movlb	0	; () banked
  7127  0037F4  1793               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7128                           
  7129                           ; BSR set to: 0
  7130  0037F6  0E00               	movlw	0
  7131  0037F8  0100               	movlb	0	; () banked
  7132  0037FA  6F97               	movwf	__tdiv_to_l_@quot& (0+255),b
  7133  0037FC  0E00               	movlw	0
  7134  0037FE  6F98               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7135  003800  0E00               	movlw	0
  7136  003802  6F99               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7137  003804  0E00               	movlw	0
  7138  003806  6F9A               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7139                           
  7140                           ; BSR set to: 0
  7141  003808  0E7F               	movlw	127
  7142  00380A  0100               	movlb	0	; () banked
  7143  00380C  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7144                           
  7145                           ; BSR set to: 0
  7146  00380E  0100               	movlb	0	; () banked
  7147  003810  519B               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7148  003812  0F98               	addlw	152
  7149  003814  0100               	movlb	0	; () banked
  7150  003816  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7151                           
  7152                           ; BSR set to: 0
  7153  003818  0E18               	movlw	24
  7154  00381A  0100               	movlb	0	; () banked
  7155  00381C  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7156  00381E                     l763:
  7157                           
  7158                           ; BSR set to: 0
  7159  00381E  0100               	movlb	0	; () banked
  7160  003820  90D8               	bcf	status,0,c
  7161  003822  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7162  003824  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7163  003826  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7164  003828  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7165                           
  7166                           ; BSR set to: 0
  7167  00382A  0100               	movlb	0	; () banked
  7168  00382C  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7169  00382E  0100               	movlb	0	; () banked
  7170  003830  5D8E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7171  003832  0100               	movlb	0	; () banked
  7172  003834  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7173  003836  0100               	movlb	0	; () banked
  7174  003838  598F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7175  00383A  0100               	movlb	0	; () banked
  7176  00383C  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7177  00383E  0100               	movlb	0	; () banked
  7178  003840  5990               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7179  003842  A0D8               	btfss	status,0,c
  7180  003844  D00E               	goto	l764
  7181                           
  7182                           ; BSR set to: 0
  7183  003846  0100               	movlb	0	; () banked
  7184  003848  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7185  00384A  0100               	movlb	0	; () banked
  7186  00384C  5F8E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7187  00384E  0100               	movlb	0	; () banked
  7188  003850  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7189  003852  0100               	movlb	0	; () banked
  7190  003854  5B8F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7191  003856  0100               	movlb	0	; () banked
  7192  003858  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7193  00385A  0100               	movlb	0	; () banked
  7194  00385C  5B90               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7195                           
  7196                           ; BSR set to: 0
  7197  00385E  0100               	movlb	0	; () banked
  7198  003860  8197               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7199  003862                     l764:
  7200                           
  7201                           ; BSR set to: 0
  7202  003862  0100               	movlb	0	; () banked
  7203  003864  90D8               	bcf	status,0,c
  7204  003866  378E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7205  003868  378F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7206  00386A  3790               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7207                           
  7208                           ; BSR set to: 0
  7209  00386C  0100               	movlb	0	; () banked
  7210  00386E  2F9B               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7211  003870  D7D6               	goto	l763
  7212                           
  7213                           ; BSR set to: 0
  7214                           
  7215                           ; BSR set to: 0
  7216  003872  0100               	movlb	0	; () banked
  7217  003874  AF9C               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7218  003876  D01A               	goto	l4909
  7219                           
  7220                           ; BSR set to: 0
  7221  003878  0100               	movlb	0	; () banked
  7222  00387A  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7223  00387C  0A80               	xorlw	128
  7224  00387E  0F97               	addlw	151
  7225  003880  B0D8               	btfsc	status,0,c
  7226  003882  D00A               	goto	l4905
  7227                           
  7228                           ; BSR set to: 0
  7229  003884  0E00               	movlw	0
  7230  003886  0100               	movlb	0	; () banked
  7231  003888  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  7232  00388A  0E00               	movlw	0
  7233  00388C  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7234  00388E  0E00               	movlw	0
  7235  003890  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7236  003892  0E00               	movlw	0
  7237  003894  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7238                           
  7239                           ; BSR set to: 0
  7240  003896  0012               	return	
  7241  003898                     l4905:
  7242                           
  7243                           ; BSR set to: 0
  7244  003898  0100               	movlb	0	; () banked
  7245  00389A  90D8               	bcf	status,0,c
  7246  00389C  339A               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7247  00389E  3399               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7248  0038A0  3398               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7249  0038A2  3397               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7250                           
  7251                           ; BSR set to: 0
  7252  0038A4  0100               	movlb	0	; () banked
  7253  0038A6  3F9C               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7254  0038A8  D7F7               	goto	l4905
  7255                           
  7256                           ; BSR set to: 0
  7257  0038AA  D01B               	goto	l770
  7258  0038AC                     l4909:
  7259                           
  7260                           ; BSR set to: 0
  7261  0038AC  0E17               	movlw	23
  7262  0038AE  0100               	movlb	0	; () banked
  7263  0038B0  659C               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7264  0038B2  D012               	goto	l4917
  7265                           
  7266                           ; BSR set to: 0
  7267  0038B4  0E00               	movlw	0
  7268  0038B6  0100               	movlb	0	; () banked
  7269  0038B8  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  7270  0038BA  0E00               	movlw	0
  7271  0038BC  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7272  0038BE  0E00               	movlw	0
  7273  0038C0  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7274  0038C2  0E00               	movlw	0
  7275  0038C4  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7276                           
  7277                           ; BSR set to: 0
  7278  0038C6  0012               	return	
  7279  0038C8                     l4915:
  7280                           
  7281                           ; BSR set to: 0
  7282  0038C8  0100               	movlb	0	; () banked
  7283  0038CA  90D8               	bcf	status,0,c
  7284  0038CC  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7285  0038CE  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7286  0038D0  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7287  0038D2  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7288  0038D4  0100               	movlb	0	; () banked
  7289  0038D6  079C               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7290  0038D8                     l4917:
  7291                           
  7292                           ; BSR set to: 0
  7293  0038D8  0100               	movlb	0	; () banked
  7294  0038DA  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7295  0038DC  0100               	movlb	0	; () banked
  7296  0038DE  A4D8               	btfss	status,2,c
  7297  0038E0  D7F3               	goto	l4915
  7298  0038E2                     l770:
  7299                           
  7300                           ; BSR set to: 0
  7301  0038E2  C097  F08E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7302  0038E6  C098  F08F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7303  0038EA  C099  F090         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7304  0038EE  C09A  F091         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7305                           
  7306                           ; BSR set to: 0
  7307  0038F2  0012               	return		;funcret
  7308  0038F4                     __end_of__tdiv_to_l_:
  7309                           	opt stack 0
  7310                           tblptru	equ	0xFF8
  7311                           tblptrh	equ	0xFF7
  7312                           tblptrl	equ	0xFF6
  7313                           tablat	equ	0xFF5
  7314                           prodh	equ	0xFF4
  7315                           prodl	equ	0xFF3
  7316                           postinc0	equ	0xFEE
  7317                           wreg	equ	0xFE8
  7318                           indf1	equ	0xFE7
  7319                           postdec1	equ	0xFE5
  7320                           fsr1h	equ	0xFE2
  7321                           fsr1l	equ	0xFE1
  7322                           indf2	equ	0xFDF
  7323                           postinc2	equ	0xFDE
  7324                           postdec2	equ	0xFDD
  7325                           fsr2h	equ	0xFDA
  7326                           fsr2l	equ	0xFD9
  7327                           status	equ	0xFD8
  7328                           
  7329 ;; *************** function __div_to_l_ *****************
  7330 ;; Defined at:
  7331 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  f1              3   14[BANK0 ] unsigned long 
  7334 ;;  f2              3   17[BANK0 ] unsigned long 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  quot            4   20[BANK0 ] unsigned long 
  7337 ;;  exp1            1   25[BANK0 ] unsigned char 
  7338 ;;  cntr            1   24[BANK0 ] unsigned char 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  4   14[BANK0 ] unsigned long 
  7341 ;; Registers used:
  7342 ;;		wreg, status,2, status,0
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7348 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7351 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;Total ram usage:       12 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:    8
  7355 ;; This function calls:
  7356 ;;		Nothing
  7357 ;; This function is called by:
  7358 ;;		_sprintf
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text11
  7363  0038F4                     __ptext11:
  7364                           	opt stack 0
  7365  0038F4                     __div_to_l_:
  7366                           	opt stack 21
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;incstack = 0
  7370  0038F4  0100               	movlb	0	; () banked
  7371  0038F6  3590               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7372  0038F8  3591               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7373  0038FA  0100               	movlb	0	; () banked
  7374  0038FC  6F99               	movwf	__div_to_l_@exp1& (0+255),b
  7375  0038FE  0100               	movlb	0	; () banked
  7376  003900  5199               	movf	__div_to_l_@exp1& (0+255),w,b
  7377  003902  A4D8               	btfss	status,2,c
  7378  003904  D00A               	goto	l4925
  7379                           
  7380                           ; BSR set to: 0
  7381  003906  0E00               	movlw	0
  7382  003908  0100               	movlb	0	; () banked
  7383  00390A  6F8E               	movwf	?__div_to_l_& (0+255),b
  7384  00390C  0E00               	movlw	0
  7385  00390E  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  7386  003910  0E00               	movlw	0
  7387  003912  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  7388  003914  0E00               	movlw	0
  7389  003916  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  7390                           
  7391                           ; BSR set to: 0
  7392  003918  0012               	return	
  7393  00391A                     l4925:
  7394                           
  7395                           ; BSR set to: 0
  7396  00391A  0100               	movlb	0	; () banked
  7397  00391C  3593               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7398  00391E  3594               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7399  003920  0100               	movlb	0	; () banked
  7400  003922  6F98               	movwf	__div_to_l_@cntr& (0+255),b
  7401  003924  0100               	movlb	0	; () banked
  7402  003926  5198               	movf	__div_to_l_@cntr& (0+255),w,b
  7403  003928  A4D8               	btfss	status,2,c
  7404  00392A  D00A               	goto	l4931
  7405                           
  7406                           ; BSR set to: 0
  7407  00392C  0E00               	movlw	0
  7408  00392E  0100               	movlb	0	; () banked
  7409  003930  6F8E               	movwf	?__div_to_l_& (0+255),b
  7410  003932  0E00               	movlw	0
  7411  003934  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  7412  003936  0E00               	movlw	0
  7413  003938  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  7414  00393A  0E00               	movlw	0
  7415  00393C  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  7416                           
  7417                           ; BSR set to: 0
  7418  00393E  0012               	return	
  7419  003940                     l4931:
  7420                           
  7421                           ; BSR set to: 0
  7422  003940  0100               	movlb	0	; () banked
  7423  003942  8F90               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7424                           
  7425                           ; BSR set to: 0
  7426  003944  0EFF               	movlw	255
  7427  003946  0100               	movlb	0	; () banked
  7428  003948  178E               	andwf	__div_to_l_@f1& (0+255),f,b
  7429  00394A  0EFF               	movlw	255
  7430  00394C  178F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7431  00394E  0EFF               	movlw	255
  7432  003950  1790               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7433  003952  0E00               	movlw	0
  7434  003954  1791               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7435                           
  7436                           ; BSR set to: 0
  7437  003956  0100               	movlb	0	; () banked
  7438  003958  8F93               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7439  00395A  0EFF               	movlw	255
  7440  00395C  0100               	movlb	0	; () banked
  7441  00395E  1791               	andwf	__div_to_l_@f2& (0+255),f,b
  7442  003960  0EFF               	movlw	255
  7443  003962  1792               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7444  003964  0EFF               	movlw	255
  7445  003966  1793               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7446  003968  0E00               	movlw	0
  7447  00396A  1794               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7448                           
  7449                           ; BSR set to: 0
  7450  00396C  0E00               	movlw	0
  7451  00396E  0100               	movlb	0	; () banked
  7452  003970  6F94               	movwf	__div_to_l_@quot& (0+255),b
  7453  003972  0E00               	movlw	0
  7454  003974  6F95               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7455  003976  0E00               	movlw	0
  7456  003978  6F96               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7457  00397A  0E00               	movlw	0
  7458  00397C  6F97               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7459                           
  7460                           ; BSR set to: 0
  7461  00397E  0E7F               	movlw	127
  7462  003980  0100               	movlb	0	; () banked
  7463  003982  5F99               	subwf	__div_to_l_@exp1& (0+255),f,b
  7464                           
  7465                           ; BSR set to: 0
  7466  003984  0100               	movlb	0	; () banked
  7467  003986  5198               	movf	__div_to_l_@cntr& (0+255),w,b
  7468  003988  0FA0               	addlw	160
  7469  00398A  0100               	movlb	0	; () banked
  7470  00398C  5F99               	subwf	__div_to_l_@exp1& (0+255),f,b
  7471                           
  7472                           ; BSR set to: 0
  7473  00398E  0E20               	movlw	32
  7474  003990  0100               	movlb	0	; () banked
  7475  003992  6F98               	movwf	__div_to_l_@cntr& (0+255),b
  7476  003994                     l4945:
  7477                           
  7478                           ; BSR set to: 0
  7479  003994  0100               	movlb	0	; () banked
  7480  003996  90D8               	bcf	status,0,c
  7481  003998  3794               	rlcf	__div_to_l_@quot& (0+255),f,b
  7482  00399A  3795               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7483  00399C  3796               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7484  00399E  3797               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7485                           
  7486                           ; BSR set to: 0
  7487  0039A0  0100               	movlb	0	; () banked
  7488  0039A2  5191               	movf	__div_to_l_@f2& (0+255),w,b
  7489  0039A4  0100               	movlb	0	; () banked
  7490  0039A6  5D8E               	subwf	__div_to_l_@f1& (0+255),w,b
  7491  0039A8  0100               	movlb	0	; () banked
  7492  0039AA  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7493  0039AC  0100               	movlb	0	; () banked
  7494  0039AE  598F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7495  0039B0  0100               	movlb	0	; () banked
  7496  0039B2  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7497  0039B4  0100               	movlb	0	; () banked
  7498  0039B6  5990               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7499  0039B8  0100               	movlb	0	; () banked
  7500  0039BA  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7501  0039BC  0100               	movlb	0	; () banked
  7502  0039BE  5991               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7503  0039C0  A0D8               	btfss	status,0,c
  7504  0039C2  D012               	goto	l4953
  7505                           
  7506                           ; BSR set to: 0
  7507  0039C4  0100               	movlb	0	; () banked
  7508  0039C6  5191               	movf	__div_to_l_@f2& (0+255),w,b
  7509  0039C8  0100               	movlb	0	; () banked
  7510  0039CA  5F8E               	subwf	__div_to_l_@f1& (0+255),f,b
  7511  0039CC  0100               	movlb	0	; () banked
  7512  0039CE  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7513  0039D0  0100               	movlb	0	; () banked
  7514  0039D2  5B8F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7515  0039D4  0100               	movlb	0	; () banked
  7516  0039D6  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7517  0039D8  0100               	movlb	0	; () banked
  7518  0039DA  5B90               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7519  0039DC  0100               	movlb	0	; () banked
  7520  0039DE  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7521  0039E0  0100               	movlb	0	; () banked
  7522  0039E2  5B91               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7523                           
  7524                           ; BSR set to: 0
  7525  0039E4  0100               	movlb	0	; () banked
  7526  0039E6  8194               	bsf	__div_to_l_@quot& (0+255),0,b
  7527  0039E8                     l4953:
  7528                           
  7529                           ; BSR set to: 0
  7530  0039E8  0100               	movlb	0	; () banked
  7531  0039EA  90D8               	bcf	status,0,c
  7532  0039EC  378E               	rlcf	__div_to_l_@f1& (0+255),f,b
  7533  0039EE  378F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7534  0039F0  3790               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7535  0039F2  3791               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7536                           
  7537                           ; BSR set to: 0
  7538  0039F4  0100               	movlb	0	; () banked
  7539  0039F6  2F98               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7540  0039F8  D7CD               	goto	l4945
  7541                           
  7542                           ; BSR set to: 0
  7543                           
  7544                           ; BSR set to: 0
  7545  0039FA  0100               	movlb	0	; () banked
  7546  0039FC  AF99               	btfss	__div_to_l_@exp1& (0+255),7,b
  7547  0039FE  D01A               	goto	l4969
  7548                           
  7549                           ; BSR set to: 0
  7550  003A00  0100               	movlb	0	; () banked
  7551  003A02  5199               	movf	__div_to_l_@exp1& (0+255),w,b
  7552  003A04  0A80               	xorlw	128
  7553  003A06  0F9F               	addlw	159
  7554  003A08  B0D8               	btfsc	status,0,c
  7555  003A0A  D00A               	goto	l4965
  7556                           
  7557                           ; BSR set to: 0
  7558  003A0C  0E00               	movlw	0
  7559  003A0E  0100               	movlb	0	; () banked
  7560  003A10  6F8E               	movwf	?__div_to_l_& (0+255),b
  7561  003A12  0E00               	movlw	0
  7562  003A14  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  7563  003A16  0E00               	movlw	0
  7564  003A18  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  7565  003A1A  0E00               	movlw	0
  7566  003A1C  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  7567                           
  7568                           ; BSR set to: 0
  7569  003A1E  0012               	return	
  7570  003A20                     l4965:
  7571                           
  7572                           ; BSR set to: 0
  7573  003A20  0100               	movlb	0	; () banked
  7574  003A22  90D8               	bcf	status,0,c
  7575  003A24  3397               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7576  003A26  3396               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7577  003A28  3395               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7578  003A2A  3394               	rrcf	__div_to_l_@quot& (0+255),f,b
  7579                           
  7580                           ; BSR set to: 0
  7581  003A2C  0100               	movlb	0	; () banked
  7582  003A2E  3F99               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7583  003A30  D7F7               	goto	l4965
  7584                           
  7585                           ; BSR set to: 0
  7586  003A32  D01B               	goto	l666
  7587  003A34                     l4969:
  7588                           
  7589                           ; BSR set to: 0
  7590  003A34  0E1F               	movlw	31
  7591  003A36  0100               	movlb	0	; () banked
  7592  003A38  6599               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7593  003A3A  D012               	goto	l4977
  7594                           
  7595                           ; BSR set to: 0
  7596  003A3C  0E00               	movlw	0
  7597  003A3E  0100               	movlb	0	; () banked
  7598  003A40  6F8E               	movwf	?__div_to_l_& (0+255),b
  7599  003A42  0E00               	movlw	0
  7600  003A44  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  7601  003A46  0E00               	movlw	0
  7602  003A48  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  7603  003A4A  0E00               	movlw	0
  7604  003A4C  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  7605                           
  7606                           ; BSR set to: 0
  7607  003A4E  0012               	return	
  7608  003A50                     l4975:
  7609                           
  7610                           ; BSR set to: 0
  7611  003A50  0100               	movlb	0	; () banked
  7612  003A52  90D8               	bcf	status,0,c
  7613  003A54  3794               	rlcf	__div_to_l_@quot& (0+255),f,b
  7614  003A56  3795               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7615  003A58  3796               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7616  003A5A  3797               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7617  003A5C  0100               	movlb	0	; () banked
  7618  003A5E  0799               	decf	__div_to_l_@exp1& (0+255),f,b
  7619  003A60                     l4977:
  7620                           
  7621                           ; BSR set to: 0
  7622  003A60  0100               	movlb	0	; () banked
  7623  003A62  5199               	movf	__div_to_l_@exp1& (0+255),w,b
  7624  003A64  0100               	movlb	0	; () banked
  7625  003A66  A4D8               	btfss	status,2,c
  7626  003A68  D7F3               	goto	l4975
  7627  003A6A                     l666:
  7628                           
  7629                           ; BSR set to: 0
  7630  003A6A  C094  F08E         	movff	__div_to_l_@quot,?__div_to_l_
  7631  003A6E  C095  F08F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7632  003A72  C096  F090         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7633  003A76  C097  F091         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7634                           
  7635                           ; BSR set to: 0
  7636  003A7A  0012               	return		;funcret
  7637  003A7C                     __end_of__div_to_l_:
  7638                           	opt stack 0
  7639                           tblptru	equ	0xFF8
  7640                           tblptrh	equ	0xFF7
  7641                           tblptrl	equ	0xFF6
  7642                           tablat	equ	0xFF5
  7643                           prodh	equ	0xFF4
  7644                           prodl	equ	0xFF3
  7645                           postinc0	equ	0xFEE
  7646                           wreg	equ	0xFE8
  7647                           indf1	equ	0xFE7
  7648                           postdec1	equ	0xFE5
  7649                           fsr1h	equ	0xFE2
  7650                           fsr1l	equ	0xFE1
  7651                           indf2	equ	0xFDF
  7652                           postinc2	equ	0xFDE
  7653                           postdec2	equ	0xFDD
  7654                           fsr2h	equ	0xFDA
  7655                           fsr2l	equ	0xFD9
  7656                           status	equ	0xFD8
  7657                           
  7658 ;; *************** function ___lltoft *****************
  7659 ;; Defined at:
  7660 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lltoft.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  c               4   22[BANK0 ] unsigned long 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  exp             1   30[BANK0 ] unsigned char 
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  3   22[BANK0 ] float 
  7667 ;; Registers used:
  7668 ;;		wreg, status,2, status,0, cstack
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7674 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7678 ;;Total ram usage:        9 bytes
  7679 ;; Hardware stack levels used:    1
  7680 ;; Hardware stack levels required when called:    9
  7681 ;; This function calls:
  7682 ;;		___ftpack
  7683 ;; This function is called by:
  7684 ;;		_sprintf
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text12
  7689  004CAE                     __ptext12:
  7690                           	opt stack 0
  7691  004CAE                     ___lltoft:
  7692                           	opt stack 20
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;incstack = 0
  7696  004CAE  0E8E               	movlw	142
  7697  004CB0  0100               	movlb	0	; () banked
  7698  004CB2  6F9E               	movwf	___lltoft@exp& (0+255),b
  7699  004CB4  D008               	goto	l5097
  7700  004CB6                     l5095:
  7701                           
  7702                           ; BSR set to: 0
  7703  004CB6  0100               	movlb	0	; () banked
  7704  004CB8  90D8               	bcf	status,0,c
  7705  004CBA  3399               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7706  004CBC  3398               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7707  004CBE  3397               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7708  004CC0  3396               	rrcf	___lltoft@c& (0+255),f,b
  7709  004CC2  0100               	movlb	0	; () banked
  7710  004CC4  2B9E               	incf	___lltoft@exp& (0+255),f,b
  7711  004CC6                     l5097:
  7712                           
  7713                           ; BSR set to: 0
  7714  004CC6  0E00               	movlw	0
  7715  004CC8  0100               	movlb	0	; () banked
  7716  004CCA  1596               	andwf	___lltoft@c& (0+255),w,b
  7717  004CCC  0100               	movlb	0	; () banked
  7718  004CCE  6F9A               	movwf	??___lltoft& (0+255),b
  7719  004CD0  0E00               	movlw	0
  7720  004CD2  0100               	movlb	0	; () banked
  7721  004CD4  1597               	andwf	(___lltoft@c+1)& (0+255),w,b
  7722  004CD6  0100               	movlb	0	; () banked
  7723  004CD8  6F9B               	movwf	(??___lltoft+1)& (0+255),b
  7724  004CDA  0E00               	movlw	0
  7725  004CDC  0100               	movlb	0	; () banked
  7726  004CDE  1598               	andwf	(___lltoft@c+2)& (0+255),w,b
  7727  004CE0  0100               	movlb	0	; () banked
  7728  004CE2  6F9C               	movwf	(??___lltoft+2)& (0+255),b
  7729  004CE4  0EFF               	movlw	255
  7730  004CE6  0100               	movlb	0	; () banked
  7731  004CE8  1599               	andwf	(___lltoft@c+3)& (0+255),w,b
  7732  004CEA  0100               	movlb	0	; () banked
  7733  004CEC  6F9D               	movwf	(??___lltoft+3)& (0+255),b
  7734  004CEE  0100               	movlb	0	; () banked
  7735  004CF0  519A               	movf	??___lltoft& (0+255),w,b
  7736  004CF2  0100               	movlb	0	; () banked
  7737  004CF4  119B               	iorwf	(??___lltoft+1)& (0+255),w,b
  7738  004CF6  0100               	movlb	0	; () banked
  7739  004CF8  119C               	iorwf	(??___lltoft+2)& (0+255),w,b
  7740  004CFA  0100               	movlb	0	; () banked
  7741  004CFC  119D               	iorwf	(??___lltoft+3)& (0+255),w,b
  7742  004CFE  A4D8               	btfss	status,2,c
  7743  004D00  D7DA               	goto	l5095
  7744                           
  7745                           ; BSR set to: 0
  7746                           
  7747                           ; BSR set to: 0
  7748  004D02  C096  F08E         	movff	___lltoft@c,___ftpack@arg
  7749  004D06  C097  F08F         	movff	___lltoft@c+1,___ftpack@arg+1
  7750  004D0A  C098  F090         	movff	___lltoft@c+2,___ftpack@arg+2
  7751  004D0E  C09E  F091         	movff	___lltoft@exp,___ftpack@exp
  7752  004D12  0E00               	movlw	0
  7753  004D14  0100               	movlb	0	; () banked
  7754  004D16  6F92               	movwf	___ftpack@sign& (0+255),b
  7755  004D18  EC6D  F020         	call	___ftpack	;wreg free
  7756  004D1C  C08E  F096         	movff	?___ftpack,?___lltoft
  7757  004D20  C08F  F097         	movff	?___ftpack+1,?___lltoft+1
  7758  004D24  C090  F098         	movff	?___ftpack+2,?___lltoft+2
  7759  004D28  0012               	return	
  7760  004D2A                     __end_of___lltoft:
  7761                           	opt stack 0
  7762                           tblptru	equ	0xFF8
  7763                           tblptrh	equ	0xFF7
  7764                           tblptrl	equ	0xFF6
  7765                           tablat	equ	0xFF5
  7766                           prodh	equ	0xFF4
  7767                           prodl	equ	0xFF3
  7768                           postinc0	equ	0xFEE
  7769                           wreg	equ	0xFE8
  7770                           indf1	equ	0xFE7
  7771                           postdec1	equ	0xFE5
  7772                           fsr1h	equ	0xFE2
  7773                           fsr1l	equ	0xFE1
  7774                           indf2	equ	0xFDF
  7775                           postinc2	equ	0xFDE
  7776                           postdec2	equ	0xFDD
  7777                           fsr2h	equ	0xFDA
  7778                           fsr2l	equ	0xFD9
  7779                           status	equ	0xFD8
  7780                           
  7781 ;; *************** function ___llmod *****************
  7782 ;; Defined at:
  7783 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  dividend        4   27[BANK0 ] unsigned long 
  7786 ;;  divisor         4   31[BANK0 ] unsigned long 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;  counter         1   35[BANK0 ] unsigned char 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  4   27[BANK0 ] unsigned long 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2, status,0
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7798 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;Total ram usage:        9 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    8
  7805 ;; This function calls:
  7806 ;;		Nothing
  7807 ;; This function is called by:
  7808 ;;		_sprintf
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           	psect	text13
  7813  004846                     __ptext13:
  7814                           	opt stack 0
  7815  004846                     ___llmod:
  7816                           	opt stack 21
  7817                           
  7818                           ;incstack = 0
  7819  004846  0100               	movlb	0	; () banked
  7820  004848  519F               	movf	___llmod@divisor& (0+255),w,b
  7821  00484A  0100               	movlb	0	; () banked
  7822  00484C  11A0               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7823  00484E  0100               	movlb	0	; () banked
  7824  004850  11A1               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7825  004852  0100               	movlb	0	; () banked
  7826  004854  11A2               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7827  004856  B4D8               	btfsc	status,2,c
  7828  004858  D03A               	goto	l855
  7829                           
  7830                           ; BSR set to: 0
  7831  00485A  0E01               	movlw	1
  7832  00485C  0100               	movlb	0	; () banked
  7833  00485E  6FA3               	movwf	___llmod@counter& (0+255),b
  7834  004860  D008               	goto	l5083
  7835  004862                     l5081:
  7836                           
  7837                           ; BSR set to: 0
  7838  004862  0100               	movlb	0	; () banked
  7839  004864  90D8               	bcf	status,0,c
  7840  004866  379F               	rlcf	___llmod@divisor& (0+255),f,b
  7841  004868  37A0               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7842  00486A  37A1               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7843  00486C  37A2               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7844  00486E  0100               	movlb	0	; () banked
  7845  004870  2BA3               	incf	___llmod@counter& (0+255),f,b
  7846  004872                     l5083:
  7847                           
  7848                           ; BSR set to: 0
  7849  004872  0100               	movlb	0	; () banked
  7850  004874  AFA2               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7851  004876  D7F5               	goto	l5081
  7852  004878                     l5085:
  7853                           
  7854                           ; BSR set to: 0
  7855  004878  0100               	movlb	0	; () banked
  7856  00487A  519F               	movf	___llmod@divisor& (0+255),w,b
  7857  00487C  0100               	movlb	0	; () banked
  7858  00487E  5D9B               	subwf	___llmod@dividend& (0+255),w,b
  7859  004880  0100               	movlb	0	; () banked
  7860  004882  51A0               	movf	(___llmod@divisor+1)& (0+255),w,b
  7861  004884  0100               	movlb	0	; () banked
  7862  004886  599C               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7863  004888  0100               	movlb	0	; () banked
  7864  00488A  51A1               	movf	(___llmod@divisor+2)& (0+255),w,b
  7865  00488C  0100               	movlb	0	; () banked
  7866  00488E  599D               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7867  004890  0100               	movlb	0	; () banked
  7868  004892  51A2               	movf	(___llmod@divisor+3)& (0+255),w,b
  7869  004894  0100               	movlb	0	; () banked
  7870  004896  599E               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7871  004898  A0D8               	btfss	status,0,c
  7872  00489A  D010               	goto	l5089
  7873                           
  7874                           ; BSR set to: 0
  7875  00489C  0100               	movlb	0	; () banked
  7876  00489E  519F               	movf	___llmod@divisor& (0+255),w,b
  7877  0048A0  0100               	movlb	0	; () banked
  7878  0048A2  5F9B               	subwf	___llmod@dividend& (0+255),f,b
  7879  0048A4  0100               	movlb	0	; () banked
  7880  0048A6  51A0               	movf	(___llmod@divisor+1)& (0+255),w,b
  7881  0048A8  0100               	movlb	0	; () banked
  7882  0048AA  5B9C               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7883  0048AC  0100               	movlb	0	; () banked
  7884  0048AE  51A1               	movf	(___llmod@divisor+2)& (0+255),w,b
  7885  0048B0  0100               	movlb	0	; () banked
  7886  0048B2  5B9D               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7887  0048B4  0100               	movlb	0	; () banked
  7888  0048B6  51A2               	movf	(___llmod@divisor+3)& (0+255),w,b
  7889  0048B8  0100               	movlb	0	; () banked
  7890  0048BA  5B9E               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7891  0048BC                     l5089:
  7892                           
  7893                           ; BSR set to: 0
  7894  0048BC  0100               	movlb	0	; () banked
  7895  0048BE  90D8               	bcf	status,0,c
  7896  0048C0  33A2               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7897  0048C2  33A1               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7898  0048C4  33A0               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7899  0048C6  339F               	rrcf	___llmod@divisor& (0+255),f,b
  7900                           
  7901                           ; BSR set to: 0
  7902  0048C8  0100               	movlb	0	; () banked
  7903  0048CA  2FA3               	decfsz	___llmod@counter& (0+255),f,b
  7904  0048CC  D7D5               	goto	l5085
  7905  0048CE                     l855:
  7906                           
  7907                           ; BSR set to: 0
  7908  0048CE  C09B  F09B         	movff	___llmod@dividend,?___llmod
  7909  0048D2  C09C  F09C         	movff	___llmod@dividend+1,?___llmod+1
  7910  0048D6  C09D  F09D         	movff	___llmod@dividend+2,?___llmod+2
  7911  0048DA  C09E  F09E         	movff	___llmod@dividend+3,?___llmod+3
  7912                           
  7913                           ; BSR set to: 0
  7914  0048DE  0012               	return		;funcret
  7915  0048E0                     __end_of___llmod:
  7916                           	opt stack 0
  7917                           tblptru	equ	0xFF8
  7918                           tblptrh	equ	0xFF7
  7919                           tblptrl	equ	0xFF6
  7920                           tablat	equ	0xFF5
  7921                           prodh	equ	0xFF4
  7922                           prodl	equ	0xFF3
  7923                           postinc0	equ	0xFEE
  7924                           wreg	equ	0xFE8
  7925                           indf1	equ	0xFE7
  7926                           postdec1	equ	0xFE5
  7927                           fsr1h	equ	0xFE2
  7928                           fsr1l	equ	0xFE1
  7929                           indf2	equ	0xFDF
  7930                           postinc2	equ	0xFDE
  7931                           postdec2	equ	0xFDD
  7932                           fsr2h	equ	0xFDA
  7933                           fsr2l	equ	0xFD9
  7934                           status	equ	0xFD8
  7935                           
  7936 ;; *************** function ___lldiv *****************
  7937 ;; Defined at:
  7938 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  dividend        4   14[BANK0 ] unsigned long 
  7941 ;;  divisor         4   18[BANK0 ] unsigned long 
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  quotient        4   22[BANK0 ] unsigned long 
  7944 ;;  counter         1   26[BANK0 ] unsigned char 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  4   14[BANK0 ] unsigned long 
  7947 ;; Registers used:
  7948 ;;		wreg, status,2, status,0
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7954 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;Total ram usage:       13 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    8
  7961 ;; This function calls:
  7962 ;;		Nothing
  7963 ;; This function is called by:
  7964 ;;		_sprintf
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text14
  7969  00463A                     __ptext14:
  7970                           	opt stack 0
  7971  00463A                     ___lldiv:
  7972                           	opt stack 21
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;incstack = 0
  7976  00463A  0E00               	movlw	0
  7977  00463C  0100               	movlb	0	; () banked
  7978  00463E  6F96               	movwf	___lldiv@quotient& (0+255),b
  7979  004640  0E00               	movlw	0
  7980  004642  6F97               	movwf	(___lldiv@quotient+1)& (0+255),b
  7981  004644  0E00               	movlw	0
  7982  004646  6F98               	movwf	(___lldiv@quotient+2)& (0+255),b
  7983  004648  0E00               	movlw	0
  7984  00464A  6F99               	movwf	(___lldiv@quotient+3)& (0+255),b
  7985                           
  7986                           ; BSR set to: 0
  7987  00464C  0100               	movlb	0	; () banked
  7988  00464E  5192               	movf	___lldiv@divisor& (0+255),w,b
  7989  004650  0100               	movlb	0	; () banked
  7990  004652  1193               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7991  004654  0100               	movlb	0	; () banked
  7992  004656  1194               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7993  004658  0100               	movlb	0	; () banked
  7994  00465A  1195               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7995  00465C  B4D8               	btfsc	status,2,c
  7996  00465E  D042               	goto	l845
  7997                           
  7998                           ; BSR set to: 0
  7999  004660  0E01               	movlw	1
  8000  004662  0100               	movlb	0	; () banked
  8001  004664  6F9A               	movwf	___lldiv@counter& (0+255),b
  8002  004666  D008               	goto	l5063
  8003  004668                     l5061:
  8004                           
  8005                           ; BSR set to: 0
  8006  004668  0100               	movlb	0	; () banked
  8007  00466A  90D8               	bcf	status,0,c
  8008  00466C  3792               	rlcf	___lldiv@divisor& (0+255),f,b
  8009  00466E  3793               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8010  004670  3794               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8011  004672  3795               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8012  004674  0100               	movlb	0	; () banked
  8013  004676  2B9A               	incf	___lldiv@counter& (0+255),f,b
  8014  004678                     l5063:
  8015                           
  8016                           ; BSR set to: 0
  8017  004678  0100               	movlb	0	; () banked
  8018  00467A  AF95               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8019  00467C  D7F5               	goto	l5061
  8020  00467E                     l5065:
  8021                           
  8022                           ; BSR set to: 0
  8023  00467E  0100               	movlb	0	; () banked
  8024  004680  90D8               	bcf	status,0,c
  8025  004682  3796               	rlcf	___lldiv@quotient& (0+255),f,b
  8026  004684  3797               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8027  004686  3798               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8028  004688  3799               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8029                           
  8030                           ; BSR set to: 0
  8031  00468A  0100               	movlb	0	; () banked
  8032  00468C  5192               	movf	___lldiv@divisor& (0+255),w,b
  8033  00468E  0100               	movlb	0	; () banked
  8034  004690  5D8E               	subwf	___lldiv@dividend& (0+255),w,b
  8035  004692  0100               	movlb	0	; () banked
  8036  004694  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8037  004696  0100               	movlb	0	; () banked
  8038  004698  598F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8039  00469A  0100               	movlb	0	; () banked
  8040  00469C  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8041  00469E  0100               	movlb	0	; () banked
  8042  0046A0  5990               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8043  0046A2  0100               	movlb	0	; () banked
  8044  0046A4  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8045  0046A6  0100               	movlb	0	; () banked
  8046  0046A8  5991               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8047  0046AA  A0D8               	btfss	status,0,c
  8048  0046AC  D012               	goto	l5073
  8049                           
  8050                           ; BSR set to: 0
  8051  0046AE  0100               	movlb	0	; () banked
  8052  0046B0  5192               	movf	___lldiv@divisor& (0+255),w,b
  8053  0046B2  0100               	movlb	0	; () banked
  8054  0046B4  5F8E               	subwf	___lldiv@dividend& (0+255),f,b
  8055  0046B6  0100               	movlb	0	; () banked
  8056  0046B8  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8057  0046BA  0100               	movlb	0	; () banked
  8058  0046BC  5B8F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8059  0046BE  0100               	movlb	0	; () banked
  8060  0046C0  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8061  0046C2  0100               	movlb	0	; () banked
  8062  0046C4  5B90               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8063  0046C6  0100               	movlb	0	; () banked
  8064  0046C8  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8065  0046CA  0100               	movlb	0	; () banked
  8066  0046CC  5B91               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8067                           
  8068                           ; BSR set to: 0
  8069  0046CE  0100               	movlb	0	; () banked
  8070  0046D0  8196               	bsf	___lldiv@quotient& (0+255),0,b
  8071  0046D2                     l5073:
  8072                           
  8073                           ; BSR set to: 0
  8074  0046D2  0100               	movlb	0	; () banked
  8075  0046D4  90D8               	bcf	status,0,c
  8076  0046D6  3395               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8077  0046D8  3394               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8078  0046DA  3393               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8079  0046DC  3392               	rrcf	___lldiv@divisor& (0+255),f,b
  8080                           
  8081                           ; BSR set to: 0
  8082  0046DE  0100               	movlb	0	; () banked
  8083  0046E0  2F9A               	decfsz	___lldiv@counter& (0+255),f,b
  8084  0046E2  D7CD               	goto	l5065
  8085  0046E4                     l845:
  8086                           
  8087                           ; BSR set to: 0
  8088  0046E4  C096  F08E         	movff	___lldiv@quotient,?___lldiv
  8089  0046E8  C097  F08F         	movff	___lldiv@quotient+1,?___lldiv+1
  8090  0046EC  C098  F090         	movff	___lldiv@quotient+2,?___lldiv+2
  8091  0046F0  C099  F091         	movff	___lldiv@quotient+3,?___lldiv+3
  8092                           
  8093                           ; BSR set to: 0
  8094  0046F4  0012               	return		;funcret
  8095  0046F6                     __end_of___lldiv:
  8096                           	opt stack 0
  8097                           tblptru	equ	0xFF8
  8098                           tblptrh	equ	0xFF7
  8099                           tblptrl	equ	0xFF6
  8100                           tablat	equ	0xFF5
  8101                           prodh	equ	0xFF4
  8102                           prodl	equ	0xFF3
  8103                           postinc0	equ	0xFEE
  8104                           wreg	equ	0xFE8
  8105                           indf1	equ	0xFE7
  8106                           postdec1	equ	0xFE5
  8107                           fsr1h	equ	0xFE2
  8108                           fsr1l	equ	0xFE1
  8109                           indf2	equ	0xFDF
  8110                           postinc2	equ	0xFDE
  8111                           postdec2	equ	0xFDD
  8112                           fsr2h	equ	0xFDA
  8113                           fsr2l	equ	0xFD9
  8114                           status	equ	0xFD8
  8115                           
  8116 ;; *************** function ___fttol *****************
  8117 ;; Defined at:
  8118 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  f1              3   56[BANK0 ] float 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  lval            4   66[BANK0 ] unsigned long 
  8123 ;;  exp1            1   70[BANK0 ] unsigned char 
  8124 ;;  sign1           1   65[BANK0 ] unsigned char 
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  4   56[BANK0 ] long 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2, status,0
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8138 ;;Total ram usage:       15 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; Hardware stack levels required when called:    8
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		_sprintf
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           	psect	text15
  8149  003D3C                     __ptext15:
  8150                           	opt stack 0
  8151  003D3C                     ___fttol:
  8152                           	opt stack 21
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;incstack = 0
  8156  003D3C  C0BA  F0BC         	movff	___fttol@f1+2,??___fttol
  8157  003D40  0100               	movlb	0	; () banked
  8158  003D42  6BBD               	clrf	(??___fttol+1)& (0+255),b
  8159  003D44  6BBE               	clrf	(??___fttol+2)& (0+255),b
  8160  003D46  0100               	movlb	0	; () banked
  8161  003D48  35B9               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8162  003D4A  0100               	movlb	0	; () banked
  8163  003D4C  37BC               	rlcf	??___fttol& (0+255),f,b
  8164  003D4E  E301               	bnc	u5671
  8165  003D50  81BD               	bsf	(??___fttol+1)& (0+255),0,b
  8166  003D52                     u5671:
  8167  003D52  0100               	movlb	0	; () banked
  8168  003D54  51BC               	movf	??___fttol& (0+255),w,b
  8169  003D56  0100               	movlb	0	; () banked
  8170  003D58  6FC6               	movwf	___fttol@exp1& (0+255),b
  8171  003D5A  0100               	movlb	0	; () banked
  8172  003D5C  51C6               	movf	___fttol@exp1& (0+255),w,b
  8173  003D5E  A4D8               	btfss	status,2,c
  8174  003D60  D00A               	goto	l5015
  8175                           
  8176                           ; BSR set to: 0
  8177  003D62  0E00               	movlw	0
  8178  003D64  0100               	movlb	0	; () banked
  8179  003D66  6FB8               	movwf	?___fttol& (0+255),b
  8180  003D68  0E00               	movlw	0
  8181  003D6A  6FB9               	movwf	(?___fttol+1)& (0+255),b
  8182  003D6C  0E00               	movlw	0
  8183  003D6E  6FBA               	movwf	(?___fttol+2)& (0+255),b
  8184  003D70  0E00               	movlw	0
  8185  003D72  6FBB               	movwf	(?___fttol+3)& (0+255),b
  8186                           
  8187                           ; BSR set to: 0
  8188  003D74  0012               	return	
  8189  003D76                     l5015:
  8190                           
  8191                           ; BSR set to: 0
  8192  003D76  0E17               	movlw	23
  8193  003D78  0100               	movlb	0	; () banked
  8194  003D7A  6FBC               	movwf	??___fttol& (0+255),b
  8195  003D7C  C0B8  F0BD         	movff	___fttol@f1,??___fttol+1
  8196  003D80  C0B9  F0BE         	movff	___fttol@f1+1,??___fttol+2
  8197  003D84  C0BA  F0BF         	movff	___fttol@f1+2,??___fttol+3
  8198  003D88  0100               	movlb	0	; () banked
  8199  003D8A  29BC               	incf	??___fttol& (0+255),w,b
  8200  003D8C  0100               	movlb	0	; () banked
  8201  003D8E  6FC0               	movwf	(??___fttol+4)& (0+255),b
  8202  003D90  D005               	goto	u5690
  8203  003D92                     u5695:
  8204  003D92  0100               	movlb	0	; () banked
  8205  003D94  90D8               	bcf	status,0,c
  8206  003D96  33BF               	rrcf	(??___fttol+3)& (0+255),f,b
  8207  003D98  33BE               	rrcf	(??___fttol+2)& (0+255),f,b
  8208  003D9A  33BD               	rrcf	(??___fttol+1)& (0+255),f,b
  8209  003D9C                     u5690:
  8210  003D9C  0100               	movlb	0	; () banked
  8211  003D9E  2FC0               	decfsz	(??___fttol+4)& (0+255),f,b
  8212  003DA0  D7F8               	goto	u5695
  8213  003DA2  0100               	movlb	0	; () banked
  8214  003DA4  51BD               	movf	(??___fttol+1)& (0+255),w,b
  8215  003DA6  0100               	movlb	0	; () banked
  8216  003DA8  6FC1               	movwf	___fttol@sign1& (0+255),b
  8217                           
  8218                           ; BSR set to: 0
  8219  003DAA  0100               	movlb	0	; () banked
  8220  003DAC  8FB9               	bsf	(___fttol@f1+1)& (0+255),7,b
  8221                           
  8222                           ; BSR set to: 0
  8223  003DAE  0EFF               	movlw	255
  8224  003DB0  0100               	movlb	0	; () banked
  8225  003DB2  17B8               	andwf	___fttol@f1& (0+255),f,b
  8226  003DB4  0EFF               	movlw	255
  8227  003DB6  0100               	movlb	0	; () banked
  8228  003DB8  17B9               	andwf	(___fttol@f1+1)& (0+255),f,b
  8229  003DBA  0E00               	movlw	0
  8230  003DBC  0100               	movlb	0	; () banked
  8231  003DBE  17BA               	andwf	(___fttol@f1+2)& (0+255),f,b
  8232                           
  8233                           ; BSR set to: 0
  8234  003DC0  0100               	movlb	0	; () banked
  8235  003DC2  51B8               	movf	___fttol@f1& (0+255),w,b
  8236  003DC4  0100               	movlb	0	; () banked
  8237  003DC6  6FC2               	movwf	___fttol@lval& (0+255),b
  8238  003DC8  0100               	movlb	0	; () banked
  8239  003DCA  51B9               	movf	(___fttol@f1+1)& (0+255),w,b
  8240  003DCC  0100               	movlb	0	; () banked
  8241  003DCE  6FC3               	movwf	(___fttol@lval+1)& (0+255),b
  8242  003DD0  0100               	movlb	0	; () banked
  8243  003DD2  51BA               	movf	(___fttol@f1+2)& (0+255),w,b
  8244  003DD4  0100               	movlb	0	; () banked
  8245  003DD6  6FC4               	movwf	(___fttol@lval+2)& (0+255),b
  8246  003DD8  0100               	movlb	0	; () banked
  8247  003DDA  6BC5               	clrf	(___fttol@lval+3)& (0+255),b
  8248                           
  8249                           ; BSR set to: 0
  8250  003DDC  0E8E               	movlw	142
  8251  003DDE  0100               	movlb	0	; () banked
  8252  003DE0  5FC6               	subwf	___fttol@exp1& (0+255),f,b
  8253                           
  8254                           ; BSR set to: 0
  8255  003DE2  0100               	movlb	0	; () banked
  8256  003DE4  AFC6               	btfss	___fttol@exp1& (0+255),7,b
  8257  003DE6  D01A               	goto	l5037
  8258                           
  8259                           ; BSR set to: 0
  8260  003DE8  0100               	movlb	0	; () banked
  8261  003DEA  51C6               	movf	___fttol@exp1& (0+255),w,b
  8262  003DEC  0A80               	xorlw	128
  8263  003DEE  0F8F               	addlw	143
  8264  003DF0  B0D8               	btfsc	status,0,c
  8265  003DF2  D00A               	goto	l5033
  8266                           
  8267                           ; BSR set to: 0
  8268  003DF4  0E00               	movlw	0
  8269  003DF6  0100               	movlb	0	; () banked
  8270  003DF8  6FB8               	movwf	?___fttol& (0+255),b
  8271  003DFA  0E00               	movlw	0
  8272  003DFC  6FB9               	movwf	(?___fttol+1)& (0+255),b
  8273  003DFE  0E00               	movlw	0
  8274  003E00  6FBA               	movwf	(?___fttol+2)& (0+255),b
  8275  003E02  0E00               	movlw	0
  8276  003E04  6FBB               	movwf	(?___fttol+3)& (0+255),b
  8277                           
  8278                           ; BSR set to: 0
  8279  003E06  0012               	return	
  8280  003E08                     l5033:
  8281                           
  8282                           ; BSR set to: 0
  8283  003E08  0100               	movlb	0	; () banked
  8284  003E0A  90D8               	bcf	status,0,c
  8285  003E0C  33C5               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8286  003E0E  33C4               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8287  003E10  33C3               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8288  003E12  33C2               	rrcf	___fttol@lval& (0+255),f,b
  8289                           
  8290                           ; BSR set to: 0
  8291  003E14  0100               	movlb	0	; () banked
  8292  003E16  3FC6               	incfsz	___fttol@exp1& (0+255),f,b
  8293  003E18  D7F7               	goto	l5033
  8294                           
  8295                           ; BSR set to: 0
  8296  003E1A  D01B               	goto	l5047
  8297  003E1C                     l5037:
  8298                           
  8299                           ; BSR set to: 0
  8300  003E1C  0E17               	movlw	23
  8301  003E1E  0100               	movlb	0	; () banked
  8302  003E20  65C6               	cpfsgt	___fttol@exp1& (0+255),b
  8303  003E22  D012               	goto	l5045
  8304                           
  8305                           ; BSR set to: 0
  8306  003E24  0E00               	movlw	0
  8307  003E26  0100               	movlb	0	; () banked
  8308  003E28  6FB8               	movwf	?___fttol& (0+255),b
  8309  003E2A  0E00               	movlw	0
  8310  003E2C  6FB9               	movwf	(?___fttol+1)& (0+255),b
  8311  003E2E  0E00               	movlw	0
  8312  003E30  6FBA               	movwf	(?___fttol+2)& (0+255),b
  8313  003E32  0E00               	movlw	0
  8314  003E34  6FBB               	movwf	(?___fttol+3)& (0+255),b
  8315                           
  8316                           ; BSR set to: 0
  8317  003E36  0012               	return	
  8318  003E38                     l5043:
  8319                           
  8320                           ; BSR set to: 0
  8321  003E38  0100               	movlb	0	; () banked
  8322  003E3A  90D8               	bcf	status,0,c
  8323  003E3C  37C2               	rlcf	___fttol@lval& (0+255),f,b
  8324  003E3E  37C3               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8325  003E40  37C4               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8326  003E42  37C5               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8327  003E44  0100               	movlb	0	; () banked
  8328  003E46  07C6               	decf	___fttol@exp1& (0+255),f,b
  8329  003E48                     l5045:
  8330                           
  8331                           ; BSR set to: 0
  8332  003E48  0100               	movlb	0	; () banked
  8333  003E4A  51C6               	movf	___fttol@exp1& (0+255),w,b
  8334  003E4C  0100               	movlb	0	; () banked
  8335  003E4E  A4D8               	btfss	status,2,c
  8336  003E50  D7F3               	goto	l5043
  8337  003E52                     l5047:
  8338                           
  8339                           ; BSR set to: 0
  8340  003E52  0100               	movlb	0	; () banked
  8341  003E54  51C1               	movf	___fttol@sign1& (0+255),w,b
  8342  003E56  0100               	movlb	0	; () banked
  8343  003E58  B4D8               	btfsc	status,2,c
  8344  003E5A  D009               	goto	l5051
  8345                           
  8346                           ; BSR set to: 0
  8347  003E5C  0100               	movlb	0	; () banked
  8348  003E5E  1FC5               	comf	(___fttol@lval+3)& (0+255),f,b
  8349  003E60  1FC4               	comf	(___fttol@lval+2)& (0+255),f,b
  8350  003E62  1FC3               	comf	(___fttol@lval+1)& (0+255),f,b
  8351  003E64  6DC2               	negf	___fttol@lval& (0+255),b
  8352  003E66  0E00               	movlw	0
  8353  003E68  23C3               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8354  003E6A  23C4               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8355  003E6C  23C5               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8356  003E6E                     l5051:
  8357                           
  8358                           ; BSR set to: 0
  8359  003E6E  C0C2  F0B8         	movff	___fttol@lval,?___fttol
  8360  003E72  C0C3  F0B9         	movff	___fttol@lval+1,?___fttol+1
  8361  003E76  C0C4  F0BA         	movff	___fttol@lval+2,?___fttol+2
  8362  003E7A  C0C5  F0BB         	movff	___fttol@lval+3,?___fttol+3
  8363  003E7E  0012               	return	
  8364  003E80                     __end_of___fttol:
  8365                           	opt stack 0
  8366                           tblptru	equ	0xFF8
  8367                           tblptrh	equ	0xFF7
  8368                           tblptrl	equ	0xFF6
  8369                           tablat	equ	0xFF5
  8370                           prodh	equ	0xFF4
  8371                           prodl	equ	0xFF3
  8372                           postinc0	equ	0xFEE
  8373                           wreg	equ	0xFE8
  8374                           indf1	equ	0xFE7
  8375                           postdec1	equ	0xFE5
  8376                           fsr1h	equ	0xFE2
  8377                           fsr1l	equ	0xFE1
  8378                           indf2	equ	0xFDF
  8379                           postinc2	equ	0xFDE
  8380                           postdec2	equ	0xFDD
  8381                           fsr2h	equ	0xFDA
  8382                           fsr2l	equ	0xFD9
  8383                           status	equ	0xFD8
  8384                           
  8385 ;; *************** function ___ftsub *****************
  8386 ;; Defined at:
  8387 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftsub.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  f1              3   71[BANK0 ] float 
  8390 ;;  f2              3   74[BANK0 ] float 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;		None
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  3   71[BANK0 ] float 
  8395 ;; Registers used:
  8396 ;;		wreg, status,2, status,0, cstack
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8402 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8405 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8406 ;;Total ram usage:        6 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:   10
  8409 ;; This function calls:
  8410 ;;		___ftadd
  8411 ;; This function is called by:
  8412 ;;		_sprintf
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text16
  8417  00514E                     __ptext16:
  8418                           	opt stack 0
  8419  00514E                     ___ftsub:
  8420                           	opt stack 19
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;incstack = 0
  8424  00514E  0100               	movlb	0	; () banked
  8425  005150  51CA               	movf	___ftsub@f2& (0+255),w,b
  8426  005152  0100               	movlb	0	; () banked
  8427  005154  11CB               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8428  005156  0100               	movlb	0	; () banked
  8429  005158  11CC               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8430  00515A  B4D8               	btfsc	status,2,c
  8431  00515C  D009               	goto	l4983
  8432                           
  8433                           ; BSR set to: 0
  8434  00515E  0E00               	movlw	0
  8435  005160  0100               	movlb	0	; () banked
  8436  005162  1BCA               	xorwf	___ftsub@f2& (0+255),f,b
  8437  005164  0E00               	movlw	0
  8438  005166  0100               	movlb	0	; () banked
  8439  005168  1BCB               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8440  00516A  0E80               	movlw	128
  8441  00516C  0100               	movlb	0	; () banked
  8442  00516E  1BCC               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8443  005170                     l4983:
  8444                           
  8445                           ; BSR set to: 0
  8446  005170  C0C7  F0BB         	movff	___ftsub@f1,___ftadd@f1
  8447  005174  C0C8  F0BC         	movff	___ftsub@f1+1,___ftadd@f1+1
  8448  005178  C0C9  F0BD         	movff	___ftsub@f1+2,___ftadd@f1+2
  8449  00517C  C0CA  F0BE         	movff	___ftsub@f2,___ftadd@f2
  8450  005180  C0CB  F0BF         	movff	___ftsub@f2+1,___ftadd@f2+1
  8451  005184  C0CC  F0C0         	movff	___ftsub@f2+2,___ftadd@f2+2
  8452  005188  ECA1  F019         	call	___ftadd	;wreg free
  8453  00518C  C0BB  F0C7         	movff	?___ftadd,?___ftsub
  8454  005190  C0BC  F0C8         	movff	?___ftadd+1,?___ftsub+1
  8455  005194  C0BD  F0C9         	movff	?___ftadd+2,?___ftsub+2
  8456  005198  0012               	return	
  8457  00519A                     __end_of___ftsub:
  8458                           	opt stack 0
  8459                           tblptru	equ	0xFF8
  8460                           tblptrh	equ	0xFF7
  8461                           tblptrl	equ	0xFF6
  8462                           tablat	equ	0xFF5
  8463                           prodh	equ	0xFF4
  8464                           prodl	equ	0xFF3
  8465                           postinc0	equ	0xFEE
  8466                           wreg	equ	0xFE8
  8467                           indf1	equ	0xFE7
  8468                           postdec1	equ	0xFE5
  8469                           fsr1h	equ	0xFE2
  8470                           fsr1l	equ	0xFE1
  8471                           indf2	equ	0xFDF
  8472                           postinc2	equ	0xFDE
  8473                           postdec2	equ	0xFDD
  8474                           fsr2h	equ	0xFDA
  8475                           fsr2l	equ	0xFD9
  8476                           status	equ	0xFD8
  8477                           
  8478 ;; *************** function ___ftadd *****************
  8479 ;; Defined at:
  8480 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  f1              3   59[BANK0 ] float 
  8483 ;;  f2              3   62[BANK0 ] float 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  exp1            1   70[BANK0 ] unsigned char 
  8486 ;;  exp2            1   69[BANK0 ] unsigned char 
  8487 ;;  sign            1   68[BANK0 ] unsigned char 
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  3   59[BANK0 ] float 
  8490 ;; Registers used:
  8491 ;;		wreg, status,2, status,0, cstack
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8497 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8498 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8499 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;Total ram usage:       12 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:    9
  8504 ;; This function calls:
  8505 ;;		___ftpack
  8506 ;; This function is called by:
  8507 ;;		_sprintf
  8508 ;;		___ftsub
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text17
  8513  003342                     __ptext17:
  8514                           	opt stack 0
  8515  003342                     ___ftadd:
  8516                           	opt stack 19
  8517                           
  8518                           ;incstack = 0
  8519  003342  C0BD  F0C1         	movff	___ftadd@f1+2,??___ftadd
  8520  003346  0100               	movlb	0	; () banked
  8521  003348  6BC2               	clrf	(??___ftadd+1)& (0+255),b
  8522  00334A  6BC3               	clrf	(??___ftadd+2)& (0+255),b
  8523  00334C  0100               	movlb	0	; () banked
  8524  00334E  35BC               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8525  003350  0100               	movlb	0	; () banked
  8526  003352  37C1               	rlcf	??___ftadd& (0+255),f,b
  8527  003354  E301               	bnc	u4471
  8528  003356  81C2               	bsf	(??___ftadd+1)& (0+255),0,b
  8529  003358                     u4471:
  8530  003358  0100               	movlb	0	; () banked
  8531  00335A  51C1               	movf	??___ftadd& (0+255),w,b
  8532  00335C  0100               	movlb	0	; () banked
  8533  00335E  6FC6               	movwf	___ftadd@exp1& (0+255),b
  8534  003360  C0C0  F0C1         	movff	___ftadd@f2+2,??___ftadd
  8535  003364  0100               	movlb	0	; () banked
  8536  003366  6BC2               	clrf	(??___ftadd+1)& (0+255),b
  8537  003368  6BC3               	clrf	(??___ftadd+2)& (0+255),b
  8538  00336A  0100               	movlb	0	; () banked
  8539  00336C  35BF               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8540  00336E  0100               	movlb	0	; () banked
  8541  003370  37C1               	rlcf	??___ftadd& (0+255),f,b
  8542  003372  E301               	bnc	u4481
  8543  003374  81C2               	bsf	(??___ftadd+1)& (0+255),0,b
  8544  003376                     u4481:
  8545  003376  0100               	movlb	0	; () banked
  8546  003378  51C1               	movf	??___ftadd& (0+255),w,b
  8547  00337A  0100               	movlb	0	; () banked
  8548  00337C  6FC5               	movwf	___ftadd@exp2& (0+255),b
  8549                           
  8550                           ; BSR set to: 0
  8551  00337E  0100               	movlb	0	; () banked
  8552  003380  51C6               	movf	___ftadd@exp1& (0+255),w,b
  8553  003382  0100               	movlb	0	; () banked
  8554  003384  B4D8               	btfsc	status,2,c
  8555  003386  D011               	goto	l721
  8556                           
  8557                           ; BSR set to: 0
  8558  003388  0100               	movlb	0	; () banked
  8559  00338A  51C5               	movf	___ftadd@exp2& (0+255),w,b
  8560  00338C  0100               	movlb	0	; () banked
  8561  00338E  5DC6               	subwf	___ftadd@exp1& (0+255),w,b
  8562  003390  B0D8               	btfsc	status,0,c
  8563  003392  D012               	goto	l4181
  8564                           
  8565                           ; BSR set to: 0
  8566  003394  0100               	movlb	0	; () banked
  8567  003396  51C6               	movf	___ftadd@exp1& (0+255),w,b
  8568  003398  0800               	sublw	0
  8569  00339A  0100               	movlb	0	; () banked
  8570  00339C  25C5               	addwf	___ftadd@exp2& (0+255),w,b
  8571  00339E  0100               	movlb	0	; () banked
  8572  0033A0  6FC1               	movwf	??___ftadd& (0+255),b
  8573  0033A2  0E18               	movlw	24
  8574  0033A4  0100               	movlb	0	; () banked
  8575  0033A6  65C1               	cpfsgt	??___ftadd& (0+255),b
  8576  0033A8  D007               	goto	l4181
  8577  0033AA                     l721:
  8578                           
  8579                           ; BSR set to: 0
  8580  0033AA  C0BE  F0BB         	movff	___ftadd@f2,?___ftadd
  8581  0033AE  C0BF  F0BC         	movff	___ftadd@f2+1,?___ftadd+1
  8582  0033B2  C0C0  F0BD         	movff	___ftadd@f2+2,?___ftadd+2
  8583  0033B6  0012               	return	
  8584  0033B8                     l4181:
  8585                           
  8586                           ; BSR set to: 0
  8587  0033B8  0100               	movlb	0	; () banked
  8588  0033BA  51C5               	movf	___ftadd@exp2& (0+255),w,b
  8589  0033BC  0100               	movlb	0	; () banked
  8590  0033BE  B4D8               	btfsc	status,2,c
  8591  0033C0  D011               	goto	l725
  8592                           
  8593                           ; BSR set to: 0
  8594  0033C2  0100               	movlb	0	; () banked
  8595  0033C4  51C6               	movf	___ftadd@exp1& (0+255),w,b
  8596  0033C6  0100               	movlb	0	; () banked
  8597  0033C8  5DC5               	subwf	___ftadd@exp2& (0+255),w,b
  8598  0033CA  B0D8               	btfsc	status,0,c
  8599  0033CC  D012               	goto	l4187
  8600                           
  8601                           ; BSR set to: 0
  8602  0033CE  0100               	movlb	0	; () banked
  8603  0033D0  51C5               	movf	___ftadd@exp2& (0+255),w,b
  8604  0033D2  0800               	sublw	0
  8605  0033D4  0100               	movlb	0	; () banked
  8606  0033D6  25C6               	addwf	___ftadd@exp1& (0+255),w,b
  8607  0033D8  0100               	movlb	0	; () banked
  8608  0033DA  6FC1               	movwf	??___ftadd& (0+255),b
  8609  0033DC  0E18               	movlw	24
  8610  0033DE  0100               	movlb	0	; () banked
  8611  0033E0  65C1               	cpfsgt	??___ftadd& (0+255),b
  8612  0033E2  D007               	goto	l4187
  8613  0033E4                     l725:
  8614                           
  8615                           ; BSR set to: 0
  8616  0033E4  C0BB  F0BB         	movff	___ftadd@f1,?___ftadd
  8617  0033E8  C0BC  F0BC         	movff	___ftadd@f1+1,?___ftadd+1
  8618  0033EC  C0BD  F0BD         	movff	___ftadd@f1+2,?___ftadd+2
  8619  0033F0  0012               	return	
  8620  0033F2                     l4187:
  8621                           
  8622                           ; BSR set to: 0
  8623  0033F2  0E06               	movlw	6
  8624  0033F4  0100               	movlb	0	; () banked
  8625  0033F6  6FC4               	movwf	___ftadd@sign& (0+255),b
  8626                           
  8627                           ; BSR set to: 0
  8628  0033F8  0100               	movlb	0	; () banked
  8629  0033FA  AFBD               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8630  0033FC  D002               	goto	l4193
  8631                           
  8632                           ; BSR set to: 0
  8633  0033FE  0100               	movlb	0	; () banked
  8634  003400  8FC4               	bsf	___ftadd@sign& (0+255),7,b
  8635  003402                     l4193:
  8636                           
  8637                           ; BSR set to: 0
  8638  003402  0100               	movlb	0	; () banked
  8639  003404  AFC0               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8640  003406  D002               	goto	l727
  8641                           
  8642                           ; BSR set to: 0
  8643  003408  0100               	movlb	0	; () banked
  8644  00340A  8DC4               	bsf	___ftadd@sign& (0+255),6,b
  8645  00340C                     l727:
  8646                           
  8647                           ; BSR set to: 0
  8648  00340C  0100               	movlb	0	; () banked
  8649  00340E  8FBC               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8650                           
  8651                           ; BSR set to: 0
  8652  003410  0EFF               	movlw	255
  8653  003412  0100               	movlb	0	; () banked
  8654  003414  17BB               	andwf	___ftadd@f1& (0+255),f,b
  8655  003416  0EFF               	movlw	255
  8656  003418  0100               	movlb	0	; () banked
  8657  00341A  17BC               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8658  00341C  0E00               	movlw	0
  8659  00341E  0100               	movlb	0	; () banked
  8660  003420  17BD               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8661  003422  0100               	movlb	0	; () banked
  8662  003424  8FBF               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8663                           
  8664                           ; BSR set to: 0
  8665  003426  0EFF               	movlw	255
  8666  003428  0100               	movlb	0	; () banked
  8667  00342A  17BE               	andwf	___ftadd@f2& (0+255),f,b
  8668  00342C  0EFF               	movlw	255
  8669  00342E  0100               	movlb	0	; () banked
  8670  003430  17BF               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8671  003432  0E00               	movlw	0
  8672  003434  0100               	movlb	0	; () banked
  8673  003436  17C0               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8674                           
  8675                           ; BSR set to: 0
  8676  003438  0100               	movlb	0	; () banked
  8677  00343A  51C5               	movf	___ftadd@exp2& (0+255),w,b
  8678  00343C  0100               	movlb	0	; () banked
  8679  00343E  5DC6               	subwf	___ftadd@exp1& (0+255),w,b
  8680  003440  B0D8               	btfsc	status,0,c
  8681  003442  D025               	goto	l4213
  8682  003444                     l4203:
  8683                           
  8684                           ; BSR set to: 0
  8685  003444  0100               	movlb	0	; () banked
  8686  003446  90D8               	bcf	status,0,c
  8687  003448  37BE               	rlcf	___ftadd@f2& (0+255),f,b
  8688  00344A  37BF               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8689  00344C  37C0               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8690  00344E  0100               	movlb	0	; () banked
  8691  003450  07C5               	decf	___ftadd@exp2& (0+255),f,b
  8692                           
  8693                           ; BSR set to: 0
  8694  003452  0100               	movlb	0	; () banked
  8695  003454  51C6               	movf	___ftadd@exp1& (0+255),w,b
  8696  003456  0100               	movlb	0	; () banked
  8697  003458  19C5               	xorwf	___ftadd@exp2& (0+255),w,b
  8698  00345A  B4D8               	btfsc	status,2,c
  8699  00345C  D011               	goto	l4211
  8700                           
  8701                           ; BSR set to: 0
  8702  00345E  0100               	movlb	0	; () banked
  8703  003460  07C4               	decf	___ftadd@sign& (0+255),f,b
  8704  003462  C0C4  F0C1         	movff	___ftadd@sign,??___ftadd
  8705  003466  0E07               	movlw	7
  8706  003468  0100               	movlb	0	; () banked
  8707  00346A  17C1               	andwf	??___ftadd& (0+255),f,b
  8708  00346C  B4D8               	btfsc	status,2,c
  8709  00346E  D008               	goto	l4211
  8710  003470  D7E9               	goto	l4203
  8711  003472                     l4209:
  8712                           
  8713                           ; BSR set to: 0
  8714  003472  0100               	movlb	0	; () banked
  8715  003474  90D8               	bcf	status,0,c
  8716  003476  33BD               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8717  003478  33BC               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8718  00347A  33BB               	rrcf	___ftadd@f1& (0+255),f,b
  8719  00347C  0100               	movlb	0	; () banked
  8720  00347E  2BC6               	incf	___ftadd@exp1& (0+255),f,b
  8721  003480                     l4211:
  8722                           
  8723                           ; BSR set to: 0
  8724  003480  0100               	movlb	0	; () banked
  8725  003482  51C5               	movf	___ftadd@exp2& (0+255),w,b
  8726  003484  0100               	movlb	0	; () banked
  8727  003486  19C6               	xorwf	___ftadd@exp1& (0+255),w,b
  8728  003488  B4D8               	btfsc	status,2,c
  8729  00348A  D02B               	goto	l736
  8730  00348C  D7F2               	goto	l4209
  8731  00348E                     l4213:
  8732                           
  8733                           ; BSR set to: 0
  8734  00348E  0100               	movlb	0	; () banked
  8735  003490  51C6               	movf	___ftadd@exp1& (0+255),w,b
  8736  003492  0100               	movlb	0	; () banked
  8737  003494  5DC5               	subwf	___ftadd@exp2& (0+255),w,b
  8738  003496  B0D8               	btfsc	status,0,c
  8739  003498  D024               	goto	l736
  8740  00349A                     l4215:
  8741                           
  8742                           ; BSR set to: 0
  8743  00349A  0100               	movlb	0	; () banked
  8744  00349C  90D8               	bcf	status,0,c
  8745  00349E  37BB               	rlcf	___ftadd@f1& (0+255),f,b
  8746  0034A0  37BC               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8747  0034A2  37BD               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8748  0034A4  0100               	movlb	0	; () banked
  8749  0034A6  07C6               	decf	___ftadd@exp1& (0+255),f,b
  8750                           
  8751                           ; BSR set to: 0
  8752  0034A8  0100               	movlb	0	; () banked
  8753  0034AA  51C6               	movf	___ftadd@exp1& (0+255),w,b
  8754  0034AC  0100               	movlb	0	; () banked
  8755  0034AE  19C5               	xorwf	___ftadd@exp2& (0+255),w,b
  8756  0034B0  B4D8               	btfsc	status,2,c
  8757  0034B2  D011               	goto	l4223
  8758                           
  8759                           ; BSR set to: 0
  8760  0034B4  0100               	movlb	0	; () banked
  8761  0034B6  07C4               	decf	___ftadd@sign& (0+255),f,b
  8762  0034B8  C0C4  F0C1         	movff	___ftadd@sign,??___ftadd
  8763  0034BC  0E07               	movlw	7
  8764  0034BE  0100               	movlb	0	; () banked
  8765  0034C0  17C1               	andwf	??___ftadd& (0+255),f,b
  8766  0034C2  B4D8               	btfsc	status,2,c
  8767  0034C4  D008               	goto	l4223
  8768  0034C6  D7E9               	goto	l4215
  8769  0034C8                     l4221:
  8770                           
  8771                           ; BSR set to: 0
  8772  0034C8  0100               	movlb	0	; () banked
  8773  0034CA  90D8               	bcf	status,0,c
  8774  0034CC  33C0               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8775  0034CE  33BF               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8776  0034D0  33BE               	rrcf	___ftadd@f2& (0+255),f,b
  8777  0034D2  0100               	movlb	0	; () banked
  8778  0034D4  2BC5               	incf	___ftadd@exp2& (0+255),f,b
  8779  0034D6                     l4223:
  8780                           
  8781                           ; BSR set to: 0
  8782  0034D6  0100               	movlb	0	; () banked
  8783  0034D8  51C5               	movf	___ftadd@exp2& (0+255),w,b
  8784  0034DA  0100               	movlb	0	; () banked
  8785  0034DC  19C6               	xorwf	___ftadd@exp1& (0+255),w,b
  8786  0034DE  A4D8               	btfss	status,2,c
  8787  0034E0  D7F3               	goto	l4221
  8788  0034E2                     l736:
  8789                           
  8790                           ; BSR set to: 0
  8791  0034E2  0100               	movlb	0	; () banked
  8792  0034E4  AFC4               	btfss	___ftadd@sign& (0+255),7,b
  8793  0034E6  D012               	goto	l745
  8794                           
  8795                           ; BSR set to: 0
  8796  0034E8  0EFF               	movlw	255
  8797  0034EA  0100               	movlb	0	; () banked
  8798  0034EC  1BBB               	xorwf	___ftadd@f1& (0+255),f,b
  8799  0034EE  0EFF               	movlw	255
  8800  0034F0  0100               	movlb	0	; () banked
  8801  0034F2  1BBC               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8802  0034F4  0EFF               	movlw	255
  8803  0034F6  0100               	movlb	0	; () banked
  8804  0034F8  1BBD               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8805  0034FA  0E01               	movlw	1
  8806  0034FC  0100               	movlb	0	; () banked
  8807  0034FE  27BB               	addwf	___ftadd@f1& (0+255),f,b
  8808  003500  0E00               	movlw	0
  8809  003502  0100               	movlb	0	; () banked
  8810  003504  23BC               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8811  003506  0E00               	movlw	0
  8812  003508  0100               	movlb	0	; () banked
  8813  00350A  23BD               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8814  00350C                     l745:
  8815                           
  8816                           ; BSR set to: 0
  8817  00350C  0100               	movlb	0	; () banked
  8818  00350E  ADC4               	btfss	___ftadd@sign& (0+255),6,b
  8819  003510  D012               	goto	l4229
  8820                           
  8821                           ; BSR set to: 0
  8822  003512  0EFF               	movlw	255
  8823  003514  0100               	movlb	0	; () banked
  8824  003516  1BBE               	xorwf	___ftadd@f2& (0+255),f,b
  8825  003518  0EFF               	movlw	255
  8826  00351A  0100               	movlb	0	; () banked
  8827  00351C  1BBF               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8828  00351E  0EFF               	movlw	255
  8829  003520  0100               	movlb	0	; () banked
  8830  003522  1BC0               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8831  003524  0E01               	movlw	1
  8832  003526  0100               	movlb	0	; () banked
  8833  003528  27BE               	addwf	___ftadd@f2& (0+255),f,b
  8834  00352A  0E00               	movlw	0
  8835  00352C  0100               	movlb	0	; () banked
  8836  00352E  23BF               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8837  003530  0E00               	movlw	0
  8838  003532  0100               	movlb	0	; () banked
  8839  003534  23C0               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8840  003536                     l4229:
  8841                           
  8842                           ; BSR set to: 0
  8843  003536  0E00               	movlw	0
  8844  003538  0100               	movlb	0	; () banked
  8845  00353A  6FC4               	movwf	___ftadd@sign& (0+255),b
  8846                           
  8847                           ; BSR set to: 0
  8848  00353C  0100               	movlb	0	; () banked
  8849  00353E  51BB               	movf	___ftadd@f1& (0+255),w,b
  8850  003540  0100               	movlb	0	; () banked
  8851  003542  27BE               	addwf	___ftadd@f2& (0+255),f,b
  8852  003544  0100               	movlb	0	; () banked
  8853  003546  51BC               	movf	(___ftadd@f1+1)& (0+255),w,b
  8854  003548  0100               	movlb	0	; () banked
  8855  00354A  23BF               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8856  00354C  0100               	movlb	0	; () banked
  8857  00354E  51BD               	movf	(___ftadd@f1+2)& (0+255),w,b
  8858  003550  0100               	movlb	0	; () banked
  8859  003552  23C0               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8860                           
  8861                           ; BSR set to: 0
  8862  003554  0100               	movlb	0	; () banked
  8863  003556  AFC0               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8864  003558  D015               	goto	l4239
  8865                           
  8866                           ; BSR set to: 0
  8867  00355A  0EFF               	movlw	255
  8868  00355C  0100               	movlb	0	; () banked
  8869  00355E  1BBE               	xorwf	___ftadd@f2& (0+255),f,b
  8870  003560  0EFF               	movlw	255
  8871  003562  0100               	movlb	0	; () banked
  8872  003564  1BBF               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8873  003566  0EFF               	movlw	255
  8874  003568  0100               	movlb	0	; () banked
  8875  00356A  1BC0               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8876  00356C  0E01               	movlw	1
  8877  00356E  0100               	movlb	0	; () banked
  8878  003570  27BE               	addwf	___ftadd@f2& (0+255),f,b
  8879  003572  0E00               	movlw	0
  8880  003574  0100               	movlb	0	; () banked
  8881  003576  23BF               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8882  003578  0E00               	movlw	0
  8883  00357A  0100               	movlb	0	; () banked
  8884  00357C  23C0               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8885                           
  8886                           ; BSR set to: 0
  8887  00357E  0E01               	movlw	1
  8888  003580  0100               	movlb	0	; () banked
  8889  003582  6FC4               	movwf	___ftadd@sign& (0+255),b
  8890  003584                     l4239:
  8891                           
  8892                           ; BSR set to: 0
  8893  003584  C0BE  F08E         	movff	___ftadd@f2,___ftpack@arg
  8894  003588  C0BF  F08F         	movff	___ftadd@f2+1,___ftpack@arg+1
  8895  00358C  C0C0  F090         	movff	___ftadd@f2+2,___ftpack@arg+2
  8896  003590  C0C6  F091         	movff	___ftadd@exp1,___ftpack@exp
  8897  003594  C0C4  F092         	movff	___ftadd@sign,___ftpack@sign
  8898  003598  EC6D  F020         	call	___ftpack	;wreg free
  8899  00359C  C08E  F0BB         	movff	?___ftpack,?___ftadd
  8900  0035A0  C08F  F0BC         	movff	?___ftpack+1,?___ftadd+1
  8901  0035A4  C090  F0BD         	movff	?___ftpack+2,?___ftadd+2
  8902  0035A8  0012               	return	
  8903  0035AA                     __end_of___ftadd:
  8904                           	opt stack 0
  8905                           tblptru	equ	0xFF8
  8906                           tblptrh	equ	0xFF7
  8907                           tblptrl	equ	0xFF6
  8908                           tablat	equ	0xFF5
  8909                           prodh	equ	0xFF4
  8910                           prodl	equ	0xFF3
  8911                           postinc0	equ	0xFEE
  8912                           wreg	equ	0xFE8
  8913                           indf1	equ	0xFE7
  8914                           postdec1	equ	0xFE5
  8915                           fsr1h	equ	0xFE2
  8916                           fsr1l	equ	0xFE1
  8917                           indf2	equ	0xFDF
  8918                           postinc2	equ	0xFDE
  8919                           postdec2	equ	0xFDD
  8920                           fsr2h	equ	0xFDA
  8921                           fsr2l	equ	0xFD9
  8922                           status	equ	0xFD8
  8923                           
  8924 ;; *************** function ___ftpack *****************
  8925 ;; Defined at:
  8926 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  arg             3   14[BANK0 ] unsigned um
  8929 ;;  exp             1   17[BANK0 ] unsigned char 
  8930 ;;  sign            1   18[BANK0 ] unsigned char 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;		None
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  3   14[BANK0 ] float 
  8935 ;; Registers used:
  8936 ;;		wreg, status,2, status,0
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8942 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;Total ram usage:        8 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    8
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		___ftadd
  8953 ;;		___ftmul
  8954 ;;		___lltoft
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958                           	psect	text18
  8959  0040DA                     __ptext18:
  8960                           	opt stack 0
  8961  0040DA                     ___ftpack:
  8962                           	opt stack 19
  8963                           
  8964                           ;incstack = 0
  8965  0040DA  0100               	movlb	0	; () banked
  8966  0040DC  5191               	movf	___ftpack@exp& (0+255),w,b
  8967  0040DE  0100               	movlb	0	; () banked
  8968  0040E0  B4D8               	btfsc	status,2,c
  8969  0040E2  D008               	goto	l3885
  8970                           
  8971                           ; BSR set to: 0
  8972  0040E4  0100               	movlb	0	; () banked
  8973  0040E6  518E               	movf	___ftpack@arg& (0+255),w,b
  8974  0040E8  0100               	movlb	0	; () banked
  8975  0040EA  118F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8976  0040EC  0100               	movlb	0	; () banked
  8977  0040EE  1190               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8978  0040F0  A4D8               	btfss	status,2,c
  8979  0040F2  D011               	goto	l3891
  8980  0040F4                     l3885:
  8981                           
  8982                           ; BSR set to: 0
  8983  0040F4  0E00               	movlw	0
  8984  0040F6  0100               	movlb	0	; () banked
  8985  0040F8  6F8E               	movwf	?___ftpack& (0+255),b
  8986  0040FA  0E00               	movlw	0
  8987  0040FC  0100               	movlb	0	; () banked
  8988  0040FE  6F8F               	movwf	(?___ftpack+1)& (0+255),b
  8989  004100  0E00               	movlw	0
  8990  004102  0100               	movlb	0	; () banked
  8991  004104  6F90               	movwf	(?___ftpack+2)& (0+255),b
  8992                           
  8993                           ; BSR set to: 0
  8994  004106  0012               	return	
  8995  004108                     l3889:
  8996                           
  8997                           ; BSR set to: 0
  8998  004108  0100               	movlb	0	; () banked
  8999  00410A  2B91               	incf	___ftpack@exp& (0+255),f,b
  9000  00410C  0100               	movlb	0	; () banked
  9001  00410E  90D8               	bcf	status,0,c
  9002  004110  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9003  004112  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9004  004114  338E               	rrcf	___ftpack@arg& (0+255),f,b
  9005  004116                     l3891:
  9006                           
  9007                           ; BSR set to: 0
  9008  004116  0E00               	movlw	0
  9009  004118  0100               	movlb	0	; () banked
  9010  00411A  158E               	andwf	___ftpack@arg& (0+255),w,b
  9011  00411C  0100               	movlb	0	; () banked
  9012  00411E  6F93               	movwf	??___ftpack& (0+255),b
  9013  004120  0E00               	movlw	0
  9014  004122  0100               	movlb	0	; () banked
  9015  004124  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9016  004126  0100               	movlb	0	; () banked
  9017  004128  6F94               	movwf	(??___ftpack+1)& (0+255),b
  9018  00412A  0EFE               	movlw	254
  9019  00412C  0100               	movlb	0	; () banked
  9020  00412E  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9021  004130  0100               	movlb	0	; () banked
  9022  004132  6F95               	movwf	(??___ftpack+2)& (0+255),b
  9023  004134  0100               	movlb	0	; () banked
  9024  004136  5193               	movf	??___ftpack& (0+255),w,b
  9025  004138  0100               	movlb	0	; () banked
  9026  00413A  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  9027  00413C  0100               	movlb	0	; () banked
  9028  00413E  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  9029  004140  B4D8               	btfsc	status,2,c
  9030  004142  D011               	goto	l3897
  9031  004144  D7E1               	goto	l3889
  9032  004146                     l3893:
  9033                           
  9034                           ; BSR set to: 0
  9035  004146  0100               	movlb	0	; () banked
  9036  004148  2B91               	incf	___ftpack@exp& (0+255),f,b
  9037                           
  9038                           ; BSR set to: 0
  9039  00414A  0E01               	movlw	1
  9040  00414C  0100               	movlb	0	; () banked
  9041  00414E  278E               	addwf	___ftpack@arg& (0+255),f,b
  9042  004150  0E00               	movlw	0
  9043  004152  0100               	movlb	0	; () banked
  9044  004154  238F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9045  004156  0E00               	movlw	0
  9046  004158  0100               	movlb	0	; () banked
  9047  00415A  2390               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9048  00415C  0100               	movlb	0	; () banked
  9049  00415E  90D8               	bcf	status,0,c
  9050  004160  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9051  004162  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9052  004164  338E               	rrcf	___ftpack@arg& (0+255),f,b
  9053  004166                     l3897:
  9054                           
  9055                           ; BSR set to: 0
  9056  004166  0E00               	movlw	0
  9057  004168  0100               	movlb	0	; () banked
  9058  00416A  158E               	andwf	___ftpack@arg& (0+255),w,b
  9059  00416C  0100               	movlb	0	; () banked
  9060  00416E  6F93               	movwf	??___ftpack& (0+255),b
  9061  004170  0E00               	movlw	0
  9062  004172  0100               	movlb	0	; () banked
  9063  004174  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9064  004176  0100               	movlb	0	; () banked
  9065  004178  6F94               	movwf	(??___ftpack+1)& (0+255),b
  9066  00417A  0EFF               	movlw	255
  9067  00417C  0100               	movlb	0	; () banked
  9068  00417E  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9069  004180  0100               	movlb	0	; () banked
  9070  004182  6F95               	movwf	(??___ftpack+2)& (0+255),b
  9071  004184  0100               	movlb	0	; () banked
  9072  004186  5193               	movf	??___ftpack& (0+255),w,b
  9073  004188  0100               	movlb	0	; () banked
  9074  00418A  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  9075  00418C  0100               	movlb	0	; () banked
  9076  00418E  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  9077  004190  B4D8               	btfsc	status,2,c
  9078  004192  D008               	goto	l3901
  9079  004194  D7D8               	goto	l3893
  9080  004196                     l3899:
  9081                           
  9082                           ; BSR set to: 0
  9083  004196  0100               	movlb	0	; () banked
  9084  004198  0791               	decf	___ftpack@exp& (0+255),f,b
  9085  00419A  0100               	movlb	0	; () banked
  9086  00419C  90D8               	bcf	status,0,c
  9087  00419E  378E               	rlcf	___ftpack@arg& (0+255),f,b
  9088  0041A0  378F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9089  0041A2  3790               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9090  0041A4                     l3901:
  9091                           
  9092                           ; BSR set to: 0
  9093  0041A4  0100               	movlb	0	; () banked
  9094  0041A6  BF8F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9095  0041A8  D004               	goto	l698
  9096                           
  9097                           ; BSR set to: 0
  9098  0041AA  0E02               	movlw	2
  9099  0041AC  0100               	movlb	0	; () banked
  9100  0041AE  6191               	cpfslt	___ftpack@exp& (0+255),b
  9101  0041B0  D7F2               	goto	l3899
  9102  0041B2                     l698:
  9103                           
  9104                           ; BSR set to: 0
  9105  0041B2  0100               	movlb	0	; () banked
  9106  0041B4  B191               	btfsc	___ftpack@exp& (0+255),0,b
  9107  0041B6  D002               	goto	l3907
  9108                           
  9109                           ; BSR set to: 0
  9110  0041B8  0100               	movlb	0	; () banked
  9111  0041BA  9F8F               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9112  0041BC                     l3907:
  9113                           
  9114                           ; BSR set to: 0
  9115  0041BC  0100               	movlb	0	; () banked
  9116  0041BE  90D8               	bcf	status,0,c
  9117  0041C0  3391               	rrcf	___ftpack@exp& (0+255),f,b
  9118  0041C2  0100               	movlb	0	; () banked
  9119  0041C4  5191               	movf	___ftpack@exp& (0+255),w,b
  9120  0041C6  0100               	movlb	0	; () banked
  9121  0041C8  1390               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9122                           
  9123                           ; BSR set to: 0
  9124  0041CA  0100               	movlb	0	; () banked
  9125  0041CC  5192               	movf	___ftpack@sign& (0+255),w,b
  9126  0041CE  0100               	movlb	0	; () banked
  9127  0041D0  B4D8               	btfsc	status,2,c
  9128  0041D2  D002               	goto	l3913
  9129                           
  9130                           ; BSR set to: 0
  9131  0041D4  0100               	movlb	0	; () banked
  9132  0041D6  8F90               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9133  0041D8                     l3913:
  9134                           
  9135                           ; BSR set to: 0
  9136  0041D8  C08E  F08E         	movff	___ftpack@arg,?___ftpack
  9137  0041DC  C08F  F08F         	movff	___ftpack@arg+1,?___ftpack+1
  9138  0041E0  C090  F090         	movff	___ftpack@arg+2,?___ftpack+2
  9139  0041E4  0012               	return	
  9140  0041E6                     __end_of___ftpack:
  9141                           	opt stack 0
  9142                           tblptru	equ	0xFF8
  9143                           tblptrh	equ	0xFF7
  9144                           tblptrl	equ	0xFF6
  9145                           tablat	equ	0xFF5
  9146                           prodh	equ	0xFF4
  9147                           prodl	equ	0xFF3
  9148                           postinc0	equ	0xFEE
  9149                           wreg	equ	0xFE8
  9150                           indf1	equ	0xFE7
  9151                           postdec1	equ	0xFE5
  9152                           fsr1h	equ	0xFE2
  9153                           fsr1l	equ	0xFE1
  9154                           indf2	equ	0xFDF
  9155                           postinc2	equ	0xFDE
  9156                           postdec2	equ	0xFDD
  9157                           fsr2h	equ	0xFDA
  9158                           fsr2l	equ	0xFD9
  9159                           status	equ	0xFD8
  9160                           
  9161 ;; *************** function ___ftneg *****************
  9162 ;; Defined at:
  9163 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;  f1              3   14[BANK0 ] float 
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  3   14[BANK0 ] float 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9177 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9180 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;Total ram usage:        3 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    8
  9184 ;; This function calls:
  9185 ;;		Nothing
  9186 ;; This function is called by:
  9187 ;;		_sprintf
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text19
  9192  0053C2                     __ptext19:
  9193                           	opt stack 0
  9194  0053C2                     ___ftneg:
  9195                           	opt stack 21
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;incstack = 0
  9199  0053C2  0100               	movlb	0	; () banked
  9200  0053C4  518E               	movf	___ftneg@f1& (0+255),w,b
  9201  0053C6  0100               	movlb	0	; () banked
  9202  0053C8  118F               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  9203  0053CA  0100               	movlb	0	; () banked
  9204  0053CC  1190               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  9205  0053CE  B4D8               	btfsc	status,2,c
  9206  0053D0  D009               	goto	l795
  9207                           
  9208                           ; BSR set to: 0
  9209  0053D2  0E00               	movlw	0
  9210  0053D4  0100               	movlb	0	; () banked
  9211  0053D6  1B8E               	xorwf	___ftneg@f1& (0+255),f,b
  9212  0053D8  0E00               	movlw	0
  9213  0053DA  0100               	movlb	0	; () banked
  9214  0053DC  1B8F               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  9215  0053DE  0E80               	movlw	128
  9216  0053E0  0100               	movlb	0	; () banked
  9217  0053E2  1B90               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  9218  0053E4                     l795:
  9219                           
  9220                           ; BSR set to: 0
  9221  0053E4  C08E  F08E         	movff	___ftneg@f1,?___ftneg
  9222  0053E8  C08F  F08F         	movff	___ftneg@f1+1,?___ftneg+1
  9223  0053EC  C090  F090         	movff	___ftneg@f1+2,?___ftneg+2
  9224                           
  9225                           ; BSR set to: 0
  9226  0053F0  0012               	return		;funcret
  9227  0053F2                     __end_of___ftneg:
  9228                           	opt stack 0
  9229                           tblptru	equ	0xFF8
  9230                           tblptrh	equ	0xFF7
  9231                           tblptrl	equ	0xFF6
  9232                           tablat	equ	0xFF5
  9233                           prodh	equ	0xFF4
  9234                           prodl	equ	0xFF3
  9235                           postinc0	equ	0xFEE
  9236                           wreg	equ	0xFE8
  9237                           indf1	equ	0xFE7
  9238                           postdec1	equ	0xFE5
  9239                           fsr1h	equ	0xFE2
  9240                           fsr1l	equ	0xFE1
  9241                           indf2	equ	0xFDF
  9242                           postinc2	equ	0xFDE
  9243                           postdec2	equ	0xFDD
  9244                           fsr2h	equ	0xFDA
  9245                           fsr2l	equ	0xFD9
  9246                           status	equ	0xFD8
  9247                           
  9248 ;; *************** function ___ftge *****************
  9249 ;; Defined at:
  9250 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;  ff1             3   14[BANK0 ] float 
  9253 ;;  ff2             3   17[BANK0 ] float 
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;		None
  9256 ;; Return value:  Size  Location     Type
  9257 ;;		None               void
  9258 ;; Registers used:
  9259 ;;		wreg, status,2, status,0
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9265 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;Total ram usage:        9 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:    8
  9272 ;; This function calls:
  9273 ;;		Nothing
  9274 ;; This function is called by:
  9275 ;;		_sprintf
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279                           	psect	text20
  9280  0044B4                     __ptext20:
  9281                           	opt stack 0
  9282  0044B4                     ___ftge:
  9283                           	opt stack 21
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;incstack = 0
  9287  0044B4  0100               	movlb	0	; () banked
  9288  0044B6  AF90               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9289  0044B8  D01D               	goto	l4991
  9290                           
  9291                           ; BSR set to: 0
  9292  0044BA  C08E  F094         	movff	___ftge@ff1,??___ftge
  9293  0044BE  C08F  F095         	movff	___ftge@ff1+1,??___ftge+1
  9294  0044C2  C090  F096         	movff	___ftge@ff1+2,??___ftge+2
  9295  0044C6  0100               	movlb	0	; () banked
  9296  0044C8  1F94               	comf	??___ftge& (0+255),f,b
  9297  0044CA  1F95               	comf	(??___ftge+1)& (0+255),f,b
  9298  0044CC  1F96               	comf	(??___ftge+2)& (0+255),f,b
  9299  0044CE  2B94               	incf	??___ftge& (0+255),f,b
  9300  0044D0  0E00               	movlw	0
  9301  0044D2  2395               	addwfc	(??___ftge+1)& (0+255),f,b
  9302  0044D4  2396               	addwfc	(??___ftge+2)& (0+255),f,b
  9303  0044D6  0E00               	movlw	0
  9304  0044D8  0100               	movlb	0	; () banked
  9305  0044DA  2594               	addwf	??___ftge& (0+255),w,b
  9306  0044DC  0100               	movlb	0	; () banked
  9307  0044DE  6F8E               	movwf	___ftge@ff1& (0+255),b
  9308  0044E0  0E00               	movlw	0
  9309  0044E2  0100               	movlb	0	; () banked
  9310  0044E4  2195               	addwfc	(??___ftge+1)& (0+255),w,b
  9311  0044E6  0100               	movlb	0	; () banked
  9312  0044E8  6F8F               	movwf	(___ftge@ff1+1)& (0+255),b
  9313  0044EA  0E80               	movlw	128
  9314  0044EC  0100               	movlb	0	; () banked
  9315  0044EE  2196               	addwfc	(??___ftge+2)& (0+255),w,b
  9316  0044F0  0100               	movlb	0	; () banked
  9317  0044F2  6F90               	movwf	(___ftge@ff1+2)& (0+255),b
  9318  0044F4                     l4991:
  9319                           
  9320                           ; BSR set to: 0
  9321  0044F4  0100               	movlb	0	; () banked
  9322  0044F6  AF93               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9323  0044F8  D01D               	goto	l4995
  9324                           
  9325                           ; BSR set to: 0
  9326  0044FA  C091  F094         	movff	___ftge@ff2,??___ftge
  9327  0044FE  C092  F095         	movff	___ftge@ff2+1,??___ftge+1
  9328  004502  C093  F096         	movff	___ftge@ff2+2,??___ftge+2
  9329  004506  0100               	movlb	0	; () banked
  9330  004508  1F94               	comf	??___ftge& (0+255),f,b
  9331  00450A  1F95               	comf	(??___ftge+1)& (0+255),f,b
  9332  00450C  1F96               	comf	(??___ftge+2)& (0+255),f,b
  9333  00450E  2B94               	incf	??___ftge& (0+255),f,b
  9334  004510  0E00               	movlw	0
  9335  004512  2395               	addwfc	(??___ftge+1)& (0+255),f,b
  9336  004514  2396               	addwfc	(??___ftge+2)& (0+255),f,b
  9337  004516  0E00               	movlw	0
  9338  004518  0100               	movlb	0	; () banked
  9339  00451A  2594               	addwf	??___ftge& (0+255),w,b
  9340  00451C  0100               	movlb	0	; () banked
  9341  00451E  6F91               	movwf	___ftge@ff2& (0+255),b
  9342  004520  0E00               	movlw	0
  9343  004522  0100               	movlb	0	; () banked
  9344  004524  2195               	addwfc	(??___ftge+1)& (0+255),w,b
  9345  004526  0100               	movlb	0	; () banked
  9346  004528  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  9347  00452A  0E80               	movlw	128
  9348  00452C  0100               	movlb	0	; () banked
  9349  00452E  2196               	addwfc	(??___ftge+2)& (0+255),w,b
  9350  004530  0100               	movlb	0	; () banked
  9351  004532  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  9352  004534                     l4995:
  9353                           
  9354                           ; BSR set to: 0
  9355  004534  0E00               	movlw	0
  9356  004536  0100               	movlb	0	; () banked
  9357  004538  1B8E               	xorwf	___ftge@ff1& (0+255),f,b
  9358  00453A  0E00               	movlw	0
  9359  00453C  0100               	movlb	0	; () banked
  9360  00453E  1B8F               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9361  004540  0E80               	movlw	128
  9362  004542  0100               	movlb	0	; () banked
  9363  004544  1B90               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9364                           
  9365                           ; BSR set to: 0
  9366  004546  0E00               	movlw	0
  9367  004548  0100               	movlb	0	; () banked
  9368  00454A  1B91               	xorwf	___ftge@ff2& (0+255),f,b
  9369  00454C  0E00               	movlw	0
  9370  00454E  0100               	movlb	0	; () banked
  9371  004550  1B92               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9372  004552  0E80               	movlw	128
  9373  004554  0100               	movlb	0	; () banked
  9374  004556  1B93               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9375  004558  0100               	movlb	0	; () banked
  9376  00455A  5191               	movf	___ftge@ff2& (0+255),w,b
  9377  00455C  0100               	movlb	0	; () banked
  9378  00455E  5D8E               	subwf	___ftge@ff1& (0+255),w,b
  9379  004560  0100               	movlb	0	; () banked
  9380  004562  5192               	movf	(___ftge@ff2+1)& (0+255),w,b
  9381  004564  0100               	movlb	0	; () banked
  9382  004566  598F               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9383  004568  0100               	movlb	0	; () banked
  9384  00456A  5193               	movf	(___ftge@ff2+2)& (0+255),w,b
  9385  00456C  0100               	movlb	0	; () banked
  9386  00456E  5990               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9387  004570  B0D8               	btfsc	status,0,c
  9388  004572  D002               	goto	l5001
  9389                           
  9390                           ; BSR set to: 0
  9391  004574  90D8               	bcf	status,0,c
  9392  004576  0012               	return	
  9393  004578                     l5001:
  9394                           
  9395                           ; BSR set to: 0
  9396  004578  80D8               	bsf	status,0,c
  9397                           
  9398                           ; BSR set to: 0
  9399  00457A  0012               	return	
  9400  00457C                     __end_of___ftge:
  9401                           	opt stack 0
  9402                           tblptru	equ	0xFF8
  9403                           tblptrh	equ	0xFF7
  9404                           tblptrl	equ	0xFF6
  9405                           tablat	equ	0xFF5
  9406                           prodh	equ	0xFF4
  9407                           prodl	equ	0xFF3
  9408                           postinc0	equ	0xFEE
  9409                           wreg	equ	0xFE8
  9410                           indf1	equ	0xFE7
  9411                           postdec1	equ	0xFE5
  9412                           fsr1h	equ	0xFE2
  9413                           fsr1l	equ	0xFE1
  9414                           indf2	equ	0xFDF
  9415                           postinc2	equ	0xFDE
  9416                           postdec2	equ	0xFDD
  9417                           fsr2h	equ	0xFDA
  9418                           fsr2l	equ	0xFD9
  9419                           status	equ	0xFD8
  9420                           
  9421 ;; *************** function _setupPorts *****************
  9422 ;; Defined at:
  9423 ;;		line 176 in file "AS1AY.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;		None
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;		None
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  1    wreg      void 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;Total ram usage:        0 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:    8
  9444 ;; This function calls:
  9445 ;;		Nothing
  9446 ;; This function is called by:
  9447 ;;		_main
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           	psect	text21
  9452  005614                     __ptext21:
  9453                           	opt stack 0
  9454  005614                     _setupPorts:
  9455                           	opt stack 22
  9456                           
  9457                           ;AS1AY.c: 177: TRISA = 0xFF;
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;incstack = 0
  9461  005614  6892               	setf	3986,c	;volatile
  9462                           
  9463                           ;AS1AY.c: 178: TRISB = 0xFF;
  9464  005616  6893               	setf	3987,c	;volatile
  9465                           
  9466                           ;AS1AY.c: 179: TRISC = 0x80;
  9467  005618  0E80               	movlw	128
  9468  00561A  6E94               	movwf	3988,c	;volatile
  9469                           
  9470                           ;AS1AY.c: 180: TRISD = 0x00;
  9471  00561C  0E00               	movlw	0
  9472  00561E  6E95               	movwf	3989,c	;volatile
  9473                           
  9474                           ;AS1AY.c: 181: TRISE = 0x00;
  9475  005620  0E00               	movlw	0
  9476  005622  6E96               	movwf	3990,c	;volatile
  9477  005624  0012               	return		;funcret
  9478  005626                     __end_of_setupPorts:
  9479                           	opt stack 0
  9480                           tblptru	equ	0xFF8
  9481                           tblptrh	equ	0xFF7
  9482                           tblptrl	equ	0xFF6
  9483                           tablat	equ	0xFF5
  9484                           prodh	equ	0xFF4
  9485                           prodl	equ	0xFF3
  9486                           postinc0	equ	0xFEE
  9487                           wreg	equ	0xFE8
  9488                           indf1	equ	0xFE7
  9489                           postdec1	equ	0xFE5
  9490                           fsr1h	equ	0xFE2
  9491                           fsr1l	equ	0xFE1
  9492                           indf2	equ	0xFDF
  9493                           postinc2	equ	0xFDE
  9494                           postdec2	equ	0xFDD
  9495                           fsr2h	equ	0xFDA
  9496                           fsr2l	equ	0xFD9
  9497                           status	equ	0xFD8
  9498                           
  9499 ;; *************** function _setupInterrupts *****************
  9500 ;; Defined at:
  9501 ;;		line 184 in file "AS1AY.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, status,2, cstack
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9519 ;;Total ram usage:        0 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    9
  9522 ;; This function calls:
  9523 ;;		_reloadTimer0
  9524 ;; This function is called by:
  9525 ;;		_main
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           	psect	text22
  9530  005268                     __ptext22:
  9531                           	opt stack 0
  9532  005268                     _setupInterrupts:
  9533                           	opt stack 21
  9534                           
  9535                           ;AS1AY.c: 185: INTCON = 0;
  9536                           
  9537                           ;incstack = 0
  9538  005268  0E00               	movlw	0
  9539  00526A  6EF2               	movwf	intcon,c	;volatile
  9540                           
  9541                           ;AS1AY.c: 186: INTCONbits.INT0E = 1;
  9542  00526C  88F2               	bsf	intcon,4,c	;volatile
  9543                           
  9544                           ;AS1AY.c: 187: INTCONbits.T0IE = 1;
  9545  00526E  8AF2               	bsf	intcon,5,c	;volatile
  9546                           
  9547                           ;AS1AY.c: 188: INTCON2 = 0;
  9548  005270  0E00               	movlw	0
  9549  005272  6EF1               	movwf	intcon2,c	;volatile
  9550                           
  9551                           ;AS1AY.c: 189: INTCON2bits.INTEDG0 = 0;
  9552  005274  9CF1               	bcf	intcon2,6,c	;volatile
  9553                           
  9554                           ;AS1AY.c: 190: INTCON3 = 0;
  9555  005276  0E00               	movlw	0
  9556  005278  6EF0               	movwf	intcon3,c	;volatile
  9557                           
  9558                           ;AS1AY.c: 191: INTCON3bits.INT1E = 1;
  9559  00527A  86F0               	bsf	intcon3,3,c	;volatile
  9560                           
  9561                           ;AS1AY.c: 192: INTCON3bits.INT2E = 1;
  9562  00527C  88F0               	bsf	intcon3,4,c	;volatile
  9563                           
  9564                           ;AS1AY.c: 193: INTCON2bits.INTEDG1 = 0;
  9565  00527E  9AF1               	bcf	intcon2,5,c	;volatile
  9566                           
  9567                           ;AS1AY.c: 194: INTCON2bits.INTEDG2 = 0;
  9568  005280  98F1               	bcf	intcon2,4,c	;volatile
  9569                           
  9570                           ;AS1AY.c: 195: T0CON = 0;
  9571  005282  0E00               	movlw	0
  9572  005284  6ED5               	movwf	4053,c	;volatile
  9573                           
  9574                           ;AS1AY.c: 196: reloadTimer0();
  9575  005286  EC1B  F02B         	call	_reloadTimer0	;wreg free
  9576                           
  9577                           ;AS1AY.c: 197: RCONbits.IPEN = 0;
  9578  00528A  9ED0               	bcf	4048,7,c	;volatile
  9579                           
  9580                           ;AS1AY.c: 198: PIE1 = 0;
  9581  00528C  0E00               	movlw	0
  9582  00528E  6E9D               	movwf	3997,c	;volatile
  9583                           
  9584                           ;AS1AY.c: 199: PIR1 = 0;
  9585  005290  0E00               	movlw	0
  9586  005292  6E9E               	movwf	3998,c	;volatile
  9587                           
  9588                           ;AS1AY.c: 200: PIE2 = 0;
  9589  005294  0E00               	movlw	0
  9590  005296  6EA0               	movwf	4000,c	;volatile
  9591                           
  9592                           ;AS1AY.c: 201: INTCONbits.GIEH = 1;
  9593  005298  8EF2               	bsf	intcon,7,c	;volatile
  9594                           
  9595                           ;AS1AY.c: 202: INTCONbits.GIEL = 1;
  9596  00529A  8CF2               	bsf	intcon,6,c	;volatile
  9597                           
  9598                           ;AS1AY.c: 203: T0CONbits.T0PS = 0b011;
  9599  00529C  50D5               	movf	4053,w,c	;volatile
  9600  00529E  0BF8               	andlw	-8
  9601  0052A0  0903               	iorlw	3
  9602  0052A2  6ED5               	movwf	4053,c	;volatile
  9603                           
  9604                           ;AS1AY.c: 204: T0CONbits.TMR0ON = 1;
  9605  0052A4  8ED5               	bsf	4053,7,c	;volatile
  9606  0052A6  0012               	return		;funcret
  9607  0052A8                     __end_of_setupInterrupts:
  9608                           	opt stack 0
  9609                           tblptru	equ	0xFF8
  9610                           tblptrh	equ	0xFF7
  9611                           tblptrl	equ	0xFF6
  9612                           tablat	equ	0xFF5
  9613                           prodh	equ	0xFF4
  9614                           prodl	equ	0xFF3
  9615                           intcon	equ	0xFF2
  9616                           intcon2	equ	0xFF1
  9617                           intcon3	equ	0xFF0
  9618                           postinc0	equ	0xFEE
  9619                           wreg	equ	0xFE8
  9620                           indf1	equ	0xFE7
  9621                           postdec1	equ	0xFE5
  9622                           fsr1h	equ	0xFE2
  9623                           fsr1l	equ	0xFE1
  9624                           indf2	equ	0xFDF
  9625                           postinc2	equ	0xFDE
  9626                           postdec2	equ	0xFDD
  9627                           fsr2h	equ	0xFDA
  9628                           fsr2l	equ	0xFD9
  9629                           status	equ	0xFD8
  9630                           
  9631 ;; *************** function _reloadTimer0 *****************
  9632 ;; Defined at:
  9633 ;;		line 291 in file "AS1AY.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;		None
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;		None
  9638 ;; Return value:  Size  Location     Type
  9639 ;;                  1    wreg      void 
  9640 ;; Registers used:
  9641 ;;		wreg, status,2
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9651 ;;Total ram usage:        0 bytes
  9652 ;; Hardware stack levels used:    1
  9653 ;; Hardware stack levels required when called:    8
  9654 ;; This function calls:
  9655 ;;		Nothing
  9656 ;; This function is called by:
  9657 ;;		_setupInterrupts
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           
  9661                           	psect	text23
  9662  005636                     __ptext23:
  9663                           	opt stack 0
  9664  005636                     _reloadTimer0:
  9665                           	opt stack 21
  9666                           
  9667                           ;AS1AY.c: 292: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
  9668                           
  9669                           ;incstack = 0
  9670  005636  0E0B               	movlw	11
  9671  005638  6ED7               	movwf	4055,c	;volatile
  9672                           
  9673                           ;AS1AY.c: 293: TMR0L = (unsigned char) (3036 & 0x00FF);
  9674  00563A  0EDC               	movlw	220
  9675  00563C  6ED6               	movwf	4054,c	;volatile
  9676  00563E  0012               	return		;funcret
  9677  005640                     __end_of_reloadTimer0:
  9678                           	opt stack 0
  9679                           tblptru	equ	0xFF8
  9680                           tblptrh	equ	0xFF7
  9681                           tblptrl	equ	0xFF6
  9682                           tablat	equ	0xFF5
  9683                           prodh	equ	0xFF4
  9684                           prodl	equ	0xFF3
  9685                           intcon	equ	0xFF2
  9686                           intcon2	equ	0xFF1
  9687                           intcon3	equ	0xFF0
  9688                           postinc0	equ	0xFEE
  9689                           wreg	equ	0xFE8
  9690                           indf1	equ	0xFE7
  9691                           postdec1	equ	0xFE5
  9692                           fsr1h	equ	0xFE2
  9693                           fsr1l	equ	0xFE1
  9694                           indf2	equ	0xFDF
  9695                           postinc2	equ	0xFDE
  9696                           postdec2	equ	0xFDD
  9697                           fsr2h	equ	0xFDA
  9698                           fsr2l	equ	0xFD9
  9699                           status	equ	0xFD8
  9700                           
  9701 ;; *************** function _lcd_puts *****************
  9702 ;; Defined at:
  9703 ;;		line 87 in file "lcd_x8.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;  s               2   28[BANK0 ] PTR unsigned char 
  9706 ;;		 -> Buffer4(16), Buffer3(16), Buffer2(16), Buffer1(16), 
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;Total ram usage:        2 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:   13
  9725 ;; This function calls:
  9726 ;;		_lcd_putc
  9727 ;; This function is called by:
  9728 ;;		_main
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text24
  9733  0054FC                     __ptext24:
  9734                           	opt stack 0
  9735  0054FC                     _lcd_puts:
  9736                           	opt stack 17
  9737                           
  9738                           ;lcd_x8.c: 88: while (*s) {
  9739                           
  9740                           ;incstack = 0
  9741  0054FC  D00A               	goto	l5963
  9742  0054FE                     l5959:
  9743                           
  9744                           ;lcd_x8.c: 89: lcd_putc(*s);
  9745  0054FE  C09C  FFD9         	movff	lcd_puts@s,fsr2l
  9746  005502  C09D  FFDA         	movff	lcd_puts@s+1,fsr2h
  9747  005506  50DF               	movf	indf2,w,c
  9748  005508  EC77  F027         	call	_lcd_putc
  9749                           
  9750                           ;lcd_x8.c: 90: s++;
  9751  00550C  0100               	movlb	0	; () banked
  9752  00550E  4B9C               	infsnz	lcd_puts@s& (0+255),f,b
  9753  005510  2B9D               	incf	(lcd_puts@s+1)& (0+255),f,b
  9754  005512                     l5963:
  9755  005512  C09C  FFD9         	movff	lcd_puts@s,fsr2l
  9756  005516  C09D  FFDA         	movff	lcd_puts@s+1,fsr2h
  9757  00551A  50DF               	movf	indf2,w,c
  9758  00551C  B4D8               	btfsc	status,2,c
  9759  00551E  0012               	return	
  9760  005520  D7EE               	goto	l5959
  9761  005522                     __end_of_lcd_puts:
  9762                           	opt stack 0
  9763                           tblptru	equ	0xFF8
  9764                           tblptrh	equ	0xFF7
  9765                           tblptrl	equ	0xFF6
  9766                           tablat	equ	0xFF5
  9767                           prodh	equ	0xFF4
  9768                           prodl	equ	0xFF3
  9769                           intcon	equ	0xFF2
  9770                           intcon2	equ	0xFF1
  9771                           intcon3	equ	0xFF0
  9772                           postinc0	equ	0xFEE
  9773                           wreg	equ	0xFE8
  9774                           indf1	equ	0xFE7
  9775                           postdec1	equ	0xFE5
  9776                           fsr1h	equ	0xFE2
  9777                           fsr1l	equ	0xFE1
  9778                           indf2	equ	0xFDF
  9779                           postinc2	equ	0xFDE
  9780                           postdec2	equ	0xFDD
  9781                           fsr2h	equ	0xFDA
  9782                           fsr2l	equ	0xFD9
  9783                           status	equ	0xFD8
  9784                           
  9785 ;; *************** function _lcd_putc *****************
  9786 ;; Defined at:
  9787 ;;		line 73 in file "lcd_x8.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  c               1    wreg     unsigned char 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;  c               1   27[BANK0 ] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg, status,2, status,0, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;Total ram usage:        1 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:   12
  9808 ;; This function calls:
  9809 ;;		_delay_ms
  9810 ;;		_lcd_gotoxy
  9811 ;;		_lcd_send_byte
  9812 ;; This function is called by:
  9813 ;;		_lcd_puts
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text25
  9818  004EEE                     __ptext25:
  9819                           	opt stack 0
  9820  004EEE                     _lcd_putc:
  9821                           	opt stack 17
  9822                           
  9823                           ;incstack = 0
  9824                           ;lcd_putc@c stored from wreg
  9825  004EEE  0100               	movlb	0	; () banked
  9826  004EF0  6F9B               	movwf	lcd_putc@c& (0+255),b
  9827                           
  9828                           ;lcd_x8.c: 74: switch (c) {
  9829  004EF2  D022               	goto	l4789
  9830  004EF4                     l4779:
  9831  004EF4  0E01               	movlw	1
  9832  004EF6  0100               	movlb	0	; () banked
  9833  004EF8  6F96               	movwf	lcd_send_byte@n& (0+255),b
  9834  004EFA  0E00               	movlw	0
  9835  004EFC  ECD6  F027         	call	_lcd_send_byte
  9836                           
  9837                           ;lcd_x8.c: 76: delay_ms(2);
  9838  004F00  0E00               	movlw	0
  9839  004F02  0100               	movlb	0	; () banked
  9840  004F04  6F8F               	movwf	(delay_ms@n+1)& (0+255),b
  9841  004F06  0E02               	movlw	2
  9842  004F08  6F8E               	movwf	delay_ms@n& (0+255),b
  9843  004F0A  ECF9  F029         	call	_delay_ms	;wreg free
  9844                           
  9845                           ;lcd_x8.c: 77: break;
  9846  004F0E  0012               	return	
  9847  004F10                     l4781:
  9848  004F10  0E02               	movlw	2
  9849  004F12  0100               	movlb	0	; () banked
  9850  004F14  6F98               	movwf	lcd_gotoxy@y& (0+255),b
  9851  004F16  0E01               	movlw	1
  9852  004F18  EC7F  F028         	call	_lcd_gotoxy
  9853                           
  9854                           ;lcd_x8.c: 79: break;
  9855  004F1C  0012               	return	
  9856  004F1E                     l4783:
  9857  004F1E  0E10               	movlw	16
  9858  004F20  0100               	movlb	0	; () banked
  9859  004F22  6F96               	movwf	lcd_send_byte@n& (0+255),b
  9860  004F24  0E00               	movlw	0
  9861  004F26  ECD6  F027         	call	_lcd_send_byte
  9862                           
  9863                           ;lcd_x8.c: 81: break;
  9864  004F2A  0012               	return	
  9865  004F2C                     l4785:
  9866  004F2C  C09B  F096         	movff	lcd_putc@c,lcd_send_byte@n
  9867  004F30  0E01               	movlw	1
  9868  004F32  ECD6  F027         	call	_lcd_send_byte
  9869                           
  9870                           ;lcd_x8.c: 84: }
  9871                           
  9872                           ;lcd_x8.c: 83: break;
  9873  004F36  0012               	return	
  9874  004F38                     l4789:
  9875  004F38  0100               	movlb	0	; () banked
  9876  004F3A  519B               	movf	lcd_putc@c& (0+255),w,b
  9877                           
  9878                           ; Switch size 1, requested type "space"
  9879                           ; Number of cases is 3, Range of values is 8 to 12
  9880                           ; switch strategies available:
  9881                           ; Name         Instructions Cycles
  9882                           ; simple_byte           10     6 (average)
  9883                           ;	Chosen strategy is simple_byte
  9884  004F3C  0A08               	xorlw	8	; case 8
  9885  004F3E  B4D8               	btfsc	status,2,c
  9886  004F40  D7EE               	goto	l4783
  9887  004F42  0A02               	xorlw	2	; case 10
  9888  004F44  B4D8               	btfsc	status,2,c
  9889  004F46  D7E4               	goto	l4781
  9890  004F48  0A06               	xorlw	6	; case 12
  9891  004F4A  B4D8               	btfsc	status,2,c
  9892  004F4C  D7D3               	goto	l4779
  9893  004F4E  D7EE               	goto	l4785
  9894  004F50                     __end_of_lcd_putc:
  9895                           	opt stack 0
  9896                           tblptru	equ	0xFF8
  9897                           tblptrh	equ	0xFF7
  9898                           tblptrl	equ	0xFF6
  9899                           tablat	equ	0xFF5
  9900                           prodh	equ	0xFF4
  9901                           prodl	equ	0xFF3
  9902                           intcon	equ	0xFF2
  9903                           intcon2	equ	0xFF1
  9904                           intcon3	equ	0xFF0
  9905                           postinc0	equ	0xFEE
  9906                           wreg	equ	0xFE8
  9907                           indf1	equ	0xFE7
  9908                           postdec1	equ	0xFE5
  9909                           fsr1h	equ	0xFE2
  9910                           fsr1l	equ	0xFE1
  9911                           indf2	equ	0xFDF
  9912                           postinc2	equ	0xFDE
  9913                           postdec2	equ	0xFDD
  9914                           fsr2h	equ	0xFDA
  9915                           fsr2l	equ	0xFD9
  9916                           status	equ	0xFD8
  9917                           
  9918 ;; *************** function _lcd_gotoxy *****************
  9919 ;; Defined at:
  9920 ;;		line 57 in file "lcd_x8.c"
  9921 ;; Parameters:    Size  Location     Type
  9922 ;;  x               1    wreg     unsigned char 
  9923 ;;  y               1   24[BANK0 ] unsigned char 
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;  x               1   25[BANK0 ] unsigned char 
  9926 ;;  address         1   26[BANK0 ] unsigned char 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      void 
  9929 ;; Registers used:
  9930 ;;		wreg, status,2, status,0, cstack
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9936 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9937 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9939 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9940 ;;Total ram usage:        3 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:   11
  9943 ;; This function calls:
  9944 ;;		_lcd_send_byte
  9945 ;; This function is called by:
  9946 ;;		_main
  9947 ;;		_lcd_putc
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951                           	psect	text26
  9952  0050FE                     __ptext26:
  9953                           	opt stack 0
  9954  0050FE                     _lcd_gotoxy:
  9955                           	opt stack 17
  9956                           
  9957                           ;incstack = 0
  9958                           ;lcd_gotoxy@x stored from wreg
  9959  0050FE  0100               	movlb	0	; () banked
  9960  005100  6F99               	movwf	lcd_gotoxy@x& (0+255),b
  9961                           
  9962                           ;lcd_x8.c: 58: unsigned char address;
  9963                           ;lcd_x8.c: 59: switch (y) {
  9964  005102  D00A               	goto	l4151
  9965  005104                     l4141:
  9966  005104  0E80               	movlw	128
  9967  005106  D005               	goto	L16
  9968  005108                     l4143:
  9969                           
  9970                           ; BSR set to: 0
  9971  005108  0EC0               	movlw	192
  9972  00510A  D003               	goto	L16
  9973  00510C                     l4145:
  9974                           
  9975                           ; BSR set to: 0
  9976  00510C  0E90               	movlw	144
  9977  00510E  D001               	goto	L16
  9978  005110                     l4147:
  9979                           
  9980                           ; BSR set to: 0
  9981  005110  0ED0               	movlw	208
  9982  005112                     L16:
  9983  005112  0100               	movlb	0	; () banked
  9984  005114  6F9A               	movwf	lcd_gotoxy@address& (0+255),b
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;lcd_x8.c: 68: }
  9988                           
  9989                           ;lcd_x8.c: 67: break;
  9990  005116  D00E               	goto	l4153
  9991  005118                     l4151:
  9992  005118  0100               	movlb	0	; () banked
  9993  00511A  5198               	movf	lcd_gotoxy@y& (0+255),w,b
  9994                           
  9995                           ; Switch size 1, requested type "space"
  9996                           ; Number of cases is 4, Range of values is 1 to 4
  9997                           ; switch strategies available:
  9998                           ; Name         Instructions Cycles
  9999                           ; simple_byte           13     7 (average)
 10000                           ;	Chosen strategy is simple_byte
 10001  00511C  0A01               	xorlw	1	; case 1
 10002  00511E  B4D8               	btfsc	status,2,c
 10003  005120  D7F1               	goto	l4141
 10004  005122  0A03               	xorlw	3	; case 2
 10005  005124  B4D8               	btfsc	status,2,c
 10006  005126  D7F0               	goto	l4143
 10007  005128  0A01               	xorlw	1	; case 3
 10008  00512A  B4D8               	btfsc	status,2,c
 10009  00512C  D7EF               	goto	l4145
 10010  00512E  0A07               	xorlw	7	; case 4
 10011  005130  B4D8               	btfsc	status,2,c
 10012  005132  D7EE               	goto	l4147
 10013  005134                     l4153:
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;lcd_x8.c: 69: address += x - 1;
 10017  005134  0100               	movlb	0	; () banked
 10018  005136  0599               	decf	lcd_gotoxy@x& (0+255),w,b
 10019  005138  0100               	movlb	0	; () banked
 10020  00513A  279A               	addwf	lcd_gotoxy@address& (0+255),f,b
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;lcd_x8.c: 70: lcd_send_byte(0, (unsigned char) (0x80 | address));
 10024  00513C  0100               	movlb	0	; () banked
 10025  00513E  519A               	movf	lcd_gotoxy@address& (0+255),w,b
 10026  005140  0980               	iorlw	128
 10027  005142  0100               	movlb	0	; () banked
 10028  005144  6F96               	movwf	lcd_send_byte@n& (0+255),b
 10029  005146  0E00               	movlw	0
 10030  005148  ECD6  F027         	call	_lcd_send_byte
 10031  00514C  0012               	return		;funcret
 10032  00514E                     __end_of_lcd_gotoxy:
 10033                           	opt stack 0
 10034                           tblptru	equ	0xFF8
 10035                           tblptrh	equ	0xFF7
 10036                           tblptrl	equ	0xFF6
 10037                           tablat	equ	0xFF5
 10038                           prodh	equ	0xFF4
 10039                           prodl	equ	0xFF3
 10040                           intcon	equ	0xFF2
 10041                           intcon2	equ	0xFF1
 10042                           intcon3	equ	0xFF0
 10043                           postinc0	equ	0xFEE
 10044                           wreg	equ	0xFE8
 10045                           indf1	equ	0xFE7
 10046                           postdec1	equ	0xFE5
 10047                           fsr1h	equ	0xFE2
 10048                           fsr1l	equ	0xFE1
 10049                           indf2	equ	0xFDF
 10050                           postinc2	equ	0xFDE
 10051                           postdec2	equ	0xFDD
 10052                           fsr2h	equ	0xFDA
 10053                           fsr2l	equ	0xFD9
 10054                           status	equ	0xFD8
 10055                           
 10056 ;; *************** function _lcd_init *****************
 10057 ;; Defined at:
 10058 ;;		line 40 in file "lcd_x8.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;		None
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;  i               1   24[BANK0 ] unsigned char 
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      void 
 10065 ;; Registers used:
 10066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;Total ram usage:        1 bytes
 10077 ;; Hardware stack levels used:    1
 10078 ;; Hardware stack levels required when called:   11
 10079 ;; This function calls:
 10080 ;;		_delay_ms
 10081 ;;		_lcd_send_byte
 10082 ;;		_lcd_send_nibble
 10083 ;; This function is called by:
 10084 ;;		_main
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088                           	psect	text27
 10089  004DA2                     __ptext27:
 10090                           	opt stack 0
 10091  004DA2                     _lcd_init:
 10092                           	opt stack 19
 10093                           
 10094                           ;lcd_x8.c: 41: unsigned char i;
 10095                           ;lcd_x8.c: 42: PORTEbits.RE2 = 0;
 10096                           
 10097                           ;incstack = 0
 10098  004DA2  9484               	bcf	3972,2,c	;volatile
 10099                           
 10100                           ;lcd_x8.c: 44: PORTEbits.RE1 = 0;
 10101  004DA4  9284               	bcf	3972,1,c	;volatile
 10102                           
 10103                           ;lcd_x8.c: 45: delay_ms(25);
 10104  004DA6  0E00               	movlw	0
 10105  004DA8  0100               	movlb	0	; () banked
 10106  004DAA  6F8F               	movwf	(delay_ms@n+1)& (0+255),b
 10107  004DAC  0E19               	movlw	25
 10108  004DAE  6F8E               	movwf	delay_ms@n& (0+255),b
 10109  004DB0  ECF9  F029         	call	_delay_ms	;wreg free
 10110                           
 10111                           ;lcd_x8.c: 46: for (i = 1; i <= 3; ++i) {
 10112  004DB4  0E01               	movlw	1
 10113  004DB6  0100               	movlb	0	; () banked
 10114  004DB8  6F98               	movwf	lcd_init@i& (0+255),b
 10115  004DBA                     l5557:
 10116                           
 10117                           ; BSR set to: 0
 10118  004DBA  0E03               	movlw	3
 10119  004DBC  0100               	movlb	0	; () banked
 10120  004DBE  6598               	cpfsgt	lcd_init@i& (0+255),b
 10121  004DC0  D001               	goto	l5561
 10122  004DC2  D00D               	goto	l5567
 10123  004DC4                     l5561:
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;lcd_x8.c: 47: lcd_send_nibble(3);
 10127  004DC4  0E03               	movlw	3
 10128  004DC6  EC6A  F02A         	call	_lcd_send_nibble
 10129                           
 10130                           ;lcd_x8.c: 49: delay_ms(6);
 10131  004DCA  0E00               	movlw	0
 10132  004DCC  0100               	movlb	0	; () banked
 10133  004DCE  6F8F               	movwf	(delay_ms@n+1)& (0+255),b
 10134  004DD0  0E06               	movlw	6
 10135  004DD2  6F8E               	movwf	delay_ms@n& (0+255),b
 10136  004DD4  ECF9  F029         	call	_delay_ms	;wreg free
 10137  004DD8  0100               	movlb	0	; () banked
 10138  004DDA  2B98               	incf	lcd_init@i& (0+255),f,b
 10139  004DDC  D7EE               	goto	l5557
 10140  004DDE                     l5567:
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;lcd_x8.c: 50: }
 10144                           ;lcd_x8.c: 51: lcd_send_nibble(2);
 10145  004DDE  0E02               	movlw	2
 10146  004DE0  EC6A  F02A         	call	_lcd_send_nibble
 10147                           
 10148                           ;lcd_x8.c: 53: for (i = 0; i <= 3; ++i)
 10149  004DE4  0E00               	movlw	0
 10150  004DE6  0100               	movlb	0	; () banked
 10151  004DE8  6F98               	movwf	lcd_init@i& (0+255),b
 10152  004DEA                     l5571:
 10153                           
 10154                           ; BSR set to: 0
 10155  004DEA  0E03               	movlw	3
 10156  004DEC  0100               	movlb	0	; () banked
 10157  004DEE  6598               	cpfsgt	lcd_init@i& (0+255),b
 10158  004DF0  D001               	goto	l5575
 10159  004DF2  0012               	return	
 10160  004DF4                     l5575:
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;lcd_x8.c: 54: lcd_send_byte(0, LCD_INIT_STRING[i]);
 10164  004DF4  0100               	movlb	0	; () banked
 10165  004DF6  5198               	movf	lcd_init@i& (0+255),w,b
 10166  004DF8  0D01               	mullw	1
 10167  004DFA  0EE9               	movlw	low _LCD_INIT_STRING
 10168  004DFC  24F3               	addwf	prodl,w,c
 10169  004DFE  6ED9               	movwf	fsr2l,c
 10170  004E00  0E00               	movlw	high _LCD_INIT_STRING
 10171  004E02  20F4               	addwfc	prodh,w,c
 10172  004E04  6EDA               	movwf	fsr2h,c
 10173  004E06  50DF               	movf	indf2,w,c
 10174  004E08  0100               	movlb	0	; () banked
 10175  004E0A  6F96               	movwf	lcd_send_byte@n& (0+255),b
 10176  004E0C  0E00               	movlw	0
 10177  004E0E  ECD6  F027         	call	_lcd_send_byte
 10178  004E12  0100               	movlb	0	; () banked
 10179  004E14  2B98               	incf	lcd_init@i& (0+255),f,b
 10180  004E16  D7E9               	goto	l5571
 10181  004E18                     __end_of_lcd_init:
 10182                           	opt stack 0
 10183                           tblptru	equ	0xFF8
 10184                           tblptrh	equ	0xFF7
 10185                           tblptrl	equ	0xFF6
 10186                           tablat	equ	0xFF5
 10187                           prodh	equ	0xFF4
 10188                           prodl	equ	0xFF3
 10189                           intcon	equ	0xFF2
 10190                           intcon2	equ	0xFF1
 10191                           intcon3	equ	0xFF0
 10192                           postinc0	equ	0xFEE
 10193                           wreg	equ	0xFE8
 10194                           indf1	equ	0xFE7
 10195                           postdec1	equ	0xFE5
 10196                           fsr1h	equ	0xFE2
 10197                           fsr1l	equ	0xFE1
 10198                           indf2	equ	0xFDF
 10199                           postinc2	equ	0xFDE
 10200                           postdec2	equ	0xFDD
 10201                           fsr2h	equ	0xFDA
 10202                           fsr2l	equ	0xFD9
 10203                           status	equ	0xFD8
 10204                           
 10205 ;; *************** function _lcd_send_byte *****************
 10206 ;; Defined at:
 10207 ;;		line 26 in file "lcd_x8.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;  cm_data         1    wreg     unsigned char 
 10210 ;;  n               1   22[BANK0 ] unsigned char 
 10211 ;; Auto vars:     Size  Location     Type
 10212 ;;  cm_data         1   23[BANK0 ] unsigned char 
 10213 ;; Return value:  Size  Location     Type
 10214 ;;                  1    wreg      void 
 10215 ;; Registers used:
 10216 ;;		wreg, status,2, status,0, cstack
 10217 ;; Tracked objects:
 10218 ;;		On entry : 0/0
 10219 ;;		On exit  : 0/0
 10220 ;;		Unchanged: 0/0
 10221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10222 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10223 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10225 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10226 ;;Total ram usage:        2 bytes
 10227 ;; Hardware stack levels used:    1
 10228 ;; Hardware stack levels required when called:   10
 10229 ;; This function calls:
 10230 ;;		_delay_cycles
 10231 ;;		_delay_ms
 10232 ;;		_lcd_send_nibble
 10233 ;; This function is called by:
 10234 ;;		_lcd_init
 10235 ;;		_lcd_gotoxy
 10236 ;;		_lcd_putc
 10237 ;;		_Lcd_Shift_Right
 10238 ;;		_Lcd_Shift_Left
 10239 ;; This function uses a non-reentrant model
 10240 ;;
 10241                           
 10242                           	psect	text28
 10243  004FAC                     __ptext28:
 10244                           	opt stack 0
 10245  004FAC                     _lcd_send_byte:
 10246                           	opt stack 18
 10247                           
 10248                           ; BSR set to: 0
 10249                           ;incstack = 0
 10250                           ;lcd_send_byte@cm_data stored from wreg
 10251  004FAC  0100               	movlb	0	; () banked
 10252  004FAE  6F97               	movwf	lcd_send_byte@cm_data& (0+255),b
 10253                           
 10254                           ;lcd_x8.c: 27: PORTEbits.RE2 = cm_data;
 10255  004FB0  0100               	movlb	0	; () banked
 10256  004FB2  B197               	btfsc	lcd_send_byte@cm_data& (0+255),0,b
 10257  004FB4  D002               	bra	u3975
 10258  004FB6  9484               	bcf	3972,2,c	;volatile
 10259  004FB8  D001               	bra	u3976
 10260  004FBA                     u3975:
 10261  004FBA  8484               	bsf	3972,2,c	;volatile
 10262  004FBC                     u3976:
 10263                           
 10264                           ;lcd_x8.c: 28: delay_cycles(1);
 10265  004FBC  0E01               	movlw	1
 10266  004FBE  ECF1  F028         	call	_delay_cycles
 10267                           
 10268                           ;lcd_x8.c: 30: delay_cycles(1);
 10269  004FC2  0E01               	movlw	1
 10270  004FC4  ECF1  F028         	call	_delay_cycles
 10271                           
 10272                           ;lcd_x8.c: 31: PORTEbits.RE1 = 0;
 10273  004FC8  9284               	bcf	3972,1,c	;volatile
 10274                           
 10275                           ;lcd_x8.c: 32: lcd_send_nibble(n >> 4);
 10276  004FCA  0100               	movlb	0	; () banked
 10277  004FCC  3996               	swapf	lcd_send_byte@n& (0+255),w,b
 10278  004FCE  0B0F               	andlw	15
 10279  004FD0  EC6A  F02A         	call	_lcd_send_nibble
 10280                           
 10281                           ;lcd_x8.c: 33: lcd_send_nibble(n & 0x0f);
 10282  004FD4  0100               	movlb	0	; () banked
 10283  004FD6  5196               	movf	lcd_send_byte@n& (0+255),w,b
 10284  004FD8  0B0F               	andlw	15
 10285  004FDA  EC6A  F02A         	call	_lcd_send_nibble
 10286                           
 10287                           ;lcd_x8.c: 34: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 10288  004FDE  0100               	movlb	0	; () banked
 10289  004FE0  5197               	movf	lcd_send_byte@cm_data& (0+255),w,b
 10290  004FE2  0100               	movlb	0	; () banked
 10291  004FE4  B4D8               	btfsc	status,2,c
 10292  004FE6  D005               	goto	l3879
 10293                           
 10294                           ; BSR set to: 0
 10295  004FE8  0E32               	movlw	50
 10296  004FEA                     u8457:
 10297  004FEA  0004               	clrwdt	
 10298  004FEC  2EE8               	decfsz	wreg,f,c
 10299  004FEE  D7FD               	goto	u8457
 10300  004FF0  0012               	return	
 10301  004FF2                     l3879:
 10302                           
 10303                           ;lcd_x8.c: 35: else
 10304                           ;lcd_x8.c: 36: delay_ms(2);
 10305  004FF2  0E00               	movlw	0
 10306  004FF4  0100               	movlb	0	; () banked
 10307  004FF6  6F8F               	movwf	(delay_ms@n+1)& (0+255),b
 10308  004FF8  0E02               	movlw	2
 10309  004FFA  6F8E               	movwf	delay_ms@n& (0+255),b
 10310  004FFC  ECF9  F029         	call	_delay_ms	;wreg free
 10311  005000  0012               	return	
 10312  005002                     __end_of_lcd_send_byte:
 10313                           	opt stack 0
 10314                           tblptru	equ	0xFF8
 10315                           tblptrh	equ	0xFF7
 10316                           tblptrl	equ	0xFF6
 10317                           tablat	equ	0xFF5
 10318                           prodh	equ	0xFF4
 10319                           prodl	equ	0xFF3
 10320                           intcon	equ	0xFF2
 10321                           intcon2	equ	0xFF1
 10322                           intcon3	equ	0xFF0
 10323                           postinc0	equ	0xFEE
 10324                           wreg	equ	0xFE8
 10325                           indf1	equ	0xFE7
 10326                           postdec1	equ	0xFE5
 10327                           fsr1h	equ	0xFE2
 10328                           fsr1l	equ	0xFE1
 10329                           indf2	equ	0xFDF
 10330                           postinc2	equ	0xFDE
 10331                           postdec2	equ	0xFDD
 10332                           fsr2h	equ	0xFDA
 10333                           fsr2l	equ	0xFD9
 10334                           status	equ	0xFD8
 10335                           
 10336 ;; *************** function _lcd_send_nibble *****************
 10337 ;; Defined at:
 10338 ;;		line 18 in file "lcd_x8.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  n               1    wreg     unsigned char 
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;  n               1   21[BANK0 ] unsigned char 
 10343 ;; Return value:  Size  Location     Type
 10344 ;;                  1    wreg      void 
 10345 ;; Registers used:
 10346 ;;		wreg, status,2, status,0, cstack
 10347 ;; Tracked objects:
 10348 ;;		On entry : 0/0
 10349 ;;		On exit  : 0/0
 10350 ;;		Unchanged: 0/0
 10351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10355 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10356 ;;Total ram usage:        2 bytes
 10357 ;; Hardware stack levels used:    1
 10358 ;; Hardware stack levels required when called:    9
 10359 ;; This function calls:
 10360 ;;		_delay_cycles
 10361 ;; This function is called by:
 10362 ;;		_lcd_send_byte
 10363 ;;		_lcd_init
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text29
 10368  0054D4                     __ptext29:
 10369                           	opt stack 0
 10370  0054D4                     _lcd_send_nibble:
 10371                           	opt stack 18
 10372                           
 10373                           ;incstack = 0
 10374                           ;lcd_send_nibble@n stored from wreg
 10375  0054D4  0100               	movlb	0	; () banked
 10376  0054D6  6F95               	movwf	lcd_send_nibble@n& (0+255),b
 10377                           
 10378                           ;lcd_x8.c: 19: lcd.data = n;
 10379  0054D8  C095  F094         	movff	lcd_send_nibble@n,??_lcd_send_nibble
 10380  0054DC  0100               	movlb	0	; () banked
 10381  0054DE  3B94               	swapf	??_lcd_send_nibble& (0+255),f,b
 10382  0054E0  5083               	movf	3971,w,c
 10383  0054E2  0100               	movlb	0	; () banked
 10384  0054E4  1994               	xorwf	??_lcd_send_nibble& (0+255),w,b
 10385  0054E6  0B0F               	andlw	-241
 10386  0054E8  1994               	xorwf	??_lcd_send_nibble& (0+255),w,b
 10387  0054EA  6E83               	movwf	3971,c
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;lcd_x8.c: 20: delay_cycles(1);
 10391  0054EC  0E01               	movlw	1
 10392  0054EE  ECF1  F028         	call	_delay_cycles
 10393                           
 10394                           ;lcd_x8.c: 21: PORTEbits.RE1 = 1;
 10395  0054F2  8284               	bsf	3972,1,c	;volatile
 10396                           
 10397                           ;lcd_x8.c: 22: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 10398  0054F4  0004               	clrwdt	
 10399  0054F6  F000               	nop		;2 cycle nop
 10400                           
 10401                           ;lcd_x8.c: 23: PORTEbits.RE1 = 0;
 10402  0054F8  9284               	bcf	3972,1,c	;volatile
 10403  0054FA  0012               	return		;funcret
 10404  0054FC                     __end_of_lcd_send_nibble:
 10405                           	opt stack 0
 10406                           tblptru	equ	0xFF8
 10407                           tblptrh	equ	0xFF7
 10408                           tblptrl	equ	0xFF6
 10409                           tablat	equ	0xFF5
 10410                           prodh	equ	0xFF4
 10411                           prodl	equ	0xFF3
 10412                           intcon	equ	0xFF2
 10413                           intcon2	equ	0xFF1
 10414                           intcon3	equ	0xFF0
 10415                           postinc0	equ	0xFEE
 10416                           wreg	equ	0xFE8
 10417                           indf1	equ	0xFE7
 10418                           postdec1	equ	0xFE5
 10419                           fsr1h	equ	0xFE2
 10420                           fsr1l	equ	0xFE1
 10421                           indf2	equ	0xFDF
 10422                           postinc2	equ	0xFDE
 10423                           postdec2	equ	0xFDD
 10424                           fsr2h	equ	0xFDA
 10425                           fsr2l	equ	0xFD9
 10426                           status	equ	0xFD8
 10427                           
 10428 ;; *************** function _delay_cycles *****************
 10429 ;; Defined at:
 10430 ;;		line 11 in file "lcd_x8.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;  n               1    wreg     unsigned char 
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;  n               1   17[BANK0 ] unsigned char 
 10435 ;;  x               2   18[BANK0 ] int 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg, status,2, status,0
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10447 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10448 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10449 ;;Total ram usage:        6 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    8
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_lcd_send_nibble
 10456 ;;		_lcd_send_byte
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text30
 10461  0051E2                     __ptext30:
 10462                           	opt stack 0
 10463  0051E2                     _delay_cycles:
 10464                           	opt stack 18
 10465                           
 10466                           ;incstack = 0
 10467                           ;delay_cycles@n stored from wreg
 10468  0051E2  0100               	movlb	0	; () banked
 10469  0051E4  6F91               	movwf	delay_cycles@n& (0+255),b
 10470                           
 10471                           ;lcd_x8.c: 12: int x;
 10472                           ;lcd_x8.c: 13: for (x = 0; x <= n; x++) {
 10473  0051E6  0E00               	movlw	0
 10474  0051E8  0100               	movlb	0	; () banked
 10475  0051EA  6F93               	movwf	(delay_cycles@x+1)& (0+255),b
 10476  0051EC  0E00               	movlw	0
 10477  0051EE  6F92               	movwf	delay_cycles@x& (0+255),b
 10478  0051F0  D004               	goto	l3775
 10479  0051F2                     l231:
 10480                           
 10481                           ; BSR set to: 0
 10482  0051F2  0004               	clrwdt		;# 
 10483  0051F4  0100               	movlb	0	; () banked
 10484  0051F6  4B92               	infsnz	delay_cycles@x& (0+255),f,b
 10485  0051F8  2B93               	incf	(delay_cycles@x+1)& (0+255),f,b
 10486  0051FA                     l3775:
 10487                           
 10488                           ; BSR set to: 0
 10489  0051FA  0100               	movlb	0	; () banked
 10490  0051FC  5191               	movf	delay_cycles@n& (0+255),w,b
 10491  0051FE  0100               	movlb	0	; () banked
 10492  005200  6F8E               	movwf	??_delay_cycles& (0+255),b
 10493  005202  6B8F               	clrf	(??_delay_cycles+1)& (0+255),b
 10494  005204  0100               	movlb	0	; () banked
 10495  005206  5192               	movf	delay_cycles@x& (0+255),w,b
 10496  005208  0100               	movlb	0	; () banked
 10497  00520A  5D8E               	subwf	??_delay_cycles& (0+255),w,b
 10498  00520C  0100               	movlb	0	; () banked
 10499  00520E  518F               	movf	(??_delay_cycles+1)& (0+255),w,b
 10500  005210  0A80               	xorlw	128
 10501  005212  0100               	movlb	0	; () banked
 10502  005214  6F90               	movwf	(??_delay_cycles+2)& (0+255),b
 10503  005216  0100               	movlb	0	; () banked
 10504  005218  5193               	movf	(delay_cycles@x+1)& (0+255),w,b
 10505  00521A  0A80               	xorlw	128
 10506  00521C  0100               	movlb	0	; () banked
 10507  00521E  5990               	subwfb	(??_delay_cycles+2)& (0+255),w,b
 10508  005220  A0D8               	btfss	status,0,c
 10509  005222  0012               	return	
 10510  005224  D7E6               	goto	l231
 10511  005226                     __end_of_delay_cycles:
 10512                           	opt stack 0
 10513                           tblptru	equ	0xFF8
 10514                           tblptrh	equ	0xFF7
 10515                           tblptrl	equ	0xFF6
 10516                           tablat	equ	0xFF5
 10517                           prodh	equ	0xFF4
 10518                           prodl	equ	0xFF3
 10519                           intcon	equ	0xFF2
 10520                           intcon2	equ	0xFF1
 10521                           intcon3	equ	0xFF0
 10522                           postinc0	equ	0xFEE
 10523                           wreg	equ	0xFE8
 10524                           indf1	equ	0xFE7
 10525                           postdec1	equ	0xFE5
 10526                           fsr1h	equ	0xFE2
 10527                           fsr1l	equ	0xFE1
 10528                           indf2	equ	0xFDF
 10529                           postinc2	equ	0xFDE
 10530                           postdec2	equ	0xFDD
 10531                           fsr2h	equ	0xFDA
 10532                           fsr2l	equ	0xFD9
 10533                           status	equ	0xFD8
 10534                           
 10535 ;; *************** function _delay_ms *****************
 10536 ;; Defined at:
 10537 ;;		line 4 in file "lcd_x8.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;  n               2   14[BANK0 ] unsigned int 
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;  x               2   16[BANK0 ] int 
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10552 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10554 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10555 ;;Total ram usage:        4 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:    8
 10558 ;; This function calls:
 10559 ;;		Nothing
 10560 ;; This function is called by:
 10561 ;;		_main
 10562 ;;		_lcd_send_byte
 10563 ;;		_lcd_init
 10564 ;;		_lcd_putc
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text31
 10569  0053F2                     __ptext31:
 10570                           	opt stack 0
 10571  0053F2                     _delay_ms:
 10572                           	opt stack 19
 10573                           
 10574                           ;lcd_x8.c: 5: int x;
 10575                           ;lcd_x8.c: 6: for (x = 0; x <= n; x++) {
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;incstack = 0
 10579  0053F2  0E00               	movlw	0
 10580  0053F4  0100               	movlb	0	; () banked
 10581  0053F6  6F91               	movwf	(delay_ms@x+1)& (0+255),b
 10582  0053F8  0E00               	movlw	0
 10583  0053FA  6F90               	movwf	delay_ms@x& (0+255),b
 10584  0053FC  D007               	goto	l224
 10585  0053FE                     l3795:
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;lcd_x8.c: 7: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 10589  0053FE  0EFA               	movlw	250
 10590  005400                     u8467:
 10591  005400  0004               	clrwdt	
 10592  005402  2EE8               	decfsz	wreg,f,c
 10593  005404  D7FD               	goto	u8467
 10594  005406  0100               	movlb	0	; () banked
 10595  005408  4B90               	infsnz	delay_ms@x& (0+255),f,b
 10596  00540A  2B91               	incf	(delay_ms@x+1)& (0+255),f,b
 10597  00540C                     l224:
 10598                           
 10599                           ; BSR set to: 0
 10600  00540C  0100               	movlb	0	; () banked
 10601  00540E  5190               	movf	delay_ms@x& (0+255),w,b
 10602  005410  0100               	movlb	0	; () banked
 10603  005412  5D8E               	subwf	delay_ms@n& (0+255),w,b
 10604  005414  0100               	movlb	0	; () banked
 10605  005416  5191               	movf	(delay_ms@x+1)& (0+255),w,b
 10606  005418  0100               	movlb	0	; () banked
 10607  00541A  598F               	subwfb	(delay_ms@n+1)& (0+255),w,b
 10608  00541C  A0D8               	btfss	status,0,c
 10609  00541E  0012               	return	
 10610  005420  D7EE               	goto	l3795
 10611  005422                     __end_of_delay_ms:
 10612                           	opt stack 0
 10613                           tblptru	equ	0xFF8
 10614                           tblptrh	equ	0xFF7
 10615                           tblptrl	equ	0xFF6
 10616                           tablat	equ	0xFF5
 10617                           prodh	equ	0xFF4
 10618                           prodl	equ	0xFF3
 10619                           intcon	equ	0xFF2
 10620                           intcon2	equ	0xFF1
 10621                           intcon3	equ	0xFF0
 10622                           postinc0	equ	0xFEE
 10623                           wreg	equ	0xFE8
 10624                           indf1	equ	0xFE7
 10625                           postdec1	equ	0xFE5
 10626                           fsr1h	equ	0xFE2
 10627                           fsr1l	equ	0xFE1
 10628                           indf2	equ	0xFDF
 10629                           postinc2	equ	0xFDE
 10630                           postdec2	equ	0xFDD
 10631                           fsr2h	equ	0xFDA
 10632                           fsr2l	equ	0xFD9
 10633                           status	equ	0xFD8
 10634                           
 10635 ;; *************** function _init_adc_no_lib *****************
 10636 ;; Defined at:
 10637 ;;		line 2 in file "my_adc.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;		None
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;		None
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  1    wreg      void 
 10644 ;; Registers used:
 10645 ;;		wreg, status,2
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10655 ;;Total ram usage:        0 bytes
 10656 ;; Hardware stack levels used:    1
 10657 ;; Hardware stack levels required when called:    8
 10658 ;; This function calls:
 10659 ;;		Nothing
 10660 ;; This function is called by:
 10661 ;;		_main
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           	psect	text32
 10666  005626                     __ptext32:
 10667                           	opt stack 0
 10668  005626                     _init_adc_no_lib:
 10669                           	opt stack 22
 10670                           
 10671                           ;my_adc.c: 3: ADCON1 = 0b00001100;
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;incstack = 0
 10675  005626  0E0C               	movlw	12
 10676  005628  6EC1               	movwf	4033,c	;volatile
 10677                           
 10678                           ;my_adc.c: 4: ADCON0 = 0;
 10679  00562A  0E00               	movlw	0
 10680  00562C  6EC2               	movwf	4034,c	;volatile
 10681                           
 10682                           ;my_adc.c: 5: ADCON0bits.ADON = 1;
 10683  00562E  80C2               	bsf	4034,0,c	;volatile
 10684                           
 10685                           ;my_adc.c: 7: ADCON2 = 0b10001001;
 10686  005630  0E89               	movlw	137
 10687  005632  6EC0               	movwf	4032,c	;volatile
 10688  005634  0012               	return		;funcret
 10689  005636                     __end_of_init_adc_no_lib:
 10690                           	opt stack 0
 10691                           tblptru	equ	0xFF8
 10692                           tblptrh	equ	0xFF7
 10693                           tblptrl	equ	0xFF6
 10694                           tablat	equ	0xFF5
 10695                           prodh	equ	0xFF4
 10696                           prodl	equ	0xFF3
 10697                           intcon	equ	0xFF2
 10698                           intcon2	equ	0xFF1
 10699                           intcon3	equ	0xFF0
 10700                           postinc0	equ	0xFEE
 10701                           wreg	equ	0xFE8
 10702                           indf1	equ	0xFE7
 10703                           postdec1	equ	0xFE5
 10704                           fsr1h	equ	0xFE2
 10705                           fsr1l	equ	0xFE1
 10706                           indf2	equ	0xFDF
 10707                           postinc2	equ	0xFDE
 10708                           postdec2	equ	0xFDD
 10709                           fsr2h	equ	0xFDA
 10710                           fsr2l	equ	0xFD9
 10711                           status	equ	0xFD8
 10712                           
 10713 ;; *************** function ___lwdiv *****************
 10714 ;; Defined at:
 10715 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;  dividend        2   34[BANK0 ] unsigned int 
 10718 ;;  divisor         2   36[BANK0 ] unsigned int 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;  quotient        2   38[BANK0 ] unsigned int 
 10721 ;;  counter         1   40[BANK0 ] unsigned char 
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  2   34[BANK0 ] unsigned int 
 10724 ;; Registers used:
 10725 ;;		wreg, status,2, status,0
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10732 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10734 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;Total ram usage:        7 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; Hardware stack levels required when called:    8
 10738 ;; This function calls:
 10739 ;;		Nothing
 10740 ;; This function is called by:
 10741 ;;		_main
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745                           	psect	text33
 10746  004D2A                     __ptext33:
 10747                           	opt stack 0
 10748  004D2A                     ___lwdiv:
 10749                           	opt stack 22
 10750                           
 10751                           ;incstack = 0
 10752  004D2A  0E00               	movlw	0
 10753  004D2C  0100               	movlb	0	; () banked
 10754  004D2E  6FA7               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10755  004D30  0E00               	movlw	0
 10756  004D32  6FA6               	movwf	___lwdiv@quotient& (0+255),b
 10757                           
 10758                           ; BSR set to: 0
 10759  004D34  0100               	movlb	0	; () banked
 10760  004D36  51A4               	movf	___lwdiv@divisor& (0+255),w,b
 10761  004D38  0100               	movlb	0	; () banked
 10762  004D3A  11A5               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10763  004D3C  B4D8               	btfsc	status,2,c
 10764  004D3E  D02C               	goto	l898
 10765                           
 10766                           ; BSR set to: 0
 10767  004D40  0E01               	movlw	1
 10768  004D42  0100               	movlb	0	; () banked
 10769  004D44  6FA8               	movwf	___lwdiv@counter& (0+255),b
 10770  004D46  D006               	goto	l6147
 10771  004D48                     l6145:
 10772                           
 10773                           ; BSR set to: 0
 10774  004D48  0100               	movlb	0	; () banked
 10775  004D4A  90D8               	bcf	status,0,c
 10776  004D4C  37A4               	rlcf	___lwdiv@divisor& (0+255),f,b
 10777  004D4E  37A5               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10778  004D50  0100               	movlb	0	; () banked
 10779  004D52  2BA8               	incf	___lwdiv@counter& (0+255),f,b
 10780  004D54                     l6147:
 10781                           
 10782                           ; BSR set to: 0
 10783  004D54  0100               	movlb	0	; () banked
 10784  004D56  AFA5               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10785  004D58  D7F7               	goto	l6145
 10786  004D5A                     l6149:
 10787                           
 10788                           ; BSR set to: 0
 10789  004D5A  0100               	movlb	0	; () banked
 10790  004D5C  90D8               	bcf	status,0,c
 10791  004D5E  37A6               	rlcf	___lwdiv@quotient& (0+255),f,b
 10792  004D60  37A7               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10793                           
 10794                           ; BSR set to: 0
 10795  004D62  0100               	movlb	0	; () banked
 10796  004D64  51A4               	movf	___lwdiv@divisor& (0+255),w,b
 10797  004D66  0100               	movlb	0	; () banked
 10798  004D68  5DA2               	subwf	___lwdiv@dividend& (0+255),w,b
 10799  004D6A  0100               	movlb	0	; () banked
 10800  004D6C  51A5               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10801  004D6E  0100               	movlb	0	; () banked
 10802  004D70  59A3               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10803  004D72  A0D8               	btfss	status,0,c
 10804  004D74  D00A               	goto	l6157
 10805                           
 10806                           ; BSR set to: 0
 10807  004D76  0100               	movlb	0	; () banked
 10808  004D78  51A4               	movf	___lwdiv@divisor& (0+255),w,b
 10809  004D7A  0100               	movlb	0	; () banked
 10810  004D7C  5FA2               	subwf	___lwdiv@dividend& (0+255),f,b
 10811  004D7E  0100               	movlb	0	; () banked
 10812  004D80  51A5               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10813  004D82  0100               	movlb	0	; () banked
 10814  004D84  5BA3               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10815                           
 10816                           ; BSR set to: 0
 10817  004D86  0100               	movlb	0	; () banked
 10818  004D88  81A6               	bsf	___lwdiv@quotient& (0+255),0,b
 10819  004D8A                     l6157:
 10820                           
 10821                           ; BSR set to: 0
 10822  004D8A  0100               	movlb	0	; () banked
 10823  004D8C  90D8               	bcf	status,0,c
 10824  004D8E  33A5               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10825  004D90  33A4               	rrcf	___lwdiv@divisor& (0+255),f,b
 10826                           
 10827                           ; BSR set to: 0
 10828  004D92  0100               	movlb	0	; () banked
 10829  004D94  2FA8               	decfsz	___lwdiv@counter& (0+255),f,b
 10830  004D96  D7E1               	goto	l6149
 10831  004D98                     l898:
 10832                           
 10833                           ; BSR set to: 0
 10834  004D98  C0A6  F0A2         	movff	___lwdiv@quotient,?___lwdiv
 10835  004D9C  C0A7  F0A3         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10836                           
 10837                           ; BSR set to: 0
 10838  004DA0  0012               	return		;funcret
 10839  004DA2                     __end_of___lwdiv:
 10840                           	opt stack 0
 10841                           tblptru	equ	0xFF8
 10842                           tblptrh	equ	0xFF7
 10843                           tblptrl	equ	0xFF6
 10844                           tablat	equ	0xFF5
 10845                           prodh	equ	0xFF4
 10846                           prodl	equ	0xFF3
 10847                           intcon	equ	0xFF2
 10848                           intcon2	equ	0xFF1
 10849                           intcon3	equ	0xFF0
 10850                           postinc0	equ	0xFEE
 10851                           wreg	equ	0xFE8
 10852                           indf1	equ	0xFE7
 10853                           postdec1	equ	0xFE5
 10854                           fsr1h	equ	0xFE2
 10855                           fsr1l	equ	0xFE1
 10856                           indf2	equ	0xFDF
 10857                           postinc2	equ	0xFDE
 10858                           postdec2	equ	0xFDD
 10859                           fsr2h	equ	0xFDA
 10860                           fsr2l	equ	0xFD9
 10861                           status	equ	0xFD8
 10862                           
 10863 ;; *************** function _highIsr *****************
 10864 ;; Defined at:
 10865 ;;		line 207 in file "AS1AY.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;		None
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;		None
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  1    wreg      void 
 10872 ;; Registers used:
 10873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10881 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10882 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10883 ;;Total ram usage:       14 bytes
 10884 ;; Hardware stack levels used:    1
 10885 ;; Hardware stack levels required when called:    7
 10886 ;; This function calls:
 10887 ;;		_EXT_Int0_isr
 10888 ;;		_EXT_Int1_isr
 10889 ;;		_EXT_Int2_isr
 10890 ;;		_timer0_isr
 10891 ;; This function is called by:
 10892 ;;		Interrupt level 2
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	intcode
 10897  000008                     __pintcode:
 10898                           	opt stack 0
 10899  000008                     _highIsr:
 10900                           	opt stack 17
 10901                           
 10902                           ; BSR set to: 0
 10903                           ;incstack = 0
 10904  000008  827E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10905  00000A  CFFA F080          	movff	pclath,??_highIsr
 10906  00000E  CFFB F081          	movff	pclatu,??_highIsr+1
 10907  000012  ED70  F024         	call	int_func,f	;refresh shadow registers
 10908                           pclatu	equ	0xFFB
 10909                           pclath	equ	0xFFA
 10910                           tblptru	equ	0xFF8
 10911                           tblptrh	equ	0xFF7
 10912                           tblptrl	equ	0xFF6
 10913                           tablat	equ	0xFF5
 10914                           prodh	equ	0xFF4
 10915                           prodl	equ	0xFF3
 10916                           intcon	equ	0xFF2
 10917                           intcon2	equ	0xFF1
 10918                           intcon3	equ	0xFF0
 10919                           postinc0	equ	0xFEE
 10920                           wreg	equ	0xFE8
 10921                           indf1	equ	0xFE7
 10922                           postdec1	equ	0xFE5
 10923                           fsr1h	equ	0xFE2
 10924                           fsr1l	equ	0xFE1
 10925                           indf2	equ	0xFDF
 10926                           postinc2	equ	0xFDE
 10927                           postdec2	equ	0xFDD
 10928                           fsr2h	equ	0xFDA
 10929                           fsr2l	equ	0xFD9
 10930                           status	equ	0xFD8
 10931                           
 10932                           	psect	intcode_body
 10933  0048E0                     __pintcode_body:
 10934                           	opt stack 17
 10935  0048E0                     int_func:
 10936                           	opt stack 17
 10937  0048E0  0006               	pop		; remove dummy address from shadow register refresh
 10938  0048E2  CFE9 F082          	movff	fsr0l,??_highIsr+2
 10939  0048E6  CFEA F083          	movff	fsr0h,??_highIsr+3
 10940  0048EA  CFE1 F084          	movff	fsr1l,??_highIsr+4
 10941  0048EE  CFE2 F085          	movff	fsr1h,??_highIsr+5
 10942  0048F2  CFD9 F086          	movff	fsr2l,??_highIsr+6
 10943  0048F6  CFDA F087          	movff	fsr2h,??_highIsr+7
 10944  0048FA  CFF3 F088          	movff	prodl,??_highIsr+8
 10945  0048FE  CFF4 F089          	movff	prodh,??_highIsr+9
 10946  004902  CFF6 F08A          	movff	tblptrl,??_highIsr+10
 10947  004906  CFF7 F08B          	movff	tblptrh,??_highIsr+11
 10948  00490A  CFF8 F08C          	movff	tblptru,??_highIsr+12
 10949  00490E  CFF5 F08D          	movff	tablat,??_highIsr+13
 10950                           
 10951                           ;AS1AY.c: 209: if (INTCONbits.TMR0IF) timer0_isr();
 10952  004912  A4F2               	btfss	intcon,2,c	;volatile
 10953  004914  D003               	goto	i2l160
 10954  004916  ECAE  F012         	call	_timer0_isr	;wreg free
 10955  00491A  D00D               	goto	i2l167
 10956  00491C                     i2l160:
 10957                           
 10958                           ;AS1AY.c: 210: else if (INTCONbits.INT0IF) EXT_Int0_isr();
 10959  00491C  A2F2               	btfss	intcon,1,c	;volatile
 10960  00491E  D003               	goto	i2l162
 10961  004920  EC3E  F01D         	call	_EXT_Int0_isr	;wreg free
 10962  004924  D008               	goto	i2l167
 10963  004926                     i2l162:
 10964                           
 10965                           ;AS1AY.c: 211: else if (INTCON3bits.INT2F) EXT_Int2_isr();
 10966  004926  A2F0               	btfss	intcon3,1,c	;volatile
 10967  004928  D003               	goto	i2l164
 10968  00492A  ECEB  F02A         	call	_EXT_Int2_isr	;wreg free
 10969  00492E  D003               	goto	i2l167
 10970  004930                     i2l164:
 10971                           
 10972                           ;AS1AY.c: 212: else if (INTCON3bits.INT1F) EXT_Int1_isr();
 10973  004930  B0F0               	btfsc	intcon3,0,c	;volatile
 10974  004932  EC3F  F02A         	call	_EXT_Int1_isr	;wreg free
 10975  004936                     i2l167:
 10976  004936  C08D  FFF5         	movff	??_highIsr+13,tablat
 10977  00493A  C08C  FFF8         	movff	??_highIsr+12,tblptru
 10978  00493E  C08B  FFF7         	movff	??_highIsr+11,tblptrh
 10979  004942  C08A  FFF6         	movff	??_highIsr+10,tblptrl
 10980  004946  C089  FFF4         	movff	??_highIsr+9,prodh
 10981  00494A  C088  FFF3         	movff	??_highIsr+8,prodl
 10982  00494E  C087  FFDA         	movff	??_highIsr+7,fsr2h
 10983  004952  C086  FFD9         	movff	??_highIsr+6,fsr2l
 10984  004956  C085  FFE2         	movff	??_highIsr+5,fsr1h
 10985  00495A  C084  FFE1         	movff	??_highIsr+4,fsr1l
 10986  00495E  C083  FFEA         	movff	??_highIsr+3,fsr0h
 10987  004962  C082  FFE9         	movff	??_highIsr+2,fsr0l
 10988  004966  C081  FFFB         	movff	??_highIsr+1,pclatu
 10989  00496A  C080  FFFA         	movff	??_highIsr,pclath
 10990  00496E  927E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10991  004970  0011               	retfie		f
 10992  004972                     __end_of_highIsr:
 10993                           	opt stack 0
 10994                           pclatu	equ	0xFFB
 10995                           pclath	equ	0xFFA
 10996                           tblptru	equ	0xFF8
 10997                           tblptrh	equ	0xFF7
 10998                           tblptrl	equ	0xFF6
 10999                           tablat	equ	0xFF5
 11000                           prodh	equ	0xFF4
 11001                           prodl	equ	0xFF3
 11002                           intcon	equ	0xFF2
 11003                           intcon2	equ	0xFF1
 11004                           intcon3	equ	0xFF0
 11005                           postinc0	equ	0xFEE
 11006                           fsr0h	equ	0xFEA
 11007                           fsr0l	equ	0xFE9
 11008                           wreg	equ	0xFE8
 11009                           indf1	equ	0xFE7
 11010                           postdec1	equ	0xFE5
 11011                           fsr1h	equ	0xFE2
 11012                           fsr1l	equ	0xFE1
 11013                           indf2	equ	0xFDF
 11014                           postinc2	equ	0xFDE
 11015                           postdec2	equ	0xFDD
 11016                           fsr2h	equ	0xFDA
 11017                           fsr2l	equ	0xFD9
 11018                           status	equ	0xFD8
 11019                           
 11020 ;; *************** function _timer0_isr *****************
 11021 ;; Defined at:
 11022 ;;		line 215 in file "AS1AY.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;		None
 11025 ;; Auto vars:     Size  Location     Type
 11026 ;;  i               2  115[COMRAM] int 
 11027 ;;  channe0         1  114[COMRAM] unsigned char 
 11028 ;;  channe2         1  113[COMRAM] unsigned char 
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  1    wreg      void 
 11031 ;; Registers used:
 11032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11033 ;; Tracked objects:
 11034 ;;		On entry : 0/0
 11035 ;;		On exit  : 0/0
 11036 ;;		Unchanged: 0/0
 11037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11042 ;;Total ram usage:        6 bytes
 11043 ;; Hardware stack levels used:    1
 11044 ;; Hardware stack levels required when called:    6
 11045 ;; This function calls:
 11046 ;;		_read_adc_temp
 11047 ;;		_read_adc_temp2
 11048 ;;		i2___ftadd
 11049 ;;		i2___ftge
 11050 ;;		i2___lwdiv
 11051 ;;		i2___wmul
 11052 ;;		i2_delay_ms
 11053 ;;		i2_lcd_gotoxy
 11054 ;;		i2_lcd_puts
 11055 ;;		i2_reloadTimer0
 11056 ;;		i2_sprintf
 11057 ;;		i2_strcpy
 11058 ;; This function is called by:
 11059 ;;		_highIsr
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text35
 11064  00255C                     __ptext35:
 11065                           	opt stack 0
 11066  00255C                     _timer0_isr:
 11067                           	opt stack 17
 11068                           
 11069                           ;AS1AY.c: 216: INTCONbits.TMR0IF = 0;
 11070                           
 11071                           ;incstack = 0
 11072  00255C  94F2               	bcf	intcon,2,c	;volatile
 11073                           
 11074                           ;AS1AY.c: 217: if (CK_state){
 11075  00255E  5076               	movf	_CK_state,w,c
 11076  002560  1077               	iorwf	_CK_state+1,w,c
 11077  002562  B4D8               	btfsc	status,2,c
 11078  002564  D133               	goto	i2l6041
 11079                           
 11080                           ;AS1AY.c: 218: unsigned char channe2 = 2;
 11081  002566  0E02               	movlw	2
 11082  002568  6E72               	movwf	timer0_isr@channe2,c
 11083                           
 11084                           ;AS1AY.c: 219: unsigned char channe0 = 0;
 11085  00256A  0E00               	movlw	0
 11086  00256C  6E73               	movwf	timer0_isr@channe0,c
 11087                           
 11088                           ;AS1AY.c: 220: CT = read_adc_temp2((unsigned char) channe2);
 11089  00256E  5072               	movf	timer0_isr@channe2,w,c
 11090  002570  EC01  F025         	call	_read_adc_temp2
 11091  002574  C028  F0D9         	movff	?_read_adc_temp2,_CT
 11092  002578  C029  F0DA         	movff	?_read_adc_temp2+1,_CT+1
 11093  00257C  C02A  F0DB         	movff	?_read_adc_temp2+2,_CT+2
 11094                           
 11095                           ;AS1AY.c: 221: SP = read_adc_temp((unsigned char) channe0);
 11096  002580  5073               	movf	timer0_isr@channe0,w,c
 11097  002582  EC48  F025         	call	_read_adc_temp
 11098  002586  C028  F0DC         	movff	?_read_adc_temp,_SP
 11099  00258A  C029  F0DD         	movff	?_read_adc_temp+1,_SP+1
 11100  00258E  C02A  F0DE         	movff	?_read_adc_temp+2,_SP+2
 11101                           
 11102                           ;AS1AY.c: 222: if (CT < SP+1){
 11103  002592  C0D9  F03A         	movff	_CT,i2___ftge@ff1
 11104  002596  C0DA  F03B         	movff	_CT+1,i2___ftge@ff1+1
 11105  00259A  C0DB  F03C         	movff	_CT+2,i2___ftge@ff1+2
 11106  00259E  0E00               	movlw	0
 11107  0025A0  6E31               	movwf	i2___ftadd@f2,c
 11108  0025A2  0E80               	movlw	128
 11109  0025A4  6E32               	movwf	i2___ftadd@f2+1,c
 11110  0025A6  0E3F               	movlw	63
 11111  0025A8  6E33               	movwf	i2___ftadd@f2+2,c
 11112  0025AA  C0DC  F02E         	movff	_SP,i2___ftadd@f1
 11113  0025AE  C0DD  F02F         	movff	_SP+1,i2___ftadd@f1+1
 11114  0025B2  C0DE  F030         	movff	_SP+2,i2___ftadd@f1+2
 11115  0025B6  ECD5  F01A         	call	i2___ftadd	;wreg free
 11116  0025BA  C02E  F03D         	movff	?i2___ftadd,i2___ftge@ff2
 11117  0025BE  C02F  F03E         	movff	?i2___ftadd+1,i2___ftge@ff2+1
 11118  0025C2  C030  F03F         	movff	?i2___ftadd+2,i2___ftge@ff2+2
 11119  0025C6  ECB9  F024         	call	i2___ftge	;wreg free
 11120  0025CA  B0D8               	btfsc	status,0,c
 11121  0025CC  D005               	goto	i2l5987
 11122                           
 11123                           ;AS1AY.c: 224: PORTCbits.RC5=1;
 11124  0025CE  8A82               	bsf	3970,5,c	;volatile
 11125                           
 11126                           ;AS1AY.c: 225: HT_state=1;
 11127  0025D0  0E00               	movlw	0
 11128  0025D2  6E79               	movwf	_HT_state+1,c
 11129  0025D4  0E01               	movlw	1
 11130  0025D6  D022               	goto	L17
 11131  0025D8                     i2l5987:
 11132  0025D8  0E00               	movlw	0
 11133  0025DA  6E31               	movwf	i2___ftadd@f2,c
 11134  0025DC  0E80               	movlw	128
 11135  0025DE  6E32               	movwf	i2___ftadd@f2+1,c
 11136  0025E0  0EBF               	movlw	191
 11137  0025E2  6E33               	movwf	i2___ftadd@f2+2,c
 11138  0025E4  C0DC  F02E         	movff	_SP,i2___ftadd@f1
 11139  0025E8  C0DD  F02F         	movff	_SP+1,i2___ftadd@f1+1
 11140  0025EC  C0DE  F030         	movff	_SP+2,i2___ftadd@f1+2
 11141  0025F0  ECD5  F01A         	call	i2___ftadd	;wreg free
 11142  0025F4  C02E  F03A         	movff	?i2___ftadd,i2___ftge@ff1
 11143  0025F8  C02F  F03B         	movff	?i2___ftadd+1,i2___ftge@ff1+1
 11144  0025FC  C030  F03C         	movff	?i2___ftadd+2,i2___ftge@ff1+2
 11145  002600  C0D9  F03D         	movff	_CT,i2___ftge@ff2
 11146  002604  C0DA  F03E         	movff	_CT+1,i2___ftge@ff2+1
 11147  002608  C0DB  F03F         	movff	_CT+2,i2___ftge@ff2+2
 11148  00260C  ECB9  F024         	call	i2___ftge	;wreg free
 11149  002610  B0D8               	btfsc	status,0,c
 11150  002612  D005               	goto	i2l5993
 11151                           
 11152                           ;AS1AY.c: 228: PORTCbits.RC5=0;
 11153  002614  9A82               	bcf	3970,5,c	;volatile
 11154                           
 11155                           ;AS1AY.c: 229: HT_state=0;
 11156  002616  0E00               	movlw	0
 11157  002618  6E79               	movwf	_HT_state+1,c
 11158  00261A  0E00               	movlw	0
 11159  00261C                     L17:
 11160  00261C  6E78               	movwf	_HT_state,c
 11161  00261E                     i2l5993:
 11162                           
 11163                           ;AS1AY.c: 232: }
 11164                           ;AS1AY.c: 233: if (Totsec>0){
 11165  00261E  0100               	movlb	0	; () banked
 11166  002620  51DF               	movf	_Totsec& (0+255),w,b
 11167  002622  0100               	movlb	0	; () banked
 11168  002624  11E0               	iorwf	(_Totsec+1)& (0+255),w,b
 11169  002626  B4D8               	btfsc	status,2,c
 11170  002628  D00B               	goto	i2l5997
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;AS1AY.c: 234: Totsec=Totsec-1;
 11174  00262A  0EFF               	movlw	255
 11175  00262C  0100               	movlb	0	; () banked
 11176  00262E  25DF               	addwf	_Totsec& (0+255),w,b
 11177  002630  0100               	movlb	0	; () banked
 11178  002632  6FDF               	movwf	_Totsec& (0+255),b
 11179  002634  0EFF               	movlw	255
 11180  002636  0100               	movlb	0	; () banked
 11181  002638  21E0               	addwfc	(_Totsec+1)& (0+255),w,b
 11182  00263A  0100               	movlb	0	; () banked
 11183  00263C  6FE0               	movwf	(_Totsec+1)& (0+255),b
 11184                           
 11185                           ;AS1AY.c: 235: }else {
 11186  00263E  D0C6               	goto	i2l6041
 11187  002640                     i2l5997:
 11188                           
 11189                           ; BSR set to: 0
 11190                           ;AS1AY.c: 236: clock_setup_SMH = 0;
 11191  002640  0E00               	movlw	0
 11192  002642  0100               	movlb	0	; () banked
 11193  002644  6FE2               	movwf	(_clock_setup_SMH+1)& (0+255),b
 11194  002646  0E00               	movlw	0
 11195  002648  6FE1               	movwf	_clock_setup_SMH& (0+255),b
 11196                           
 11197                           ;AS1AY.c: 237: sec = 0, min = 0, hour = 0;
 11198  00264A  0E00               	movlw	0
 11199  00264C  0100               	movlb	0	; () banked
 11200  00264E  6FE4               	movwf	(_sec+1)& (0+255),b
 11201  002650  0E00               	movlw	0
 11202  002652  6FE3               	movwf	_sec& (0+255),b
 11203  002654  0E00               	movlw	0
 11204  002656  0100               	movlb	0	; () banked
 11205  002658  6FE8               	movwf	(_min+1)& (0+255),b
 11206  00265A  0E00               	movlw	0
 11207  00265C  6FE7               	movwf	_min& (0+255),b
 11208  00265E  0E00               	movlw	0
 11209  002660  0100               	movlb	0	; () banked
 11210  002662  6FE6               	movwf	(_hour+1)& (0+255),b
 11211  002664  0E00               	movlw	0
 11212  002666  6FE5               	movwf	_hour& (0+255),b
 11213                           
 11214                           ;AS1AY.c: 238: Totsec=0;
 11215  002668  0E00               	movlw	0
 11216  00266A  0100               	movlb	0	; () banked
 11217  00266C  6FE0               	movwf	(_Totsec+1)& (0+255),b
 11218  00266E  0E00               	movlw	0
 11219  002670  6FDF               	movwf	_Totsec& (0+255),b
 11220                           
 11221                           ;AS1AY.c: 239: CK_state = 0, HT_state = 0;
 11222  002672  0E00               	movlw	0
 11223  002674  6E77               	movwf	_CK_state+1,c
 11224  002676  0E00               	movlw	0
 11225  002678  6E76               	movwf	_CK_state,c
 11226  00267A  0E00               	movlw	0
 11227  00267C  6E79               	movwf	_HT_state+1,c
 11228  00267E  0E00               	movlw	0
 11229  002680  6E78               	movwf	_HT_state,c
 11230                           
 11231                           ;AS1AY.c: 240: CT=0;
 11232  002682  0E00               	movlw	0
 11233  002684  0100               	movlb	0	; () banked
 11234  002686  6FD9               	movwf	_CT& (0+255),b
 11235  002688  0E00               	movlw	0
 11236  00268A  0100               	movlb	0	; () banked
 11237  00268C  6FDA               	movwf	(_CT+1)& (0+255),b
 11238  00268E  0E00               	movlw	0
 11239  002690  0100               	movlb	0	; () banked
 11240  002692  6FDB               	movwf	(_CT+2)& (0+255),b
 11241                           
 11242                           ;AS1AY.c: 241: SP=0;
 11243  002694  0E00               	movlw	0
 11244  002696  0100               	movlb	0	; () banked
 11245  002698  6FDC               	movwf	_SP& (0+255),b
 11246  00269A  0E00               	movlw	0
 11247  00269C  0100               	movlb	0	; () banked
 11248  00269E  6FDD               	movwf	(_SP+1)& (0+255),b
 11249  0026A0  0E00               	movlw	0
 11250  0026A2  0100               	movlb	0	; () banked
 11251  0026A4  6FDE               	movwf	(_SP+2)& (0+255),b
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;AS1AY.c: 242: strcpy(m0, m1);
 11255  0026A6  0E00               	movlw	low _m0
 11256  0026A8  6E01               	movwf	i2strcpy@to,c
 11257  0026AA  0E01               	movlw	high _m0
 11258  0026AC  6E02               	movwf	i2strcpy@to+1,c
 11259  0026AE  0E0E               	movlw	low _m1
 11260  0026B0  6E03               	movwf	i2strcpy@from,c
 11261  0026B2  0E01               	movlw	high _m1
 11262  0026B4  6E04               	movwf	i2strcpy@from+1,c
 11263  0026B6  EC11  F02A         	call	i2_strcpy	;wreg free
 11264                           
 11265                           ;AS1AY.c: 243: PORTCbits.RC5=0;
 11266  0026BA  9A82               	bcf	3970,5,c	;volatile
 11267                           
 11268                           ;AS1AY.c: 244: sprintf(Buffer1, "Time : 00:00:00 ");
 11269  0026BC  0E54               	movlw	low _Buffer1
 11270  0026BE  6E43               	movwf	i2sprintf@sp,c
 11271  0026C0  0E01               	movlw	high _Buffer1
 11272  0026C2  6E44               	movwf	i2sprintf@sp+1,c
 11273  0026C4  0E9F               	movlw	low STR_7
 11274  0026C6  6E45               	movwf	i2sprintf@f,c
 11275  0026C8  0EFF               	movlw	high STR_7
 11276  0026CA  6E46               	movwf	i2sprintf@f+1,c
 11277  0026CC  EC1F  F007         	call	i2_sprintf	;wreg free
 11278                           
 11279                           ;AS1AY.c: 245: lcd_gotoxy(1, 1);
 11280  0026D0  0E01               	movlw	1
 11281  0026D2  6E0B               	movwf	i2lcd_gotoxy@y,c
 11282  0026D4  0E01               	movlw	1
 11283  0026D6  EC13  F029         	call	i2_lcd_gotoxy
 11284                           
 11285                           ;AS1AY.c: 246: lcd_puts(Buffer1);
 11286  0026DA  0E54               	movlw	low _Buffer1
 11287  0026DC  6E0F               	movwf	i2lcd_puts@s,c
 11288  0026DE  0E01               	movlw	high _Buffer1
 11289  0026E0  6E10               	movwf	i2lcd_puts@s+1,c
 11290  0026E2  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 11291                           
 11292                           ;AS1AY.c: 247: sprintf(Buffer2, "CT:%5.1fC CK:OFF",CT);
 11293  0026E6  0E64               	movlw	low _Buffer2
 11294  0026E8  6E43               	movwf	i2sprintf@sp,c
 11295  0026EA  0E01               	movlw	high _Buffer2
 11296  0026EC  6E44               	movwf	i2sprintf@sp+1,c
 11297  0026EE  0EB0               	movlw	low STR_2
 11298  0026F0  6E45               	movwf	i2sprintf@f,c
 11299  0026F2  0EFF               	movlw	high STR_2
 11300  0026F4  6E46               	movwf	i2sprintf@f+1,c
 11301  0026F6  C0D9  F047         	movff	_CT,?i2_sprintf+4
 11302  0026FA  C0DA  F048         	movff	_CT+1,?i2_sprintf+5
 11303  0026FE  C0DB  F049         	movff	_CT+2,?i2_sprintf+6
 11304  002702  EC1F  F007         	call	i2_sprintf	;wreg free
 11305                           
 11306                           ;AS1AY.c: 248: lcd_gotoxy(1, 2);
 11307  002706  0E02               	movlw	2
 11308  002708  6E0B               	movwf	i2lcd_gotoxy@y,c
 11309  00270A  0E01               	movlw	1
 11310  00270C  EC13  F029         	call	i2_lcd_gotoxy
 11311                           
 11312                           ;AS1AY.c: 249: lcd_puts(Buffer2);
 11313  002710  0E64               	movlw	low _Buffer2
 11314  002712  6E0F               	movwf	i2lcd_puts@s,c
 11315  002714  0E01               	movlw	high _Buffer2
 11316  002716  6E10               	movwf	i2lcd_puts@s+1,c
 11317  002718  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 11318                           
 11319                           ;AS1AY.c: 250: sprintf(Buffer3, "SP:%5.1fC HT:OFF",SP);
 11320  00271C  0E74               	movlw	low _Buffer3
 11321  00271E  6E43               	movwf	i2sprintf@sp,c
 11322  002720  0E01               	movlw	high _Buffer3
 11323  002722  6E44               	movwf	i2sprintf@sp+1,c
 11324  002724  0EC1               	movlw	low STR_3
 11325  002726  6E45               	movwf	i2sprintf@f,c
 11326  002728  0EFF               	movlw	high STR_3
 11327  00272A  6E46               	movwf	i2sprintf@f+1,c
 11328  00272C  C0DC  F047         	movff	_SP,?i2_sprintf+4
 11329  002730  C0DD  F048         	movff	_SP+1,?i2_sprintf+5
 11330  002734  C0DE  F049         	movff	_SP+2,?i2_sprintf+6
 11331  002738  EC1F  F007         	call	i2_sprintf	;wreg free
 11332                           
 11333                           ;AS1AY.c: 251: lcd_gotoxy(1, 3);
 11334  00273C  0E03               	movlw	3
 11335  00273E  6E0B               	movwf	i2lcd_gotoxy@y,c
 11336  002740  0E01               	movlw	1
 11337  002742  EC13  F029         	call	i2_lcd_gotoxy
 11338                           
 11339                           ;AS1AY.c: 252: lcd_puts(Buffer3);
 11340  002746  0E74               	movlw	low _Buffer3
 11341  002748  6E0F               	movwf	i2lcd_puts@s,c
 11342  00274A  0E01               	movlw	high _Buffer3
 11343  00274C  6E10               	movwf	i2lcd_puts@s+1,c
 11344  00274E  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 11345                           
 11346                           ;AS1AY.c: 253: sprintf(Buffer4, "MD:SEC          ");
 11347  002752  0E84               	movlw	low _Buffer4
 11348  002754  6E43               	movwf	i2sprintf@sp,c
 11349  002756  0E01               	movlw	high _Buffer4
 11350  002758  6E44               	movwf	i2sprintf@sp+1,c
 11351  00275A  0E8E               	movlw	low STR_4
 11352  00275C  6E45               	movwf	i2sprintf@f,c
 11353  00275E  0EFF               	movlw	high STR_4
 11354  002760  6E46               	movwf	i2sprintf@f+1,c
 11355  002762  EC1F  F007         	call	i2_sprintf	;wreg free
 11356                           
 11357                           ;AS1AY.c: 254: lcd_gotoxy(1, 4);
 11358  002766  0E04               	movlw	4
 11359  002768  6E0B               	movwf	i2lcd_gotoxy@y,c
 11360  00276A  0E01               	movlw	1
 11361  00276C  EC13  F029         	call	i2_lcd_gotoxy
 11362                           
 11363                           ;AS1AY.c: 255: lcd_puts(Buffer4);
 11364  002770  0E84               	movlw	low _Buffer4
 11365  002772  6E0F               	movwf	i2lcd_puts@s,c
 11366  002774  0E01               	movlw	high _Buffer4
 11367  002776  6E10               	movwf	i2lcd_puts@s+1,c
 11368  002778  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 11369                           
 11370                           ;AS1AY.c: 257: for (int i=0 ; i <8 ; i++){
 11371  00277C  0E00               	movlw	0
 11372  00277E  6E75               	movwf	timer0_isr@i+1,c
 11373  002780  0E00               	movlw	0
 11374  002782  6E74               	movwf	timer0_isr@i,c
 11375  002784  BE75               	btfsc	timer0_isr@i+1,7,c
 11376  002786  D008               	goto	i2l6033
 11377  002788  5075               	movf	timer0_isr@i+1,w,c
 11378  00278A  E105               	bnz	i2u729_40
 11379  00278C  0E08               	movlw	8
 11380  00278E  5C74               	subwf	timer0_isr@i,w,c
 11381  002790  B0D8               	btfsc	status,0,c
 11382  002792  0012               	return	
 11383  002794  D001               	goto	i2l6033
 11384  002796                     i2u729_40:
 11385  002796  0012               	return	
 11386  002798                     i2l6033:
 11387                           
 11388                           ;AS1AY.c: 258: PORTCbits.RC1=!PORTCbits.RC1;
 11389  002798  B282               	btfsc	3970,1,c	;volatile
 11390  00279A  D003               	goto	i2u730_40
 11391  00279C  6A70               	clrf	??_timer0_isr& (0+255),c
 11392  00279E  2A70               	incf	??_timer0_isr& (0+255),f,c
 11393  0027A0  D001               	goto	i2u731_48
 11394  0027A2                     i2u730_40:
 11395  0027A2  6A70               	clrf	??_timer0_isr& (0+255),c
 11396  0027A4                     i2u731_48:
 11397  0027A4  4670               	rlncf	??_timer0_isr,f,c
 11398  0027A6  5082               	movf	3970,w,c	;volatile
 11399  0027A8  1870               	xorwf	??_timer0_isr,w,c
 11400  0027AA  0BFD               	andlw	-3
 11401  0027AC  1870               	xorwf	??_timer0_isr,w,c
 11402  0027AE  6E82               	movwf	3970,c	;volatile
 11403                           
 11404                           ;AS1AY.c: 259: delay_ms(1000);
 11405  0027B0  0E03               	movlw	3
 11406  0027B2  6E02               	movwf	i2delay_ms@n+1,c
 11407  0027B4  0EE8               	movlw	232
 11408  0027B6  6E01               	movwf	i2delay_ms@n,c
 11409  0027B8  ECC8  F02A         	call	i2_delay_ms	;wreg free
 11410  0027BC  4A74               	infsnz	timer0_isr@i,f,c
 11411  0027BE  2A75               	incf	timer0_isr@i+1,f,c
 11412  0027C0  BE75               	btfsc	timer0_isr@i+1,7,c
 11413  0027C2  D7EA               	goto	i2l6033
 11414  0027C4  5075               	movf	timer0_isr@i+1,w,c
 11415  0027C6  E101               	bnz	i2u732_40
 11416  0027C8  D7E1               	goto	L18
 11417  0027CA                     i2u732_40:
 11418                           
 11419                           ;AS1AY.c: 260: }
 11420                           ;AS1AY.c: 261: return;
 11421  0027CA  0012               	return	
 11422  0027CC                     i2l6041:
 11423                           
 11424                           ;AS1AY.c: 262: }
 11425                           ;AS1AY.c: 263: }
 11426                           ;AS1AY.c: 264: hour = (Totsec/3600);
 11427  0027CC  C0DF  F015         	movff	_Totsec,i2___lwdiv@dividend
 11428  0027D0  C0E0  F016         	movff	_Totsec+1,i2___lwdiv@dividend+1
 11429  0027D4  0E0E               	movlw	14
 11430  0027D6  6E18               	movwf	i2___lwdiv@divisor+1,c
 11431  0027D8  0E10               	movlw	16
 11432  0027DA  6E17               	movwf	i2___lwdiv@divisor,c
 11433  0027DC  EC56  F028         	call	i2___lwdiv	;wreg free
 11434  0027E0  C015  F0E5         	movff	?i2___lwdiv,_hour
 11435  0027E4  C016  F0E6         	movff	?i2___lwdiv+1,_hour+1
 11436                           
 11437                           ;AS1AY.c: 265: min = (Totsec -(3600*hour))/60;
 11438  0027E8  C0E5  F00F         	movff	_hour,i2___wmul@multiplier
 11439  0027EC  C0E6  F010         	movff	_hour+1,i2___wmul@multiplier+1
 11440  0027F0  0E0E               	movlw	14
 11441  0027F2  6E12               	movwf	i2___wmul@multiplicand+1,c
 11442  0027F4  0E10               	movlw	16
 11443  0027F6  6E11               	movwf	i2___wmul@multiplicand,c
 11444  0027F8  EC91  F02A         	call	i2___wmul	;wreg free
 11445  0027FC  1E0F               	comf	?i2___wmul,f,c
 11446  0027FE  1E10               	comf	?i2___wmul+1,f,c
 11447  002800  4A0F               	infsnz	?i2___wmul,f,c
 11448  002802  2A10               	incf	?i2___wmul+1,f,c
 11449  002804  0100               	movlb	0	; () banked
 11450  002806  51DF               	movf	_Totsec& (0+255),w,b
 11451  002808  240F               	addwf	?i2___wmul,w,c
 11452  00280A  6E15               	movwf	i2___lwdiv@dividend,c
 11453  00280C  0100               	movlb	0	; () banked
 11454  00280E  51E0               	movf	(_Totsec+1)& (0+255),w,b
 11455  002810  2010               	addwfc	?i2___wmul+1,w,c
 11456  002812  6E16               	movwf	i2___lwdiv@dividend+1,c
 11457  002814  0E00               	movlw	0
 11458  002816  6E18               	movwf	i2___lwdiv@divisor+1,c
 11459  002818  0E3C               	movlw	60
 11460  00281A  6E17               	movwf	i2___lwdiv@divisor,c
 11461  00281C  EC56  F028         	call	i2___lwdiv	;wreg free
 11462  002820  C015  F0E7         	movff	?i2___lwdiv,_min
 11463  002824  C016  F0E8         	movff	?i2___lwdiv+1,_min+1
 11464                           
 11465                           ;AS1AY.c: 266: sec = (Totsec -(3600*hour)-(min*60));
 11466  002828  C0E5  F00F         	movff	_hour,i2___wmul@multiplier
 11467  00282C  C0E6  F010         	movff	_hour+1,i2___wmul@multiplier+1
 11468  002830  0E0E               	movlw	14
 11469  002832  6E12               	movwf	i2___wmul@multiplicand+1,c
 11470  002834  0E10               	movlw	16
 11471  002836  6E11               	movwf	i2___wmul@multiplicand,c
 11472  002838  EC91  F02A         	call	i2___wmul	;wreg free
 11473  00283C  C00F  F070         	movff	?i2___wmul,??_timer0_isr
 11474  002840  C010  F071         	movff	?i2___wmul+1,??_timer0_isr+1
 11475  002844  C0E7  F00F         	movff	_min,i2___wmul@multiplier
 11476  002848  C0E8  F010         	movff	_min+1,i2___wmul@multiplier+1
 11477  00284C  0E00               	movlw	0
 11478  00284E  6E12               	movwf	i2___wmul@multiplicand+1,c
 11479  002850  0E3C               	movlw	60
 11480  002852  6E11               	movwf	i2___wmul@multiplicand,c
 11481  002854  EC91  F02A         	call	i2___wmul	;wreg free
 11482  002858  500F               	movf	?i2___wmul,w,c
 11483  00285A  2670               	addwf	??_timer0_isr,f,c
 11484  00285C  5010               	movf	?i2___wmul+1,w,c
 11485  00285E  2271               	addwfc	??_timer0_isr+1,f,c
 11486  002860  1E70               	comf	??_timer0_isr,f,c
 11487  002862  1E71               	comf	??_timer0_isr+1,f,c
 11488  002864  4A70               	infsnz	??_timer0_isr,f,c
 11489  002866  2A71               	incf	??_timer0_isr+1,f,c
 11490  002868  0100               	movlb	0	; () banked
 11491  00286A  51DF               	movf	_Totsec& (0+255),w,b
 11492  00286C  2470               	addwf	??_timer0_isr,w,c
 11493  00286E  0100               	movlb	0	; () banked
 11494  002870  6FE3               	movwf	_sec& (0+255),b
 11495  002872  0100               	movlb	0	; () banked
 11496  002874  51E0               	movf	(_Totsec+1)& (0+255),w,b
 11497  002876  2071               	addwfc	??_timer0_isr+1,w,c
 11498  002878  0100               	movlb	0	; () banked
 11499  00287A  6FE4               	movwf	(_sec+1)& (0+255),b
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;AS1AY.c: 267: reloadTimer0();
 11503  00287C  EC20  F02B         	call	i2_reloadTimer0	;wreg free
 11504                           
 11505                           ;AS1AY.c: 268: sprintf(Buffer1, "Time : %02d:%02d:%02d ", hour, min, sec);
 11506  002880  0E54               	movlw	low _Buffer1
 11507  002882  6E43               	movwf	i2sprintf@sp,c
 11508  002884  0E01               	movlw	high _Buffer1
 11509  002886  6E44               	movwf	i2sprintf@sp+1,c
 11510  002888  0E77               	movlw	low STR_1
 11511  00288A  6E45               	movwf	i2sprintf@f,c
 11512  00288C  0EFF               	movlw	high STR_1
 11513  00288E  6E46               	movwf	i2sprintf@f+1,c
 11514  002890  C0E5  F047         	movff	_hour,?i2_sprintf+4
 11515  002894  C0E6  F048         	movff	_hour+1,?i2_sprintf+5
 11516  002898  C0E7  F049         	movff	_min,?i2_sprintf+6
 11517  00289C  C0E8  F04A         	movff	_min+1,?i2_sprintf+7
 11518  0028A0  C0E3  F04B         	movff	_sec,?i2_sprintf+8
 11519  0028A4  C0E4  F04C         	movff	_sec+1,?i2_sprintf+9
 11520  0028A8  EC1F  F007         	call	i2_sprintf	;wreg free
 11521                           
 11522                           ;AS1AY.c: 269: lcd_gotoxy(1, 1);
 11523  0028AC  0E01               	movlw	1
 11524  0028AE  6E0B               	movwf	i2lcd_gotoxy@y,c
 11525  0028B0  0E01               	movlw	1
 11526  0028B2  EC13  F029         	call	i2_lcd_gotoxy
 11527                           
 11528                           ;AS1AY.c: 270: lcd_puts(Buffer1);
 11529  0028B6  0E54               	movlw	low _Buffer1
 11530  0028B8  6E0F               	movwf	i2lcd_puts@s,c
 11531  0028BA  0E01               	movlw	high _Buffer1
 11532  0028BC  6E10               	movwf	i2lcd_puts@s+1,c
 11533  0028BE  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 11534                           
 11535                           ;AS1AY.c: 271: if (CK_state){
 11536  0028C2  5076               	movf	_CK_state,w,c
 11537  0028C4  1077               	iorwf	_CK_state+1,w,c
 11538  0028C6  B4D8               	btfsc	status,2,c
 11539  0028C8  D020               	goto	i2l6063
 11540                           
 11541                           ;AS1AY.c: 272: sprintf(Buffer2, "CT:%5.1fC CK:%s",CT,StateON);
 11542  0028CA  0E64               	movlw	low _Buffer2
 11543  0028CC  6E43               	movwf	i2sprintf@sp,c
 11544  0028CE  0E01               	movlw	high _Buffer2
 11545  0028D0  6E44               	movwf	i2sprintf@sp+1,c
 11546  0028D2  0ED2               	movlw	low STR_16
 11547  0028D4  6E45               	movwf	i2sprintf@f,c
 11548  0028D6  0EFF               	movlw	high STR_16
 11549  0028D8  6E46               	movwf	i2sprintf@f+1,c
 11550  0028DA  C0D9  F047         	movff	_CT,?i2_sprintf+4
 11551  0028DE  C0DA  F048         	movff	_CT+1,?i2_sprintf+5
 11552  0028E2  C0DB  F049         	movff	_CT+2,?i2_sprintf+6
 11553  0028E6  0EED               	movlw	low _StateON
 11554  0028E8  6E4A               	movwf	?i2_sprintf+7,c
 11555  0028EA  0E00               	movlw	high _StateON
 11556  0028EC  6E4B               	movwf	?i2_sprintf+8,c
 11557  0028EE  EC1F  F007         	call	i2_sprintf	;wreg free
 11558                           
 11559                           ;AS1AY.c: 273: lcd_gotoxy(1, 2);
 11560  0028F2  0E02               	movlw	2
 11561  0028F4  6E0B               	movwf	i2lcd_gotoxy@y,c
 11562  0028F6  0E01               	movlw	1
 11563  0028F8  EC13  F029         	call	i2_lcd_gotoxy
 11564                           
 11565                           ;AS1AY.c: 274: lcd_puts(Buffer2);
 11566  0028FC  0E64               	movlw	low _Buffer2
 11567  0028FE  6E0F               	movwf	i2lcd_puts@s,c
 11568  002900  0E01               	movlw	high _Buffer2
 11569  002902  6E10               	movwf	i2lcd_puts@s+1,c
 11570  002904  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 11571                           
 11572                           ;AS1AY.c: 275: }else {
 11573  002908  D01F               	goto	i2l6069
 11574  00290A                     i2l6063:
 11575                           
 11576                           ;AS1AY.c: 276: sprintf(Buffer2, "CT:%5.1fC CK:%s",CT,StateOFF);
 11577  00290A  0E64               	movlw	low _Buffer2
 11578  00290C  6E43               	movwf	i2sprintf@sp,c
 11579  00290E  0E01               	movlw	high _Buffer2
 11580  002910  6E44               	movwf	i2sprintf@sp+1,c
 11581  002912  0ED2               	movlw	low STR_16
 11582  002914  6E45               	movwf	i2sprintf@f,c
 11583  002916  0EFF               	movlw	high STR_16
 11584  002918  6E46               	movwf	i2sprintf@f+1,c
 11585  00291A  C0D9  F047         	movff	_CT,?i2_sprintf+4
 11586  00291E  C0DA  F048         	movff	_CT+1,?i2_sprintf+5
 11587  002922  C0DB  F049         	movff	_CT+2,?i2_sprintf+6
 11588  002926  0E7A               	movlw	low _StateOFF
 11589  002928  6E4A               	movwf	?i2_sprintf+7,c
 11590  00292A  0E00               	movlw	high _StateOFF
 11591  00292C  6E4B               	movwf	?i2_sprintf+8,c
 11592  00292E  EC1F  F007         	call	i2_sprintf	;wreg free
 11593                           
 11594                           ;AS1AY.c: 277: lcd_gotoxy(1, 2);
 11595  002932  0E02               	movlw	2
 11596  002934  6E0B               	movwf	i2lcd_gotoxy@y,c
 11597  002936  0E01               	movlw	1
 11598  002938  EC13  F029         	call	i2_lcd_gotoxy
 11599                           
 11600                           ;AS1AY.c: 278: lcd_puts(Buffer2);
 11601  00293C  0E64               	movlw	low _Buffer2
 11602  00293E  6E0F               	movwf	i2lcd_puts@s,c
 11603  002940  0E01               	movlw	high _Buffer2
 11604  002942  6E10               	movwf	i2lcd_puts@s+1,c
 11605  002944  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 11606  002948                     i2l6069:
 11607                           
 11608                           ;AS1AY.c: 279: }
 11609                           ;AS1AY.c: 280: if (HT_state){
 11610  002948  5078               	movf	_HT_state,w,c
 11611  00294A  1079               	iorwf	_HT_state+1,w,c
 11612  00294C  B4D8               	btfsc	status,2,c
 11613  00294E  D020               	goto	i2l6077
 11614                           
 11615                           ;AS1AY.c: 281: sprintf(Buffer3, "SP:%5.1fC HT:%s",SP,StateON);
 11616  002950  0E74               	movlw	low _Buffer3
 11617  002952  6E43               	movwf	i2sprintf@sp,c
 11618  002954  0E01               	movlw	high _Buffer3
 11619  002956  6E44               	movwf	i2sprintf@sp+1,c
 11620  002958  0EE2               	movlw	low STR_18
 11621  00295A  6E45               	movwf	i2sprintf@f,c
 11622  00295C  0EFF               	movlw	high STR_18
 11623  00295E  6E46               	movwf	i2sprintf@f+1,c
 11624  002960  C0DC  F047         	movff	_SP,?i2_sprintf+4
 11625  002964  C0DD  F048         	movff	_SP+1,?i2_sprintf+5
 11626  002968  C0DE  F049         	movff	_SP+2,?i2_sprintf+6
 11627  00296C  0EED               	movlw	low _StateON
 11628  00296E  6E4A               	movwf	?i2_sprintf+7,c
 11629  002970  0E00               	movlw	high _StateON
 11630  002972  6E4B               	movwf	?i2_sprintf+8,c
 11631  002974  EC1F  F007         	call	i2_sprintf	;wreg free
 11632                           
 11633                           ;AS1AY.c: 282: lcd_gotoxy(1, 3);
 11634  002978  0E03               	movlw	3
 11635  00297A  6E0B               	movwf	i2lcd_gotoxy@y,c
 11636  00297C  0E01               	movlw	1
 11637  00297E  EC13  F029         	call	i2_lcd_gotoxy
 11638                           
 11639                           ;AS1AY.c: 283: lcd_puts(Buffer3);
 11640  002982  0E74               	movlw	low _Buffer3
 11641  002984  6E0F               	movwf	i2lcd_puts@s,c
 11642  002986  0E01               	movlw	high _Buffer3
 11643  002988  6E10               	movwf	i2lcd_puts@s+1,c
 11644  00298A  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 11645                           
 11646                           ;AS1AY.c: 284: }else {
 11647  00298E  0012               	return	
 11648  002990                     i2l6077:
 11649                           
 11650                           ;AS1AY.c: 285: sprintf(Buffer3, "SP:%5.1fC HT:%s",SP,StateOFF);
 11651  002990  0E74               	movlw	low _Buffer3
 11652  002992  6E43               	movwf	i2sprintf@sp,c
 11653  002994  0E01               	movlw	high _Buffer3
 11654  002996  6E44               	movwf	i2sprintf@sp+1,c
 11655  002998  0EE2               	movlw	low STR_18
 11656  00299A  6E45               	movwf	i2sprintf@f,c
 11657  00299C  0EFF               	movlw	high STR_18
 11658  00299E  6E46               	movwf	i2sprintf@f+1,c
 11659  0029A0  C0DC  F047         	movff	_SP,?i2_sprintf+4
 11660  0029A4  C0DD  F048         	movff	_SP+1,?i2_sprintf+5
 11661  0029A8  C0DE  F049         	movff	_SP+2,?i2_sprintf+6
 11662  0029AC  0E7A               	movlw	low _StateOFF
 11663  0029AE  6E4A               	movwf	?i2_sprintf+7,c
 11664  0029B0  0E00               	movlw	high _StateOFF
 11665  0029B2  6E4B               	movwf	?i2_sprintf+8,c
 11666  0029B4  EC1F  F007         	call	i2_sprintf	;wreg free
 11667                           
 11668                           ;AS1AY.c: 286: lcd_gotoxy(1, 3);
 11669  0029B8  0E03               	movlw	3
 11670  0029BA  6E0B               	movwf	i2lcd_gotoxy@y,c
 11671  0029BC  0E01               	movlw	1
 11672  0029BE  EC13  F029         	call	i2_lcd_gotoxy
 11673                           
 11674                           ;AS1AY.c: 287: lcd_puts(Buffer3);
 11675  0029C2  0E74               	movlw	low _Buffer3
 11676  0029C4  6E0F               	movwf	i2lcd_puts@s,c
 11677  0029C6  0E01               	movlw	high _Buffer3
 11678  0029C8  6E10               	movwf	i2lcd_puts@s+1,c
 11679  0029CA  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 11680  0029CE  0012               	return	
 11681  0029D0                     __end_of_timer0_isr:
 11682                           	opt stack 0
 11683                           pclatu	equ	0xFFB
 11684                           pclath	equ	0xFFA
 11685                           tblptru	equ	0xFF8
 11686                           tblptrh	equ	0xFF7
 11687                           tblptrl	equ	0xFF6
 11688                           tablat	equ	0xFF5
 11689                           prodh	equ	0xFF4
 11690                           prodl	equ	0xFF3
 11691                           intcon	equ	0xFF2
 11692                           intcon2	equ	0xFF1
 11693                           intcon3	equ	0xFF0
 11694                           postinc0	equ	0xFEE
 11695                           fsr0h	equ	0xFEA
 11696                           fsr0l	equ	0xFE9
 11697                           wreg	equ	0xFE8
 11698                           indf1	equ	0xFE7
 11699                           postdec1	equ	0xFE5
 11700                           fsr1h	equ	0xFE2
 11701                           fsr1l	equ	0xFE1
 11702                           indf2	equ	0xFDF
 11703                           postinc2	equ	0xFDE
 11704                           postdec2	equ	0xFDD
 11705                           fsr2h	equ	0xFDA
 11706                           fsr2l	equ	0xFD9
 11707                           status	equ	0xFD8
 11708                           
 11709 ;; *************** function i2_reloadTimer0 *****************
 11710 ;; Defined at:
 11711 ;;		line 291 in file "AS1AY.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;		None
 11714 ;; Auto vars:     Size  Location     Type
 11715 ;;		None
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  1    wreg      void 
 11718 ;; Registers used:
 11719 ;;		wreg, status,2
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;Total ram usage:        0 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; This function calls:
 11732 ;;		Nothing
 11733 ;; This function is called by:
 11734 ;;		_timer0_isr
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           	psect	text36
 11739  005640                     __ptext36:
 11740                           	opt stack 0
 11741  005640                     i2_reloadTimer0:
 11742                           	opt stack 22
 11743                           
 11744                           ;AS1AY.c: 292: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 11745                           
 11746                           ;incstack = 0
 11747  005640  0E0B               	movlw	11
 11748  005642  6ED7               	movwf	4055,c	;volatile
 11749                           
 11750                           ;AS1AY.c: 293: TMR0L = (unsigned char) (3036 & 0x00FF);
 11751  005644  0EDC               	movlw	220
 11752  005646  6ED6               	movwf	4054,c	;volatile
 11753  005648  0012               	return		;funcret
 11754  00564A                     __end_ofi2_reloadTimer0:
 11755                           	opt stack 0
 11756                           pclatu	equ	0xFFB
 11757                           pclath	equ	0xFFA
 11758                           tblptru	equ	0xFF8
 11759                           tblptrh	equ	0xFF7
 11760                           tblptrl	equ	0xFF6
 11761                           tablat	equ	0xFF5
 11762                           prodh	equ	0xFF4
 11763                           prodl	equ	0xFF3
 11764                           intcon	equ	0xFF2
 11765                           intcon2	equ	0xFF1
 11766                           intcon3	equ	0xFF0
 11767                           postinc0	equ	0xFEE
 11768                           fsr0h	equ	0xFEA
 11769                           fsr0l	equ	0xFE9
 11770                           wreg	equ	0xFE8
 11771                           indf1	equ	0xFE7
 11772                           postdec1	equ	0xFE5
 11773                           fsr1h	equ	0xFE2
 11774                           fsr1l	equ	0xFE1
 11775                           indf2	equ	0xFDF
 11776                           postinc2	equ	0xFDE
 11777                           postdec2	equ	0xFDD
 11778                           fsr2h	equ	0xFDA
 11779                           fsr2l	equ	0xFD9
 11780                           status	equ	0xFD8
 11781                           
 11782 ;; *************** function i2___lwdiv *****************
 11783 ;; Defined at:
 11784 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  dividend        2   20[COMRAM] unsigned int 
 11787 ;;  divisor         2   22[COMRAM] unsigned int 
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;  __lwdiv         2   24[COMRAM] unsigned int 
 11790 ;;  __lwdiv         1   26[COMRAM] unsigned char 
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  2   20[COMRAM] unsigned int 
 11793 ;; Registers used:
 11794 ;;		wreg, status,2, status,0
 11795 ;; Tracked objects:
 11796 ;;		On entry : 0/0
 11797 ;;		On exit  : 0/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11803 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11804 ;;Total ram usage:        7 bytes
 11805 ;; Hardware stack levels used:    1
 11806 ;; This function calls:
 11807 ;;		Nothing
 11808 ;; This function is called by:
 11809 ;;		_timer0_isr
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           	psect	text37
 11814  0050AC                     __ptext37:
 11815                           	opt stack 0
 11816  0050AC                     i2___lwdiv:
 11817                           	opt stack 22
 11818                           
 11819                           ;incstack = 0
 11820  0050AC  0E00               	movlw	0
 11821  0050AE  6E1A               	movwf	i2___lwdiv@quotient+1,c
 11822  0050B0  0E00               	movlw	0
 11823  0050B2  6E19               	movwf	i2___lwdiv@quotient,c
 11824  0050B4  5017               	movf	i2___lwdiv@divisor,w,c
 11825  0050B6  1018               	iorwf	i2___lwdiv@divisor+1,w,c
 11826  0050B8  B4D8               	btfsc	status,2,c
 11827  0050BA  D01C               	goto	i2l898
 11828  0050BC  0E01               	movlw	1
 11829  0050BE  6E1B               	movwf	i2___lwdiv@counter,c
 11830  0050C0  D004               	goto	i2l5493
 11831  0050C2                     i2l5491:
 11832  0050C2  90D8               	bcf	status,0,c
 11833  0050C4  3617               	rlcf	i2___lwdiv@divisor,f,c
 11834  0050C6  3618               	rlcf	i2___lwdiv@divisor+1,f,c
 11835  0050C8  2A1B               	incf	i2___lwdiv@counter,f,c
 11836  0050CA                     i2l5493:
 11837  0050CA  AE18               	btfss	i2___lwdiv@divisor+1,7,c
 11838  0050CC  D7FA               	goto	i2l5491
 11839  0050CE                     i2l5495:
 11840  0050CE  90D8               	bcf	status,0,c
 11841  0050D0  3619               	rlcf	i2___lwdiv@quotient,f,c
 11842  0050D2  361A               	rlcf	i2___lwdiv@quotient+1,f,c
 11843  0050D4  5017               	movf	i2___lwdiv@divisor,w,c
 11844  0050D6  5C15               	subwf	i2___lwdiv@dividend,w,c
 11845  0050D8  5018               	movf	i2___lwdiv@divisor+1,w,c
 11846  0050DA  5816               	subwfb	i2___lwdiv@dividend+1,w,c
 11847  0050DC  A0D8               	btfss	status,0,c
 11848  0050DE  D005               	goto	i2l5503
 11849  0050E0  5017               	movf	i2___lwdiv@divisor,w,c
 11850  0050E2  5E15               	subwf	i2___lwdiv@dividend,f,c
 11851  0050E4  5018               	movf	i2___lwdiv@divisor+1,w,c
 11852  0050E6  5A16               	subwfb	i2___lwdiv@dividend+1,f,c
 11853  0050E8  8019               	bsf	i2___lwdiv@quotient,0,c
 11854  0050EA                     i2l5503:
 11855  0050EA  90D8               	bcf	status,0,c
 11856  0050EC  3218               	rrcf	i2___lwdiv@divisor+1,f,c
 11857  0050EE  3217               	rrcf	i2___lwdiv@divisor,f,c
 11858  0050F0  2E1B               	decfsz	i2___lwdiv@counter,f,c
 11859  0050F2  D7ED               	goto	i2l5495
 11860  0050F4                     i2l898:
 11861  0050F4  C019  F015         	movff	i2___lwdiv@quotient,?i2___lwdiv
 11862  0050F8  C01A  F016         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 11863  0050FC  0012               	return		;funcret
 11864  0050FE                     __end_ofi2___lwdiv:
 11865                           	opt stack 0
 11866                           pclatu	equ	0xFFB
 11867                           pclath	equ	0xFFA
 11868                           tblptru	equ	0xFF8
 11869                           tblptrh	equ	0xFF7
 11870                           tblptrl	equ	0xFF6
 11871                           tablat	equ	0xFF5
 11872                           prodh	equ	0xFF4
 11873                           prodl	equ	0xFF3
 11874                           intcon	equ	0xFF2
 11875                           intcon2	equ	0xFF1
 11876                           intcon3	equ	0xFF0
 11877                           postinc0	equ	0xFEE
 11878                           fsr0h	equ	0xFEA
 11879                           fsr0l	equ	0xFE9
 11880                           wreg	equ	0xFE8
 11881                           indf1	equ	0xFE7
 11882                           postdec1	equ	0xFE5
 11883                           fsr1h	equ	0xFE2
 11884                           fsr1l	equ	0xFE1
 11885                           indf2	equ	0xFDF
 11886                           postinc2	equ	0xFDE
 11887                           postdec2	equ	0xFDD
 11888                           fsr2h	equ	0xFDA
 11889                           fsr2l	equ	0xFD9
 11890                           status	equ	0xFD8
 11891                           
 11892 ;; *************** function _read_adc_temp2 *****************
 11893 ;; Defined at:
 11894 ;;		line 30 in file "my_adc.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;  channel         1    wreg     unsigned char 
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;  channel         1   50[COMRAM] unsigned char 
 11899 ;;  temp            3   45[COMRAM] float 
 11900 ;;  voltage         3   42[COMRAM] float 
 11901 ;;  raw_value       2   48[COMRAM] int 
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  3   39[COMRAM] float 
 11904 ;; Registers used:
 11905 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11911 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11912 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11914 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11915 ;;Total ram usage:       12 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; Hardware stack levels required when called:    2
 11918 ;; This function calls:
 11919 ;;		___awtoft
 11920 ;;		___ftdiv
 11921 ;;		_read_adc_raw_no_lib
 11922 ;;		i2___ftmul
 11923 ;;		i2___wmul
 11924 ;; This function is called by:
 11925 ;;		_timer0_isr
 11926 ;; This function uses a non-reentrant model
 11927 ;;
 11928                           
 11929                           	psect	text38
 11930  004A02                     __ptext38:
 11931                           	opt stack 0
 11932  004A02                     _read_adc_temp2:
 11933                           	opt stack 20
 11934                           
 11935                           ;incstack = 0
 11936                           ;read_adc_temp2@channel stored from wreg
 11937  004A02  6E33               	movwf	read_adc_temp2@channel,c
 11938                           
 11939                           ;my_adc.c: 31: int raw_value;
 11940                           ;my_adc.c: 32: float voltage;
 11941                           ;my_adc.c: 33: raw_value = read_adc_raw_no_lib(channel);
 11942  004A04  5033               	movf	read_adc_temp2@channel,w,c
 11943  004A06  EC74  F029         	call	_read_adc_raw_no_lib
 11944  004A0A  C001  F031         	movff	?_read_adc_raw_no_lib,read_adc_temp2@raw_value
 11945  004A0E  C002  F032         	movff	?_read_adc_raw_no_lib+1,read_adc_temp2@raw_value+1
 11946                           
 11947                           ;my_adc.c: 34: voltage = (raw_value * 5) / 1024.0;
 11948  004A12  C031  F00F         	movff	read_adc_temp2@raw_value,i2___wmul@multiplier
 11949  004A16  C032  F010         	movff	read_adc_temp2@raw_value+1,i2___wmul@multiplier+1
 11950  004A1A  0E00               	movlw	0
 11951  004A1C  6E12               	movwf	i2___wmul@multiplicand+1,c
 11952  004A1E  0E05               	movlw	5
 11953  004A20  6E11               	movwf	i2___wmul@multiplicand,c
 11954  004A22  EC91  F02A         	call	i2___wmul	;wreg free
 11955  004A26  C00F  F015         	movff	?i2___wmul,___awtoft@c
 11956  004A2A  C010  F016         	movff	?i2___wmul+1,___awtoft@c+1
 11957  004A2E  EC91  F029         	call	___awtoft	;wreg free
 11958  004A32  C015  F019         	movff	?___awtoft,___ftdiv@f1
 11959  004A36  C016  F01A         	movff	?___awtoft+1,___ftdiv@f1+1
 11960  004A3A  C017  F01B         	movff	?___awtoft+2,___ftdiv@f1+2
 11961  004A3E  0E00               	movlw	0
 11962  004A40  6E1C               	movwf	___ftdiv@f2,c
 11963  004A42  0E80               	movlw	128
 11964  004A44  6E1D               	movwf	___ftdiv@f2+1,c
 11965  004A46  0E44               	movlw	68
 11966  004A48  6E1E               	movwf	___ftdiv@f2+2,c
 11967  004A4A  ECE7  F021         	call	___ftdiv	;wreg free
 11968  004A4E  C019  F02B         	movff	?___ftdiv,read_adc_temp2@voltage
 11969  004A52  C01A  F02C         	movff	?___ftdiv+1,read_adc_temp2@voltage+1
 11970  004A56  C01B  F02D         	movff	?___ftdiv+2,read_adc_temp2@voltage+2
 11971                           
 11972                           ;my_adc.c: 35: float temp ;
 11973                           ;my_adc.c: 36: temp= voltage*300;
 11974  004A5A  C02B  F015         	movff	read_adc_temp2@voltage,i2___ftmul@f1
 11975  004A5E  C02C  F016         	movff	read_adc_temp2@voltage+1,i2___ftmul@f1+1
 11976  004A62  C02D  F017         	movff	read_adc_temp2@voltage+2,i2___ftmul@f1+2
 11977  004A66  0E00               	movlw	0
 11978  004A68  6E18               	movwf	i2___ftmul@f2,c
 11979  004A6A  0E96               	movlw	150
 11980  004A6C  6E19               	movwf	i2___ftmul@f2+1,c
 11981  004A6E  0E43               	movlw	67
 11982  004A70  6E1A               	movwf	i2___ftmul@f2+2,c
 11983  004A72  ECF3  F020         	call	i2___ftmul	;wreg free
 11984  004A76  C015  F02E         	movff	?i2___ftmul,read_adc_temp2@temp
 11985  004A7A  C016  F02F         	movff	?i2___ftmul+1,read_adc_temp2@temp+1
 11986  004A7E  C017  F030         	movff	?i2___ftmul+2,read_adc_temp2@temp+2
 11987                           
 11988                           ;my_adc.c: 37: return temp;
 11989  004A82  C02E  F028         	movff	read_adc_temp2@temp,?_read_adc_temp2
 11990  004A86  C02F  F029         	movff	read_adc_temp2@temp+1,?_read_adc_temp2+1
 11991  004A8A  C030  F02A         	movff	read_adc_temp2@temp+2,?_read_adc_temp2+2
 11992  004A8E  0012               	return	
 11993  004A90                     __end_of_read_adc_temp2:
 11994                           	opt stack 0
 11995                           pclatu	equ	0xFFB
 11996                           pclath	equ	0xFFA
 11997                           tblptru	equ	0xFF8
 11998                           tblptrh	equ	0xFF7
 11999                           tblptrl	equ	0xFF6
 12000                           tablat	equ	0xFF5
 12001                           prodh	equ	0xFF4
 12002                           prodl	equ	0xFF3
 12003                           intcon	equ	0xFF2
 12004                           intcon2	equ	0xFF1
 12005                           intcon3	equ	0xFF0
 12006                           postinc0	equ	0xFEE
 12007                           fsr0h	equ	0xFEA
 12008                           fsr0l	equ	0xFE9
 12009                           wreg	equ	0xFE8
 12010                           indf1	equ	0xFE7
 12011                           postdec1	equ	0xFE5
 12012                           fsr1h	equ	0xFE2
 12013                           fsr1l	equ	0xFE1
 12014                           indf2	equ	0xFDF
 12015                           postinc2	equ	0xFDE
 12016                           postdec2	equ	0xFDD
 12017                           fsr2h	equ	0xFDA
 12018                           fsr2l	equ	0xFD9
 12019                           status	equ	0xFD8
 12020                           
 12021 ;; *************** function _read_adc_temp *****************
 12022 ;; Defined at:
 12023 ;;		line 19 in file "my_adc.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;  channel         1    wreg     unsigned char 
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  channel         1   50[COMRAM] unsigned char 
 12028 ;;  temp            3   45[COMRAM] float 
 12029 ;;  voltage         3   42[COMRAM] float 
 12030 ;;  raw_value       2   48[COMRAM] int 
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  3   39[COMRAM] float 
 12033 ;; Registers used:
 12034 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12040 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12043 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12044 ;;Total ram usage:       12 bytes
 12045 ;; Hardware stack levels used:    1
 12046 ;; Hardware stack levels required when called:    2
 12047 ;; This function calls:
 12048 ;;		___awtoft
 12049 ;;		___ftdiv
 12050 ;;		_read_adc_raw_no_lib
 12051 ;;		i2___ftmul
 12052 ;;		i2___wmul
 12053 ;; This function is called by:
 12054 ;;		_timer0_isr
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           	psect	text39
 12059  004A90                     __ptext39:
 12060                           	opt stack 0
 12061  004A90                     _read_adc_temp:
 12062                           	opt stack 20
 12063                           
 12064                           ;incstack = 0
 12065                           ;read_adc_temp@channel stored from wreg
 12066  004A90  6E33               	movwf	read_adc_temp@channel,c
 12067                           
 12068                           ;my_adc.c: 20: int raw_value;
 12069                           ;my_adc.c: 21: float voltage;
 12070                           ;my_adc.c: 22: raw_value = read_adc_raw_no_lib(channel);
 12071  004A92  5033               	movf	read_adc_temp@channel,w,c
 12072  004A94  EC74  F029         	call	_read_adc_raw_no_lib
 12073  004A98  C001  F031         	movff	?_read_adc_raw_no_lib,read_adc_temp@raw_value
 12074  004A9C  C002  F032         	movff	?_read_adc_raw_no_lib+1,read_adc_temp@raw_value+1
 12075                           
 12076                           ;my_adc.c: 23: voltage = (raw_value * 5) / 1024.0;
 12077  004AA0  C031  F00F         	movff	read_adc_temp@raw_value,i2___wmul@multiplier
 12078  004AA4  C032  F010         	movff	read_adc_temp@raw_value+1,i2___wmul@multiplier+1
 12079  004AA8  0E00               	movlw	0
 12080  004AAA  6E12               	movwf	i2___wmul@multiplicand+1,c
 12081  004AAC  0E05               	movlw	5
 12082  004AAE  6E11               	movwf	i2___wmul@multiplicand,c
 12083  004AB0  EC91  F02A         	call	i2___wmul	;wreg free
 12084  004AB4  C00F  F015         	movff	?i2___wmul,___awtoft@c
 12085  004AB8  C010  F016         	movff	?i2___wmul+1,___awtoft@c+1
 12086  004ABC  EC91  F029         	call	___awtoft	;wreg free
 12087  004AC0  C015  F019         	movff	?___awtoft,___ftdiv@f1
 12088  004AC4  C016  F01A         	movff	?___awtoft+1,___ftdiv@f1+1
 12089  004AC8  C017  F01B         	movff	?___awtoft+2,___ftdiv@f1+2
 12090  004ACC  0E00               	movlw	0
 12091  004ACE  6E1C               	movwf	___ftdiv@f2,c
 12092  004AD0  0E80               	movlw	128
 12093  004AD2  6E1D               	movwf	___ftdiv@f2+1,c
 12094  004AD4  0E44               	movlw	68
 12095  004AD6  6E1E               	movwf	___ftdiv@f2+2,c
 12096  004AD8  ECE7  F021         	call	___ftdiv	;wreg free
 12097  004ADC  C019  F02B         	movff	?___ftdiv,read_adc_temp@voltage
 12098  004AE0  C01A  F02C         	movff	?___ftdiv+1,read_adc_temp@voltage+1
 12099  004AE4  C01B  F02D         	movff	?___ftdiv+2,read_adc_temp@voltage+2
 12100                           
 12101                           ;my_adc.c: 24: float temp ;
 12102                           ;my_adc.c: 25: temp= voltage*40;
 12103  004AE8  C02B  F015         	movff	read_adc_temp@voltage,i2___ftmul@f1
 12104  004AEC  C02C  F016         	movff	read_adc_temp@voltage+1,i2___ftmul@f1+1
 12105  004AF0  C02D  F017         	movff	read_adc_temp@voltage+2,i2___ftmul@f1+2
 12106  004AF4  0E00               	movlw	0
 12107  004AF6  6E18               	movwf	i2___ftmul@f2,c
 12108  004AF8  0E20               	movlw	32
 12109  004AFA  6E19               	movwf	i2___ftmul@f2+1,c
 12110  004AFC  0E42               	movlw	66
 12111  004AFE  6E1A               	movwf	i2___ftmul@f2+2,c
 12112  004B00  ECF3  F020         	call	i2___ftmul	;wreg free
 12113  004B04  C015  F02E         	movff	?i2___ftmul,read_adc_temp@temp
 12114  004B08  C016  F02F         	movff	?i2___ftmul+1,read_adc_temp@temp+1
 12115  004B0C  C017  F030         	movff	?i2___ftmul+2,read_adc_temp@temp+2
 12116                           
 12117                           ;my_adc.c: 27: return temp;
 12118  004B10  C02E  F028         	movff	read_adc_temp@temp,?_read_adc_temp
 12119  004B14  C02F  F029         	movff	read_adc_temp@temp+1,?_read_adc_temp+1
 12120  004B18  C030  F02A         	movff	read_adc_temp@temp+2,?_read_adc_temp+2
 12121  004B1C  0012               	return	
 12122  004B1E                     __end_of_read_adc_temp:
 12123                           	opt stack 0
 12124                           pclatu	equ	0xFFB
 12125                           pclath	equ	0xFFA
 12126                           tblptru	equ	0xFF8
 12127                           tblptrh	equ	0xFF7
 12128                           tblptrl	equ	0xFF6
 12129                           tablat	equ	0xFF5
 12130                           prodh	equ	0xFF4
 12131                           prodl	equ	0xFF3
 12132                           intcon	equ	0xFF2
 12133                           intcon2	equ	0xFF1
 12134                           intcon3	equ	0xFF0
 12135                           postinc0	equ	0xFEE
 12136                           fsr0h	equ	0xFEA
 12137                           fsr0l	equ	0xFE9
 12138                           wreg	equ	0xFE8
 12139                           indf1	equ	0xFE7
 12140                           postdec1	equ	0xFE5
 12141                           fsr1h	equ	0xFE2
 12142                           fsr1l	equ	0xFE1
 12143                           indf2	equ	0xFDF
 12144                           postinc2	equ	0xFDE
 12145                           postdec2	equ	0xFDD
 12146                           fsr2h	equ	0xFDA
 12147                           fsr2l	equ	0xFD9
 12148                           status	equ	0xFD8
 12149                           
 12150 ;; *************** function _read_adc_raw_no_lib *****************
 12151 ;; Defined at:
 12152 ;;		line 10 in file "my_adc.c"
 12153 ;; Parameters:    Size  Location     Type
 12154 ;;  channel         1    wreg     unsigned char 
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;  channel         1    6[COMRAM] unsigned char 
 12157 ;;  raw_value       2    4[COMRAM] int 
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  2    0[COMRAM] int 
 12160 ;; Registers used:
 12161 ;;		wreg, status,2, status,0
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12168 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12170 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12171 ;;Total ram usage:        7 bytes
 12172 ;; Hardware stack levels used:    1
 12173 ;; This function calls:
 12174 ;;		Nothing
 12175 ;; This function is called by:
 12176 ;;		_read_adc_temp
 12177 ;;		_read_adc_temp2
 12178 ;; This function uses a non-reentrant model
 12179 ;;
 12180                           
 12181                           	psect	text40
 12182  0052E8                     __ptext40:
 12183                           	opt stack 0
 12184  0052E8                     _read_adc_raw_no_lib:
 12185                           	opt stack 21
 12186                           
 12187                           ;incstack = 0
 12188                           ;read_adc_raw_no_lib@channel stored from wreg
 12189  0052E8  6E07               	movwf	read_adc_raw_no_lib@channel,c
 12190                           
 12191                           ;my_adc.c: 11: int raw_value;
 12192                           ;my_adc.c: 12: ADCON0bits.CHS = channel ;
 12193  0052EA  C007  F003         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
 12194  0052EE  4603               	rlncf	??_read_adc_raw_no_lib,f,c
 12195  0052F0  4603               	rlncf	??_read_adc_raw_no_lib,f,c
 12196  0052F2  50C2               	movf	4034,w,c	;volatile
 12197  0052F4  1803               	xorwf	??_read_adc_raw_no_lib,w,c
 12198  0052F6  0BC3               	andlw	-61
 12199  0052F8  1803               	xorwf	??_read_adc_raw_no_lib,w,c
 12200  0052FA  6EC2               	movwf	4034,c	;volatile
 12201                           
 12202                           ;my_adc.c: 13: ADCON0bits.GO = 1;
 12203  0052FC  82C2               	bsf	4034,1,c	;volatile
 12204  0052FE                     i2l296:
 12205  0052FE  B2C2               	btfsc	4034,1,c	;volatile
 12206  005300  D7FE               	goto	i2l296
 12207                           
 12208                           ;my_adc.c: 15: raw_value = ADRESH << 8 | ADRESL;
 12209  005302  50C3               	movf	4035,w,c	;volatile
 12210  005304  CFC4 F003          	movff	4036,??_read_adc_raw_no_lib	;volatile
 12211  005308  6A04               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),c
 12212  00530A  C003  F004         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
 12213  00530E  6A03               	clrf	??_read_adc_raw_no_lib,c
 12214  005310  1003               	iorwf	??_read_adc_raw_no_lib,w,c
 12215  005312  6E05               	movwf	read_adc_raw_no_lib@raw_value,c
 12216  005314  5004               	movf	??_read_adc_raw_no_lib+1,w,c
 12217  005316  6E06               	movwf	read_adc_raw_no_lib@raw_value+1,c
 12218                           
 12219                           ;my_adc.c: 16: return raw_value;
 12220  005318  C005  F001         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
 12221  00531C  C006  F002         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
 12222  005320  0012               	return	
 12223  005322                     __end_of_read_adc_raw_no_lib:
 12224                           	opt stack 0
 12225                           pclatu	equ	0xFFB
 12226                           pclath	equ	0xFFA
 12227                           tblptru	equ	0xFF8
 12228                           tblptrh	equ	0xFF7
 12229                           tblptrl	equ	0xFF6
 12230                           tablat	equ	0xFF5
 12231                           prodh	equ	0xFF4
 12232                           prodl	equ	0xFF3
 12233                           intcon	equ	0xFF2
 12234                           intcon2	equ	0xFF1
 12235                           intcon3	equ	0xFF0
 12236                           postinc0	equ	0xFEE
 12237                           fsr0h	equ	0xFEA
 12238                           fsr0l	equ	0xFE9
 12239                           wreg	equ	0xFE8
 12240                           indf1	equ	0xFE7
 12241                           postdec1	equ	0xFE5
 12242                           fsr1h	equ	0xFE2
 12243                           fsr1l	equ	0xFE1
 12244                           indf2	equ	0xFDF
 12245                           postinc2	equ	0xFDE
 12246                           postdec2	equ	0xFDD
 12247                           fsr2h	equ	0xFDA
 12248                           fsr2l	equ	0xFD9
 12249                           status	equ	0xFD8
 12250                           
 12251 ;; *************** function ___ftdiv *****************
 12252 ;; Defined at:
 12253 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;  f1              3   24[COMRAM] float 
 12256 ;;  f2              3   27[COMRAM] float 
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;  f3              3   34[COMRAM] float 
 12259 ;;  sign            1   38[COMRAM] unsigned char 
 12260 ;;  exp             1   37[COMRAM] unsigned char 
 12261 ;;  cntr            1   33[COMRAM] unsigned char 
 12262 ;; Return value:  Size  Location     Type
 12263 ;;                  3   24[COMRAM] float 
 12264 ;; Registers used:
 12265 ;;		wreg, status,2, status,0, cstack
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12271 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12274 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12275 ;;Total ram usage:       15 bytes
 12276 ;; Hardware stack levels used:    1
 12277 ;; Hardware stack levels required when called:    1
 12278 ;; This function calls:
 12279 ;;		i2___ftpack
 12280 ;; This function is called by:
 12281 ;;		_read_adc_temp
 12282 ;;		_read_adc_temp2
 12283 ;; This function uses a non-reentrant model
 12284 ;;
 12285                           
 12286                           	psect	text41
 12287  0043CE                     __ptext41:
 12288                           	opt stack 0
 12289  0043CE                     ___ftdiv:
 12290                           	opt stack 20
 12291                           
 12292                           ;incstack = 0
 12293  0043CE  C01B  F01F         	movff	___ftdiv@f1+2,??___ftdiv
 12294  0043D2  6A20               	clrf	(??___ftdiv+1)& (0+255),c
 12295  0043D4  6A21               	clrf	(??___ftdiv+2)& (0+255),c
 12296  0043D6  341A               	rlcf	___ftdiv@f1+1,w,c
 12297  0043D8  361F               	rlcf	??___ftdiv& (0+255),f,c
 12298  0043DA  E301               	bnc	u468_41
 12299  0043DC  8020               	bsf	(??___ftdiv+1)& (0+255),0,c
 12300  0043DE                     u468_41:
 12301  0043DE  501F               	movf	??___ftdiv,w,c
 12302  0043E0  6E26               	movwf	___ftdiv@exp,c
 12303  0043E2  5026               	movf	___ftdiv@exp,w,c
 12304  0043E4  A4D8               	btfss	status,2,c
 12305  0043E6  D007               	goto	i2l4249
 12306  0043E8  0E00               	movlw	0
 12307  0043EA  6E19               	movwf	?___ftdiv,c
 12308  0043EC  0E00               	movlw	0
 12309  0043EE  6E1A               	movwf	?___ftdiv+1,c
 12310  0043F0  0E00               	movlw	0
 12311  0043F2  6E1B               	movwf	?___ftdiv+2,c
 12312  0043F4  0012               	return	
 12313  0043F6                     i2l4249:
 12314  0043F6  C01E  F01F         	movff	___ftdiv@f2+2,??___ftdiv
 12315  0043FA  6A20               	clrf	(??___ftdiv+1)& (0+255),c
 12316  0043FC  6A21               	clrf	(??___ftdiv+2)& (0+255),c
 12317  0043FE  341D               	rlcf	___ftdiv@f2+1,w,c
 12318  004400  361F               	rlcf	??___ftdiv& (0+255),f,c
 12319  004402  E301               	bnc	u470_41
 12320  004404  8020               	bsf	(??___ftdiv+1)& (0+255),0,c
 12321  004406                     u470_41:
 12322  004406  501F               	movf	??___ftdiv,w,c
 12323  004408  6E27               	movwf	___ftdiv@sign,c
 12324  00440A  5027               	movf	___ftdiv@sign,w,c
 12325  00440C  A4D8               	btfss	status,2,c
 12326  00440E  D007               	goto	i2l4255
 12327  004410  0E00               	movlw	0
 12328  004412  6E19               	movwf	?___ftdiv,c
 12329  004414  0E00               	movlw	0
 12330  004416  6E1A               	movwf	?___ftdiv+1,c
 12331  004418  0E00               	movlw	0
 12332  00441A  6E1B               	movwf	?___ftdiv+2,c
 12333  00441C  0012               	return	
 12334  00441E                     i2l4255:
 12335  00441E  0E00               	movlw	0
 12336  004420  6E23               	movwf	___ftdiv@f3,c
 12337  004422  0E00               	movlw	0
 12338  004424  6E24               	movwf	___ftdiv@f3+1,c
 12339  004426  0E00               	movlw	0
 12340  004428  6E25               	movwf	___ftdiv@f3+2,c
 12341  00442A  5027               	movf	___ftdiv@sign,w,c
 12342  00442C  0F89               	addlw	137
 12343  00442E  5E26               	subwf	___ftdiv@exp,f,c
 12344  004430  C01B  F027         	movff	___ftdiv@f1+2,___ftdiv@sign
 12345  004434  501E               	movf	___ftdiv@f2+2,w,c
 12346  004436  1A27               	xorwf	___ftdiv@sign,f,c
 12347  004438  0E80               	movlw	128
 12348  00443A  1627               	andwf	___ftdiv@sign,f,c
 12349  00443C  8E1A               	bsf	___ftdiv@f1+1,7,c
 12350  00443E  0EFF               	movlw	255
 12351  004440  1619               	andwf	___ftdiv@f1,f,c
 12352  004442  0EFF               	movlw	255
 12353  004444  161A               	andwf	___ftdiv@f1+1,f,c
 12354  004446  0E00               	movlw	0
 12355  004448  161B               	andwf	___ftdiv@f1+2,f,c
 12356  00444A  8E1D               	bsf	___ftdiv@f2+1,7,c
 12357  00444C  0EFF               	movlw	255
 12358  00444E  161C               	andwf	___ftdiv@f2,f,c
 12359  004450  0EFF               	movlw	255
 12360  004452  161D               	andwf	___ftdiv@f2+1,f,c
 12361  004454  0E00               	movlw	0
 12362  004456  161E               	andwf	___ftdiv@f2+2,f,c
 12363  004458  0E18               	movlw	24
 12364  00445A  6E22               	movwf	___ftdiv@cntr,c
 12365  00445C                     i2l4275:
 12366  00445C  90D8               	bcf	status,0,c
 12367  00445E  3623               	rlcf	___ftdiv@f3,f,c
 12368  004460  3624               	rlcf	___ftdiv@f3+1,f,c
 12369  004462  3625               	rlcf	___ftdiv@f3+2,f,c
 12370  004464  501C               	movf	___ftdiv@f2,w,c
 12371  004466  5C19               	subwf	___ftdiv@f1,w,c
 12372  004468  501D               	movf	___ftdiv@f2+1,w,c
 12373  00446A  581A               	subwfb	___ftdiv@f1+1,w,c
 12374  00446C  501E               	movf	___ftdiv@f2+2,w,c
 12375  00446E  581B               	subwfb	___ftdiv@f1+2,w,c
 12376  004470  A0D8               	btfss	status,0,c
 12377  004472  D007               	goto	i2l756
 12378  004474  501C               	movf	___ftdiv@f2,w,c
 12379  004476  5E19               	subwf	___ftdiv@f1,f,c
 12380  004478  501D               	movf	___ftdiv@f2+1,w,c
 12381  00447A  5A1A               	subwfb	___ftdiv@f1+1,f,c
 12382  00447C  501E               	movf	___ftdiv@f2+2,w,c
 12383  00447E  5A1B               	subwfb	___ftdiv@f1+2,f,c
 12384  004480  8023               	bsf	___ftdiv@f3,0,c
 12385  004482                     i2l756:
 12386  004482  90D8               	bcf	status,0,c
 12387  004484  3619               	rlcf	___ftdiv@f1,f,c
 12388  004486  361A               	rlcf	___ftdiv@f1+1,f,c
 12389  004488  361B               	rlcf	___ftdiv@f1+2,f,c
 12390  00448A  2E22               	decfsz	___ftdiv@cntr,f,c
 12391  00448C  D7E7               	goto	i2l4275
 12392  00448E  C023  F001         	movff	___ftdiv@f3,i2___ftpack@arg
 12393  004492  C024  F002         	movff	___ftdiv@f3+1,i2___ftpack@arg+1
 12394  004496  C025  F003         	movff	___ftdiv@f3+2,i2___ftpack@arg+2
 12395  00449A  C026  F004         	movff	___ftdiv@exp,i2___ftpack@exp
 12396  00449E  C027  F005         	movff	___ftdiv@sign,i2___ftpack@sign
 12397  0044A2  EC7B  F023         	call	i2___ftpack	;wreg free
 12398  0044A6  C001  F019         	movff	?i2___ftpack,?___ftdiv
 12399  0044AA  C002  F01A         	movff	?i2___ftpack+1,?___ftdiv+1
 12400  0044AE  C003  F01B         	movff	?i2___ftpack+2,?___ftdiv+2
 12401  0044B2  0012               	return	
 12402  0044B4                     __end_of___ftdiv:
 12403                           	opt stack 0
 12404                           pclatu	equ	0xFFB
 12405                           pclath	equ	0xFFA
 12406                           tblptru	equ	0xFF8
 12407                           tblptrh	equ	0xFF7
 12408                           tblptrl	equ	0xFF6
 12409                           tablat	equ	0xFF5
 12410                           prodh	equ	0xFF4
 12411                           prodl	equ	0xFF3
 12412                           intcon	equ	0xFF2
 12413                           intcon2	equ	0xFF1
 12414                           intcon3	equ	0xFF0
 12415                           postinc0	equ	0xFEE
 12416                           fsr0h	equ	0xFEA
 12417                           fsr0l	equ	0xFE9
 12418                           wreg	equ	0xFE8
 12419                           indf1	equ	0xFE7
 12420                           postdec1	equ	0xFE5
 12421                           fsr1h	equ	0xFE2
 12422                           fsr1l	equ	0xFE1
 12423                           indf2	equ	0xFDF
 12424                           postinc2	equ	0xFDE
 12425                           postdec2	equ	0xFDD
 12426                           fsr2h	equ	0xFDA
 12427                           fsr2l	equ	0xFD9
 12428                           status	equ	0xFD8
 12429                           
 12430 ;; *************** function ___awtoft *****************
 12431 ;; Defined at:
 12432 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;  c               2   20[COMRAM] int 
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;  sign            1   23[COMRAM] unsigned char 
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  3   20[COMRAM] float 
 12439 ;; Registers used:
 12440 ;;		wreg, status,2, status,0, cstack
 12441 ;; Tracked objects:
 12442 ;;		On entry : 0/0
 12443 ;;		On exit  : 0/0
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12446 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12450 ;;Total ram usage:        4 bytes
 12451 ;; Hardware stack levels used:    1
 12452 ;; Hardware stack levels required when called:    1
 12453 ;; This function calls:
 12454 ;;		i2___ftpack
 12455 ;; This function is called by:
 12456 ;;		_read_adc_temp
 12457 ;;		_read_adc_temp2
 12458 ;; This function uses a non-reentrant model
 12459 ;;
 12460                           
 12461                           	psect	text42
 12462  005322                     __ptext42:
 12463                           	opt stack 0
 12464  005322                     ___awtoft:
 12465                           	opt stack 20
 12466                           
 12467                           ;incstack = 0
 12468  005322  0E00               	movlw	0
 12469  005324  6E18               	movwf	___awtoft@sign,c
 12470  005326  AE16               	btfss	___awtoft@c+1,7,c
 12471  005328  D006               	goto	i2l4425
 12472  00532A  6C15               	negf	___awtoft@c,c
 12473  00532C  1E16               	comf	___awtoft@c+1,f,c
 12474  00532E  B0D8               	btfsc	status,0,c
 12475  005330  2A16               	incf	___awtoft@c+1,f,c
 12476  005332  0E01               	movlw	1
 12477  005334  6E18               	movwf	___awtoft@sign,c
 12478  005336                     i2l4425:
 12479  005336  C015  F001         	movff	___awtoft@c,i2___ftpack@arg
 12480  00533A  C016  F002         	movff	___awtoft@c+1,i2___ftpack@arg+1
 12481  00533E  6A03               	clrf	i2___ftpack@arg+2,c
 12482  005340  0E8E               	movlw	142
 12483  005342  6E04               	movwf	i2___ftpack@exp,c
 12484  005344  C018  F005         	movff	___awtoft@sign,i2___ftpack@sign
 12485  005348  EC7B  F023         	call	i2___ftpack	;wreg free
 12486  00534C  C001  F015         	movff	?i2___ftpack,?___awtoft
 12487  005350  C002  F016         	movff	?i2___ftpack+1,?___awtoft+1
 12488  005354  C003  F017         	movff	?i2___ftpack+2,?___awtoft+2
 12489  005358  0012               	return	
 12490  00535A                     __end_of___awtoft:
 12491                           	opt stack 0
 12492                           pclatu	equ	0xFFB
 12493                           pclath	equ	0xFFA
 12494                           tblptru	equ	0xFF8
 12495                           tblptrh	equ	0xFF7
 12496                           tblptrl	equ	0xFF6
 12497                           tablat	equ	0xFF5
 12498                           prodh	equ	0xFF4
 12499                           prodl	equ	0xFF3
 12500                           intcon	equ	0xFF2
 12501                           intcon2	equ	0xFF1
 12502                           intcon3	equ	0xFF0
 12503                           postinc0	equ	0xFEE
 12504                           fsr0h	equ	0xFEA
 12505                           fsr0l	equ	0xFE9
 12506                           wreg	equ	0xFE8
 12507                           indf1	equ	0xFE7
 12508                           postdec1	equ	0xFE5
 12509                           fsr1h	equ	0xFE2
 12510                           fsr1l	equ	0xFE1
 12511                           indf2	equ	0xFDF
 12512                           postinc2	equ	0xFDE
 12513                           postdec2	equ	0xFDD
 12514                           fsr2h	equ	0xFDA
 12515                           fsr2l	equ	0xFD9
 12516                           status	equ	0xFD8
 12517                           
 12518 ;; *************** function _EXT_Int2_isr *****************
 12519 ;; Defined at:
 12520 ;;		line 295 in file "AS1AY.c"
 12521 ;; Parameters:    Size  Location     Type
 12522 ;;		None
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;		None
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      void 
 12527 ;; Registers used:
 12528 ;;		wreg, status,2
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12538 ;;Total ram usage:        0 bytes
 12539 ;; Hardware stack levels used:    1
 12540 ;; This function calls:
 12541 ;;		Nothing
 12542 ;; This function is called by:
 12543 ;;		_highIsr
 12544 ;; This function uses a non-reentrant model
 12545 ;;
 12546                           
 12547                           	psect	text43
 12548  0055D6                     __ptext43:
 12549                           	opt stack 0
 12550  0055D6                     _EXT_Int2_isr:
 12551                           	opt stack 23
 12552                           
 12553                           ;AS1AY.c: 297: INTCON3bits.INT2F = 0;
 12554                           
 12555                           ;incstack = 0
 12556  0055D6  92F0               	bcf	intcon3,1,c	;volatile
 12557                           
 12558                           ;AS1AY.c: 298: CK_state=0;
 12559  0055D8  0E00               	movlw	0
 12560  0055DA  6E77               	movwf	_CK_state+1,c
 12561  0055DC  0E00               	movlw	0
 12562  0055DE  6E76               	movwf	_CK_state,c
 12563                           
 12564                           ;AS1AY.c: 299: HT_state=0;
 12565  0055E0  0E00               	movlw	0
 12566  0055E2  6E79               	movwf	_HT_state+1,c
 12567  0055E4  0E00               	movlw	0
 12568  0055E6  6E78               	movwf	_HT_state,c
 12569                           
 12570                           ;AS1AY.c: 300: PORTCbits.RC5=0;
 12571  0055E8  9A82               	bcf	3970,5,c	;volatile
 12572                           
 12573                           ;AS1AY.c: 301: PORTDbits.RD1 = CK_state;
 12574  0055EA  B076               	btfsc	_CK_state,0,c
 12575  0055EC  D002               	bra	i2u358_45
 12576  0055EE  9283               	bcf	3971,1,c	;volatile
 12577  0055F0  D001               	bra	i2u358_46
 12578  0055F2                     i2u358_45:
 12579  0055F2  8283               	bsf	3971,1,c	;volatile
 12580  0055F4                     i2u358_46:
 12581  0055F4  0012               	return		;funcret
 12582  0055F6                     __end_of_EXT_Int2_isr:
 12583                           	opt stack 0
 12584                           pclatu	equ	0xFFB
 12585                           pclath	equ	0xFFA
 12586                           tblptru	equ	0xFF8
 12587                           tblptrh	equ	0xFF7
 12588                           tblptrl	equ	0xFF6
 12589                           tablat	equ	0xFF5
 12590                           prodh	equ	0xFF4
 12591                           prodl	equ	0xFF3
 12592                           intcon	equ	0xFF2
 12593                           intcon2	equ	0xFF1
 12594                           intcon3	equ	0xFF0
 12595                           postinc0	equ	0xFEE
 12596                           fsr0h	equ	0xFEA
 12597                           fsr0l	equ	0xFE9
 12598                           wreg	equ	0xFE8
 12599                           indf1	equ	0xFE7
 12600                           postdec1	equ	0xFE5
 12601                           fsr1h	equ	0xFE2
 12602                           fsr1l	equ	0xFE1
 12603                           indf2	equ	0xFDF
 12604                           postinc2	equ	0xFDE
 12605                           postdec2	equ	0xFDD
 12606                           fsr2h	equ	0xFDA
 12607                           fsr2l	equ	0xFD9
 12608                           status	equ	0xFD8
 12609                           
 12610 ;; *************** function _EXT_Int1_isr *****************
 12611 ;; Defined at:
 12612 ;;		line 303 in file "AS1AY.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;		None
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;		None
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  1    wreg      void 
 12619 ;; Registers used:
 12620 ;;		wreg, status,2, status,0
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12630 ;;Total ram usage:        0 bytes
 12631 ;; Hardware stack levels used:    1
 12632 ;; This function calls:
 12633 ;;		Nothing
 12634 ;; This function is called by:
 12635 ;;		_highIsr
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text44
 12640  00547E                     __ptext44:
 12641                           	opt stack 0
 12642  00547E                     _EXT_Int1_isr:
 12643                           	opt stack 23
 12644                           
 12645                           ;AS1AY.c: 305: INTCON3bits.INT1F = 0;
 12646                           
 12647                           ;incstack = 0
 12648  00547E  90F0               	bcf	intcon3,0,c	;volatile
 12649                           
 12650                           ;AS1AY.c: 306: if (Totsec>0){
 12651  005480  0100               	movlb	0	; () banked
 12652  005482  51DF               	movf	_Totsec& (0+255),w,b
 12653  005484  0100               	movlb	0	; () banked
 12654  005486  11E0               	iorwf	(_Totsec+1)& (0+255),w,b
 12655  005488  B4D8               	btfsc	status,2,c
 12656  00548A  0012               	return	
 12657                           
 12658                           ; BSR set to: 0
 12659                           ;AS1AY.c: 307: CK_state=1;
 12660  00548C  0E00               	movlw	0
 12661  00548E  6E77               	movwf	_CK_state+1,c
 12662  005490  0E01               	movlw	1
 12663  005492  6E76               	movwf	_CK_state,c
 12664                           
 12665                           ;AS1AY.c: 308: HT_state=1;
 12666  005494  0E00               	movlw	0
 12667  005496  6E79               	movwf	_HT_state+1,c
 12668  005498  0E01               	movlw	1
 12669  00549A  6E78               	movwf	_HT_state,c
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;AS1AY.c: 309: PORTCbits.RC5=1;
 12673  00549C  8A82               	bsf	3970,5,c	;volatile
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;AS1AY.c: 310: PORTDbits.RD1 = CK_state;
 12677  00549E  B076               	btfsc	_CK_state,0,c
 12678  0054A0  D002               	bra	i2u741_45
 12679  0054A2  9283               	bcf	3971,1,c	;volatile
 12680  0054A4  D001               	bra	i2u741_46
 12681  0054A6                     i2u741_45:
 12682  0054A6  8283               	bsf	3971,1,c	;volatile
 12683  0054A8                     i2u741_46:
 12684  0054A8  0012               	return	
 12685  0054AA                     __end_of_EXT_Int1_isr:
 12686                           	opt stack 0
 12687                           pclatu	equ	0xFFB
 12688                           pclath	equ	0xFFA
 12689                           tblptru	equ	0xFF8
 12690                           tblptrh	equ	0xFF7
 12691                           tblptrl	equ	0xFF6
 12692                           tablat	equ	0xFF5
 12693                           prodh	equ	0xFF4
 12694                           prodl	equ	0xFF3
 12695                           intcon	equ	0xFF2
 12696                           intcon2	equ	0xFF1
 12697                           intcon3	equ	0xFF0
 12698                           postinc0	equ	0xFEE
 12699                           fsr0h	equ	0xFEA
 12700                           fsr0l	equ	0xFE9
 12701                           wreg	equ	0xFE8
 12702                           indf1	equ	0xFE7
 12703                           postdec1	equ	0xFE5
 12704                           fsr1h	equ	0xFE2
 12705                           fsr1l	equ	0xFE1
 12706                           indf2	equ	0xFDF
 12707                           postinc2	equ	0xFDE
 12708                           postdec2	equ	0xFDD
 12709                           fsr2h	equ	0xFDA
 12710                           fsr2l	equ	0xFD9
 12711                           status	equ	0xFD8
 12712                           
 12713 ;; *************** function _EXT_Int0_isr *****************
 12714 ;; Defined at:
 12715 ;;		line 314 in file "AS1AY.c"
 12716 ;; Parameters:    Size  Location     Type
 12717 ;;		None
 12718 ;; Auto vars:     Size  Location     Type
 12719 ;;		None
 12720 ;; Return value:  Size  Location     Type
 12721 ;;                  1    wreg      void 
 12722 ;; Registers used:
 12723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/0
 12726 ;;		On exit  : 0/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12733 ;;Total ram usage:        2 bytes
 12734 ;; Hardware stack levels used:    1
 12735 ;; Hardware stack levels required when called:    6
 12736 ;; This function calls:
 12737 ;;		i2_lcd_gotoxy
 12738 ;;		i2_lcd_puts
 12739 ;;		i2_sprintf
 12740 ;;		i2_strcpy
 12741 ;; This function is called by:
 12742 ;;		_highIsr
 12743 ;; This function uses a non-reentrant model
 12744 ;;
 12745                           
 12746                           	psect	text45
 12747  003A7C                     __ptext45:
 12748                           	opt stack 0
 12749  003A7C                     _EXT_Int0_isr:
 12750                           	opt stack 17
 12751                           
 12752                           ;AS1AY.c: 315: INTCONbits.INT0IF = 0;
 12753                           
 12754                           ;incstack = 0
 12755  003A7C  92F2               	bcf	intcon,1,c	;volatile
 12756                           
 12757                           ;AS1AY.c: 316: if (clock_setup_SMH == 0) {
 12758  003A7E  0100               	movlb	0	; () banked
 12759  003A80  51E1               	movf	_clock_setup_SMH& (0+255),w,b
 12760  003A82  0100               	movlb	0	; () banked
 12761  003A84  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
 12762  003A86  A4D8               	btfss	status,2,c
 12763  003A88  D005               	goto	i2l6089
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;AS1AY.c: 317: clock_setup_SMH = 1;
 12767  003A8A  0E00               	movlw	0
 12768  003A8C  0100               	movlb	0	; () banked
 12769  003A8E  6FE2               	movwf	(_clock_setup_SMH+1)& (0+255),b
 12770  003A90  0E01               	movlw	1
 12771  003A92  D02E               	goto	L22
 12772  003A94                     i2l6089:
 12773                           
 12774                           ; BSR set to: 0
 12775  003A94  0100               	movlb	0	; () banked
 12776  003A96  05E1               	decf	_clock_setup_SMH& (0+255),w,b
 12777  003A98  0100               	movlb	0	; () banked
 12778  003A9A  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
 12779  003A9C  A4D8               	btfss	status,2,c
 12780  003A9E  D005               	goto	i2l6093
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;AS1AY.c: 319: clock_setup_SMH = 2;
 12784  003AA0  0E00               	movlw	0
 12785  003AA2  0100               	movlb	0	; () banked
 12786  003AA4  6FE2               	movwf	(_clock_setup_SMH+1)& (0+255),b
 12787  003AA6  0E02               	movlw	2
 12788  003AA8  D023               	goto	L22
 12789  003AAA                     i2l6093:
 12790                           
 12791                           ; BSR set to: 0
 12792  003AAA  0E02               	movlw	2
 12793  003AAC  0100               	movlb	0	; () banked
 12794  003AAE  19E1               	xorwf	_clock_setup_SMH& (0+255),w,b
 12795  003AB0  0100               	movlb	0	; () banked
 12796  003AB2  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
 12797  003AB4  A4D8               	btfss	status,2,c
 12798  003AB6  D005               	goto	i2l6097
 12799                           
 12800                           ; BSR set to: 0
 12801                           ;AS1AY.c: 321: clock_setup_SMH = 3;
 12802  003AB8  0E00               	movlw	0
 12803  003ABA  0100               	movlb	0	; () banked
 12804  003ABC  6FE2               	movwf	(_clock_setup_SMH+1)& (0+255),b
 12805  003ABE  0E03               	movlw	3
 12806  003AC0  D017               	goto	L22
 12807  003AC2                     i2l6097:
 12808                           
 12809                           ; BSR set to: 0
 12810  003AC2  0E03               	movlw	3
 12811  003AC4  0100               	movlb	0	; () banked
 12812  003AC6  19E1               	xorwf	_clock_setup_SMH& (0+255),w,b
 12813  003AC8  0100               	movlb	0	; () banked
 12814  003ACA  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
 12815  003ACC  A4D8               	btfss	status,2,c
 12816  003ACE  D005               	goto	i2l6101
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;AS1AY.c: 323: clock_setup_SMH = 4;
 12820  003AD0  0E00               	movlw	0
 12821  003AD2  0100               	movlb	0	; () banked
 12822  003AD4  6FE2               	movwf	(_clock_setup_SMH+1)& (0+255),b
 12823  003AD6  0E04               	movlw	4
 12824  003AD8  D00B               	goto	L22
 12825  003ADA                     i2l6101:
 12826                           
 12827                           ; BSR set to: 0
 12828  003ADA  0E04               	movlw	4
 12829  003ADC  0100               	movlb	0	; () banked
 12830  003ADE  19E1               	xorwf	_clock_setup_SMH& (0+255),w,b
 12831  003AE0  0100               	movlb	0	; () banked
 12832  003AE2  11E2               	iorwf	(_clock_setup_SMH+1)& (0+255),w,b
 12833  003AE4  A4D8               	btfss	status,2,c
 12834  003AE6  D048               	goto	i2l6117
 12835                           
 12836                           ; BSR set to: 0
 12837                           ;AS1AY.c: 325: clock_setup_SMH = 0;
 12838  003AE8  0E00               	movlw	0
 12839  003AEA  0100               	movlb	0	; () banked
 12840  003AEC  6FE2               	movwf	(_clock_setup_SMH+1)& (0+255),b
 12841  003AEE  0E00               	movlw	0
 12842  003AF0                     L22:
 12843  003AF0  6FE1               	movwf	_clock_setup_SMH& (0+255),b
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;AS1AY.c: 326: }
 12847                           ;AS1AY.c: 327: switch (clock_setup_SMH) {
 12848                           
 12849                           ; BSR set to: 0
 12850                           
 12851                           ; BSR set to: 0
 12852                           
 12853                           ; BSR set to: 0
 12854                           
 12855                           ; BSR set to: 0
 12856  003AF2  D042               	goto	i2l6117
 12857  003AF4                     i2l6105:
 12858  003AF4  0E00               	movlw	low _m0
 12859  003AF6  6E01               	movwf	i2strcpy@to,c
 12860  003AF8  0E01               	movlw	high _m0
 12861  003AFA  6E02               	movwf	i2strcpy@to+1,c
 12862  003AFC  0E0E               	movlw	low _m1
 12863  003AFE  6E03               	movwf	i2strcpy@from,c
 12864  003B00  0E01               	movlw	high _m1
 12865  003B02  6E04               	movwf	i2strcpy@from+1,c
 12866  003B04  EC11  F02A         	call	i2_strcpy	;wreg free
 12867                           
 12868                           ;AS1AY.c: 329: break;
 12869  003B08  D050               	goto	i2l6119
 12870  003B0A                     i2l6107:
 12871  003B0A  0E00               	movlw	low _m0
 12872  003B0C  6E01               	movwf	i2strcpy@to,c
 12873  003B0E  0E01               	movlw	high _m0
 12874  003B10  6E02               	movwf	i2strcpy@to+1,c
 12875  003B12  0E1C               	movlw	low _m2
 12876  003B14  6E03               	movwf	i2strcpy@from,c
 12877  003B16  0E01               	movlw	high _m2
 12878  003B18  6E04               	movwf	i2strcpy@from+1,c
 12879  003B1A  EC11  F02A         	call	i2_strcpy	;wreg free
 12880                           
 12881                           ;AS1AY.c: 331: break;
 12882  003B1E  D045               	goto	i2l6119
 12883  003B20                     i2l6109:
 12884  003B20  0E00               	movlw	low _m0
 12885  003B22  6E01               	movwf	i2strcpy@to,c
 12886  003B24  0E01               	movlw	high _m0
 12887  003B26  6E02               	movwf	i2strcpy@to+1,c
 12888  003B28  0E2A               	movlw	low _m3
 12889  003B2A  6E03               	movwf	i2strcpy@from,c
 12890  003B2C  0E01               	movlw	high _m3
 12891  003B2E  6E04               	movwf	i2strcpy@from+1,c
 12892  003B30  EC11  F02A         	call	i2_strcpy	;wreg free
 12893                           
 12894                           ;AS1AY.c: 333: break;
 12895  003B34  D03A               	goto	i2l6119
 12896  003B36                     i2l6111:
 12897  003B36  0E00               	movlw	low _m0
 12898  003B38  6E01               	movwf	i2strcpy@to,c
 12899  003B3A  0E01               	movlw	high _m0
 12900  003B3C  6E02               	movwf	i2strcpy@to+1,c
 12901  003B3E  0E38               	movlw	low _m4
 12902  003B40  6E03               	movwf	i2strcpy@from,c
 12903  003B42  0E01               	movlw	high _m4
 12904  003B44  6E04               	movwf	i2strcpy@from+1,c
 12905  003B46  EC11  F02A         	call	i2_strcpy	;wreg free
 12906                           
 12907                           ;AS1AY.c: 335: break;
 12908  003B4A  D02F               	goto	i2l6119
 12909  003B4C                     i2l6113:
 12910  003B4C  0E00               	movlw	low _m0
 12911  003B4E  6E01               	movwf	i2strcpy@to,c
 12912  003B50  0E01               	movlw	high _m0
 12913  003B52  6E02               	movwf	i2strcpy@to+1,c
 12914  003B54  0E46               	movlw	low _m5
 12915  003B56  6E03               	movwf	i2strcpy@from,c
 12916  003B58  0E01               	movlw	high _m5
 12917  003B5A  6E04               	movwf	i2strcpy@from+1,c
 12918  003B5C  EC11  F02A         	call	i2_strcpy	;wreg free
 12919                           
 12920                           ;AS1AY.c: 337: break;
 12921  003B60  D024               	goto	i2l6119
 12922  003B62                     i2l6115:
 12923  003B62  0E00               	movlw	low _m0
 12924  003B64  6E01               	movwf	i2strcpy@to,c
 12925  003B66  0E01               	movlw	high _m0
 12926  003B68  6E02               	movwf	i2strcpy@to+1,c
 12927  003B6A  0E0E               	movlw	low _m1
 12928  003B6C  6E03               	movwf	i2strcpy@from,c
 12929  003B6E  0E01               	movlw	high _m1
 12930  003B70  6E04               	movwf	i2strcpy@from+1,c
 12931  003B72  EC11  F02A         	call	i2_strcpy	;wreg free
 12932                           
 12933                           ;AS1AY.c: 339: }
 12934  003B76  D019               	goto	i2l6119
 12935  003B78                     i2l6117:
 12936  003B78  C0E1  F070         	movff	_clock_setup_SMH,??_EXT_Int0_isr
 12937  003B7C  C0E2  F071         	movff	_clock_setup_SMH+1,??_EXT_Int0_isr+1
 12938                           
 12939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12940                           ; Switch size 1, requested type "space"
 12941                           ; Number of cases is 1, Range of values is 0 to 0
 12942                           ; switch strategies available:
 12943                           ; Name         Instructions Cycles
 12944                           ; simple_byte            4     3 (average)
 12945                           ;	Chosen strategy is simple_byte
 12946  003B80  5071               	movf	??_EXT_Int0_isr+1,w,c
 12947  003B82  0A00               	xorlw	0	; case 0
 12948  003B84  A4D8               	btfss	status,2,c
 12949  003B86  D7ED               	goto	i2l6115
 12950                           
 12951                           ; Switch size 1, requested type "space"
 12952                           ; Number of cases is 5, Range of values is 0 to 4
 12953                           ; switch strategies available:
 12954                           ; Name         Instructions Cycles
 12955                           ; simple_byte           16     9 (average)
 12956                           ;	Chosen strategy is simple_byte
 12957  003B88  5070               	movf	??_EXT_Int0_isr,w,c
 12958  003B8A  0A00               	xorlw	0	; case 0
 12959  003B8C  B4D8               	btfsc	status,2,c
 12960  003B8E  D7B2               	goto	i2l6105
 12961  003B90  0A01               	xorlw	1	; case 1
 12962  003B92  B4D8               	btfsc	status,2,c
 12963  003B94  D7BA               	goto	i2l6107
 12964  003B96  0A03               	xorlw	3	; case 2
 12965  003B98  B4D8               	btfsc	status,2,c
 12966  003B9A  D7C2               	goto	i2l6109
 12967  003B9C  0A01               	xorlw	1	; case 3
 12968  003B9E  B4D8               	btfsc	status,2,c
 12969  003BA0  D7CA               	goto	i2l6111
 12970  003BA2  0A07               	xorlw	7	; case 4
 12971  003BA4  B4D8               	btfsc	status,2,c
 12972  003BA6  D7D2               	goto	i2l6113
 12973  003BA8  D7DC               	goto	i2l6115
 12974  003BAA                     i2l6119:
 12975                           
 12976                           ;AS1AY.c: 340: sprintf(Buffer4,"MD:%s" ,m0);
 12977  003BAA  0E84               	movlw	low _Buffer4
 12978  003BAC  6E43               	movwf	i2sprintf@sp,c
 12979  003BAE  0E01               	movlw	high _Buffer4
 12980  003BB0  6E44               	movwf	i2sprintf@sp+1,c
 12981  003BB2  0EF9               	movlw	low STR_20
 12982  003BB4  6E45               	movwf	i2sprintf@f,c
 12983  003BB6  0EFF               	movlw	high STR_20
 12984  003BB8  6E46               	movwf	i2sprintf@f+1,c
 12985  003BBA  0E00               	movlw	low _m0
 12986  003BBC  6E47               	movwf	?i2_sprintf+4,c
 12987  003BBE  0E01               	movlw	high _m0
 12988  003BC0  6E48               	movwf	?i2_sprintf+5,c
 12989  003BC2  EC1F  F007         	call	i2_sprintf	;wreg free
 12990                           
 12991                           ;AS1AY.c: 341: lcd_gotoxy(1, 4);
 12992  003BC6  0E04               	movlw	4
 12993  003BC8  6E0B               	movwf	i2lcd_gotoxy@y,c
 12994  003BCA  0E01               	movlw	1
 12995  003BCC  EC13  F029         	call	i2_lcd_gotoxy
 12996                           
 12997                           ;AS1AY.c: 342: lcd_puts(Buffer4);
 12998  003BD0  0E84               	movlw	low _Buffer4
 12999  003BD2  6E0F               	movwf	i2lcd_puts@s,c
 13000  003BD4  0E01               	movlw	high _Buffer4
 13001  003BD6  6E10               	movwf	i2lcd_puts@s+1,c
 13002  003BD8  ECB6  F02A         	call	i2_lcd_puts	;wreg free
 13003  003BDC  0012               	return		;funcret
 13004  003BDE                     __end_of_EXT_Int0_isr:
 13005                           	opt stack 0
 13006                           pclatu	equ	0xFFB
 13007                           pclath	equ	0xFFA
 13008                           tblptru	equ	0xFF8
 13009                           tblptrh	equ	0xFF7
 13010                           tblptrl	equ	0xFF6
 13011                           tablat	equ	0xFF5
 13012                           prodh	equ	0xFF4
 13013                           prodl	equ	0xFF3
 13014                           intcon	equ	0xFF2
 13015                           intcon2	equ	0xFF1
 13016                           intcon3	equ	0xFF0
 13017                           postinc0	equ	0xFEE
 13018                           fsr0h	equ	0xFEA
 13019                           fsr0l	equ	0xFE9
 13020                           wreg	equ	0xFE8
 13021                           indf1	equ	0xFE7
 13022                           postdec1	equ	0xFE5
 13023                           fsr1h	equ	0xFE2
 13024                           fsr1l	equ	0xFE1
 13025                           indf2	equ	0xFDF
 13026                           postinc2	equ	0xFDE
 13027                           postdec2	equ	0xFDD
 13028                           fsr2h	equ	0xFDA
 13029                           fsr2l	equ	0xFD9
 13030                           status	equ	0xFD8
 13031                           
 13032 ;; *************** function i2_strcpy *****************
 13033 ;; Defined at:
 13034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\strcpy.c"
 13035 ;; Parameters:    Size  Location     Type
 13036 ;;  to              2    0[COMRAM] PTR unsigned char 
 13037 ;;		 -> m0(14), 
 13038 ;;  from            2    2[COMRAM] PTR const unsigned char 
 13039 ;;		 -> m5(14), m4(14), m3(14), m2(14), 
 13040 ;;		 -> m1(14), 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;  strcpy          2    4[COMRAM] PTR unsigned char 
 13043 ;;		 -> m0(14), 
 13044 ;; Return value:  Size  Location     Type
 13045 ;;                  2    0[COMRAM] PTR unsigned char 
 13046 ;; Registers used:
 13047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13048 ;; Tracked objects:
 13049 ;;		On entry : 0/0
 13050 ;;		On exit  : 0/0
 13051 ;;		Unchanged: 0/0
 13052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13056 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13057 ;;Total ram usage:        6 bytes
 13058 ;; Hardware stack levels used:    1
 13059 ;; This function calls:
 13060 ;;		Nothing
 13061 ;; This function is called by:
 13062 ;;		_timer0_isr
 13063 ;;		_EXT_Int0_isr
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text46
 13068  005422                     __ptext46:
 13069                           	opt stack 0
 13070  005422                     i2_strcpy:
 13071                           	opt stack 22
 13072                           
 13073                           ;incstack = 0
 13074  005422  C001  F005         	movff	i2strcpy@to,i2strcpy@cp
 13075  005426  C002  F006         	movff	i2strcpy@to+1,i2strcpy@cp+1
 13076  00542A  D004               	goto	i2l5511
 13077  00542C                     i2l5509:
 13078  00542C  4A05               	infsnz	i2strcpy@cp,f,c
 13079  00542E  2A06               	incf	i2strcpy@cp+1,f,c
 13080  005430  4A03               	infsnz	i2strcpy@from,f,c
 13081  005432  2A04               	incf	i2strcpy@from+1,f,c
 13082  005434                     i2l5511:
 13083  005434  C003  FFD9         	movff	i2strcpy@from,fsr2l
 13084  005438  C004  FFDA         	movff	i2strcpy@from+1,fsr2h
 13085  00543C  C005  FFE1         	movff	i2strcpy@cp,fsr1l
 13086  005440  C006  FFE2         	movff	i2strcpy@cp+1,fsr1h
 13087  005444  CFDF FFE7          	movff	indf2,indf1
 13088  005448  50E7               	movf	indf1,w,c
 13089  00544A  B4D8               	btfsc	status,2,c
 13090  00544C  0012               	return	
 13091  00544E  D7EE               	goto	i2l5509
 13092  005450                     __end_ofi2_strcpy:
 13093                           	opt stack 0
 13094                           pclatu	equ	0xFFB
 13095                           pclath	equ	0xFFA
 13096                           tblptru	equ	0xFF8
 13097                           tblptrh	equ	0xFF7
 13098                           tblptrl	equ	0xFF6
 13099                           tablat	equ	0xFF5
 13100                           prodh	equ	0xFF4
 13101                           prodl	equ	0xFF3
 13102                           intcon	equ	0xFF2
 13103                           intcon2	equ	0xFF1
 13104                           intcon3	equ	0xFF0
 13105                           postinc0	equ	0xFEE
 13106                           fsr0h	equ	0xFEA
 13107                           fsr0l	equ	0xFE9
 13108                           wreg	equ	0xFE8
 13109                           indf1	equ	0xFE7
 13110                           postdec1	equ	0xFE5
 13111                           fsr1h	equ	0xFE2
 13112                           fsr1l	equ	0xFE1
 13113                           indf2	equ	0xFDF
 13114                           postinc2	equ	0xFDE
 13115                           postdec2	equ	0xFDD
 13116                           fsr2h	equ	0xFDA
 13117                           fsr2l	equ	0xFD9
 13118                           status	equ	0xFD8
 13119                           
 13120 ;; *************** function i2_sprintf *****************
 13121 ;; Defined at:
 13122 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;  sp              2   66[COMRAM] PTR unsigned char 
 13125 ;;		 -> Buffer4(16), Buffer3(16), Buffer2(16), Buffer1(16), 
 13126 ;;  f               2   68[COMRAM] PTR const unsigned char 
 13127 ;;		 -> STR_20(6), STR_19(16), STR_18(16), STR_17(16), 
 13128 ;;		 -> STR_16(16), STR_15(23), STR_14(17), STR_13(17), 
 13129 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
 13130 ;;		 -> STR_8(17), STR_7(17), STR_6(23), STR_5(23), 
 13131 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(23), 
 13132 ;; Auto vars:     Size  Location     Type
 13133 ;;  sprintf         4   95[COMRAM] unsigned long 
 13134 ;;  sprintf         4   91[COMRAM] struct .
 13135 ;;  sprintf         3  103[COMRAM] struct .
 13136 ;;  sprintf         2  108[COMRAM] int 
 13137 ;;  sprintf         2  106[COMRAM] int 
 13138 ;;  sprintf         2  101[COMRAM] unsigned short 
 13139 ;;  sprintf         2   99[COMRAM] int 
 13140 ;;  sprintf         2   89[COMRAM] unsigned int 
 13141 ;;  sprintf         2   87[COMRAM] PTR void [1]
 13142 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 13143 ;;  sprintf         2   85[COMRAM] PTR const unsigned char 
 13144 ;;		 -> STR_21(7), StateOFF(4), StateON(4), m0(14), 
 13145 ;;  sprintf         1  110[COMRAM] char 
 13146 ;;  sprintf         1    0        unsigned char 
 13147 ;; Return value:  Size  Location     Type
 13148 ;;                  2   66[COMRAM] int 
 13149 ;; Registers used:
 13150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13151 ;; Tracked objects:
 13152 ;;		On entry : 0/0
 13153 ;;		On exit  : 0/0
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13156 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13157 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13158 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13159 ;;      Totals:        45       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;Total ram usage:       45 bytes
 13161 ;; Hardware stack levels used:    1
 13162 ;; Hardware stack levels required when called:    3
 13163 ;; This function calls:
 13164 ;;		i2___awdiv
 13165 ;;		i2___ftadd
 13166 ;;		i2___ftge
 13167 ;;		i2___ftmul
 13168 ;;		i2___ftneg
 13169 ;;		i2___ftsub
 13170 ;;		i2___fttol
 13171 ;;		i2___lldiv
 13172 ;;		i2___llmod
 13173 ;;		i2___lltoft
 13174 ;;		i2___wmul
 13175 ;;		i2__div_to_l_
 13176 ;;		i2__tdiv_to_l_
 13177 ;;		i2_fround
 13178 ;;		i2_isdigit
 13179 ;;		i2_scale
 13180 ;; This function is called by:
 13181 ;;		_timer0_isr
 13182 ;;		_EXT_Int0_isr
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           	psect	text47
 13187  000E3E                     __ptext47:
 13188                           	opt stack 0
 13189  000E3E                     i2_sprintf:
 13190                           	opt stack 19
 13191                           
 13192                           ;doprnt.c: 494: va_list ap;
 13193                           ;doprnt.c: 499: signed char c;
 13194                           ;doprnt.c: 501: int width;
 13195                           ;doprnt.c: 504: int prec;
 13196                           ;doprnt.c: 508: unsigned short flag;
 13197                           ;doprnt.c: 515: char d;
 13198                           ;doprnt.c: 516: double fval;
 13199                           ;doprnt.c: 517: int exp;
 13200                           ;doprnt.c: 523: union {
 13201                           ;doprnt.c: 524: unsigned long vd;
 13202                           ;doprnt.c: 525: double integ;
 13203                           ;doprnt.c: 526: } tmpval;
 13204                           ;doprnt.c: 528: unsigned long val;
 13205                           ;doprnt.c: 529: unsigned len;
 13206                           ;doprnt.c: 530: const char * cp;
 13207                           ;doprnt.c: 533: *ap = __va_start();
 13208                           
 13209                           ;incstack = 0
 13210  000E3E  0E47               	movlw	low (?i2_sprintf+4)
 13211  000E40  6E58               	movwf	i2sprintf@ap,c
 13212  000E42  0E00               	movlw	high (?i2_sprintf+4)
 13213  000E44  6E59               	movwf	i2sprintf@ap+1,c
 13214                           
 13215                           ;doprnt.c: 536: while(c = *f++) {
 13216  000E46  EFD3  F00C         	goto	i2l5479
 13217  000E4A                     i2l5115:
 13218                           
 13219                           ;doprnt.c: 538: if(c != '%')
 13220  000E4A  0E25               	movlw	37
 13221  000E4C  186F               	xorwf	i2sprintf@c,w,c
 13222  000E4E  B4D8               	btfsc	status,2,c
 13223  000E50  D00A               	goto	i2l5121
 13224                           
 13225                           ;doprnt.c: 540: {
 13226                           ;doprnt.c: 541: ((*sp++ = (c)));
 13227  000E52  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 13228  000E56  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13229  000E5A  C06F  FFDF         	movff	i2sprintf@c,indf2
 13230  000E5E  4A43               	infsnz	i2sprintf@sp,f,c
 13231  000E60  2A44               	incf	i2sprintf@sp+1,f,c
 13232                           
 13233                           ;doprnt.c: 542: continue;
 13234  000E62  EFD3  F00C         	goto	i2l5479
 13235  000E66                     i2l5121:
 13236                           
 13237                           ;doprnt.c: 543: }
 13238                           ;doprnt.c: 546: width = 0;
 13239  000E66  0E00               	movlw	0
 13240  000E68  6E6C               	movwf	i2sprintf@width+1,c
 13241  000E6A  0E00               	movlw	0
 13242  000E6C  6E6B               	movwf	i2sprintf@width,c
 13243                           
 13244                           ;doprnt.c: 548: flag = 0;
 13245  000E6E  0E00               	movlw	0
 13246  000E70  6E67               	movwf	i2sprintf@flag+1,c
 13247  000E72  0E00               	movlw	0
 13248  000E74  6E66               	movwf	i2sprintf@flag,c
 13249                           
 13250                           ;doprnt.c: 551: switch(*f) {
 13251                           
 13252                           ;doprnt.c: 550: for(;;) {
 13253  000E76  D003               	goto	i2l5127
 13254  000E78                     i2l5123:
 13255                           
 13256                           ;doprnt.c: 580: flag |= 0x04;
 13257  000E78  8466               	bsf	i2sprintf@flag,2,c
 13258                           
 13259                           ;doprnt.c: 581: f++;
 13260  000E7A  4A45               	infsnz	i2sprintf@f,f,c
 13261  000E7C  2A46               	incf	i2sprintf@f+1,f,c
 13262  000E7E                     i2l5127:
 13263  000E7E  C045  FFF6         	movff	i2sprintf@f,tblptrl
 13264  000E82  C046  FFF7         	movff	i2sprintf@f+1,tblptrh
 13265  000E86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13266  000E86  6AF8               	clrf	tblptru,c
 13267  000E88                     	endif
 13268  000E88                     	if	0	;tblptru may be non-zero
 13269  000E88                     	endif
 13270  000E88  0008               	tblrd		*
 13271  000E8A  50F5               	movf	tablat,w,c
 13272                           
 13273                           ; Switch size 1, requested type "space"
 13274                           ; Number of cases is 1, Range of values is 48 to 48
 13275                           ; switch strategies available:
 13276                           ; Name         Instructions Cycles
 13277                           ; simple_byte            4     3 (average)
 13278                           ;	Chosen strategy is simple_byte
 13279  000E8C  0A30               	xorlw	48	; case 48
 13280  000E8E  B4D8               	btfsc	status,2,c
 13281  000E90  D7F3               	goto	i2l5123
 13282                           
 13283                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13284                           
 13285                           ;doprnt.c: 586: }
 13286                           
 13287                           ;doprnt.c: 585: break;
 13288  000E92  C045  FFF6         	movff	i2sprintf@f,tblptrl
 13289  000E96  C046  FFF7         	movff	i2sprintf@f+1,tblptrh
 13290  000E9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13291  000E9A  6AF8               	clrf	tblptru,c
 13292  000E9C                     	endif
 13293  000E9C                     	if	0	;tblptru may be non-zero
 13294  000E9C                     	endif
 13295  000E9C  0008               	tblrd		*
 13296  000E9E  50F5               	movf	tablat,w,c
 13297  000EA0  ECFB  F02A         	call	i2_isdigit
 13298  000EA4  A0D8               	btfss	status,0,c
 13299  000EA6  D034               	goto	i2l5141
 13300                           
 13301                           ;doprnt.c: 598: width = 0;
 13302  000EA8  0E00               	movlw	0
 13303  000EAA  6E6C               	movwf	i2sprintf@width+1,c
 13304  000EAC  0E00               	movlw	0
 13305  000EAE  6E6B               	movwf	i2sprintf@width,c
 13306  000EB0                     i2l5133:
 13307                           
 13308                           ;doprnt.c: 600: width *= 10;
 13309  000EB0  C06B  F00F         	movff	i2sprintf@width,i2___wmul@multiplier
 13310  000EB4  C06C  F010         	movff	i2sprintf@width+1,i2___wmul@multiplier+1
 13311  000EB8  0E00               	movlw	0
 13312  000EBA  6E12               	movwf	i2___wmul@multiplicand+1,c
 13313  000EBC  0E0A               	movlw	10
 13314  000EBE  6E11               	movwf	i2___wmul@multiplicand,c
 13315  000EC0  EC91  F02A         	call	i2___wmul	;wreg free
 13316  000EC4  C00F  F06B         	movff	?i2___wmul,i2sprintf@width
 13317  000EC8  C010  F06C         	movff	?i2___wmul+1,i2sprintf@width+1
 13318                           
 13319                           ;doprnt.c: 601: width += *f++ - '0';
 13320  000ECC  0ED0               	movlw	208
 13321  000ECE  6E4D               	movwf	??i2_sprintf& (0+255),c
 13322  000ED0  0EFF               	movlw	255
 13323  000ED2  6E4E               	movwf	(??i2_sprintf+1)& (0+255),c
 13324  000ED4  C045  FFF6         	movff	i2sprintf@f,tblptrl
 13325  000ED8  C046  FFF7         	movff	i2sprintf@f+1,tblptrh
 13326  000EDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13327  000EDC  6AF8               	clrf	tblptru,c
 13328  000EDE                     	endif
 13329  000EDE                     	if	0	;tblptru may be non-zero
 13330  000EDE                     	endif
 13331  000EDE  0008               	tblrd		*
 13332  000EE0  50F5               	movf	tablat,w,c
 13333  000EE2  6E4F               	movwf	(??i2_sprintf+2)& (0+255),c
 13334  000EE4  6A50               	clrf	(??i2_sprintf+3)& (0+255),c
 13335  000EE6  504D               	movf	??i2_sprintf,w,c
 13336  000EE8  264F               	addwf	??i2_sprintf+2,f,c
 13337  000EEA  504E               	movf	??i2_sprintf+1,w,c
 13338  000EEC  2250               	addwfc	??i2_sprintf+3,f,c
 13339  000EEE  504F               	movf	??i2_sprintf+2,w,c
 13340  000EF0  266B               	addwf	i2sprintf@width,f,c
 13341  000EF2  5050               	movf	??i2_sprintf+3,w,c
 13342  000EF4  226C               	addwfc	i2sprintf@width+1,f,c
 13343  000EF6  4A45               	infsnz	i2sprintf@f,f,c
 13344  000EF8  2A46               	incf	i2sprintf@f+1,f,c
 13345                           
 13346                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13347  000EFA  C045  FFF6         	movff	i2sprintf@f,tblptrl
 13348  000EFE  C046  FFF7         	movff	i2sprintf@f+1,tblptrh
 13349  000F02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13350  000F02  6AF8               	clrf	tblptru,c
 13351  000F04                     	endif
 13352  000F04                     	if	0	;tblptru may be non-zero
 13353  000F04                     	endif
 13354  000F04  0008               	tblrd		*
 13355  000F06  50F5               	movf	tablat,w,c
 13356  000F08  ECFB  F02A         	call	i2_isdigit
 13357  000F0C  B0D8               	btfsc	status,0,c
 13358  000F0E  D7D0               	goto	i2l5133
 13359  000F10                     i2l5141:
 13360                           
 13361                           ;doprnt.c: 608: }
 13362                           ;doprnt.c: 611: if(*f == '.') {
 13363  000F10  C045  FFF6         	movff	i2sprintf@f,tblptrl
 13364  000F14  C046  FFF7         	movff	i2sprintf@f+1,tblptrh
 13365  000F18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13366  000F18  6AF8               	clrf	tblptru,c
 13367  000F1A                     	endif
 13368  000F1A                     	if	0	;tblptru may be non-zero
 13369  000F1A                     	endif
 13370  000F1A  0008               	tblrd		*
 13371  000F1C  50F5               	movf	tablat,w,c
 13372  000F1E  0A2E               	xorlw	46
 13373  000F20  A4D8               	btfss	status,2,c
 13374  000F22  D030               	goto	i2l5153
 13375                           
 13376                           ;doprnt.c: 612: flag |= 0x4000;
 13377  000F24  8C67               	bsf	i2sprintf@flag+1,6,c
 13378                           
 13379                           ;doprnt.c: 613: f++;
 13380  000F26  4A45               	infsnz	i2sprintf@f,f,c
 13381  000F28  2A46               	incf	i2sprintf@f+1,f,c
 13382                           
 13383                           ;doprnt.c: 620: {
 13384                           ;doprnt.c: 621: prec = 0;
 13385  000F2A  0E00               	movlw	0
 13386  000F2C  6E6E               	movwf	i2sprintf@prec+1,c
 13387  000F2E  0E00               	movlw	0
 13388  000F30  6E6D               	movwf	i2sprintf@prec,c
 13389                           
 13390                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 13391  000F32  D01C               	goto	i2l5151
 13392  000F34                     i2l5147:
 13393                           
 13394                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 13395  000F34  C06D  F00F         	movff	i2sprintf@prec,i2___wmul@multiplier
 13396  000F38  C06E  F010         	movff	i2sprintf@prec+1,i2___wmul@multiplier+1
 13397  000F3C  0E00               	movlw	0
 13398  000F3E  6E12               	movwf	i2___wmul@multiplicand+1,c
 13399  000F40  0E0A               	movlw	10
 13400  000F42  6E11               	movwf	i2___wmul@multiplicand,c
 13401  000F44  EC91  F02A         	call	i2___wmul	;wreg free
 13402  000F48  C045  FFF6         	movff	i2sprintf@f,tblptrl
 13403  000F4C  C046  FFF7         	movff	i2sprintf@f+1,tblptrh
 13404  000F50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13405  000F50  6AF8               	clrf	tblptru,c
 13406  000F52                     	endif
 13407  000F52                     	if	0	;tblptru may be non-zero
 13408  000F52                     	endif
 13409  000F52  0008               	tblrd		*
 13410  000F54  50F5               	movf	tablat,w,c
 13411  000F56  260F               	addwf	?i2___wmul,f,c
 13412  000F58  0E00               	movlw	0
 13413  000F5A  2210               	addwfc	?i2___wmul+1,f,c
 13414  000F5C  0ED0               	movlw	208
 13415  000F5E  240F               	addwf	?i2___wmul,w,c
 13416  000F60  6E6D               	movwf	i2sprintf@prec,c
 13417  000F62  0EFF               	movlw	255
 13418  000F64  2010               	addwfc	?i2___wmul+1,w,c
 13419  000F66  6E6E               	movwf	i2sprintf@prec+1,c
 13420  000F68  4A45               	infsnz	i2sprintf@f,f,c
 13421  000F6A  2A46               	incf	i2sprintf@f+1,f,c
 13422  000F6C                     i2l5151:
 13423  000F6C  C045  FFF6         	movff	i2sprintf@f,tblptrl
 13424  000F70  C046  FFF7         	movff	i2sprintf@f+1,tblptrh
 13425  000F74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13426  000F74  6AF8               	clrf	tblptru,c
 13427  000F76                     	endif
 13428  000F76                     	if	0	;tblptru may be non-zero
 13429  000F76                     	endif
 13430  000F76  0008               	tblrd		*
 13431  000F78  50F5               	movf	tablat,w,c
 13432  000F7A  ECFB  F02A         	call	i2_isdigit
 13433  000F7E  A0D8               	btfss	status,0,c
 13434  000F80  D091               	goto	i2l5201
 13435  000F82  D7D8               	goto	i2l5147
 13436  000F84                     i2l5153:
 13437                           
 13438                           ;doprnt.c: 626: prec = 0;
 13439  000F84  0E00               	movlw	0
 13440  000F86  6E6E               	movwf	i2sprintf@prec+1,c
 13441  000F88  0E00               	movlw	0
 13442  000F8A  6E6D               	movwf	i2sprintf@prec,c
 13443                           
 13444                           ;doprnt.c: 628: flag |= 0x1000;
 13445  000F8C  8867               	bsf	i2sprintf@flag+1,4,c
 13446                           
 13447                           ;doprnt.c: 630: }
 13448                           ;doprnt.c: 635: switch(c = *f++) {
 13449  000F8E  D08A               	goto	i2l5201
 13450  000F90                     i2l5157:
 13451                           
 13452                           ;doprnt.c: 663: flag |= 0x400;
 13453  000F90  8467               	bsf	i2sprintf@flag+1,2,c
 13454                           
 13455                           ;doprnt.c: 698: case 'i':
 13456                           ;doprnt.c: 699: break;
 13457                           
 13458                           ;doprnt.c: 697: case 'd':
 13459                           
 13460                           ;doprnt.c: 664: break;
 13461  000F92  D0A5               	goto	i2l5203
 13462  000F94                     i2l5159:
 13463                           
 13464                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13465  000F94  C058  FFD9         	movff	i2sprintf@ap,fsr2l
 13466  000F98  C059  FFDA         	movff	i2sprintf@ap+1,fsr2h
 13467  000F9C  CFDE F056          	movff	postinc2,i2sprintf@cp
 13468  000FA0  CFDD F057          	movff	postdec2,i2sprintf@cp+1
 13469  000FA4  0E02               	movlw	2
 13470  000FA6  2658               	addwf	i2sprintf@ap,f,c
 13471  000FA8  0E00               	movlw	0
 13472  000FAA  2259               	addwfc	i2sprintf@ap+1,f,c
 13473                           
 13474                           ;doprnt.c: 740: if(!cp)
 13475  000FAC  5056               	movf	i2sprintf@cp,w,c
 13476  000FAE  1057               	iorwf	i2sprintf@cp+1,w,c
 13477  000FB0  A4D8               	btfss	status,2,c
 13478  000FB2  D004               	goto	i2l5167
 13479                           
 13480                           ;doprnt.c: 741: cp = "(null)";
 13481  000FB4  0EF2               	movlw	low STR_21
 13482  000FB6  6E56               	movwf	i2sprintf@cp,c
 13483  000FB8  0EFF               	movlw	high STR_21
 13484  000FBA  6E57               	movwf	i2sprintf@cp+1,c
 13485  000FBC                     i2l5167:
 13486                           
 13487                           ;doprnt.c: 745: len = 0;
 13488  000FBC  0E00               	movlw	0
 13489  000FBE  6E5B               	movwf	i2sprintf@len+1,c
 13490  000FC0  0E00               	movlw	0
 13491  000FC2  6E5A               	movwf	i2sprintf@len,c
 13492                           
 13493                           ;doprnt.c: 746: while(cp[len])
 13494  000FC4  D002               	goto	i2l5171
 13495  000FC6                     i2l5169:
 13496                           
 13497                           ;doprnt.c: 747: len++;
 13498  000FC6  4A5A               	infsnz	i2sprintf@len,f,c
 13499  000FC8  2A5B               	incf	i2sprintf@len+1,f,c
 13500  000FCA                     i2l5171:
 13501  000FCA  505A               	movf	i2sprintf@len,w,c
 13502  000FCC  2456               	addwf	i2sprintf@cp,w,c
 13503  000FCE  6E4D               	movwf	??i2_sprintf& (0+255),c
 13504  000FD0  505B               	movf	i2sprintf@len+1,w,c
 13505  000FD2  2057               	addwfc	i2sprintf@cp+1,w,c
 13506  000FD4  6E4E               	movwf	(??i2_sprintf+1)& (0+255),c
 13507  000FD6  C04D  FFF6         	movff	??i2_sprintf,tblptrl
 13508  000FDA  C04E  FFF7         	movff	??i2_sprintf+1,tblptrh
 13509  000FDE  0E00               	movlw	low (__mediumconst shr (0+16))
 13510  000FE0  6EF8               	movwf	tblptru,c
 13511  000FE2  0E0F               	movlw	(high __ramtop+-1)
 13512  000FE4  64F7               	cpfsgt	tblptrh,c
 13513  000FE6  D003               	bra	i2u589_47
 13514  000FE8  0008               	tblrd		*
 13515  000FEA  50F5               	movf	tablat,w,c
 13516  000FEC  D005               	bra	i2u589_40
 13517  000FEE                     i2u589_47:
 13518  000FEE  CFF6 FFE1          	movff	tblptrl,fsr1l
 13519  000FF2  CFF7 FFE2          	movff	tblptrh,fsr1h
 13520  000FF6  50E7               	movf	indf1,w,c
 13521  000FF8                     i2u589_40:
 13522  000FF8  0900               	iorlw	0
 13523  000FFA  A4D8               	btfss	status,2,c
 13524  000FFC  D7E4               	goto	i2l5169
 13525                           
 13526                           ;doprnt.c: 753: if(prec && prec < len)
 13527  000FFE  506D               	movf	i2sprintf@prec,w,c
 13528  001000  106E               	iorwf	i2sprintf@prec+1,w,c
 13529  001002  B4D8               	btfsc	status,2,c
 13530  001004  D00A               	goto	i2l5179
 13531  001006  505A               	movf	i2sprintf@len,w,c
 13532  001008  5C6D               	subwf	i2sprintf@prec,w,c
 13533  00100A  505B               	movf	i2sprintf@len+1,w,c
 13534  00100C  586E               	subwfb	i2sprintf@prec+1,w,c
 13535  00100E  B0D8               	btfsc	status,0,c
 13536  001010  D004               	goto	i2l5179
 13537                           
 13538                           ;doprnt.c: 754: len = prec;
 13539  001012  C06D  F05A         	movff	i2sprintf@prec,i2sprintf@len
 13540  001016  C06E  F05B         	movff	i2sprintf@prec+1,i2sprintf@len+1
 13541  00101A                     i2l5179:
 13542                           
 13543                           ;doprnt.c: 757: if(width > len)
 13544  00101A  506B               	movf	i2sprintf@width,w,c
 13545  00101C  5C5A               	subwf	i2sprintf@len,w,c
 13546  00101E  506C               	movf	i2sprintf@width+1,w,c
 13547  001020  585B               	subwfb	i2sprintf@len+1,w,c
 13548  001022  B0D8               	btfsc	status,0,c
 13549  001024  D005               	goto	i2l5183
 13550                           
 13551                           ;doprnt.c: 758: width -= len;
 13552  001026  505A               	movf	i2sprintf@len,w,c
 13553  001028  5E6B               	subwf	i2sprintf@width,f,c
 13554  00102A  505B               	movf	i2sprintf@len+1,w,c
 13555  00102C  5A6C               	subwfb	i2sprintf@width+1,f,c
 13556  00102E  D00D               	goto	i2l5189
 13557  001030                     i2l5183:
 13558                           
 13559                           ;doprnt.c: 759: else
 13560                           ;doprnt.c: 760: width = 0;
 13561  001030  0E00               	movlw	0
 13562  001032  6E6C               	movwf	i2sprintf@width+1,c
 13563  001034  0E00               	movlw	0
 13564  001036  6E6B               	movwf	i2sprintf@width,c
 13565                           
 13566                           ;doprnt.c: 764: while(width--)
 13567  001038  D008               	goto	i2l5189
 13568  00103A                     i2l5185:
 13569                           
 13570                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13571  00103A  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 13572  00103E  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13573  001042  0E20               	movlw	32
 13574  001044  6EDF               	movwf	indf2,c
 13575  001046  4A43               	infsnz	i2sprintf@sp,f,c
 13576  001048  2A44               	incf	i2sprintf@sp+1,f,c
 13577  00104A                     i2l5189:
 13578  00104A  066B               	decf	i2sprintf@width,f,c
 13579  00104C  A0D8               	btfss	status,0,c
 13580  00104E  066C               	decf	i2sprintf@width+1,f,c
 13581  001050  286B               	incf	i2sprintf@width,w,c
 13582  001052  E1F3               	bnz	i2l5185
 13583  001054  286C               	incf	i2sprintf@width+1,w,c
 13584  001056  B4D8               	btfsc	status,2,c
 13585  001058  D01B               	goto	i2l5197
 13586  00105A  D7EF               	goto	i2l5185
 13587  00105C                     i2l5191:
 13588                           
 13589                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13590  00105C  C056  FFF6         	movff	i2sprintf@cp,tblptrl
 13591  001060  C057  FFF7         	movff	i2sprintf@cp+1,tblptrh
 13592  001064  0E00               	movlw	low (__mediumconst shr (0+16))
 13593  001066  6EF8               	movwf	tblptru,c
 13594  001068  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 13595  00106C  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13596  001070  0E0F               	movlw	(high __ramtop+-1)
 13597  001072  64F7               	cpfsgt	tblptrh,c
 13598  001074  D003               	bra	i2u595_47
 13599  001076  0008               	tblrd		*
 13600  001078  50F5               	movf	tablat,w,c
 13601  00107A  D005               	bra	i2u595_40
 13602  00107C                     i2u595_47:
 13603  00107C  CFF6 FFE1          	movff	tblptrl,fsr1l
 13604  001080  CFF7 FFE2          	movff	tblptrh,fsr1h
 13605  001084  50E7               	movf	indf1,w,c
 13606  001086                     i2u595_40:
 13607  001086  6EDF               	movwf	indf2,c
 13608  001088  4A56               	infsnz	i2sprintf@cp,f,c
 13609  00108A  2A57               	incf	i2sprintf@cp+1,f,c
 13610  00108C  4A43               	infsnz	i2sprintf@sp,f,c
 13611  00108E  2A44               	incf	i2sprintf@sp+1,f,c
 13612  001090                     i2l5197:
 13613  001090  065A               	decf	i2sprintf@len,f,c
 13614  001092  A0D8               	btfss	status,0,c
 13615  001094  065B               	decf	i2sprintf@len+1,f,c
 13616  001096  285A               	incf	i2sprintf@len,w,c
 13617  001098  E1E1               	bnz	i2l5191
 13618  00109A  285B               	incf	i2sprintf@len+1,w,c
 13619  00109C  B4D8               	btfsc	status,2,c
 13620  00109E  EFD3  F00C         	goto	i2l5479
 13621  0010A2  D7DC               	goto	i2l5191
 13622  0010A4                     i2l5201:
 13623  0010A4  C045  FFF6         	movff	i2sprintf@f,tblptrl
 13624  0010A8  C046  FFF7         	movff	i2sprintf@f+1,tblptrh
 13625  0010AC  4A45               	infsnz	i2sprintf@f,f,c
 13626  0010AE  2A46               	incf	i2sprintf@f+1,f,c
 13627  0010B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13628  0010B0  6AF8               	clrf	tblptru,c
 13629  0010B2                     	endif
 13630  0010B2                     	if	0	;tblptru may be non-zero
 13631  0010B2                     	endif
 13632  0010B2  0008               	tblrd		*
 13633  0010B4  CFF5 F06F          	movff	tablat,i2sprintf@c
 13634  0010B8  506F               	movf	i2sprintf@c,w,c
 13635                           
 13636                           ; Switch size 1, requested type "space"
 13637                           ; Number of cases is 5, Range of values is 0 to 115
 13638                           ; switch strategies available:
 13639                           ; Name         Instructions Cycles
 13640                           ; simple_byte           16     9 (average)
 13641                           ;	Chosen strategy is simple_byte
 13642  0010BA  0A00               	xorlw	0	; case 0
 13643  0010BC  B4D8               	btfsc	status,2,c
 13644  0010BE  EFE1  F00C         	goto	i2l5481
 13645  0010C2  0A64               	xorlw	100	; case 100
 13646  0010C4  B4D8               	btfsc	status,2,c
 13647  0010C6  D00B               	goto	i2l5203
 13648  0010C8  0A02               	xorlw	2	; case 102
 13649  0010CA  B4D8               	btfsc	status,2,c
 13650  0010CC  D761               	goto	i2l5157
 13651  0010CE  0A0F               	xorlw	15	; case 105
 13652  0010D0  B4D8               	btfsc	status,2,c
 13653  0010D2  D005               	goto	i2l5203
 13654  0010D4  0A1A               	xorlw	26	; case 115
 13655  0010D6  B4D8               	btfsc	status,2,c
 13656  0010D8  D75D               	goto	i2l5159
 13657  0010DA  EFD3  F00C         	goto	i2l5479
 13658  0010DE                     i2l5203:
 13659                           
 13660                           ;doprnt.c: 825: if(flag & (0x700)) {
 13661  0010DE  0E07               	movlw	7
 13662  0010E0  1467               	andwf	i2sprintf@flag+1,w,c
 13663  0010E2  B4D8               	btfsc	status,2,c
 13664  0010E4  D326               	goto	i2l5383
 13665                           
 13666                           ;doprnt.c: 827: if(flag & 0x1000)
 13667  0010E6  A867               	btfss	i2sprintf@flag+1,4,c
 13668  0010E8  D004               	goto	i2l5209
 13669                           
 13670                           ;doprnt.c: 829: prec = 6;
 13671  0010EA  0E00               	movlw	0
 13672  0010EC  6E6E               	movwf	i2sprintf@prec+1,c
 13673  0010EE  0E06               	movlw	6
 13674  0010F0  6E6D               	movwf	i2sprintf@prec,c
 13675  0010F2                     i2l5209:
 13676                           
 13677                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13678  0010F2  C058  FFD9         	movff	i2sprintf@ap,fsr2l
 13679  0010F6  C059  FFDA         	movff	i2sprintf@ap+1,fsr2h
 13680  0010FA  CFDE F068          	movff	postinc2,i2sprintf@fval
 13681  0010FE  CFDE F069          	movff	postinc2,i2sprintf@fval+1
 13682  001102  CFDD F06A          	movff	postdec2,i2sprintf@fval+2
 13683  001106  0E03               	movlw	3
 13684  001108  2658               	addwf	i2sprintf@ap,f,c
 13685  00110A  0E00               	movlw	0
 13686  00110C  2259               	addwfc	i2sprintf@ap+1,f,c
 13687                           
 13688                           ;doprnt.c: 831: if(fval < 0.0) {
 13689  00110E  AE6A               	btfss	i2sprintf@fval+2,7,c
 13690  001110  D010               	goto	i2l5219
 13691                           
 13692                           ;doprnt.c: 832: fval = -fval;
 13693  001112  C068  F001         	movff	i2sprintf@fval,i2___ftneg@f1
 13694  001116  C069  F002         	movff	i2sprintf@fval+1,i2___ftneg@f1+1
 13695  00111A  C06A  F003         	movff	i2sprintf@fval+2,i2___ftneg@f1+2
 13696  00111E  ECA4  F02A         	call	i2___ftneg	;wreg free
 13697  001122  C001  F068         	movff	?i2___ftneg,i2sprintf@fval
 13698  001126  C002  F069         	movff	?i2___ftneg+1,i2sprintf@fval+1
 13699  00112A  C003  F06A         	movff	?i2___ftneg+2,i2sprintf@fval+2
 13700                           
 13701                           ;doprnt.c: 833: flag |= 0x03;
 13702  00112E  0E03               	movlw	3
 13703  001130  1266               	iorwf	i2sprintf@flag,f,c
 13704  001132                     i2l5219:
 13705                           
 13706                           ;doprnt.c: 834: }
 13707                           ;doprnt.c: 835: exp = 0;
 13708  001132  0E00               	movlw	0
 13709  001134  6E65               	movwf	i2sprintf@exp+1,c
 13710  001136  0E00               	movlw	0
 13711  001138  6E64               	movwf	i2sprintf@exp,c
 13712                           
 13713                           ;doprnt.c: 836: if( fval!=0) {
 13714  00113A  5068               	movf	i2sprintf@fval,w,c
 13715  00113C  1069               	iorwf	i2sprintf@fval+1,w,c
 13716  00113E  106A               	iorwf	i2sprintf@fval+2,w,c
 13717  001140  B4D8               	btfsc	status,2,c
 13718  001142  D083               	goto	i2l5247
 13719                           
 13720                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 13721  001144  0E82               	movlw	130
 13722  001146  6E4D               	movwf	??i2_sprintf& (0+255),c
 13723  001148  0EFF               	movlw	255
 13724  00114A  6E4E               	movwf	(??i2_sprintf+1)& (0+255),c
 13725  00114C  C068  F04F         	movff	i2sprintf@fval,??i2_sprintf+2
 13726  001150  C069  F050         	movff	i2sprintf@fval+1,??i2_sprintf+3
 13727  001154  C06A  F051         	movff	i2sprintf@fval+2,??i2_sprintf+4
 13728  001158  C06B  F052         	movff	i2sprintf@fval+3,??i2_sprintf+5
 13729  00115C  0E10               	movlw	16
 13730  00115E  D005               	goto	i2u601_40
 13731  001160                     i2u601_45:
 13732  001160  90D8               	bcf	status,0,c
 13733  001162  3252               	rrcf	??i2_sprintf+5,f,c
 13734  001164  3251               	rrcf	??i2_sprintf+4,f,c
 13735  001166  3250               	rrcf	??i2_sprintf+3,f,c
 13736  001168  324F               	rrcf	??i2_sprintf+2,f,c
 13737  00116A                     i2u601_40:
 13738  00116A  2EE8               	decfsz	wreg,f,c
 13739  00116C  D7F9               	goto	i2u601_45
 13740  00116E  504F               	movf	??i2_sprintf+2,w,c
 13741  001170  244D               	addwf	??i2_sprintf,w,c
 13742  001172  6E64               	movwf	i2sprintf@exp,c
 13743  001174  0E00               	movlw	0
 13744  001176  204E               	addwfc	??i2_sprintf+1,w,c
 13745  001178  6E65               	movwf	i2sprintf@exp+1,c
 13746                           
 13747                           ;doprnt.c: 838: exp--;
 13748  00117A  0664               	decf	i2sprintf@exp,f,c
 13749  00117C  A0D8               	btfss	status,0,c
 13750  00117E  0665               	decf	i2sprintf@exp+1,f,c
 13751                           
 13752                           ;doprnt.c: 839: exp *= 3;
 13753  001180  C064  F00F         	movff	i2sprintf@exp,i2___wmul@multiplier
 13754  001184  C065  F010         	movff	i2sprintf@exp+1,i2___wmul@multiplier+1
 13755  001188  0E00               	movlw	0
 13756  00118A  6E12               	movwf	i2___wmul@multiplicand+1,c
 13757  00118C  0E03               	movlw	3
 13758  00118E  6E11               	movwf	i2___wmul@multiplicand,c
 13759  001190  EC91  F02A         	call	i2___wmul	;wreg free
 13760  001194  C00F  F064         	movff	?i2___wmul,i2sprintf@exp
 13761  001198  C010  F065         	movff	?i2___wmul+1,i2sprintf@exp+1
 13762                           
 13763                           ;doprnt.c: 840: exp /= 10;
 13764  00119C  C064  F007         	movff	i2sprintf@exp,i2___awdiv@dividend
 13765  0011A0  C065  F008         	movff	i2sprintf@exp+1,i2___awdiv@dividend+1
 13766  0011A4  0E00               	movlw	0
 13767  0011A6  6E0A               	movwf	i2___awdiv@divisor+1,c
 13768  0011A8  0E0A               	movlw	10
 13769  0011AA  6E09               	movwf	i2___awdiv@divisor,c
 13770  0011AC  ECD4  F025         	call	i2___awdiv	;wreg free
 13771  0011B0  C007  F064         	movff	?i2___awdiv,i2sprintf@exp
 13772  0011B4  C008  F065         	movff	?i2___awdiv+1,i2sprintf@exp+1
 13773                           
 13774                           ;doprnt.c: 841: if(exp < 0)
 13775  0011B8  AE65               	btfss	i2sprintf@exp+1,7,c
 13776  0011BA  D003               	goto	i2l5235
 13777                           
 13778                           ;doprnt.c: 842: exp--;
 13779  0011BC  0664               	decf	i2sprintf@exp,f,c
 13780  0011BE  A0D8               	btfss	status,0,c
 13781  0011C0  0665               	decf	i2sprintf@exp+1,f,c
 13782  0011C2                     i2l5235:
 13783                           
 13784                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 13785  0011C2  5064               	movf	i2sprintf@exp,w,c
 13786  0011C4  0800               	sublw	0
 13787  0011C6  ECE8  F014         	call	i2_scale
 13788  0011CA  C024  F05C         	movff	?i2_scale,i2sprintf@tmpval
 13789  0011CE  C025  F05D         	movff	?i2_scale+1,i2sprintf@tmpval+1
 13790  0011D2  C026  F05E         	movff	?i2_scale+2,i2sprintf@tmpval+2
 13791                           
 13792                           ;doprnt.c: 847: tmpval.integ *= fval;
 13793  0011D6  C05C  F015         	movff	i2sprintf@tmpval,i2___ftmul@f1
 13794  0011DA  C05D  F016         	movff	i2sprintf@tmpval+1,i2___ftmul@f1+1
 13795  0011DE  C05E  F017         	movff	i2sprintf@tmpval+2,i2___ftmul@f1+2
 13796  0011E2  C068  F018         	movff	i2sprintf@fval,i2___ftmul@f2
 13797  0011E6  C069  F019         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 13798  0011EA  C06A  F01A         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 13799  0011EE  ECF3  F020         	call	i2___ftmul	;wreg free
 13800  0011F2  C015  F05C         	movff	?i2___ftmul,i2sprintf@tmpval
 13801  0011F6  C016  F05D         	movff	?i2___ftmul+1,i2sprintf@tmpval+1
 13802  0011FA  C017  F05E         	movff	?i2___ftmul+2,i2sprintf@tmpval+2
 13803                           
 13804                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 13805  0011FE  C05C  F03A         	movff	i2sprintf@tmpval,i2___ftge@ff1
 13806  001202  C05D  F03B         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
 13807  001206  C05E  F03C         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
 13808  00120A  0E00               	movlw	0
 13809  00120C  6E3D               	movwf	i2___ftge@ff2,c
 13810  00120E  0E80               	movlw	128
 13811  001210  6E3E               	movwf	i2___ftge@ff2+1,c
 13812  001212  0E3F               	movlw	63
 13813  001214  6E3F               	movwf	i2___ftge@ff2+2,c
 13814  001216  ECB9  F024         	call	i2___ftge	;wreg free
 13815  00121A  B0D8               	btfsc	status,0,c
 13816  00121C  D004               	goto	i2l5243
 13817                           
 13818                           ;doprnt.c: 849: exp--;
 13819  00121E  0664               	decf	i2sprintf@exp,f,c
 13820  001220  A0D8               	btfss	status,0,c
 13821  001222  0665               	decf	i2sprintf@exp+1,f,c
 13822  001224  D012               	goto	i2l5247
 13823  001226                     i2l5243:
 13824                           
 13825                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 13826  001226  C05C  F03A         	movff	i2sprintf@tmpval,i2___ftge@ff1
 13827  00122A  C05D  F03B         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
 13828  00122E  C05E  F03C         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
 13829  001232  0E00               	movlw	0
 13830  001234  6E3D               	movwf	i2___ftge@ff2,c
 13831  001236  0E20               	movlw	32
 13832  001238  6E3E               	movwf	i2___ftge@ff2+1,c
 13833  00123A  0E41               	movlw	65
 13834  00123C  6E3F               	movwf	i2___ftge@ff2+2,c
 13835  00123E  ECB9  F024         	call	i2___ftge	;wreg free
 13836  001242  A0D8               	btfss	status,0,c
 13837  001244  D002               	goto	i2l5247
 13838                           
 13839                           ;doprnt.c: 851: exp++;
 13840  001246  4A64               	infsnz	i2sprintf@exp,f,c
 13841  001248  2A65               	incf	i2sprintf@exp+1,f,c
 13842  00124A                     i2l5247:
 13843                           
 13844                           ;doprnt.c: 852: }
 13845                           ;doprnt.c: 1112: if(prec <= 12)
 13846  00124A  BE6E               	btfsc	i2sprintf@prec+1,7,c
 13847  00124C  D006               	goto	i2l5249
 13848  00124E  506E               	movf	i2sprintf@prec+1,w,c
 13849  001250  E11B               	bnz	i2l5251
 13850  001252  0E0D               	movlw	13
 13851  001254  5C6D               	subwf	i2sprintf@prec,w,c
 13852  001256  B0D8               	btfsc	status,0,c
 13853  001258  D017               	goto	i2l5251
 13854  00125A                     i2l5249:
 13855                           
 13856                           ;doprnt.c: 1113: fval += fround(prec);
 13857  00125A  C068  F02E         	movff	i2sprintf@fval,i2___ftadd@f1
 13858  00125E  C069  F02F         	movff	i2sprintf@fval+1,i2___ftadd@f1+1
 13859  001262  C06A  F030         	movff	i2sprintf@fval+2,i2___ftadd@f1+2
 13860  001266  506D               	movf	i2sprintf@prec,w,c
 13861  001268  EC6C  F018         	call	i2_fround
 13862  00126C  C024  F031         	movff	?i2_fround,i2___ftadd@f2
 13863  001270  C025  F032         	movff	?i2_fround+1,i2___ftadd@f2+1
 13864  001274  C026  F033         	movff	?i2_fround+2,i2___ftadd@f2+2
 13865  001278  ECD5  F01A         	call	i2___ftadd	;wreg free
 13866  00127C  C02E  F068         	movff	?i2___ftadd,i2sprintf@fval
 13867  001280  C02F  F069         	movff	?i2___ftadd+1,i2sprintf@fval+1
 13868  001284  C030  F06A         	movff	?i2___ftadd+2,i2sprintf@fval+2
 13869  001288                     i2l5251:
 13870                           
 13871                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 13872  001288  BE65               	btfsc	i2sprintf@exp+1,7,c
 13873  00128A  D006               	goto	i2l5253
 13874  00128C  5065               	movf	i2sprintf@exp+1,w,c
 13875  00128E  E11E               	bnz	i2l5259
 13876  001290  0E0A               	movlw	10
 13877  001292  5C64               	subwf	i2sprintf@exp,w,c
 13878  001294  B0D8               	btfsc	status,0,c
 13879  001296  D01A               	goto	i2l5259
 13880  001298                     i2l5253:
 13881  001298  5068               	movf	i2sprintf@fval,w,c
 13882  00129A  1069               	iorwf	i2sprintf@fval+1,w,c
 13883  00129C  106A               	iorwf	i2sprintf@fval+2,w,c
 13884  00129E  B4D8               	btfsc	status,2,c
 13885  0012A0  D051               	goto	i2l5273
 13886  0012A2  C068  F024         	movff	i2sprintf@fval,i2___fttol@f1
 13887  0012A6  C069  F025         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 13888  0012AA  C06A  F026         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 13889  0012AE  EC6D  F021         	call	i2___fttol	;wreg free
 13890  0012B2  5024               	movf	?i2___fttol,w,c
 13891  0012B4  1025               	iorwf	?i2___fttol+1,w,c
 13892  0012B6  1026               	iorwf	?i2___fttol+2,w,c
 13893  0012B8  1027               	iorwf	?i2___fttol+3,w,c
 13894  0012BA  B4D8               	btfsc	status,2,c
 13895  0012BC  BE65               	btfsc	i2sprintf@exp+1,7,c
 13896  0012BE  D042               	goto	i2l5273
 13897  0012C0  5065               	movf	i2sprintf@exp+1,w,c
 13898  0012C2  E104               	bnz	i2l5259
 13899  0012C4  0E02               	movlw	2
 13900  0012C6  5C64               	subwf	i2sprintf@exp,w,c
 13901  0012C8  A0D8               	btfss	status,0,c
 13902  0012CA  D03C               	goto	i2l5273
 13903  0012CC                     i2l5259:
 13904                           
 13905                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 13906  0012CC  C05C  F03A         	movff	i2sprintf@tmpval,i2___ftge@ff1
 13907  0012D0  C05D  F03B         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
 13908  0012D4  C05E  F03C         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
 13909  0012D8  0E70               	movlw	112
 13910  0012DA  6E3D               	movwf	i2___ftge@ff2,c
 13911  0012DC  0E89               	movlw	137
 13912  0012DE  6E3E               	movwf	i2___ftge@ff2+1,c
 13913  0012E0  0E40               	movlw	64
 13914  0012E2  6E3F               	movwf	i2___ftge@ff2+2,c
 13915  0012E4  ECB9  F024         	call	i2___ftge	;wreg free
 13916  0012E8  B0D8               	btfsc	status,0,c
 13917  0012EA  D002               	goto	i2l5263
 13918                           
 13919                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 13920  0012EC  0EF7               	movlw	247
 13921  0012EE  D001               	goto	L23
 13922  0012F0                     i2l5263:
 13923                           
 13924                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 13925  0012F0  0EF8               	movlw	248
 13926  0012F2                     L23:
 13927  0012F2  2664               	addwf	i2sprintf@exp,f,c
 13928  0012F4  0EFF               	movlw	255
 13929  0012F6  2265               	addwfc	i2sprintf@exp+1,f,c
 13930                           
 13931                           ;doprnt.c: 1124: }
 13932                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 13933  0012F8  5064               	movf	i2sprintf@exp,w,c
 13934  0012FA  ECE8  F014         	call	i2_scale
 13935  0012FE  C024  F05C         	movff	?i2_scale,i2sprintf@tmpval
 13936  001302  C025  F05D         	movff	?i2_scale+1,i2sprintf@tmpval+1
 13937  001306  C026  F05E         	movff	?i2_scale+2,i2sprintf@tmpval+2
 13938                           
 13939                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 13940  00130A  C068  F001         	movff	i2sprintf@fval,i2__tdiv_to_l_@f1
 13941  00130E  C069  F002         	movff	i2sprintf@fval+1,i2__tdiv_to_l_@f1+1
 13942  001312  C06A  F003         	movff	i2sprintf@fval+2,i2__tdiv_to_l_@f1+2
 13943  001316  C05C  F004         	movff	i2sprintf@tmpval,i2__tdiv_to_l_@f2
 13944  00131A  C05D  F005         	movff	i2sprintf@tmpval+1,i2__tdiv_to_l_@f2+1
 13945  00131E  C05E  F006         	movff	i2sprintf@tmpval+2,i2__tdiv_to_l_@f2+2
 13946  001322  EC40  F01F         	call	i2__tdiv_to_l_	;wreg free
 13947  001326  C001  F060         	movff	?i2__tdiv_to_l_,i2sprintf@val
 13948  00132A  C002  F061         	movff	?i2__tdiv_to_l_+1,i2sprintf@val+1
 13949  00132E  C003  F062         	movff	?i2__tdiv_to_l_+2,i2sprintf@val+2
 13950  001332  C004  F063         	movff	?i2__tdiv_to_l_+3,i2sprintf@val+3
 13951                           
 13952                           ;doprnt.c: 1129: fval = 0.0;
 13953  001336  0E00               	movlw	0
 13954  001338  6E68               	movwf	i2sprintf@fval,c
 13955  00133A  0E00               	movlw	0
 13956  00133C  6E69               	movwf	i2sprintf@fval+1,c
 13957  00133E  0E00               	movlw	0
 13958  001340  6E6A               	movwf	i2sprintf@fval+2,c
 13959                           
 13960                           ;doprnt.c: 1130: } else {
 13961  001342  D032               	goto	i2l5277
 13962  001344                     i2l5273:
 13963                           
 13964                           ;doprnt.c: 1131: val = (unsigned long)fval;
 13965  001344  C068  F024         	movff	i2sprintf@fval,i2___fttol@f1
 13966  001348  C069  F025         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 13967  00134C  C06A  F026         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 13968  001350  EC6D  F021         	call	i2___fttol	;wreg free
 13969  001354  C024  F060         	movff	?i2___fttol,i2sprintf@val
 13970  001358  C025  F061         	movff	?i2___fttol+1,i2sprintf@val+1
 13971  00135C  C026  F062         	movff	?i2___fttol+2,i2sprintf@val+2
 13972  001360  C027  F063         	movff	?i2___fttol+3,i2sprintf@val+3
 13973                           
 13974                           ;doprnt.c: 1132: fval -= (double)val;
 13975  001364  C068  F03A         	movff	i2sprintf@fval,i2___ftsub@f1
 13976  001368  C069  F03B         	movff	i2sprintf@fval+1,i2___ftsub@f1+1
 13977  00136C  C06A  F03C         	movff	i2sprintf@fval+2,i2___ftsub@f1+2
 13978  001370  C060  F009         	movff	i2sprintf@val,i2___lltoft@c
 13979  001374  C061  F00A         	movff	i2sprintf@val+1,i2___lltoft@c+1
 13980  001378  C062  F00B         	movff	i2sprintf@val+2,i2___lltoft@c+2
 13981  00137C  C063  F00C         	movff	i2sprintf@val+3,i2___lltoft@c+3
 13982  001380  ECA8  F027         	call	i2___lltoft	;wreg free
 13983  001384  C009  F03D         	movff	?i2___lltoft,i2___ftsub@f2
 13984  001388  C00A  F03E         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 13985  00138C  C00B  F03F         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 13986  001390  EC54  F029         	call	i2___ftsub	;wreg free
 13987  001394  C03A  F068         	movff	?i2___ftsub,i2sprintf@fval
 13988  001398  C03B  F069         	movff	?i2___ftsub+1,i2sprintf@fval+1
 13989  00139C  C03C  F06A         	movff	?i2___ftsub+2,i2sprintf@fval+2
 13990                           
 13991                           ;doprnt.c: 1133: exp = 0;
 13992  0013A0  0E00               	movlw	0
 13993  0013A2  6E65               	movwf	i2sprintf@exp+1,c
 13994  0013A4  0E00               	movlw	0
 13995  0013A6  6E64               	movwf	i2sprintf@exp,c
 13996  0013A8                     i2l5277:
 13997                           
 13998                           ;doprnt.c: 1134: }
 13999                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 14000  0013A8  0E01               	movlw	1
 14001  0013AA  6E6F               	movwf	i2sprintf@c,c
 14002  0013AC                     i2l5279:
 14003  0013AC  0E0A               	movlw	10
 14004  0013AE  186F               	xorwf	i2sprintf@c,w,c
 14005  0013B0  B4D8               	btfsc	status,2,c
 14006  0013B2  D01B               	goto	i2l5291
 14007                           
 14008                           ;doprnt.c: 1137: if(val < dpowers[c])
 14009  0013B4  506F               	movf	i2sprintf@c,w,c
 14010  0013B6  0D04               	mullw	4
 14011  0013B8  0E01               	movlw	low _dpowers
 14012  0013BA  24F3               	addwf	prodl,w,c
 14013  0013BC  6EF6               	movwf	tblptrl,c
 14014  0013BE  0EFF               	movlw	high _dpowers
 14015  0013C0  20F4               	addwfc	prodh,w,c
 14016  0013C2  6EF7               	movwf	tblptrh,c
 14017  0013C4                     	if	1	;There are 3 active tblptr bytes
 14018  0013C4  6AF8               	clrf	tblptru,c
 14019  0013C6  0E00               	movlw	low (__mediumconst shr (0+16))
 14020  0013C8  22F8               	addwfc	tblptru,f,c
 14021  0013CA                     	endif
 14022  0013CA  0009               	tblrd		*+
 14023  0013CC  50F5               	movf	tablat,w,c
 14024  0013CE  5C60               	subwf	i2sprintf@val,w,c
 14025  0013D0  0009               	tblrd		*+
 14026  0013D2  50F5               	movf	tablat,w,c
 14027  0013D4  5861               	subwfb	i2sprintf@val+1,w,c
 14028  0013D6  0009               	tblrd		*+
 14029  0013D8  50F5               	movf	tablat,w,c
 14030  0013DA  5862               	subwfb	i2sprintf@val+2,w,c
 14031  0013DC  0009               	tblrd		*+
 14032  0013DE  50F5               	movf	tablat,w,c
 14033  0013E0  5863               	subwfb	i2sprintf@val+3,w,c
 14034  0013E2  A0D8               	btfss	status,0,c
 14035  0013E4  D002               	goto	i2l5291
 14036                           
 14037                           ;doprnt.c: 1138: break;
 14038  0013E6  2A6F               	incf	i2sprintf@c,f,c
 14039  0013E8  D7E1               	goto	i2l5279
 14040  0013EA                     i2l5291:
 14041                           
 14042                           ;doprnt.c: 1142: width -= prec + c + exp;
 14043  0013EA  C06F  F04D         	movff	i2sprintf@c,??i2_sprintf
 14044  0013EE  6A4E               	clrf	(??i2_sprintf+1)& (0+255),c
 14045  0013F0  BE4D               	btfsc	??i2_sprintf& (0+255),7,c
 14046  0013F2  064E               	decf	(??i2_sprintf+1)& (0+255),f,c
 14047  0013F4  506D               	movf	i2sprintf@prec,w,c
 14048  0013F6  264D               	addwf	??i2_sprintf,f,c
 14049  0013F8  506E               	movf	i2sprintf@prec+1,w,c
 14050  0013FA  224E               	addwfc	??i2_sprintf+1,f,c
 14051  0013FC  5064               	movf	i2sprintf@exp,w,c
 14052  0013FE  264D               	addwf	??i2_sprintf,f,c
 14053  001400  5065               	movf	i2sprintf@exp+1,w,c
 14054  001402  224E               	addwfc	??i2_sprintf+1,f,c
 14055  001404  504D               	movf	??i2_sprintf,w,c
 14056  001406  5E6B               	subwf	i2sprintf@width,f,c
 14057  001408  504E               	movf	??i2_sprintf+1,w,c
 14058  00140A  5A6C               	subwfb	i2sprintf@width+1,f,c
 14059                           
 14060                           ;doprnt.c: 1143: if(
 14061                           ;doprnt.c: 1147: prec)
 14062  00140C  506D               	movf	i2sprintf@prec,w,c
 14063  00140E  106E               	iorwf	i2sprintf@prec+1,w,c
 14064  001410  B4D8               	btfsc	status,2,c
 14065  001412  D003               	goto	i2l5295
 14066                           
 14067                           ;doprnt.c: 1148: width--;
 14068  001414  066B               	decf	i2sprintf@width,f,c
 14069  001416  A0D8               	btfss	status,0,c
 14070  001418  066C               	decf	i2sprintf@width+1,f,c
 14071  00141A                     i2l5295:
 14072                           
 14073                           ;doprnt.c: 1149: if(flag & 0x03)
 14074  00141A  0E03               	movlw	3
 14075  00141C  1466               	andwf	i2sprintf@flag,w,c
 14076  00141E  6E4D               	movwf	??i2_sprintf& (0+255),c
 14077  001420  0E00               	movlw	0
 14078  001422  1467               	andwf	i2sprintf@flag+1,w,c
 14079  001424  6E4E               	movwf	(??i2_sprintf+1)& (0+255),c
 14080  001426  504D               	movf	??i2_sprintf,w,c
 14081  001428  104E               	iorwf	??i2_sprintf+1,w,c
 14082  00142A  B4D8               	btfsc	status,2,c
 14083  00142C  D003               	goto	i2l5299
 14084                           
 14085                           ;doprnt.c: 1150: width--;
 14086  00142E  066B               	decf	i2sprintf@width,f,c
 14087  001430  A0D8               	btfss	status,0,c
 14088  001432  066C               	decf	i2sprintf@width+1,f,c
 14089  001434                     i2l5299:
 14090                           
 14091                           ;doprnt.c: 1153: if(flag & 0x04) {
 14092  001434  A466               	btfss	i2sprintf@flag,2,c
 14093  001436  D031               	goto	i2l5321
 14094                           
 14095                           ;doprnt.c: 1157: if(flag & 0x03)
 14096  001438  0E03               	movlw	3
 14097  00143A  1466               	andwf	i2sprintf@flag,w,c
 14098  00143C  6E4D               	movwf	??i2_sprintf& (0+255),c
 14099  00143E  0E00               	movlw	0
 14100  001440  1467               	andwf	i2sprintf@flag+1,w,c
 14101  001442  6E4E               	movwf	(??i2_sprintf+1)& (0+255),c
 14102  001444  504D               	movf	??i2_sprintf,w,c
 14103  001446  104E               	iorwf	??i2_sprintf+1,w,c
 14104  001448  B4D8               	btfsc	status,2,c
 14105  00144A  D014               	goto	i2l5313
 14106                           
 14107                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 14108  00144C  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14109  001450  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14110  001454  0E2D               	movlw	45
 14111  001456  6EDF               	movwf	indf2,c
 14112  001458  4A43               	infsnz	i2sprintf@sp,f,c
 14113  00145A  2A44               	incf	i2sprintf@sp+1,f,c
 14114                           
 14115                           ;doprnt.c: 1168: while(width > 0) {
 14116  00145C  D00B               	goto	i2l5313
 14117  00145E                     i2l5307:
 14118                           
 14119                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 14120  00145E  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14121  001462  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14122  001466  0E30               	movlw	48
 14123  001468  6EDF               	movwf	indf2,c
 14124  00146A  4A43               	infsnz	i2sprintf@sp,f,c
 14125  00146C  2A44               	incf	i2sprintf@sp+1,f,c
 14126                           
 14127                           ;doprnt.c: 1170: width--;
 14128  00146E  066B               	decf	i2sprintf@width,f,c
 14129  001470  A0D8               	btfss	status,0,c
 14130  001472  066C               	decf	i2sprintf@width+1,f,c
 14131  001474                     i2l5313:
 14132  001474  BE6C               	btfsc	i2sprintf@width+1,7,c
 14133  001476  D076               	goto	i2l5337
 14134  001478  506C               	movf	i2sprintf@width+1,w,c
 14135  00147A  E1F1               	bnz	i2l5307
 14136  00147C  046B               	decf	i2sprintf@width,w,c
 14137  00147E  A0D8               	btfss	status,0,c
 14138  001480  D071               	goto	i2l5337
 14139  001482  D7ED               	goto	i2l5307
 14140  001484                     i2l5315:
 14141                           
 14142                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 14143  001484  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14144  001488  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14145  00148C  0E20               	movlw	32
 14146  00148E  6EDF               	movwf	indf2,c
 14147  001490  4A43               	infsnz	i2sprintf@sp,f,c
 14148  001492  2A44               	incf	i2sprintf@sp+1,f,c
 14149                           
 14150                           ;doprnt.c: 1182: width--;
 14151  001494  066B               	decf	i2sprintf@width,f,c
 14152  001496  A0D8               	btfss	status,0,c
 14153  001498  066C               	decf	i2sprintf@width+1,f,c
 14154  00149A                     i2l5321:
 14155  00149A  BE6C               	btfsc	i2sprintf@width+1,7,c
 14156  00149C  D005               	goto	i2l5323
 14157  00149E  506C               	movf	i2sprintf@width+1,w,c
 14158  0014A0  E1F1               	bnz	i2l5315
 14159  0014A2  046B               	decf	i2sprintf@width,w,c
 14160  0014A4  B0D8               	btfsc	status,0,c
 14161  0014A6  D7EE               	goto	i2l5315
 14162  0014A8                     i2l5323:
 14163                           
 14164                           ;doprnt.c: 1183: }
 14165                           ;doprnt.c: 1188: if(flag & 0x03)
 14166  0014A8  0E03               	movlw	3
 14167  0014AA  1466               	andwf	i2sprintf@flag,w,c
 14168  0014AC  6E4D               	movwf	??i2_sprintf& (0+255),c
 14169  0014AE  0E00               	movlw	0
 14170  0014B0  1467               	andwf	i2sprintf@flag+1,w,c
 14171  0014B2  6E4E               	movwf	(??i2_sprintf+1)& (0+255),c
 14172  0014B4  504D               	movf	??i2_sprintf,w,c
 14173  0014B6  104E               	iorwf	??i2_sprintf+1,w,c
 14174  0014B8  B4D8               	btfsc	status,2,c
 14175  0014BA  D054               	goto	i2l5337
 14176                           
 14177                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 14178  0014BC  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14179  0014C0  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14180  0014C4  0E2D               	movlw	45
 14181  0014C6  D04C               	goto	L24
 14182  0014C8                     i2l5327:
 14183  0014C8  4A43               	infsnz	i2sprintf@sp,f,c
 14184  0014CA  2A44               	incf	i2sprintf@sp+1,f,c
 14185                           
 14186                           ;doprnt.c: 1195: }
 14187                           ;doprnt.c: 1196: while(c--) {
 14188  0014CC  D04B               	goto	i2l5337
 14189  0014CE                     i2l5329:
 14190                           
 14191                           ;doprnt.c: 1200: {
 14192                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 14193  0014CE  C060  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 14194  0014D2  C061  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 14195  0014D6  C062  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 14196  0014DA  C063  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 14197  0014DE  506F               	movf	i2sprintf@c,w,c
 14198  0014E0  0D04               	mullw	4
 14199  0014E2  0E01               	movlw	low _dpowers
 14200  0014E4  24F3               	addwf	prodl,w,c
 14201  0014E6  6EF6               	movwf	tblptrl,c
 14202  0014E8  0EFF               	movlw	high _dpowers
 14203  0014EA  20F4               	addwfc	prodh,w,c
 14204  0014EC  6EF7               	movwf	tblptrh,c
 14205  0014EE                     	if	1	;There are 3 active tblptr bytes
 14206  0014EE  6AF8               	clrf	tblptru,c
 14207  0014F0  0E00               	movlw	low (__mediumconst shr (0+16))
 14208  0014F2  22F8               	addwfc	tblptru,f,c
 14209  0014F4                     	endif
 14210  0014F4  0009               	tblrd		*+
 14211  0014F6  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14212  0014FA  0009               	tblrd		*+
 14213  0014FC  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14214  001500  0009               	tblrd		*+
 14215  001502  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14216  001506  000A               	tblrd		*-
 14217  001508  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14218  00150C  EC16  F026         	call	i2___lldiv	;wreg free
 14219  001510  C001  F05C         	movff	?i2___lldiv,i2sprintf@tmpval
 14220  001514  C002  F05D         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
 14221  001518  C003  F05E         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
 14222  00151C  C004  F05F         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
 14223                           
 14224                           ;doprnt.c: 1202: tmpval.vd %= 10;
 14225  001520  C05C  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
 14226  001524  C05D  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
 14227  001528  C05E  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
 14228  00152C  C05F  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
 14229  001530  0E0A               	movlw	10
 14230  001532  6E12               	movwf	i2___llmod@divisor,c
 14231  001534  0E00               	movlw	0
 14232  001536  6E13               	movwf	i2___llmod@divisor+1,c
 14233  001538  0E00               	movlw	0
 14234  00153A  6E14               	movwf	i2___llmod@divisor+2,c
 14235  00153C  0E00               	movlw	0
 14236  00153E  6E15               	movwf	i2___llmod@divisor+3,c
 14237  001540  EC44  F027         	call	i2___llmod	;wreg free
 14238  001544  C00E  F05C         	movff	?i2___llmod,i2sprintf@tmpval
 14239  001548  C00F  F05D         	movff	?i2___llmod+1,i2sprintf@tmpval+1
 14240  00154C  C010  F05E         	movff	?i2___llmod+2,i2sprintf@tmpval+2
 14241  001550  C011  F05F         	movff	?i2___llmod+3,i2sprintf@tmpval+3
 14242                           
 14243                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 14244  001554  505C               	movf	i2sprintf@tmpval,w,c
 14245  001556  0F30               	addlw	48
 14246  001558  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14247  00155C  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14248  001560                     L24:
 14249  001560  6EDF               	movwf	indf2,c
 14250  001562  D7B2               	goto	i2l5327
 14251  001564                     i2l5337:
 14252  001564  066F               	decf	i2sprintf@c,f,c
 14253  001566  286F               	incf	i2sprintf@c,w,c
 14254  001568  B4D8               	btfsc	status,2,c
 14255  00156A  D00C               	goto	i2l5345
 14256  00156C  D7B0               	goto	i2l5329
 14257  00156E                     i2l5339:
 14258                           
 14259                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 14260  00156E  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14261  001572  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14262  001576  0E30               	movlw	48
 14263  001578  6EDF               	movwf	indf2,c
 14264  00157A  4A43               	infsnz	i2sprintf@sp,f,c
 14265  00157C  2A44               	incf	i2sprintf@sp+1,f,c
 14266                           
 14267                           ;doprnt.c: 1209: exp--;
 14268  00157E  0664               	decf	i2sprintf@exp,f,c
 14269  001580  A0D8               	btfss	status,0,c
 14270  001582  0665               	decf	i2sprintf@exp+1,f,c
 14271  001584                     i2l5345:
 14272  001584  BE65               	btfsc	i2sprintf@exp+1,7,c
 14273  001586  D005               	goto	i2l5347
 14274  001588  5065               	movf	i2sprintf@exp+1,w,c
 14275  00158A  E1F1               	bnz	i2l5339
 14276  00158C  0464               	decf	i2sprintf@exp,w,c
 14277  00158E  B0D8               	btfsc	status,0,c
 14278  001590  D7EE               	goto	i2l5339
 14279  001592                     i2l5347:
 14280                           
 14281                           ;doprnt.c: 1210: }
 14282                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 14283  001592  BE6E               	btfsc	i2sprintf@prec+1,7,c
 14284  001594  D009               	goto	i2l419
 14285  001596  506E               	movf	i2sprintf@prec+1,w,c
 14286  001598  E104               	bnz	i2u623_40
 14287  00159A  0E09               	movlw	9
 14288  00159C  5C6D               	subwf	i2sprintf@prec,w,c
 14289  00159E  A0D8               	btfss	status,0,c
 14290  0015A0  D003               	goto	i2l419
 14291  0015A2                     i2u623_40:
 14292                           
 14293                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 14294  0015A2  0E08               	movlw	8
 14295  0015A4  6E6F               	movwf	i2sprintf@c,c
 14296  0015A6  D002               	goto	i2l5351
 14297  0015A8                     i2l419:
 14298                           
 14299                           ;doprnt.c: 1213: else
 14300                           ;doprnt.c: 1214: c = prec;
 14301  0015A8  C06D  F06F         	movff	i2sprintf@prec,i2sprintf@c
 14302  0015AC                     i2l5351:
 14303                           
 14304                           ;doprnt.c: 1215: prec -= c;
 14305  0015AC  506F               	movf	i2sprintf@c,w,c
 14306  0015AE  5E6D               	subwf	i2sprintf@prec,f,c
 14307  0015B0  0E00               	movlw	0
 14308  0015B2  BE6F               	btfsc	i2sprintf@c,7,c
 14309  0015B4  0EFF               	movlw	255
 14310  0015B6  5A6E               	subwfb	i2sprintf@prec+1,f,c
 14311                           
 14312                           ;doprnt.c: 1219: if(c)
 14313  0015B8  506F               	movf	i2sprintf@c,w,c
 14314  0015BA  B4D8               	btfsc	status,2,c
 14315  0015BC  D008               	goto	i2l5359
 14316                           
 14317                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 14318  0015BE  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14319  0015C2  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14320  0015C6  0E2E               	movlw	46
 14321  0015C8  6EDF               	movwf	indf2,c
 14322  0015CA  4A43               	infsnz	i2sprintf@sp,f,c
 14323  0015CC  2A44               	incf	i2sprintf@sp+1,f,c
 14324  0015CE                     i2l5359:
 14325                           
 14326                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14327  0015CE  506F               	movf	i2sprintf@c,w,c
 14328  0015D0  ECE8  F014         	call	i2_scale
 14329  0015D4  C024  F053         	movff	?i2_scale,i2_sprintf$1779
 14330  0015D8  C025  F054         	movff	?i2_scale+1,i2_sprintf$1779+1
 14331  0015DC  C026  F055         	movff	?i2_scale+2,i2_sprintf$1779+2
 14332                           
 14333                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14334  0015E0  C068  F018         	movff	i2sprintf@fval,i2___ftmul@f2
 14335  0015E4  C069  F019         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 14336  0015E8  C06A  F01A         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 14337  0015EC  C053  F015         	movff	i2_sprintf$1779,i2___ftmul@f1
 14338  0015F0  C054  F016         	movff	i2_sprintf$1779+1,i2___ftmul@f1+1
 14339  0015F4  C055  F017         	movff	i2_sprintf$1779+2,i2___ftmul@f1+2
 14340  0015F8  ECF3  F020         	call	i2___ftmul	;wreg free
 14341  0015FC  C015  F024         	movff	?i2___ftmul,i2___fttol@f1
 14342  001600  C016  F025         	movff	?i2___ftmul+1,i2___fttol@f1+1
 14343  001604  C017  F026         	movff	?i2___ftmul+2,i2___fttol@f1+2
 14344  001608  EC6D  F021         	call	i2___fttol	;wreg free
 14345  00160C  C024  F060         	movff	?i2___fttol,i2sprintf@val
 14346  001610  C025  F061         	movff	?i2___fttol+1,i2sprintf@val+1
 14347  001614  C026  F062         	movff	?i2___fttol+2,i2sprintf@val+2
 14348  001618  C027  F063         	movff	?i2___fttol+3,i2sprintf@val+3
 14349                           
 14350                           ;doprnt.c: 1228: while(c--) {
 14351  00161C  D075               	goto	i2l5373
 14352  00161E                     i2l5363:
 14353                           
 14354                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 14355  00161E  C060  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 14356  001622  C061  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 14357  001626  C062  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 14358  00162A  C063  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 14359  00162E  506F               	movf	i2sprintf@c,w,c
 14360  001630  0D04               	mullw	4
 14361  001632  0E01               	movlw	low _dpowers
 14362  001634  24F3               	addwf	prodl,w,c
 14363  001636  6EF6               	movwf	tblptrl,c
 14364  001638  0EFF               	movlw	high _dpowers
 14365  00163A  20F4               	addwfc	prodh,w,c
 14366  00163C  6EF7               	movwf	tblptrh,c
 14367  00163E                     	if	1	;There are 3 active tblptr bytes
 14368  00163E  6AF8               	clrf	tblptru,c
 14369  001640  0E00               	movlw	low (__mediumconst shr (0+16))
 14370  001642  22F8               	addwfc	tblptru,f,c
 14371  001644                     	endif
 14372  001644  0009               	tblrd		*+
 14373  001646  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14374  00164A  0009               	tblrd		*+
 14375  00164C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14376  001650  0009               	tblrd		*+
 14377  001652  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14378  001656  000A               	tblrd		*-
 14379  001658  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14380  00165C  EC16  F026         	call	i2___lldiv	;wreg free
 14381  001660  C001  F05C         	movff	?i2___lldiv,i2sprintf@tmpval
 14382  001664  C002  F05D         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
 14383  001668  C003  F05E         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
 14384  00166C  C004  F05F         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
 14385                           
 14386                           ;doprnt.c: 1230: tmpval.vd %= 10;
 14387  001670  C05C  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
 14388  001674  C05D  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
 14389  001678  C05E  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
 14390  00167C  C05F  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
 14391  001680  0E0A               	movlw	10
 14392  001682  6E12               	movwf	i2___llmod@divisor,c
 14393  001684  0E00               	movlw	0
 14394  001686  6E13               	movwf	i2___llmod@divisor+1,c
 14395  001688  0E00               	movlw	0
 14396  00168A  6E14               	movwf	i2___llmod@divisor+2,c
 14397  00168C  0E00               	movlw	0
 14398  00168E  6E15               	movwf	i2___llmod@divisor+3,c
 14399  001690  EC44  F027         	call	i2___llmod	;wreg free
 14400  001694  C00E  F05C         	movff	?i2___llmod,i2sprintf@tmpval
 14401  001698  C00F  F05D         	movff	?i2___llmod+1,i2sprintf@tmpval+1
 14402  00169C  C010  F05E         	movff	?i2___llmod+2,i2sprintf@tmpval+2
 14403  0016A0  C011  F05F         	movff	?i2___llmod+3,i2sprintf@tmpval+3
 14404                           
 14405                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 14406  0016A4  505C               	movf	i2sprintf@tmpval,w,c
 14407  0016A6  0F30               	addlw	48
 14408  0016A8  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14409  0016AC  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14410  0016B0  6EDF               	movwf	indf2,c
 14411  0016B2  4A43               	infsnz	i2sprintf@sp,f,c
 14412  0016B4  2A44               	incf	i2sprintf@sp+1,f,c
 14413                           
 14414                           ;doprnt.c: 1232: val %= dpowers[c];
 14415  0016B6  C060  F00E         	movff	i2sprintf@val,i2___llmod@dividend
 14416  0016BA  C061  F00F         	movff	i2sprintf@val+1,i2___llmod@dividend+1
 14417  0016BE  C062  F010         	movff	i2sprintf@val+2,i2___llmod@dividend+2
 14418  0016C2  C063  F011         	movff	i2sprintf@val+3,i2___llmod@dividend+3
 14419  0016C6  506F               	movf	i2sprintf@c,w,c
 14420  0016C8  0D04               	mullw	4
 14421  0016CA  0E01               	movlw	low _dpowers
 14422  0016CC  24F3               	addwf	prodl,w,c
 14423  0016CE  6EF6               	movwf	tblptrl,c
 14424  0016D0  0EFF               	movlw	high _dpowers
 14425  0016D2  20F4               	addwfc	prodh,w,c
 14426  0016D4  6EF7               	movwf	tblptrh,c
 14427  0016D6                     	if	1	;There are 3 active tblptr bytes
 14428  0016D6  6AF8               	clrf	tblptru,c
 14429  0016D8  0E00               	movlw	low (__mediumconst shr (0+16))
 14430  0016DA  22F8               	addwfc	tblptru,f,c
 14431  0016DC                     	endif
 14432  0016DC  0009               	tblrd		*+
 14433  0016DE  CFF5 F012          	movff	tablat,i2___llmod@divisor
 14434  0016E2  0009               	tblrd		*+
 14435  0016E4  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 14436  0016E8  0009               	tblrd		*+
 14437  0016EA  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 14438  0016EE  000A               	tblrd		*-
 14439  0016F0  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 14440  0016F4  EC44  F027         	call	i2___llmod	;wreg free
 14441  0016F8  C00E  F060         	movff	?i2___llmod,i2sprintf@val
 14442  0016FC  C00F  F061         	movff	?i2___llmod+1,i2sprintf@val+1
 14443  001700  C010  F062         	movff	?i2___llmod+2,i2sprintf@val+2
 14444  001704  C011  F063         	movff	?i2___llmod+3,i2sprintf@val+3
 14445  001708                     i2l5373:
 14446  001708  066F               	decf	i2sprintf@c,f,c
 14447  00170A  286F               	incf	i2sprintf@c,w,c
 14448  00170C  B4D8               	btfsc	status,2,c
 14449  00170E  D00C               	goto	i2l5381
 14450  001710  D786               	goto	i2l5363
 14451  001712                     i2l5375:
 14452                           
 14453                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 14454  001712  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14455  001716  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14456  00171A  0E30               	movlw	48
 14457  00171C  6EDF               	movwf	indf2,c
 14458  00171E  4A43               	infsnz	i2sprintf@sp,f,c
 14459  001720  2A44               	incf	i2sprintf@sp+1,f,c
 14460                           
 14461                           ;doprnt.c: 1237: prec--;
 14462  001722  066D               	decf	i2sprintf@prec,f,c
 14463  001724  A0D8               	btfss	status,0,c
 14464  001726  066E               	decf	i2sprintf@prec+1,f,c
 14465  001728                     i2l5381:
 14466  001728  506D               	movf	i2sprintf@prec,w,c
 14467  00172A  106E               	iorwf	i2sprintf@prec+1,w,c
 14468  00172C  B4D8               	btfsc	status,2,c
 14469  00172E  D13B               	goto	i2l5479
 14470  001730  D7F0               	goto	i2l5375
 14471  001732                     i2l5383:
 14472                           
 14473                           ;doprnt.c: 1246: }
 14474                           ;doprnt.c: 1253: {
 14475                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14476  001732  C058  FFD9         	movff	i2sprintf@ap,fsr2l
 14477  001736  C059  FFDA         	movff	i2sprintf@ap+1,fsr2h
 14478  00173A  CFDE F060          	movff	postinc2,i2sprintf@val
 14479  00173E  CFDD F061          	movff	postdec2,i2sprintf@val+1
 14480  001742  0E00               	movlw	0
 14481  001744  BE61               	btfsc	i2sprintf@val+1,7,c
 14482  001746  0EFF               	movlw	-1
 14483  001748  6E62               	movwf	i2sprintf@val+2,c
 14484  00174A  6E63               	movwf	i2sprintf@val+3,c
 14485  00174C  0E02               	movlw	2
 14486  00174E  2658               	addwf	i2sprintf@ap,f,c
 14487  001750  0E00               	movlw	0
 14488  001752  2259               	addwfc	i2sprintf@ap+1,f,c
 14489                           
 14490                           ;doprnt.c: 1261: if((long)val < 0) {
 14491  001754  AE63               	btfss	i2sprintf@val+3,7,c
 14492  001756  D00A               	goto	i2l5393
 14493                           
 14494                           ;doprnt.c: 1262: flag |= 0x03;
 14495  001758  0E03               	movlw	3
 14496  00175A  1266               	iorwf	i2sprintf@flag,f,c
 14497                           
 14498                           ;doprnt.c: 1263: val = -val;
 14499  00175C  1E63               	comf	i2sprintf@val+3,f,c
 14500  00175E  1E62               	comf	i2sprintf@val+2,f,c
 14501  001760  1E61               	comf	i2sprintf@val+1,f,c
 14502  001762  6C60               	negf	i2sprintf@val,c
 14503  001764  0E00               	movlw	0
 14504  001766  2261               	addwfc	i2sprintf@val+1,f,c
 14505  001768  2262               	addwfc	i2sprintf@val+2,f,c
 14506  00176A  2263               	addwfc	i2sprintf@val+3,f,c
 14507  00176C                     i2l5393:
 14508                           
 14509                           ;doprnt.c: 1264: }
 14510                           ;doprnt.c: 1266: }
 14511                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 14512  00176C  506D               	movf	i2sprintf@prec,w,c
 14513  00176E  106E               	iorwf	i2sprintf@prec+1,w,c
 14514  001770  A4D8               	btfss	status,2,c
 14515  001772  D008               	goto	i2l5399
 14516  001774  5060               	movf	i2sprintf@val,w,c
 14517  001776  1061               	iorwf	i2sprintf@val+1,w,c
 14518  001778  1062               	iorwf	i2sprintf@val+2,w,c
 14519  00177A  1063               	iorwf	i2sprintf@val+3,w,c
 14520  00177C  A4D8               	btfss	status,2,c
 14521  00177E  D002               	goto	i2l5399
 14522                           
 14523                           ;doprnt.c: 1291: prec++;
 14524  001780  4A6D               	infsnz	i2sprintf@prec,f,c
 14525  001782  2A6E               	incf	i2sprintf@prec+1,f,c
 14526  001784                     i2l5399:
 14527                           
 14528                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14529  001784  0E01               	movlw	1
 14530  001786  6E6F               	movwf	i2sprintf@c,c
 14531  001788                     i2l5401:
 14532  001788  0E0A               	movlw	10
 14533  00178A  186F               	xorwf	i2sprintf@c,w,c
 14534  00178C  B4D8               	btfsc	status,2,c
 14535  00178E  D01B               	goto	i2l5413
 14536                           
 14537                           ;doprnt.c: 1306: if(val < dpowers[c])
 14538  001790  506F               	movf	i2sprintf@c,w,c
 14539  001792  0D04               	mullw	4
 14540  001794  0E01               	movlw	low _dpowers
 14541  001796  24F3               	addwf	prodl,w,c
 14542  001798  6EF6               	movwf	tblptrl,c
 14543  00179A  0EFF               	movlw	high _dpowers
 14544  00179C  20F4               	addwfc	prodh,w,c
 14545  00179E  6EF7               	movwf	tblptrh,c
 14546  0017A0                     	if	1	;There are 3 active tblptr bytes
 14547  0017A0  6AF8               	clrf	tblptru,c
 14548  0017A2  0E00               	movlw	low (__mediumconst shr (0+16))
 14549  0017A4  22F8               	addwfc	tblptru,f,c
 14550  0017A6                     	endif
 14551  0017A6  0009               	tblrd		*+
 14552  0017A8  50F5               	movf	tablat,w,c
 14553  0017AA  5C60               	subwf	i2sprintf@val,w,c
 14554  0017AC  0009               	tblrd		*+
 14555  0017AE  50F5               	movf	tablat,w,c
 14556  0017B0  5861               	subwfb	i2sprintf@val+1,w,c
 14557  0017B2  0009               	tblrd		*+
 14558  0017B4  50F5               	movf	tablat,w,c
 14559  0017B6  5862               	subwfb	i2sprintf@val+2,w,c
 14560  0017B8  0009               	tblrd		*+
 14561  0017BA  50F5               	movf	tablat,w,c
 14562  0017BC  5863               	subwfb	i2sprintf@val+3,w,c
 14563  0017BE  A0D8               	btfss	status,0,c
 14564  0017C0  D002               	goto	i2l5413
 14565                           
 14566                           ;doprnt.c: 1307: break;
 14567  0017C2  2A6F               	incf	i2sprintf@c,f,c
 14568  0017C4  D7E1               	goto	i2l5401
 14569  0017C6                     i2l5413:
 14570                           
 14571                           ;doprnt.c: 1339: if(c < prec)
 14572  0017C6  0E80               	movlw	128
 14573  0017C8  BE6F               	btfsc	i2sprintf@c,7,c
 14574  0017CA  0E7F               	movlw	127
 14575  0017CC  6E4D               	movwf	??i2_sprintf& (0+255),c
 14576  0017CE  506D               	movf	i2sprintf@prec,w,c
 14577  0017D0  5C6F               	subwf	i2sprintf@c,w,c
 14578  0017D2  506E               	movf	i2sprintf@prec+1,w,c
 14579  0017D4  0A80               	xorlw	128
 14580  0017D6  584D               	subwfb	??i2_sprintf& (0+255),w,c
 14581  0017D8  B0D8               	btfsc	status,0,c
 14582  0017DA  D003               	goto	i2l5417
 14583                           
 14584                           ;doprnt.c: 1340: c = prec;
 14585  0017DC  C06D  F06F         	movff	i2sprintf@prec,i2sprintf@c
 14586  0017E0  D010               	goto	i2l5421
 14587  0017E2                     i2l5417:
 14588                           
 14589                           ;doprnt.c: 1341: else if(prec < c)
 14590  0017E2  506E               	movf	i2sprintf@prec+1,w,c
 14591  0017E4  0A80               	xorlw	128
 14592  0017E6  6E4D               	movwf	??i2_sprintf& (0+255),c
 14593  0017E8  506F               	movf	i2sprintf@c,w,c
 14594  0017EA  5C6D               	subwf	i2sprintf@prec,w,c
 14595  0017EC  0E80               	movlw	128
 14596  0017EE  BE6F               	btfsc	i2sprintf@c,7,c
 14597  0017F0  0E7F               	movlw	127
 14598  0017F2  584D               	subwfb	??i2_sprintf& (0+255),w,c
 14599  0017F4  B0D8               	btfsc	status,0,c
 14600  0017F6  D005               	goto	i2l5421
 14601                           
 14602                           ;doprnt.c: 1342: prec = c;
 14603  0017F8  506F               	movf	i2sprintf@c,w,c
 14604  0017FA  6E6D               	movwf	i2sprintf@prec,c
 14605  0017FC  6A6E               	clrf	i2sprintf@prec+1,c
 14606  0017FE  BE6D               	btfsc	i2sprintf@prec,7,c
 14607  001800  066E               	decf	i2sprintf@prec+1,f,c
 14608  001802                     i2l5421:
 14609                           
 14610                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14611  001802  506B               	movf	i2sprintf@width,w,c
 14612  001804  106C               	iorwf	i2sprintf@width+1,w,c
 14613  001806  B4D8               	btfsc	status,2,c
 14614  001808  D00D               	goto	i2l5427
 14615  00180A  0E03               	movlw	3
 14616  00180C  1466               	andwf	i2sprintf@flag,w,c
 14617  00180E  6E4D               	movwf	??i2_sprintf& (0+255),c
 14618  001810  0E00               	movlw	0
 14619  001812  1467               	andwf	i2sprintf@flag+1,w,c
 14620  001814  6E4E               	movwf	(??i2_sprintf+1)& (0+255),c
 14621  001816  504D               	movf	??i2_sprintf,w,c
 14622  001818  104E               	iorwf	??i2_sprintf+1,w,c
 14623  00181A  B4D8               	btfsc	status,2,c
 14624  00181C  D003               	goto	i2l5427
 14625                           
 14626                           ;doprnt.c: 1346: width--;
 14627  00181E  066B               	decf	i2sprintf@width,f,c
 14628  001820  A0D8               	btfss	status,0,c
 14629  001822  066C               	decf	i2sprintf@width+1,f,c
 14630  001824                     i2l5427:
 14631                           
 14632                           ;doprnt.c: 1348: if(flag & 0x4000) {
 14633  001824  AC67               	btfss	i2sprintf@flag+1,6,c
 14634  001826  D013               	goto	i2l5435
 14635                           
 14636                           ;doprnt.c: 1349: if(width > prec)
 14637  001828  506B               	movf	i2sprintf@width,w,c
 14638  00182A  5C6D               	subwf	i2sprintf@prec,w,c
 14639  00182C  506E               	movf	i2sprintf@prec+1,w,c
 14640  00182E  0A80               	xorlw	128
 14641  001830  6E4D               	movwf	??i2_sprintf& (0+255),c
 14642  001832  506C               	movf	i2sprintf@width+1,w,c
 14643  001834  0A80               	xorlw	128
 14644  001836  584D               	subwfb	??i2_sprintf& (0+255),w,c
 14645  001838  B0D8               	btfsc	status,0,c
 14646  00183A  D005               	goto	i2l5433
 14647                           
 14648                           ;doprnt.c: 1350: width -= prec;
 14649  00183C  506D               	movf	i2sprintf@prec,w,c
 14650  00183E  5E6B               	subwf	i2sprintf@width,f,c
 14651  001840  506E               	movf	i2sprintf@prec+1,w,c
 14652  001842  5A6C               	subwfb	i2sprintf@width+1,f,c
 14653  001844  D004               	goto	i2l5435
 14654  001846                     i2l5433:
 14655                           
 14656                           ;doprnt.c: 1351: else
 14657                           ;doprnt.c: 1352: width = 0;
 14658  001846  0E00               	movlw	0
 14659  001848  6E6C               	movwf	i2sprintf@width+1,c
 14660  00184A  0E00               	movlw	0
 14661  00184C  6E6B               	movwf	i2sprintf@width,c
 14662  00184E                     i2l5435:
 14663                           
 14664                           ;doprnt.c: 1353: }
 14665                           ;doprnt.c: 1381: if(width > c)
 14666  00184E  0E80               	movlw	128
 14667  001850  BE6F               	btfsc	i2sprintf@c,7,c
 14668  001852  0E7F               	movlw	127
 14669  001854  6E4D               	movwf	??i2_sprintf& (0+255),c
 14670  001856  506B               	movf	i2sprintf@width,w,c
 14671  001858  5C6F               	subwf	i2sprintf@c,w,c
 14672  00185A  506C               	movf	i2sprintf@width+1,w,c
 14673  00185C  0A80               	xorlw	128
 14674  00185E  584D               	subwfb	??i2_sprintf& (0+255),w,c
 14675  001860  B0D8               	btfsc	status,0,c
 14676  001862  D007               	goto	i2l5439
 14677                           
 14678                           ;doprnt.c: 1382: width -= c;
 14679  001864  506F               	movf	i2sprintf@c,w,c
 14680  001866  5E6B               	subwf	i2sprintf@width,f,c
 14681  001868  0E00               	movlw	0
 14682  00186A  BE6F               	btfsc	i2sprintf@c,7,c
 14683  00186C  0EFF               	movlw	255
 14684  00186E  5A6C               	subwfb	i2sprintf@width+1,f,c
 14685  001870  D004               	goto	i2l5441
 14686  001872                     i2l5439:
 14687                           
 14688                           ;doprnt.c: 1383: else
 14689                           ;doprnt.c: 1384: width = 0;
 14690  001872  0E00               	movlw	0
 14691  001874  6E6C               	movwf	i2sprintf@width+1,c
 14692  001876  0E00               	movlw	0
 14693  001878  6E6B               	movwf	i2sprintf@width,c
 14694  00187A                     i2l5441:
 14695                           
 14696                           ;doprnt.c: 1387: if(flag & 0x04) {
 14697  00187A  A466               	btfss	i2sprintf@flag,2,c
 14698  00187C  D022               	goto	i2l5457
 14699                           
 14700                           ;doprnt.c: 1392: if(flag & 0x03)
 14701  00187E  0E03               	movlw	3
 14702  001880  1466               	andwf	i2sprintf@flag,w,c
 14703  001882  6E4D               	movwf	??i2_sprintf& (0+255),c
 14704  001884  0E00               	movlw	0
 14705  001886  1467               	andwf	i2sprintf@flag+1,w,c
 14706  001888  6E4E               	movwf	(??i2_sprintf+1)& (0+255),c
 14707  00188A  504D               	movf	??i2_sprintf,w,c
 14708  00188C  104E               	iorwf	??i2_sprintf+1,w,c
 14709  00188E  B4D8               	btfsc	status,2,c
 14710  001890  D008               	goto	i2l5449
 14711                           
 14712                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14713  001892  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14714  001896  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14715  00189A  0E2D               	movlw	45
 14716  00189C  6EDF               	movwf	indf2,c
 14717  00189E  4A43               	infsnz	i2sprintf@sp,f,c
 14718  0018A0  2A44               	incf	i2sprintf@sp+1,f,c
 14719  0018A2                     i2l5449:
 14720                           
 14721                           ;doprnt.c: 1415: if(width)
 14722  0018A2  506B               	movf	i2sprintf@width,w,c
 14723  0018A4  106C               	iorwf	i2sprintf@width+1,w,c
 14724  0018A6  B4D8               	btfsc	status,2,c
 14725  0018A8  D076               	goto	i2l5477
 14726                           
 14727                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14728                           
 14729                           ;doprnt.c: 1416: do
 14730  0018AA  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14731  0018AE  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14732  0018B2  0E30               	movlw	48
 14733  0018B4  6EDF               	movwf	indf2,c
 14734  0018B6  4A43               	infsnz	i2sprintf@sp,f,c
 14735  0018B8  2A44               	incf	i2sprintf@sp+1,f,c
 14736                           
 14737                           ;doprnt.c: 1418: while(--width);
 14738  0018BA  066B               	decf	i2sprintf@width,f,c
 14739  0018BC  A0D8               	btfss	status,0,c
 14740  0018BE  066C               	decf	i2sprintf@width+1,f,c
 14741  0018C0  D7F0               	goto	i2l5449
 14742  0018C2                     i2l5457:
 14743                           
 14744                           ;doprnt.c: 1422: {
 14745                           ;doprnt.c: 1424: if(width
 14746                           ;doprnt.c: 1428: )
 14747  0018C2  506B               	movf	i2sprintf@width,w,c
 14748  0018C4  106C               	iorwf	i2sprintf@width+1,w,c
 14749  0018C6  B4D8               	btfsc	status,2,c
 14750  0018C8  D00F               	goto	i2l5465
 14751  0018CA                     i2l5459:
 14752                           
 14753                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14754  0018CA  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14755  0018CE  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14756  0018D2  0E20               	movlw	32
 14757  0018D4  6EDF               	movwf	indf2,c
 14758  0018D6  4A43               	infsnz	i2sprintf@sp,f,c
 14759  0018D8  2A44               	incf	i2sprintf@sp+1,f,c
 14760                           
 14761                           ;doprnt.c: 1431: while(--width);
 14762  0018DA  066B               	decf	i2sprintf@width,f,c
 14763  0018DC  A0D8               	btfss	status,0,c
 14764  0018DE  066C               	decf	i2sprintf@width+1,f,c
 14765  0018E0  506B               	movf	i2sprintf@width,w,c
 14766  0018E2  106C               	iorwf	i2sprintf@width+1,w,c
 14767  0018E4  A4D8               	btfss	status,2,c
 14768  0018E6  D7F1               	goto	i2l5459
 14769  0018E8                     i2l5465:
 14770                           
 14771                           ;doprnt.c: 1438: if(flag & 0x03)
 14772  0018E8  0E03               	movlw	3
 14773  0018EA  1466               	andwf	i2sprintf@flag,w,c
 14774  0018EC  6E4D               	movwf	??i2_sprintf& (0+255),c
 14775  0018EE  0E00               	movlw	0
 14776  0018F0  1467               	andwf	i2sprintf@flag+1,w,c
 14777  0018F2  6E4E               	movwf	(??i2_sprintf+1)& (0+255),c
 14778  0018F4  504D               	movf	??i2_sprintf,w,c
 14779  0018F6  104E               	iorwf	??i2_sprintf+1,w,c
 14780  0018F8  B4D8               	btfsc	status,2,c
 14781  0018FA  D04D               	goto	i2l5477
 14782                           
 14783                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14784  0018FC  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14785  001900  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14786  001904  0E2D               	movlw	45
 14787  001906  6EDF               	movwf	indf2,c
 14788  001908  D044               	goto	i2l5475
 14789  00190A                     i2l5471:
 14790                           
 14791                           ;doprnt.c: 1478: {
 14792                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14793  00190A  C06D  F04D         	movff	i2sprintf@prec,??i2_sprintf
 14794  00190E  C06E  F04E         	movff	i2sprintf@prec+1,??i2_sprintf+1
 14795  001912  90D8               	bcf	status,0,c
 14796  001914  364D               	rlcf	??i2_sprintf,f,c
 14797  001916  364E               	rlcf	??i2_sprintf+1,f,c
 14798  001918  90D8               	bcf	status,0,c
 14799  00191A  364D               	rlcf	??i2_sprintf,f,c
 14800  00191C  364E               	rlcf	??i2_sprintf+1,f,c
 14801  00191E  0E01               	movlw	low _dpowers
 14802  001920  244D               	addwf	??i2_sprintf,w,c
 14803  001922  6EF6               	movwf	tblptrl,c
 14804  001924  0EFF               	movlw	high _dpowers
 14805  001926  204E               	addwfc	??i2_sprintf+1,w,c
 14806  001928  6EF7               	movwf	tblptrh,c
 14807  00192A                     	if	1	;There are 3 active tblptr bytes
 14808  00192A  6AF8               	clrf	tblptru,c
 14809  00192C  0E00               	movlw	low (__mediumconst shr (0+16))
 14810  00192E  22F8               	addwfc	tblptru,f,c
 14811  001930                     	endif
 14812  001930  0009               	tblrd		*+
 14813  001932  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14814  001936  0009               	tblrd		*+
 14815  001938  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14816  00193C  0009               	tblrd		*+
 14817  00193E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14818  001942  000A               	tblrd		*-
 14819  001944  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14820  001948  C060  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 14821  00194C  C061  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 14822  001950  C062  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 14823  001954  C063  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 14824  001958  EC16  F026         	call	i2___lldiv	;wreg free
 14825  00195C  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 14826  001960  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14827  001964  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14828  001968  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14829  00196C  0E0A               	movlw	10
 14830  00196E  6E12               	movwf	i2___llmod@divisor,c
 14831  001970  0E00               	movlw	0
 14832  001972  6E13               	movwf	i2___llmod@divisor+1,c
 14833  001974  0E00               	movlw	0
 14834  001976  6E14               	movwf	i2___llmod@divisor+2,c
 14835  001978  0E00               	movlw	0
 14836  00197A  6E15               	movwf	i2___llmod@divisor+3,c
 14837  00197C  EC44  F027         	call	i2___llmod	;wreg free
 14838  001980  500E               	movf	?i2___llmod,w,c
 14839  001982  0F30               	addlw	48
 14840  001984  6E6F               	movwf	i2sprintf@c,c
 14841                           
 14842                           ;doprnt.c: 1523: }
 14843                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14844  001986  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14845  00198A  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14846  00198E  C06F  FFDF         	movff	i2sprintf@c,indf2
 14847  001992                     i2l5475:
 14848  001992  4A43               	infsnz	i2sprintf@sp,f,c
 14849  001994  2A44               	incf	i2sprintf@sp+1,f,c
 14850  001996                     i2l5477:
 14851  001996  066D               	decf	i2sprintf@prec,f,c
 14852  001998  A0D8               	btfss	status,0,c
 14853  00199A  066E               	decf	i2sprintf@prec+1,f,c
 14854  00199C  286D               	incf	i2sprintf@prec,w,c
 14855  00199E  E1B5               	bnz	i2l5471
 14856  0019A0  286E               	incf	i2sprintf@prec+1,w,c
 14857  0019A2  A4D8               	btfss	status,2,c
 14858  0019A4  D7B2               	goto	i2l5471
 14859  0019A6                     i2l5479:
 14860  0019A6  C045  FFF6         	movff	i2sprintf@f,tblptrl
 14861  0019AA  C046  FFF7         	movff	i2sprintf@f+1,tblptrh
 14862  0019AE  4A45               	infsnz	i2sprintf@f,f,c
 14863  0019B0  2A46               	incf	i2sprintf@f+1,f,c
 14864  0019B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14865  0019B2  6AF8               	clrf	tblptru,c
 14866  0019B4                     	endif
 14867  0019B4                     	if	0	;tblptru may be non-zero
 14868  0019B4                     	endif
 14869  0019B4  0008               	tblrd		*
 14870  0019B6  CFF5 F06F          	movff	tablat,i2sprintf@c
 14871  0019BA  506F               	movf	i2sprintf@c,w,c
 14872  0019BC  A4D8               	btfss	status,2,c
 14873  0019BE  EF25  F007         	goto	i2l5115
 14874  0019C2                     i2l5481:
 14875                           
 14876                           ;doprnt.c: 1538: *sp = 0;
 14877  0019C2  C043  FFD9         	movff	i2sprintf@sp,fsr2l
 14878  0019C6  C044  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14879  0019CA  0E00               	movlw	0
 14880  0019CC  6EDF               	movwf	indf2,c
 14881  0019CE  0012               	return	
 14882  0019D0                     __end_ofi2_sprintf:
 14883                           	opt stack 0
 14884                           pclatu	equ	0xFFB
 14885                           pclath	equ	0xFFA
 14886                           tblptru	equ	0xFF8
 14887                           tblptrh	equ	0xFF7
 14888                           tblptrl	equ	0xFF6
 14889                           tablat	equ	0xFF5
 14890                           prodh	equ	0xFF4
 14891                           prodl	equ	0xFF3
 14892                           intcon	equ	0xFF2
 14893                           intcon2	equ	0xFF1
 14894                           intcon3	equ	0xFF0
 14895                           postinc0	equ	0xFEE
 14896                           fsr0h	equ	0xFEA
 14897                           fsr0l	equ	0xFE9
 14898                           wreg	equ	0xFE8
 14899                           indf1	equ	0xFE7
 14900                           postdec1	equ	0xFE5
 14901                           fsr1h	equ	0xFE2
 14902                           fsr1l	equ	0xFE1
 14903                           indf2	equ	0xFDF
 14904                           postinc2	equ	0xFDE
 14905                           postdec2	equ	0xFDD
 14906                           fsr2h	equ	0xFDA
 14907                           fsr2l	equ	0xFD9
 14908                           status	equ	0xFD8
 14909                           
 14910 ;; *************** function i2_scale *****************
 14911 ;; Defined at:
 14912 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  scl             1    wreg     char 
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;  scl             1   41[COMRAM] char 
 14917 ;; Return value:  Size  Location     Type
 14918 ;;                  3   35[COMRAM] char 
 14919 ;; Registers used:
 14920 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14921 ;; Tracked objects:
 14922 ;;		On entry : 0/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14926 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14927 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14929 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14930 ;;Total ram usage:        7 bytes
 14931 ;; Hardware stack levels used:    1
 14932 ;; Hardware stack levels required when called:    2
 14933 ;; This function calls:
 14934 ;;		i2___awdiv
 14935 ;;		i2___awmod
 14936 ;;		i2___ftmul
 14937 ;;		i2___wmul
 14938 ;; This function is called by:
 14939 ;;		i2_sprintf
 14940 ;; This function uses a non-reentrant model
 14941 ;;
 14942                           
 14943                           	psect	text48
 14944  0029D0                     __ptext48:
 14945                           	opt stack 0
 14946  0029D0                     i2_scale:
 14947                           	opt stack 19
 14948                           
 14949                           ;incstack = 0
 14950                           ;i2scale@scl stored from wreg
 14951  0029D0  6E2A               	movwf	i2scale@scl,c
 14952                           
 14953                           ;doprnt.c: 428: if(scl < 0) {
 14954  0029D2  AE2A               	btfss	i2scale@scl,7,c
 14955  0029D4  D10D               	goto	i2l4485
 14956                           
 14957                           ;doprnt.c: 429: scl = -scl;
 14958  0029D6  6C2A               	negf	i2scale@scl,c
 14959                           
 14960                           ;doprnt.c: 430: if(scl>=110)
 14961  0029D8  502A               	movf	i2scale@scl,w,c
 14962  0029DA  0A80               	xorlw	128
 14963  0029DC  0F12               	addlw	-238
 14964  0029DE  A0D8               	btfss	status,0,c
 14965  0029E0  D09A               	goto	i2l4475
 14966                           
 14967                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14968  0029E2  0E00               	movlw	0
 14969  0029E4  6E12               	movwf	i2___wmul@multiplicand+1,c
 14970  0029E6  0E03               	movlw	3
 14971  0029E8  6E11               	movwf	i2___wmul@multiplicand,c
 14972  0029EA  0E00               	movlw	0
 14973  0029EC  6E0A               	movwf	i2___awdiv@divisor+1,c
 14974  0029EE  0E0A               	movlw	10
 14975  0029F0  6E09               	movwf	i2___awdiv@divisor,c
 14976  0029F2  0E00               	movlw	0
 14977  0029F4  6E04               	movwf	i2___awmod@divisor+1,c
 14978  0029F6  0E64               	movlw	100
 14979  0029F8  6E03               	movwf	i2___awmod@divisor,c
 14980  0029FA  502A               	movf	i2scale@scl,w,c
 14981  0029FC  6E01               	movwf	i2___awmod@dividend,c
 14982  0029FE  6A02               	clrf	i2___awmod@dividend+1,c
 14983  002A00  BE01               	btfsc	i2___awmod@dividend,7,c
 14984  002A02  0602               	decf	i2___awmod@dividend+1,f,c
 14985  002A04  EC0C  F027         	call	i2___awmod	;wreg free
 14986  002A08  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14987  002A0C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14988  002A10  ECD4  F025         	call	i2___awdiv	;wreg free
 14989  002A14  0E09               	movlw	9
 14990  002A16  2407               	addwf	?i2___awdiv,w,c
 14991  002A18  6E0F               	movwf	i2___wmul@multiplier,c
 14992  002A1A  0E00               	movlw	0
 14993  002A1C  2008               	addwfc	?i2___awdiv+1,w,c
 14994  002A1E  6E10               	movwf	i2___wmul@multiplier+1,c
 14995  002A20  EC91  F02A         	call	i2___wmul	;wreg free
 14996  002A24  0E29               	movlw	low __npowers_
 14997  002A26  240F               	addwf	?i2___wmul,w,c
 14998  002A28  6EF6               	movwf	tblptrl,c
 14999  002A2A  0EFF               	movlw	high __npowers_
 15000  002A2C  2010               	addwfc	?i2___wmul+1,w,c
 15001  002A2E  6EF7               	movwf	tblptrh,c
 15002  002A30                     	if	1	;There are 3 active tblptr bytes
 15003  002A30  6AF8               	clrf	tblptru,c
 15004  002A32  0E00               	movlw	low (__mediumconst shr (0+16))
 15005  002A34  22F8               	addwfc	tblptru,f,c
 15006  002A36                     	endif
 15007  002A36  0009               	tblrd		*+
 15008  002A38  CFF5 F018          	movff	tablat,i2___ftmul@f2
 15009  002A3C  0009               	tblrd		*+
 15010  002A3E  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 15011  002A42  000A               	tblrd		*-
 15012  002A44  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 15013  002A48  0E00               	movlw	0
 15014  002A4A  6E0A               	movwf	i2___awdiv@divisor+1,c
 15015  002A4C  0E64               	movlw	100
 15016  002A4E  6E09               	movwf	i2___awdiv@divisor,c
 15017  002A50  502A               	movf	i2scale@scl,w,c
 15018  002A52  6E07               	movwf	i2___awdiv@dividend,c
 15019  002A54  6A08               	clrf	i2___awdiv@dividend+1,c
 15020  002A56  BE07               	btfsc	i2___awdiv@dividend,7,c
 15021  002A58  0608               	decf	i2___awdiv@dividend+1,f,c
 15022  002A5A  ECD4  F025         	call	i2___awdiv	;wreg free
 15023  002A5E  0E12               	movlw	18
 15024  002A60  2407               	addwf	?i2___awdiv,w,c
 15025  002A62  6E0F               	movwf	i2___wmul@multiplier,c
 15026  002A64  0E00               	movlw	0
 15027  002A66  2008               	addwfc	?i2___awdiv+1,w,c
 15028  002A68  6E10               	movwf	i2___wmul@multiplier+1,c
 15029  002A6A  0E00               	movlw	0
 15030  002A6C  6E12               	movwf	i2___wmul@multiplicand+1,c
 15031  002A6E  0E03               	movlw	3
 15032  002A70  6E11               	movwf	i2___wmul@multiplicand,c
 15033  002A72  EC91  F02A         	call	i2___wmul	;wreg free
 15034  002A76  0E29               	movlw	low __npowers_
 15035  002A78  240F               	addwf	?i2___wmul,w,c
 15036  002A7A  6EF6               	movwf	tblptrl,c
 15037  002A7C  0EFF               	movlw	high __npowers_
 15038  002A7E  2010               	addwfc	?i2___wmul+1,w,c
 15039  002A80  6EF7               	movwf	tblptrh,c
 15040  002A82                     	if	1	;There are 3 active tblptr bytes
 15041  002A82  6AF8               	clrf	tblptru,c
 15042  002A84  0E00               	movlw	low (__mediumconst shr (0+16))
 15043  002A86  22F8               	addwfc	tblptru,f,c
 15044  002A88                     	endif
 15045  002A88  0009               	tblrd		*+
 15046  002A8A  CFF5 F015          	movff	tablat,i2___ftmul@f1
 15047  002A8E  0009               	tblrd		*+
 15048  002A90  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 15049  002A94  000A               	tblrd		*-
 15050  002A96  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 15051  002A9A  ECF3  F020         	call	i2___ftmul	;wreg free
 15052  002A9E  C015  F027         	movff	?i2___ftmul,i2_scale$1778
 15053  002AA2  C016  F028         	movff	?i2___ftmul+1,i2_scale$1778+1
 15054  002AA6  C017  F029         	movff	?i2___ftmul+2,i2_scale$1778+2
 15055                           
 15056                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15057  002AAA  C027  F015         	movff	i2_scale$1778,i2___ftmul@f1
 15058  002AAE  C028  F016         	movff	i2_scale$1778+1,i2___ftmul@f1+1
 15059  002AB2  C029  F017         	movff	i2_scale$1778+2,i2___ftmul@f1+2
 15060  002AB6  0E00               	movlw	0
 15061  002AB8  6E12               	movwf	i2___wmul@multiplicand+1,c
 15062  002ABA  0E03               	movlw	3
 15063  002ABC  6E11               	movwf	i2___wmul@multiplicand,c
 15064  002ABE  0E00               	movlw	0
 15065  002AC0  6E04               	movwf	i2___awmod@divisor+1,c
 15066  002AC2  0E0A               	movlw	10
 15067  002AC4  6E03               	movwf	i2___awmod@divisor,c
 15068  002AC6  502A               	movf	i2scale@scl,w,c
 15069  002AC8  6E01               	movwf	i2___awmod@dividend,c
 15070  002ACA  6A02               	clrf	i2___awmod@dividend+1,c
 15071  002ACC  BE01               	btfsc	i2___awmod@dividend,7,c
 15072  002ACE  0602               	decf	i2___awmod@dividend+1,f,c
 15073  002AD0  EC0C  F027         	call	i2___awmod	;wreg free
 15074  002AD4  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15075  002AD8  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15076  002ADC  EC91  F02A         	call	i2___wmul	;wreg free
 15077  002AE0  0E29               	movlw	low __npowers_
 15078  002AE2  240F               	addwf	?i2___wmul,w,c
 15079  002AE4  6EF6               	movwf	tblptrl,c
 15080  002AE6  0EFF               	movlw	high __npowers_
 15081  002AE8  2010               	addwfc	?i2___wmul+1,w,c
 15082  002AEA  6EF7               	movwf	tblptrh,c
 15083  002AEC                     	if	1	;There are 3 active tblptr bytes
 15084  002AEC  6AF8               	clrf	tblptru,c
 15085  002AEE  0E00               	movlw	low (__mediumconst shr (0+16))
 15086  002AF0  22F8               	addwfc	tblptru,f,c
 15087  002AF2                     	endif
 15088  002AF2  0009               	tblrd		*+
 15089  002AF4  CFF5 F018          	movff	tablat,i2___ftmul@f2
 15090  002AF8  0009               	tblrd		*+
 15091  002AFA  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 15092  002AFE  000A               	tblrd		*-
 15093  002B00  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 15094  002B04  ECF3  F020         	call	i2___ftmul	;wreg free
 15095  002B08  C015  F024         	movff	?i2___ftmul,?i2_scale
 15096  002B0C  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 15097  002B10  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 15098  002B14  0012               	return	
 15099  002B16                     i2l4475:
 15100                           
 15101                           ;doprnt.c: 432: else if(scl > 10)
 15102  002B16  502A               	movf	i2scale@scl,w,c
 15103  002B18  0A80               	xorlw	128
 15104  002B1A  0F75               	addlw	-139
 15105  002B1C  A0D8               	btfss	status,0,c
 15106  002B1E  D053               	goto	i2l4481
 15107                           
 15108                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 15109  002B20  0E00               	movlw	0
 15110  002B22  6E0A               	movwf	i2___awdiv@divisor+1,c
 15111  002B24  0E0A               	movlw	10
 15112  002B26  6E09               	movwf	i2___awdiv@divisor,c
 15113  002B28  502A               	movf	i2scale@scl,w,c
 15114  002B2A  6E07               	movwf	i2___awdiv@dividend,c
 15115  002B2C  6A08               	clrf	i2___awdiv@dividend+1,c
 15116  002B2E  BE07               	btfsc	i2___awdiv@dividend,7,c
 15117  002B30  0608               	decf	i2___awdiv@dividend+1,f,c
 15118  002B32  ECD4  F025         	call	i2___awdiv	;wreg free
 15119  002B36  0E09               	movlw	9
 15120  002B38  2407               	addwf	?i2___awdiv,w,c
 15121  002B3A  6E0F               	movwf	i2___wmul@multiplier,c
 15122  002B3C  0E00               	movlw	0
 15123  002B3E  2008               	addwfc	?i2___awdiv+1,w,c
 15124  002B40  6E10               	movwf	i2___wmul@multiplier+1,c
 15125  002B42  0E00               	movlw	0
 15126  002B44  6E12               	movwf	i2___wmul@multiplicand+1,c
 15127  002B46  0E03               	movlw	3
 15128  002B48  6E11               	movwf	i2___wmul@multiplicand,c
 15129  002B4A  EC91  F02A         	call	i2___wmul	;wreg free
 15130  002B4E  0E29               	movlw	low __npowers_
 15131  002B50  240F               	addwf	?i2___wmul,w,c
 15132  002B52  6EF6               	movwf	tblptrl,c
 15133  002B54  0EFF               	movlw	high __npowers_
 15134  002B56  2010               	addwfc	?i2___wmul+1,w,c
 15135  002B58  6EF7               	movwf	tblptrh,c
 15136  002B5A                     	if	1	;There are 3 active tblptr bytes
 15137  002B5A  6AF8               	clrf	tblptru,c
 15138  002B5C  0E00               	movlw	low (__mediumconst shr (0+16))
 15139  002B5E  22F8               	addwfc	tblptru,f,c
 15140  002B60                     	endif
 15141  002B60  0009               	tblrd		*+
 15142  002B62  CFF5 F015          	movff	tablat,i2___ftmul@f1
 15143  002B66  0009               	tblrd		*+
 15144  002B68  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 15145  002B6C  000A               	tblrd		*-
 15146  002B6E  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 15147  002B72  0E00               	movlw	0
 15148  002B74  6E12               	movwf	i2___wmul@multiplicand+1,c
 15149  002B76  0E03               	movlw	3
 15150  002B78  6E11               	movwf	i2___wmul@multiplicand,c
 15151  002B7A  0E00               	movlw	0
 15152  002B7C  6E04               	movwf	i2___awmod@divisor+1,c
 15153  002B7E  0E0A               	movlw	10
 15154  002B80  6E03               	movwf	i2___awmod@divisor,c
 15155  002B82  502A               	movf	i2scale@scl,w,c
 15156  002B84  6E01               	movwf	i2___awmod@dividend,c
 15157  002B86  6A02               	clrf	i2___awmod@dividend+1,c
 15158  002B88  BE01               	btfsc	i2___awmod@dividend,7,c
 15159  002B8A  0602               	decf	i2___awmod@dividend+1,f,c
 15160  002B8C  EC0C  F027         	call	i2___awmod	;wreg free
 15161  002B90  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15162  002B94  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15163  002B98  EC91  F02A         	call	i2___wmul	;wreg free
 15164  002B9C  0E29               	movlw	low __npowers_
 15165  002B9E  240F               	addwf	?i2___wmul,w,c
 15166  002BA0  6EF6               	movwf	tblptrl,c
 15167  002BA2  0EFF               	movlw	high __npowers_
 15168  002BA4  2010               	addwfc	?i2___wmul+1,w,c
 15169  002BA6  6EF7               	movwf	tblptrh,c
 15170  002BA8                     	if	1	;There are 3 active tblptr bytes
 15171  002BA8  6AF8               	clrf	tblptru,c
 15172  002BAA  0E00               	movlw	low (__mediumconst shr (0+16))
 15173  002BAC  22F8               	addwfc	tblptru,f,c
 15174  002BAE                     	endif
 15175  002BAE  0009               	tblrd		*+
 15176  002BB0  CFF5 F018          	movff	tablat,i2___ftmul@f2
 15177  002BB4  0009               	tblrd		*+
 15178  002BB6  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 15179  002BBA  000A               	tblrd		*-
 15180  002BBC  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 15181  002BC0  ECF3  F020         	call	i2___ftmul	;wreg free
 15182  002BC4  D7A1               	goto	L25
 15183  002BC6                     i2l4481:
 15184                           
 15185                           ;doprnt.c: 434: return _npowers_[scl];
 15186  002BC6  502A               	movf	i2scale@scl,w,c
 15187  002BC8  0D03               	mullw	3
 15188  002BCA  0E29               	movlw	low __npowers_
 15189  002BCC  24F3               	addwf	prodl,w,c
 15190  002BCE  6EF6               	movwf	tblptrl,c
 15191  002BD0  0EFF               	movlw	high __npowers_
 15192  002BD2  20F4               	addwfc	prodh,w,c
 15193  002BD4  6EF7               	movwf	tblptrh,c
 15194  002BD6                     	if	1	;There are 3 active tblptr bytes
 15195  002BD6  6AF8               	clrf	tblptru,c
 15196  002BD8  0E00               	movlw	low (__mediumconst shr (0+16))
 15197  002BDA  22F8               	addwfc	tblptru,f,c
 15198  002BDC                     	endif
 15199  002BDC  0009               	tblrd		*+
 15200  002BDE  CFF5 F024          	movff	tablat,?i2_scale
 15201  002BE2  0009               	tblrd		*+
 15202  002BE4  CFF5 F025          	movff	tablat,?i2_scale+1
 15203  002BE8  000A               	tblrd		*-
 15204  002BEA  CFF5 F026          	movff	tablat,?i2_scale+2
 15205  002BEE  0012               	return	
 15206  002BF0                     i2l4485:
 15207                           
 15208                           ;doprnt.c: 435: }
 15209                           ;doprnt.c: 436: if(scl>=110)
 15210  002BF0  502A               	movf	i2scale@scl,w,c
 15211  002BF2  0A80               	xorlw	128
 15212  002BF4  0F12               	addlw	-238
 15213  002BF6  A0D8               	btfss	status,0,c
 15214  002BF8  D09A               	goto	i2l4493
 15215                           
 15216                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15217  002BFA  0E00               	movlw	0
 15218  002BFC  6E12               	movwf	i2___wmul@multiplicand+1,c
 15219  002BFE  0E03               	movlw	3
 15220  002C00  6E11               	movwf	i2___wmul@multiplicand,c
 15221  002C02  0E00               	movlw	0
 15222  002C04  6E0A               	movwf	i2___awdiv@divisor+1,c
 15223  002C06  0E0A               	movlw	10
 15224  002C08  6E09               	movwf	i2___awdiv@divisor,c
 15225  002C0A  0E00               	movlw	0
 15226  002C0C  6E04               	movwf	i2___awmod@divisor+1,c
 15227  002C0E  0E64               	movlw	100
 15228  002C10  6E03               	movwf	i2___awmod@divisor,c
 15229  002C12  502A               	movf	i2scale@scl,w,c
 15230  002C14  6E01               	movwf	i2___awmod@dividend,c
 15231  002C16  6A02               	clrf	i2___awmod@dividend+1,c
 15232  002C18  BE01               	btfsc	i2___awmod@dividend,7,c
 15233  002C1A  0602               	decf	i2___awmod@dividend+1,f,c
 15234  002C1C  EC0C  F027         	call	i2___awmod	;wreg free
 15235  002C20  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15236  002C24  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15237  002C28  ECD4  F025         	call	i2___awdiv	;wreg free
 15238  002C2C  0E09               	movlw	9
 15239  002C2E  2407               	addwf	?i2___awdiv,w,c
 15240  002C30  6E0F               	movwf	i2___wmul@multiplier,c
 15241  002C32  0E00               	movlw	0
 15242  002C34  2008               	addwfc	?i2___awdiv+1,w,c
 15243  002C36  6E10               	movwf	i2___wmul@multiplier+1,c
 15244  002C38  EC91  F02A         	call	i2___wmul	;wreg free
 15245  002C3C  0E50               	movlw	low __powers_
 15246  002C3E  240F               	addwf	?i2___wmul,w,c
 15247  002C40  6EF6               	movwf	tblptrl,c
 15248  002C42  0EFF               	movlw	high __powers_
 15249  002C44  2010               	addwfc	?i2___wmul+1,w,c
 15250  002C46  6EF7               	movwf	tblptrh,c
 15251  002C48                     	if	1	;There are 3 active tblptr bytes
 15252  002C48  6AF8               	clrf	tblptru,c
 15253  002C4A  0E00               	movlw	low (__mediumconst shr (0+16))
 15254  002C4C  22F8               	addwfc	tblptru,f,c
 15255  002C4E                     	endif
 15256  002C4E  0009               	tblrd		*+
 15257  002C50  CFF5 F018          	movff	tablat,i2___ftmul@f2
 15258  002C54  0009               	tblrd		*+
 15259  002C56  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 15260  002C5A  000A               	tblrd		*-
 15261  002C5C  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 15262  002C60  0E00               	movlw	0
 15263  002C62  6E0A               	movwf	i2___awdiv@divisor+1,c
 15264  002C64  0E64               	movlw	100
 15265  002C66  6E09               	movwf	i2___awdiv@divisor,c
 15266  002C68  502A               	movf	i2scale@scl,w,c
 15267  002C6A  6E07               	movwf	i2___awdiv@dividend,c
 15268  002C6C  6A08               	clrf	i2___awdiv@dividend+1,c
 15269  002C6E  BE07               	btfsc	i2___awdiv@dividend,7,c
 15270  002C70  0608               	decf	i2___awdiv@dividend+1,f,c
 15271  002C72  ECD4  F025         	call	i2___awdiv	;wreg free
 15272  002C76  0E12               	movlw	18
 15273  002C78  2407               	addwf	?i2___awdiv,w,c
 15274  002C7A  6E0F               	movwf	i2___wmul@multiplier,c
 15275  002C7C  0E00               	movlw	0
 15276  002C7E  2008               	addwfc	?i2___awdiv+1,w,c
 15277  002C80  6E10               	movwf	i2___wmul@multiplier+1,c
 15278  002C82  0E00               	movlw	0
 15279  002C84  6E12               	movwf	i2___wmul@multiplicand+1,c
 15280  002C86  0E03               	movlw	3
 15281  002C88  6E11               	movwf	i2___wmul@multiplicand,c
 15282  002C8A  EC91  F02A         	call	i2___wmul	;wreg free
 15283  002C8E  0E50               	movlw	low __powers_
 15284  002C90  240F               	addwf	?i2___wmul,w,c
 15285  002C92  6EF6               	movwf	tblptrl,c
 15286  002C94  0EFF               	movlw	high __powers_
 15287  002C96  2010               	addwfc	?i2___wmul+1,w,c
 15288  002C98  6EF7               	movwf	tblptrh,c
 15289  002C9A                     	if	1	;There are 3 active tblptr bytes
 15290  002C9A  6AF8               	clrf	tblptru,c
 15291  002C9C  0E00               	movlw	low (__mediumconst shr (0+16))
 15292  002C9E  22F8               	addwfc	tblptru,f,c
 15293  002CA0                     	endif
 15294  002CA0  0009               	tblrd		*+
 15295  002CA2  CFF5 F015          	movff	tablat,i2___ftmul@f1
 15296  002CA6  0009               	tblrd		*+
 15297  002CA8  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 15298  002CAC  000A               	tblrd		*-
 15299  002CAE  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 15300  002CB2  ECF3  F020         	call	i2___ftmul	;wreg free
 15301  002CB6  C015  F027         	movff	?i2___ftmul,i2_scale$1778
 15302  002CBA  C016  F028         	movff	?i2___ftmul+1,i2_scale$1778+1
 15303  002CBE  C017  F029         	movff	?i2___ftmul+2,i2_scale$1778+2
 15304                           
 15305                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15306  002CC2  C027  F015         	movff	i2_scale$1778,i2___ftmul@f1
 15307  002CC6  C028  F016         	movff	i2_scale$1778+1,i2___ftmul@f1+1
 15308  002CCA  C029  F017         	movff	i2_scale$1778+2,i2___ftmul@f1+2
 15309  002CCE  0E00               	movlw	0
 15310  002CD0  6E12               	movwf	i2___wmul@multiplicand+1,c
 15311  002CD2  0E03               	movlw	3
 15312  002CD4  6E11               	movwf	i2___wmul@multiplicand,c
 15313  002CD6  0E00               	movlw	0
 15314  002CD8  6E04               	movwf	i2___awmod@divisor+1,c
 15315  002CDA  0E0A               	movlw	10
 15316  002CDC  6E03               	movwf	i2___awmod@divisor,c
 15317  002CDE  502A               	movf	i2scale@scl,w,c
 15318  002CE0  6E01               	movwf	i2___awmod@dividend,c
 15319  002CE2  6A02               	clrf	i2___awmod@dividend+1,c
 15320  002CE4  BE01               	btfsc	i2___awmod@dividend,7,c
 15321  002CE6  0602               	decf	i2___awmod@dividend+1,f,c
 15322  002CE8  EC0C  F027         	call	i2___awmod	;wreg free
 15323  002CEC  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15324  002CF0  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15325  002CF4  EC91  F02A         	call	i2___wmul	;wreg free
 15326  002CF8  0E50               	movlw	low __powers_
 15327  002CFA  240F               	addwf	?i2___wmul,w,c
 15328  002CFC  6EF6               	movwf	tblptrl,c
 15329  002CFE  0EFF               	movlw	high __powers_
 15330  002D00  2010               	addwfc	?i2___wmul+1,w,c
 15331  002D02  6EF7               	movwf	tblptrh,c
 15332  002D04                     	if	1	;There are 3 active tblptr bytes
 15333  002D04  6AF8               	clrf	tblptru,c
 15334  002D06  0E00               	movlw	low (__mediumconst shr (0+16))
 15335  002D08  22F8               	addwfc	tblptru,f,c
 15336  002D0A                     	endif
 15337  002D0A  0009               	tblrd		*+
 15338  002D0C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 15339  002D10  0009               	tblrd		*+
 15340  002D12  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 15341  002D16  000A               	tblrd		*-
 15342  002D18  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 15343  002D1C  ECF3  F020         	call	i2___ftmul	;wreg free
 15344  002D20  C015  F024         	movff	?i2___ftmul,?i2_scale
 15345  002D24  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 15346  002D28  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 15347  002D2C  0012               	return	
 15348  002D2E                     i2l4493:
 15349                           
 15350                           ;doprnt.c: 438: else if(scl > 10)
 15351  002D2E  502A               	movf	i2scale@scl,w,c
 15352  002D30  0A80               	xorlw	128
 15353  002D32  0F75               	addlw	-139
 15354  002D34  A0D8               	btfss	status,0,c
 15355  002D36  D053               	goto	i2l4499
 15356                           
 15357                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 15358  002D38  0E00               	movlw	0
 15359  002D3A  6E0A               	movwf	i2___awdiv@divisor+1,c
 15360  002D3C  0E0A               	movlw	10
 15361  002D3E  6E09               	movwf	i2___awdiv@divisor,c
 15362  002D40  502A               	movf	i2scale@scl,w,c
 15363  002D42  6E07               	movwf	i2___awdiv@dividend,c
 15364  002D44  6A08               	clrf	i2___awdiv@dividend+1,c
 15365  002D46  BE07               	btfsc	i2___awdiv@dividend,7,c
 15366  002D48  0608               	decf	i2___awdiv@dividend+1,f,c
 15367  002D4A  ECD4  F025         	call	i2___awdiv	;wreg free
 15368  002D4E  0E09               	movlw	9
 15369  002D50  2407               	addwf	?i2___awdiv,w,c
 15370  002D52  6E0F               	movwf	i2___wmul@multiplier,c
 15371  002D54  0E00               	movlw	0
 15372  002D56  2008               	addwfc	?i2___awdiv+1,w,c
 15373  002D58  6E10               	movwf	i2___wmul@multiplier+1,c
 15374  002D5A  0E00               	movlw	0
 15375  002D5C  6E12               	movwf	i2___wmul@multiplicand+1,c
 15376  002D5E  0E03               	movlw	3
 15377  002D60  6E11               	movwf	i2___wmul@multiplicand,c
 15378  002D62  EC91  F02A         	call	i2___wmul	;wreg free
 15379  002D66  0E50               	movlw	low __powers_
 15380  002D68  240F               	addwf	?i2___wmul,w,c
 15381  002D6A  6EF6               	movwf	tblptrl,c
 15382  002D6C  0EFF               	movlw	high __powers_
 15383  002D6E  2010               	addwfc	?i2___wmul+1,w,c
 15384  002D70  6EF7               	movwf	tblptrh,c
 15385  002D72                     	if	1	;There are 3 active tblptr bytes
 15386  002D72  6AF8               	clrf	tblptru,c
 15387  002D74  0E00               	movlw	low (__mediumconst shr (0+16))
 15388  002D76  22F8               	addwfc	tblptru,f,c
 15389  002D78                     	endif
 15390  002D78  0009               	tblrd		*+
 15391  002D7A  CFF5 F015          	movff	tablat,i2___ftmul@f1
 15392  002D7E  0009               	tblrd		*+
 15393  002D80  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 15394  002D84  000A               	tblrd		*-
 15395  002D86  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 15396  002D8A  0E00               	movlw	0
 15397  002D8C  6E12               	movwf	i2___wmul@multiplicand+1,c
 15398  002D8E  0E03               	movlw	3
 15399  002D90  6E11               	movwf	i2___wmul@multiplicand,c
 15400  002D92  0E00               	movlw	0
 15401  002D94  6E04               	movwf	i2___awmod@divisor+1,c
 15402  002D96  0E0A               	movlw	10
 15403  002D98  6E03               	movwf	i2___awmod@divisor,c
 15404  002D9A  502A               	movf	i2scale@scl,w,c
 15405  002D9C  6E01               	movwf	i2___awmod@dividend,c
 15406  002D9E  6A02               	clrf	i2___awmod@dividend+1,c
 15407  002DA0  BE01               	btfsc	i2___awmod@dividend,7,c
 15408  002DA2  0602               	decf	i2___awmod@dividend+1,f,c
 15409  002DA4  EC0C  F027         	call	i2___awmod	;wreg free
 15410  002DA8  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15411  002DAC  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15412  002DB0  EC91  F02A         	call	i2___wmul	;wreg free
 15413  002DB4  0E50               	movlw	low __powers_
 15414  002DB6  240F               	addwf	?i2___wmul,w,c
 15415  002DB8  6EF6               	movwf	tblptrl,c
 15416  002DBA  0EFF               	movlw	high __powers_
 15417  002DBC  2010               	addwfc	?i2___wmul+1,w,c
 15418  002DBE  6EF7               	movwf	tblptrh,c
 15419  002DC0                     	if	1	;There are 3 active tblptr bytes
 15420  002DC0  6AF8               	clrf	tblptru,c
 15421  002DC2  0E00               	movlw	low (__mediumconst shr (0+16))
 15422  002DC4  22F8               	addwfc	tblptru,f,c
 15423  002DC6                     	endif
 15424  002DC6  0009               	tblrd		*+
 15425  002DC8  CFF5 F018          	movff	tablat,i2___ftmul@f2
 15426  002DCC  0009               	tblrd		*+
 15427  002DCE  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 15428  002DD2  000A               	tblrd		*-
 15429  002DD4  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 15430  002DD8  ECF3  F020         	call	i2___ftmul	;wreg free
 15431  002DDC  D7A1               	goto	L26
 15432  002DDE                     i2l4499:
 15433                           
 15434                           ;doprnt.c: 440: return _powers_[scl];
 15435  002DDE  502A               	movf	i2scale@scl,w,c
 15436  002DE0  0D03               	mullw	3
 15437  002DE2  0E50               	movlw	low __powers_
 15438  002DE4  24F3               	addwf	prodl,w,c
 15439  002DE6  6EF6               	movwf	tblptrl,c
 15440  002DE8  0EFF               	movlw	high __powers_
 15441  002DEA  20F4               	addwfc	prodh,w,c
 15442  002DEC  6EF7               	movwf	tblptrh,c
 15443  002DEE                     	if	1	;There are 3 active tblptr bytes
 15444  002DEE  6AF8               	clrf	tblptru,c
 15445  002DF0  0E00               	movlw	low (__mediumconst shr (0+16))
 15446  002DF2  22F8               	addwfc	tblptru,f,c
 15447  002DF4                     	endif
 15448  002DF4  0009               	tblrd		*+
 15449  002DF6  CFF5 F024          	movff	tablat,?i2_scale
 15450  002DFA  0009               	tblrd		*+
 15451  002DFC  CFF5 F025          	movff	tablat,?i2_scale+1
 15452  002E00  000A               	tblrd		*-
 15453  002E02  CFF5 F026          	movff	tablat,?i2_scale+2
 15454  002E06  0012               	return	
 15455  002E08                     __end_ofi2_scale:
 15456                           	opt stack 0
 15457                           pclatu	equ	0xFFB
 15458                           pclath	equ	0xFFA
 15459                           tblptru	equ	0xFF8
 15460                           tblptrh	equ	0xFF7
 15461                           tblptrl	equ	0xFF6
 15462                           tablat	equ	0xFF5
 15463                           prodh	equ	0xFF4
 15464                           prodl	equ	0xFF3
 15465                           intcon	equ	0xFF2
 15466                           intcon2	equ	0xFF1
 15467                           intcon3	equ	0xFF0
 15468                           postinc0	equ	0xFEE
 15469                           fsr0h	equ	0xFEA
 15470                           fsr0l	equ	0xFE9
 15471                           wreg	equ	0xFE8
 15472                           indf1	equ	0xFE7
 15473                           postdec1	equ	0xFE5
 15474                           fsr1h	equ	0xFE2
 15475                           fsr1l	equ	0xFE1
 15476                           indf2	equ	0xFDF
 15477                           postinc2	equ	0xFDE
 15478                           postdec2	equ	0xFDD
 15479                           fsr2h	equ	0xFDA
 15480                           fsr2l	equ	0xFD9
 15481                           status	equ	0xFD8
 15482                           
 15483 ;; *************** function i2_isdigit *****************
 15484 ;; Defined at:
 15485 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;  c               1    wreg     unsigned char 
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;  c               1    2[COMRAM] unsigned char 
 15490 ;; Return value:  Size  Location     Type
 15491 ;;		None               void
 15492 ;; Registers used:
 15493 ;;		wreg, status,2, status,0
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15502 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15503 ;;Total ram usage:        3 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; This function calls:
 15506 ;;		Nothing
 15507 ;; This function is called by:
 15508 ;;		i2_sprintf
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           	psect	text49
 15513  0055F6                     __ptext49:
 15514                           	opt stack 0
 15515  0055F6                     i2_isdigit:
 15516                           	opt stack 21
 15517                           
 15518                           ;incstack = 0
 15519                           ;i2isdigit@c stored from wreg
 15520  0055F6  6E03               	movwf	i2isdigit@c,c
 15521  0055F8  0E00               	movlw	0
 15522  0055FA  6E02               	movwf	i2_isdigit$1219,c
 15523  0055FC  0E3A               	movlw	58
 15524  0055FE  6003               	cpfslt	i2isdigit@c,c
 15525  005600  D005               	goto	i2l4703
 15526  005602  0E2F               	movlw	47
 15527  005604  6403               	cpfsgt	i2isdigit@c,c
 15528  005606  D002               	goto	i2l4703
 15529  005608  0E01               	movlw	1
 15530  00560A  6E02               	movwf	i2_isdigit$1219,c
 15531  00560C                     i2l4703:
 15532  00560C  C002  F001         	movff	i2_isdigit$1219,??i2_isdigit
 15533  005610  3001               	rrcf	??i2_isdigit,w,c
 15534  005612  0012               	return	
 15535  005614                     __end_ofi2_isdigit:
 15536                           	opt stack 0
 15537                           pclatu	equ	0xFFB
 15538                           pclath	equ	0xFFA
 15539                           tblptru	equ	0xFF8
 15540                           tblptrh	equ	0xFF7
 15541                           tblptrl	equ	0xFF6
 15542                           tablat	equ	0xFF5
 15543                           prodh	equ	0xFF4
 15544                           prodl	equ	0xFF3
 15545                           intcon	equ	0xFF2
 15546                           intcon2	equ	0xFF1
 15547                           intcon3	equ	0xFF0
 15548                           postinc0	equ	0xFEE
 15549                           fsr0h	equ	0xFEA
 15550                           fsr0l	equ	0xFE9
 15551                           wreg	equ	0xFE8
 15552                           indf1	equ	0xFE7
 15553                           postdec1	equ	0xFE5
 15554                           fsr1h	equ	0xFE2
 15555                           fsr1l	equ	0xFE1
 15556                           indf2	equ	0xFDF
 15557                           postinc2	equ	0xFDE
 15558                           postdec2	equ	0xFDD
 15559                           fsr2h	equ	0xFDA
 15560                           fsr2l	equ	0xFD9
 15561                           status	equ	0xFD8
 15562                           
 15563 ;; *************** function i2_fround *****************
 15564 ;; Defined at:
 15565 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 15566 ;; Parameters:    Size  Location     Type
 15567 ;;  prec            1    wreg     unsigned char 
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;  prec            1   44[COMRAM] unsigned char 
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  3   35[COMRAM] unsigned char 
 15572 ;; Registers used:
 15573 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15579 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15580 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15582 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15583 ;;Total ram usage:       10 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:    2
 15586 ;; This function calls:
 15587 ;;		i2___awdiv
 15588 ;;		i2___awmod
 15589 ;;		i2___ftmul
 15590 ;;		i2___wmul
 15591 ;; This function is called by:
 15592 ;;		i2_sprintf
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           	psect	text50
 15597  0030D8                     __ptext50:
 15598                           	opt stack 0
 15599  0030D8                     i2_fround:
 15600                           	opt stack 19
 15601                           
 15602                           ;incstack = 0
 15603                           ;i2fround@prec stored from wreg
 15604  0030D8  6E2D               	movwf	i2fround@prec,c
 15605                           
 15606                           ;doprnt.c: 413: if(prec>=110)
 15607  0030DA  0E6D               	movlw	109
 15608  0030DC  642D               	cpfsgt	i2fround@prec,c
 15609  0030DE  D0A8               	goto	i2l4453
 15610                           
 15611                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15612  0030E0  0E00               	movlw	0
 15613  0030E2  6E12               	movwf	i2___wmul@multiplicand+1,c
 15614  0030E4  0E03               	movlw	3
 15615  0030E6  6E11               	movwf	i2___wmul@multiplicand,c
 15616  0030E8  0E00               	movlw	0
 15617  0030EA  6E0A               	movwf	i2___awdiv@divisor+1,c
 15618  0030EC  0E0A               	movlw	10
 15619  0030EE  6E09               	movwf	i2___awdiv@divisor,c
 15620  0030F0  0E00               	movlw	0
 15621  0030F2  6E04               	movwf	i2___awmod@divisor+1,c
 15622  0030F4  0E64               	movlw	100
 15623  0030F6  6E03               	movwf	i2___awmod@divisor,c
 15624  0030F8  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 15625  0030FC  6A02               	clrf	i2___awmod@dividend+1,c
 15626  0030FE  EC0C  F027         	call	i2___awmod	;wreg free
 15627  003102  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15628  003106  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15629  00310A  ECD4  F025         	call	i2___awdiv	;wreg free
 15630  00310E  0E09               	movlw	9
 15631  003110  2407               	addwf	?i2___awdiv,w,c
 15632  003112  6E0F               	movwf	i2___wmul@multiplier,c
 15633  003114  0E00               	movlw	0
 15634  003116  2008               	addwfc	?i2___awdiv+1,w,c
 15635  003118  6E10               	movwf	i2___wmul@multiplier+1,c
 15636  00311A  EC91  F02A         	call	i2___wmul	;wreg free
 15637  00311E  0E29               	movlw	low __npowers_
 15638  003120  240F               	addwf	?i2___wmul,w,c
 15639  003122  6EF6               	movwf	tblptrl,c
 15640  003124  0EFF               	movlw	high __npowers_
 15641  003126  2010               	addwfc	?i2___wmul+1,w,c
 15642  003128  6EF7               	movwf	tblptrh,c
 15643  00312A                     	if	1	;There are 3 active tblptr bytes
 15644  00312A  6AF8               	clrf	tblptru,c
 15645  00312C  0E00               	movlw	low (__mediumconst shr (0+16))
 15646  00312E  22F8               	addwfc	tblptru,f,c
 15647  003130                     	endif
 15648  003130  0009               	tblrd		*+
 15649  003132  CFF5 F018          	movff	tablat,i2___ftmul@f2
 15650  003136  0009               	tblrd		*+
 15651  003138  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 15652  00313C  000A               	tblrd		*-
 15653  00313E  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 15654  003142  0E00               	movlw	0
 15655  003144  6E0A               	movwf	i2___awdiv@divisor+1,c
 15656  003146  0E64               	movlw	100
 15657  003148  6E09               	movwf	i2___awdiv@divisor,c
 15658  00314A  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15659  00314E  6A08               	clrf	i2___awdiv@dividend+1,c
 15660  003150  ECD4  F025         	call	i2___awdiv	;wreg free
 15661  003154  0E12               	movlw	18
 15662  003156  2407               	addwf	?i2___awdiv,w,c
 15663  003158  6E0F               	movwf	i2___wmul@multiplier,c
 15664  00315A  0E00               	movlw	0
 15665  00315C  2008               	addwfc	?i2___awdiv+1,w,c
 15666  00315E  6E10               	movwf	i2___wmul@multiplier+1,c
 15667  003160  0E00               	movlw	0
 15668  003162  6E12               	movwf	i2___wmul@multiplicand+1,c
 15669  003164  0E03               	movlw	3
 15670  003166  6E11               	movwf	i2___wmul@multiplicand,c
 15671  003168  EC91  F02A         	call	i2___wmul	;wreg free
 15672  00316C  0E29               	movlw	low __npowers_
 15673  00316E  240F               	addwf	?i2___wmul,w,c
 15674  003170  6EF6               	movwf	tblptrl,c
 15675  003172  0EFF               	movlw	high __npowers_
 15676  003174  2010               	addwfc	?i2___wmul+1,w,c
 15677  003176  6EF7               	movwf	tblptrh,c
 15678  003178                     	if	1	;There are 3 active tblptr bytes
 15679  003178  6AF8               	clrf	tblptru,c
 15680  00317A  0E00               	movlw	low (__mediumconst shr (0+16))
 15681  00317C  22F8               	addwfc	tblptru,f,c
 15682  00317E                     	endif
 15683  00317E  0009               	tblrd		*+
 15684  003180  CFF5 F015          	movff	tablat,i2___ftmul@f1
 15685  003184  0009               	tblrd		*+
 15686  003186  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 15687  00318A  000A               	tblrd		*-
 15688  00318C  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 15689  003190  ECF3  F020         	call	i2___ftmul	;wreg free
 15690  003194  C015  F02A         	movff	?i2___ftmul,i2_fround$1776
 15691  003198  C016  F02B         	movff	?i2___ftmul+1,i2_fround$1776+1
 15692  00319C  C017  F02C         	movff	?i2___ftmul+2,i2_fround$1776+2
 15693                           
 15694                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15695  0031A0  0E00               	movlw	0
 15696  0031A2  6E12               	movwf	i2___wmul@multiplicand+1,c
 15697  0031A4  0E03               	movlw	3
 15698  0031A6  6E11               	movwf	i2___wmul@multiplicand,c
 15699  0031A8  0E00               	movlw	0
 15700  0031AA  6E04               	movwf	i2___awmod@divisor+1,c
 15701  0031AC  0E0A               	movlw	10
 15702  0031AE  6E03               	movwf	i2___awmod@divisor,c
 15703  0031B0  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 15704  0031B4  6A02               	clrf	i2___awmod@dividend+1,c
 15705  0031B6  EC0C  F027         	call	i2___awmod	;wreg free
 15706  0031BA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15707  0031BE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15708  0031C2  EC91  F02A         	call	i2___wmul	;wreg free
 15709  0031C6  0E29               	movlw	low __npowers_
 15710  0031C8  240F               	addwf	?i2___wmul,w,c
 15711  0031CA  6EF6               	movwf	tblptrl,c
 15712  0031CC  0EFF               	movlw	high __npowers_
 15713  0031CE  2010               	addwfc	?i2___wmul+1,w,c
 15714  0031D0  6EF7               	movwf	tblptrh,c
 15715  0031D2                     	if	1	;There are 3 active tblptr bytes
 15716  0031D2  6AF8               	clrf	tblptru,c
 15717  0031D4  0E00               	movlw	low (__mediumconst shr (0+16))
 15718  0031D6  22F8               	addwfc	tblptru,f,c
 15719  0031D8                     	endif
 15720  0031D8  0009               	tblrd		*+
 15721  0031DA  CFF5 F018          	movff	tablat,i2___ftmul@f2
 15722  0031DE  0009               	tblrd		*+
 15723  0031E0  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 15724  0031E4  000A               	tblrd		*-
 15725  0031E6  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 15726  0031EA  C02A  F015         	movff	i2_fround$1776,i2___ftmul@f1
 15727  0031EE  C02B  F016         	movff	i2_fround$1776+1,i2___ftmul@f1+1
 15728  0031F2  C02C  F017         	movff	i2_fround$1776+2,i2___ftmul@f1+2
 15729  0031F6  ECF3  F020         	call	i2___ftmul	;wreg free
 15730  0031FA  C015  F027         	movff	?i2___ftmul,i2_fround$1777
 15731  0031FE  C016  F028         	movff	?i2___ftmul+1,i2_fround$1777+1
 15732  003202  C017  F029         	movff	?i2___ftmul+2,i2_fround$1777+2
 15733                           
 15734                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15735  003206  C027  F015         	movff	i2_fround$1777,i2___ftmul@f1
 15736  00320A  C028  F016         	movff	i2_fround$1777+1,i2___ftmul@f1+1
 15737  00320E  C029  F017         	movff	i2_fround$1777+2,i2___ftmul@f1+2
 15738  003212  0E00               	movlw	0
 15739  003214  6E18               	movwf	i2___ftmul@f2,c
 15740  003216  0E00               	movlw	0
 15741  003218  6E19               	movwf	i2___ftmul@f2+1,c
 15742  00321A  0E3F               	movlw	63
 15743  00321C  6E1A               	movwf	i2___ftmul@f2+2,c
 15744  00321E  ECF3  F020         	call	i2___ftmul	;wreg free
 15745  003222  C015  F024         	movff	?i2___ftmul,?i2_fround
 15746  003226  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 15747  00322A  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 15748  00322E  0012               	return	
 15749  003230                     i2l4453:
 15750                           
 15751                           ;doprnt.c: 415: else if(prec > 10)
 15752  003230  0E0A               	movlw	10
 15753  003232  642D               	cpfsgt	i2fround@prec,c
 15754  003234  D063               	goto	i2l4461
 15755                           
 15756                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15757  003236  0E00               	movlw	0
 15758  003238  6E12               	movwf	i2___wmul@multiplicand+1,c
 15759  00323A  0E03               	movlw	3
 15760  00323C  6E11               	movwf	i2___wmul@multiplicand,c
 15761  00323E  0E00               	movlw	0
 15762  003240  6E04               	movwf	i2___awmod@divisor+1,c
 15763  003242  0E0A               	movlw	10
 15764  003244  6E03               	movwf	i2___awmod@divisor,c
 15765  003246  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 15766  00324A  6A02               	clrf	i2___awmod@dividend+1,c
 15767  00324C  EC0C  F027         	call	i2___awmod	;wreg free
 15768  003250  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15769  003254  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15770  003258  EC91  F02A         	call	i2___wmul	;wreg free
 15771  00325C  0E29               	movlw	low __npowers_
 15772  00325E  240F               	addwf	?i2___wmul,w,c
 15773  003260  6EF6               	movwf	tblptrl,c
 15774  003262  0EFF               	movlw	high __npowers_
 15775  003264  2010               	addwfc	?i2___wmul+1,w,c
 15776  003266  6EF7               	movwf	tblptrh,c
 15777  003268                     	if	1	;There are 3 active tblptr bytes
 15778  003268  6AF8               	clrf	tblptru,c
 15779  00326A  0E00               	movlw	low (__mediumconst shr (0+16))
 15780  00326C  22F8               	addwfc	tblptru,f,c
 15781  00326E                     	endif
 15782  00326E  0009               	tblrd		*+
 15783  003270  CFF5 F018          	movff	tablat,i2___ftmul@f2
 15784  003274  0009               	tblrd		*+
 15785  003276  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 15786  00327A  000A               	tblrd		*-
 15787  00327C  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 15788  003280  0E00               	movlw	0
 15789  003282  6E0A               	movwf	i2___awdiv@divisor+1,c
 15790  003284  0E0A               	movlw	10
 15791  003286  6E09               	movwf	i2___awdiv@divisor,c
 15792  003288  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15793  00328C  6A08               	clrf	i2___awdiv@dividend+1,c
 15794  00328E  ECD4  F025         	call	i2___awdiv	;wreg free
 15795  003292  0E09               	movlw	9
 15796  003294  2407               	addwf	?i2___awdiv,w,c
 15797  003296  6E0F               	movwf	i2___wmul@multiplier,c
 15798  003298  0E00               	movlw	0
 15799  00329A  2008               	addwfc	?i2___awdiv+1,w,c
 15800  00329C  6E10               	movwf	i2___wmul@multiplier+1,c
 15801  00329E  0E00               	movlw	0
 15802  0032A0  6E12               	movwf	i2___wmul@multiplicand+1,c
 15803  0032A2  0E03               	movlw	3
 15804  0032A4  6E11               	movwf	i2___wmul@multiplicand,c
 15805  0032A6  EC91  F02A         	call	i2___wmul	;wreg free
 15806  0032AA  0E29               	movlw	low __npowers_
 15807  0032AC  240F               	addwf	?i2___wmul,w,c
 15808  0032AE  6EF6               	movwf	tblptrl,c
 15809  0032B0  0EFF               	movlw	high __npowers_
 15810  0032B2  2010               	addwfc	?i2___wmul+1,w,c
 15811  0032B4  6EF7               	movwf	tblptrh,c
 15812  0032B6                     	if	1	;There are 3 active tblptr bytes
 15813  0032B6  6AF8               	clrf	tblptru,c
 15814  0032B8  0E00               	movlw	low (__mediumconst shr (0+16))
 15815  0032BA  22F8               	addwfc	tblptru,f,c
 15816  0032BC                     	endif
 15817  0032BC  0009               	tblrd		*+
 15818  0032BE  CFF5 F015          	movff	tablat,i2___ftmul@f1
 15819  0032C2  0009               	tblrd		*+
 15820  0032C4  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 15821  0032C8  000A               	tblrd		*-
 15822  0032CA  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 15823  0032CE  ECF3  F020         	call	i2___ftmul	;wreg free
 15824  0032D2  C015  F02A         	movff	?i2___ftmul,i2_fround$1776
 15825  0032D6  C016  F02B         	movff	?i2___ftmul+1,i2_fround$1776+1
 15826  0032DA  C017  F02C         	movff	?i2___ftmul+2,i2_fround$1776+2
 15827                           
 15828                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15829  0032DE  C02A  F015         	movff	i2_fround$1776,i2___ftmul@f1
 15830  0032E2  C02B  F016         	movff	i2_fround$1776+1,i2___ftmul@f1+1
 15831  0032E6  C02C  F017         	movff	i2_fround$1776+2,i2___ftmul@f1+2
 15832  0032EA  0E00               	movlw	0
 15833  0032EC  6E18               	movwf	i2___ftmul@f2,c
 15834  0032EE  0E00               	movlw	0
 15835  0032F0  6E19               	movwf	i2___ftmul@f2+1,c
 15836  0032F2  0E3F               	movlw	63
 15837  0032F4  6E1A               	movwf	i2___ftmul@f2+2,c
 15838  0032F6  ECF3  F020         	call	i2___ftmul	;wreg free
 15839  0032FA  D793               	goto	L27
 15840  0032FC                     i2l4461:
 15841                           
 15842                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 15843  0032FC  502D               	movf	i2fround@prec,w,c
 15844  0032FE  0D03               	mullw	3
 15845  003300  0E29               	movlw	low __npowers_
 15846  003302  24F3               	addwf	prodl,w,c
 15847  003304  6EF6               	movwf	tblptrl,c
 15848  003306  0EFF               	movlw	high __npowers_
 15849  003308  20F4               	addwfc	prodh,w,c
 15850  00330A  6EF7               	movwf	tblptrh,c
 15851  00330C                     	if	1	;There are 3 active tblptr bytes
 15852  00330C  6AF8               	clrf	tblptru,c
 15853  00330E  0E00               	movlw	low (__mediumconst shr (0+16))
 15854  003310  22F8               	addwfc	tblptru,f,c
 15855  003312                     	endif
 15856  003312  0009               	tblrd		*+
 15857  003314  CFF5 F015          	movff	tablat,i2___ftmul@f1
 15858  003318  0009               	tblrd		*+
 15859  00331A  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 15860  00331E  000A               	tblrd		*-
 15861  003320  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 15862  003324  0E00               	movlw	0
 15863  003326  6E18               	movwf	i2___ftmul@f2,c
 15864  003328  0E00               	movlw	0
 15865  00332A  6E19               	movwf	i2___ftmul@f2+1,c
 15866  00332C  0E3F               	movlw	63
 15867  00332E  6E1A               	movwf	i2___ftmul@f2+2,c
 15868  003330  ECF3  F020         	call	i2___ftmul	;wreg free
 15869  003334  C015  F024         	movff	?i2___ftmul,?i2_fround
 15870  003338  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 15871  00333C  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 15872  003340  0012               	return	
 15873  003342                     __end_ofi2_fround:
 15874                           	opt stack 0
 15875                           pclatu	equ	0xFFB
 15876                           pclath	equ	0xFFA
 15877                           tblptru	equ	0xFF8
 15878                           tblptrh	equ	0xFF7
 15879                           tblptrl	equ	0xFF6
 15880                           tablat	equ	0xFF5
 15881                           prodh	equ	0xFF4
 15882                           prodl	equ	0xFF3
 15883                           intcon	equ	0xFF2
 15884                           intcon2	equ	0xFF1
 15885                           intcon3	equ	0xFF0
 15886                           postinc0	equ	0xFEE
 15887                           fsr0h	equ	0xFEA
 15888                           fsr0l	equ	0xFE9
 15889                           wreg	equ	0xFE8
 15890                           indf1	equ	0xFE7
 15891                           postdec1	equ	0xFE5
 15892                           fsr1h	equ	0xFE2
 15893                           fsr1l	equ	0xFE1
 15894                           indf2	equ	0xFDF
 15895                           postinc2	equ	0xFDE
 15896                           postdec2	equ	0xFDD
 15897                           fsr2h	equ	0xFDA
 15898                           fsr2l	equ	0xFD9
 15899                           status	equ	0xFD8
 15900                           
 15901 ;; *************** function i2___wmul *****************
 15902 ;; Defined at:
 15903 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 15904 ;; Parameters:    Size  Location     Type
 15905 ;;  multiplier      2   14[COMRAM] unsigned int 
 15906 ;;  multiplicand    2   16[COMRAM] unsigned int 
 15907 ;; Auto vars:     Size  Location     Type
 15908 ;;  __wmul          2   18[COMRAM] unsigned int 
 15909 ;; Return value:  Size  Location     Type
 15910 ;;                  2   14[COMRAM] unsigned int 
 15911 ;; Registers used:
 15912 ;;		wreg, status,2, status,0, prodl, prodh
 15913 ;; Tracked objects:
 15914 ;;		On entry : 0/0
 15915 ;;		On exit  : 0/0
 15916 ;;		Unchanged: 0/0
 15917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15921 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15922 ;;Total ram usage:        6 bytes
 15923 ;; Hardware stack levels used:    1
 15924 ;; This function calls:
 15925 ;;		Nothing
 15926 ;; This function is called by:
 15927 ;;		_timer0_isr
 15928 ;;		_read_adc_temp
 15929 ;;		_read_adc_temp2
 15930 ;;		i2_fround
 15931 ;;		i2_scale
 15932 ;;		i2_sprintf
 15933 ;; This function uses a non-reentrant model
 15934 ;;
 15935                           
 15936                           	psect	text51
 15937  005522                     __ptext51:
 15938                           	opt stack 0
 15939  005522                     i2___wmul:
 15940                           	opt stack 20
 15941                           
 15942                           ;incstack = 0
 15943  005522  500F               	movf	i2___wmul@multiplier,w,c
 15944  005524  0211               	mulwf	i2___wmul@multiplicand,c
 15945  005526  CFF3 F013          	movff	prodl,i2___wmul@product
 15946  00552A  CFF4 F014          	movff	prodh,i2___wmul@product+1
 15947  00552E  500F               	movf	i2___wmul@multiplier,w,c
 15948  005530  0212               	mulwf	i2___wmul@multiplicand+1,c
 15949  005532  50F3               	movf	prodl,w,c
 15950  005534  2614               	addwf	i2___wmul@product+1,f,c
 15951  005536  5010               	movf	i2___wmul@multiplier+1,w,c
 15952  005538  0211               	mulwf	i2___wmul@multiplicand,c
 15953  00553A  50F3               	movf	prodl,w,c
 15954  00553C  2614               	addwf	i2___wmul@product+1,f,c
 15955  00553E  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 15956  005542  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 15957  005546  0012               	return	
 15958  005548                     __end_ofi2___wmul:
 15959                           	opt stack 0
 15960                           pclatu	equ	0xFFB
 15961                           pclath	equ	0xFFA
 15962                           tblptru	equ	0xFF8
 15963                           tblptrh	equ	0xFF7
 15964                           tblptrl	equ	0xFF6
 15965                           tablat	equ	0xFF5
 15966                           prodh	equ	0xFF4
 15967                           prodl	equ	0xFF3
 15968                           intcon	equ	0xFF2
 15969                           intcon2	equ	0xFF1
 15970                           intcon3	equ	0xFF0
 15971                           postinc0	equ	0xFEE
 15972                           fsr0h	equ	0xFEA
 15973                           fsr0l	equ	0xFE9
 15974                           wreg	equ	0xFE8
 15975                           indf1	equ	0xFE7
 15976                           postdec1	equ	0xFE5
 15977                           fsr1h	equ	0xFE2
 15978                           fsr1l	equ	0xFE1
 15979                           indf2	equ	0xFDF
 15980                           postinc2	equ	0xFDE
 15981                           postdec2	equ	0xFDD
 15982                           fsr2h	equ	0xFDA
 15983                           fsr2l	equ	0xFD9
 15984                           status	equ	0xFD8
 15985                           
 15986 ;; *************** function i2___ftmul *****************
 15987 ;; Defined at:
 15988 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
 15989 ;; Parameters:    Size  Location     Type
 15990 ;;  f1              3   20[COMRAM] float 
 15991 ;;  f2              3   23[COMRAM] float 
 15992 ;; Auto vars:     Size  Location     Type
 15993 ;;  __ftmul         3   30[COMRAM] unsigned um
 15994 ;;  __ftmul         1   34[COMRAM] unsigned char 
 15995 ;;  __ftmul         1   33[COMRAM] unsigned char 
 15996 ;;  __ftmul         1   29[COMRAM] unsigned char 
 15997 ;; Return value:  Size  Location     Type
 15998 ;;                  3   20[COMRAM] float 
 15999 ;; Registers used:
 16000 ;;		wreg, status,2, status,0, cstack
 16001 ;; Tracked objects:
 16002 ;;		On entry : 0/0
 16003 ;;		On exit  : 0/0
 16004 ;;		Unchanged: 0/0
 16005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16006 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16007 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16008 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16009 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16010 ;;Total ram usage:       15 bytes
 16011 ;; Hardware stack levels used:    1
 16012 ;; Hardware stack levels required when called:    1
 16013 ;; This function calls:
 16014 ;;		i2___ftpack
 16015 ;; This function is called by:
 16016 ;;		_read_adc_temp
 16017 ;;		_read_adc_temp2
 16018 ;;		i2_fround
 16019 ;;		i2_scale
 16020 ;;		i2_sprintf
 16021 ;; This function uses a non-reentrant model
 16022 ;;
 16023                           
 16024                           	psect	text52
 16025  0041E6                     __ptext52:
 16026                           	opt stack 0
 16027  0041E6                     i2___ftmul:
 16028                           	opt stack 19
 16029                           
 16030                           ;incstack = 0
 16031  0041E6  C017  F01B         	movff	i2___ftmul@f1+2,??i2___ftmul
 16032  0041EA  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 16033  0041EC  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 16034  0041EE  3416               	rlcf	i2___ftmul@f1+1,w,c
 16035  0041F0  361B               	rlcf	??i2___ftmul& (0+255),f,c
 16036  0041F2  E301               	bnc	u440_41
 16037  0041F4  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 16038  0041F6                     u440_41:
 16039  0041F6  501B               	movf	??i2___ftmul,w,c
 16040  0041F8  6E1E               	movwf	i2___ftmul@exp,c
 16041  0041FA  501E               	movf	i2___ftmul@exp,w,c
 16042  0041FC  A4D8               	btfss	status,2,c
 16043  0041FE  D007               	goto	i2l4097
 16044  004200  0E00               	movlw	0
 16045  004202  6E15               	movwf	?i2___ftmul,c
 16046  004204  0E00               	movlw	0
 16047  004206  6E16               	movwf	?i2___ftmul+1,c
 16048  004208  0E00               	movlw	0
 16049  00420A  6E17               	movwf	?i2___ftmul+2,c
 16050  00420C  0012               	return	
 16051  00420E                     i2l4097:
 16052  00420E  C01A  F01B         	movff	i2___ftmul@f2+2,??i2___ftmul
 16053  004212  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 16054  004214  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 16055  004216  3419               	rlcf	i2___ftmul@f2+1,w,c
 16056  004218  361B               	rlcf	??i2___ftmul& (0+255),f,c
 16057  00421A  E301               	bnc	u442_41
 16058  00421C  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 16059  00421E                     u442_41:
 16060  00421E  501B               	movf	??i2___ftmul,w,c
 16061  004220  6E23               	movwf	i2___ftmul@sign,c
 16062  004222  5023               	movf	i2___ftmul@sign,w,c
 16063  004224  A4D8               	btfss	status,2,c
 16064  004226  D007               	goto	i2l4103
 16065  004228  0E00               	movlw	0
 16066  00422A  6E15               	movwf	?i2___ftmul,c
 16067  00422C  0E00               	movlw	0
 16068  00422E  6E16               	movwf	?i2___ftmul+1,c
 16069  004230  0E00               	movlw	0
 16070  004232  6E17               	movwf	?i2___ftmul+2,c
 16071  004234  0012               	return	
 16072  004236                     i2l4103:
 16073  004236  5023               	movf	i2___ftmul@sign,w,c
 16074  004238  0F7B               	addlw	123
 16075  00423A  261E               	addwf	i2___ftmul@exp,f,c
 16076  00423C  C017  F023         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 16077  004240  501A               	movf	i2___ftmul@f2+2,w,c
 16078  004242  1A23               	xorwf	i2___ftmul@sign,f,c
 16079  004244  0E80               	movlw	128
 16080  004246  1623               	andwf	i2___ftmul@sign,f,c
 16081  004248  8E16               	bsf	i2___ftmul@f1+1,7,c
 16082  00424A  8E19               	bsf	i2___ftmul@f2+1,7,c
 16083  00424C  0EFF               	movlw	255
 16084  00424E  1618               	andwf	i2___ftmul@f2,f,c
 16085  004250  0EFF               	movlw	255
 16086  004252  1619               	andwf	i2___ftmul@f2+1,f,c
 16087  004254  0E00               	movlw	0
 16088  004256  161A               	andwf	i2___ftmul@f2+2,f,c
 16089  004258  0E00               	movlw	0
 16090  00425A  6E1F               	movwf	i2___ftmul@f3_as_product,c
 16091  00425C  0E00               	movlw	0
 16092  00425E  6E20               	movwf	i2___ftmul@f3_as_product+1,c
 16093  004260  0E00               	movlw	0
 16094  004262  6E21               	movwf	i2___ftmul@f3_as_product+2,c
 16095  004264  0E07               	movlw	7
 16096  004266  6E22               	movwf	i2___ftmul@cntr,c
 16097  004268                     i2l4117:
 16098  004268  A015               	btfss	i2___ftmul@f1,0,c
 16099  00426A  D006               	goto	i2l4121
 16100  00426C  5018               	movf	i2___ftmul@f2,w,c
 16101  00426E  261F               	addwf	i2___ftmul@f3_as_product,f,c
 16102  004270  5019               	movf	i2___ftmul@f2+1,w,c
 16103  004272  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 16104  004274  501A               	movf	i2___ftmul@f2+2,w,c
 16105  004276  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 16106  004278                     i2l4121:
 16107  004278  90D8               	bcf	status,0,c
 16108  00427A  3217               	rrcf	i2___ftmul@f1+2,f,c
 16109  00427C  3216               	rrcf	i2___ftmul@f1+1,f,c
 16110  00427E  3215               	rrcf	i2___ftmul@f1,f,c
 16111  004280  90D8               	bcf	status,0,c
 16112  004282  3618               	rlcf	i2___ftmul@f2,f,c
 16113  004284  3619               	rlcf	i2___ftmul@f2+1,f,c
 16114  004286  361A               	rlcf	i2___ftmul@f2+2,f,c
 16115  004288  2E22               	decfsz	i2___ftmul@cntr,f,c
 16116  00428A  D7EE               	goto	i2l4117
 16117  00428C  0E09               	movlw	9
 16118  00428E  6E22               	movwf	i2___ftmul@cntr,c
 16119  004290                     i2l4127:
 16120  004290  A015               	btfss	i2___ftmul@f1,0,c
 16121  004292  D006               	goto	i2l4131
 16122  004294  5018               	movf	i2___ftmul@f2,w,c
 16123  004296  261F               	addwf	i2___ftmul@f3_as_product,f,c
 16124  004298  5019               	movf	i2___ftmul@f2+1,w,c
 16125  00429A  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 16126  00429C  501A               	movf	i2___ftmul@f2+2,w,c
 16127  00429E  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 16128  0042A0                     i2l4131:
 16129  0042A0  90D8               	bcf	status,0,c
 16130  0042A2  3217               	rrcf	i2___ftmul@f1+2,f,c
 16131  0042A4  3216               	rrcf	i2___ftmul@f1+1,f,c
 16132  0042A6  3215               	rrcf	i2___ftmul@f1,f,c
 16133  0042A8  90D8               	bcf	status,0,c
 16134  0042AA  3221               	rrcf	i2___ftmul@f3_as_product+2,f,c
 16135  0042AC  3220               	rrcf	i2___ftmul@f3_as_product+1,f,c
 16136  0042AE  321F               	rrcf	i2___ftmul@f3_as_product,f,c
 16137  0042B0  2E22               	decfsz	i2___ftmul@cntr,f,c
 16138  0042B2  D7EE               	goto	i2l4127
 16139  0042B4  C01F  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 16140  0042B8  C020  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 16141  0042BC  C021  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 16142  0042C0  C01E  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 16143  0042C4  C023  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 16144  0042C8  EC7B  F023         	call	i2___ftpack	;wreg free
 16145  0042CC  C001  F015         	movff	?i2___ftpack,?i2___ftmul
 16146  0042D0  C002  F016         	movff	?i2___ftpack+1,?i2___ftmul+1
 16147  0042D4  C003  F017         	movff	?i2___ftpack+2,?i2___ftmul+2
 16148  0042D8  0012               	return	
 16149  0042DA                     __end_ofi2___ftmul:
 16150                           	opt stack 0
 16151                           pclatu	equ	0xFFB
 16152                           pclath	equ	0xFFA
 16153                           tblptru	equ	0xFF8
 16154                           tblptrh	equ	0xFF7
 16155                           tblptrl	equ	0xFF6
 16156                           tablat	equ	0xFF5
 16157                           prodh	equ	0xFF4
 16158                           prodl	equ	0xFF3
 16159                           intcon	equ	0xFF2
 16160                           intcon2	equ	0xFF1
 16161                           intcon3	equ	0xFF0
 16162                           postinc0	equ	0xFEE
 16163                           fsr0h	equ	0xFEA
 16164                           fsr0l	equ	0xFE9
 16165                           wreg	equ	0xFE8
 16166                           indf1	equ	0xFE7
 16167                           postdec1	equ	0xFE5
 16168                           fsr1h	equ	0xFE2
 16169                           fsr1l	equ	0xFE1
 16170                           indf2	equ	0xFDF
 16171                           postinc2	equ	0xFDE
 16172                           postdec2	equ	0xFDD
 16173                           fsr2h	equ	0xFDA
 16174                           fsr2l	equ	0xFD9
 16175                           status	equ	0xFD8
 16176                           
 16177 ;; *************** function i2___awmod *****************
 16178 ;; Defined at:
 16179 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
 16180 ;; Parameters:    Size  Location     Type
 16181 ;;  dividend        2    0[COMRAM] int 
 16182 ;;  divisor         2    2[COMRAM] int 
 16183 ;; Auto vars:     Size  Location     Type
 16184 ;;  __awmod         1    5[COMRAM] unsigned char 
 16185 ;;  __awmod         1    4[COMRAM] unsigned char 
 16186 ;; Return value:  Size  Location     Type
 16187 ;;                  2    0[COMRAM] int 
 16188 ;; Registers used:
 16189 ;;		wreg, status,2, status,0
 16190 ;; Tracked objects:
 16191 ;;		On entry : 0/0
 16192 ;;		On exit  : 0/0
 16193 ;;		Unchanged: 0/0
 16194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16198 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16199 ;;Total ram usage:        6 bytes
 16200 ;; Hardware stack levels used:    1
 16201 ;; This function calls:
 16202 ;;		Nothing
 16203 ;; This function is called by:
 16204 ;;		i2_fround
 16205 ;;		i2_scale
 16206 ;; This function uses a non-reentrant model
 16207 ;;
 16208                           
 16209                           	psect	text53
 16210  004E18                     __ptext53:
 16211                           	opt stack 0
 16212  004E18                     i2___awmod:
 16213                           	opt stack 20
 16214                           
 16215                           ;incstack = 0
 16216  004E18  0E00               	movlw	0
 16217  004E1A  6E06               	movwf	i2___awmod@sign,c
 16218  004E1C  AE02               	btfss	i2___awmod@dividend+1,7,c
 16219  004E1E  D006               	goto	i2l3993
 16220  004E20  6C01               	negf	i2___awmod@dividend,c
 16221  004E22  1E02               	comf	i2___awmod@dividend+1,f,c
 16222  004E24  B0D8               	btfsc	status,0,c
 16223  004E26  2A02               	incf	i2___awmod@dividend+1,f,c
 16224  004E28  0E01               	movlw	1
 16225  004E2A  6E06               	movwf	i2___awmod@sign,c
 16226  004E2C                     i2l3993:
 16227  004E2C  AE04               	btfss	i2___awmod@divisor+1,7,c
 16228  004E2E  D004               	goto	i2l3997
 16229  004E30  6C03               	negf	i2___awmod@divisor,c
 16230  004E32  1E04               	comf	i2___awmod@divisor+1,f,c
 16231  004E34  B0D8               	btfsc	status,0,c
 16232  004E36  2A04               	incf	i2___awmod@divisor+1,f,c
 16233  004E38                     i2l3997:
 16234  004E38  5003               	movf	i2___awmod@divisor,w,c
 16235  004E3A  1004               	iorwf	i2___awmod@divisor+1,w,c
 16236  004E3C  B4D8               	btfsc	status,2,c
 16237  004E3E  D018               	goto	i2l4013
 16238  004E40  0E01               	movlw	1
 16239  004E42  6E05               	movwf	i2___awmod@counter,c
 16240  004E44  D004               	goto	i2l4003
 16241  004E46                     i2l4001:
 16242  004E46  90D8               	bcf	status,0,c
 16243  004E48  3603               	rlcf	i2___awmod@divisor,f,c
 16244  004E4A  3604               	rlcf	i2___awmod@divisor+1,f,c
 16245  004E4C  2A05               	incf	i2___awmod@counter,f,c
 16246  004E4E                     i2l4003:
 16247  004E4E  AE04               	btfss	i2___awmod@divisor+1,7,c
 16248  004E50  D7FA               	goto	i2l4001
 16249  004E52                     i2l4005:
 16250  004E52  5003               	movf	i2___awmod@divisor,w,c
 16251  004E54  5C01               	subwf	i2___awmod@dividend,w,c
 16252  004E56  5004               	movf	i2___awmod@divisor+1,w,c
 16253  004E58  5802               	subwfb	i2___awmod@dividend+1,w,c
 16254  004E5A  A0D8               	btfss	status,0,c
 16255  004E5C  D004               	goto	i2l4009
 16256  004E5E  5003               	movf	i2___awmod@divisor,w,c
 16257  004E60  5E01               	subwf	i2___awmod@dividend,f,c
 16258  004E62  5004               	movf	i2___awmod@divisor+1,w,c
 16259  004E64  5A02               	subwfb	i2___awmod@dividend+1,f,c
 16260  004E66                     i2l4009:
 16261  004E66  90D8               	bcf	status,0,c
 16262  004E68  3204               	rrcf	i2___awmod@divisor+1,f,c
 16263  004E6A  3203               	rrcf	i2___awmod@divisor,f,c
 16264  004E6C  2E05               	decfsz	i2___awmod@counter,f,c
 16265  004E6E  D7F1               	goto	i2l4005
 16266  004E70                     i2l4013:
 16267  004E70  5006               	movf	i2___awmod@sign,w,c
 16268  004E72  B4D8               	btfsc	status,2,c
 16269  004E74  D004               	goto	i2l4017
 16270  004E76  6C01               	negf	i2___awmod@dividend,c
 16271  004E78  1E02               	comf	i2___awmod@dividend+1,f,c
 16272  004E7A  B0D8               	btfsc	status,0,c
 16273  004E7C  2A02               	incf	i2___awmod@dividend+1,f,c
 16274  004E7E                     i2l4017:
 16275  004E7E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 16276  004E82  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 16277  004E86  0012               	return	
 16278  004E88                     __end_ofi2___awmod:
 16279                           	opt stack 0
 16280                           pclatu	equ	0xFFB
 16281                           pclath	equ	0xFFA
 16282                           tblptru	equ	0xFF8
 16283                           tblptrh	equ	0xFF7
 16284                           tblptrl	equ	0xFF6
 16285                           tablat	equ	0xFF5
 16286                           prodh	equ	0xFF4
 16287                           prodl	equ	0xFF3
 16288                           intcon	equ	0xFF2
 16289                           intcon2	equ	0xFF1
 16290                           intcon3	equ	0xFF0
 16291                           postinc0	equ	0xFEE
 16292                           fsr0h	equ	0xFEA
 16293                           fsr0l	equ	0xFE9
 16294                           wreg	equ	0xFE8
 16295                           indf1	equ	0xFE7
 16296                           postdec1	equ	0xFE5
 16297                           fsr1h	equ	0xFE2
 16298                           fsr1l	equ	0xFE1
 16299                           indf2	equ	0xFDF
 16300                           postinc2	equ	0xFDE
 16301                           postdec2	equ	0xFDD
 16302                           fsr2h	equ	0xFDA
 16303                           fsr2l	equ	0xFD9
 16304                           status	equ	0xFD8
 16305                           
 16306 ;; *************** function i2___awdiv *****************
 16307 ;; Defined at:
 16308 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 16309 ;; Parameters:    Size  Location     Type
 16310 ;;  dividend        2    6[COMRAM] int 
 16311 ;;  divisor         2    8[COMRAM] int 
 16312 ;; Auto vars:     Size  Location     Type
 16313 ;;  __awdiv         2   12[COMRAM] int 
 16314 ;;  __awdiv         1   11[COMRAM] unsigned char 
 16315 ;;  __awdiv         1   10[COMRAM] unsigned char 
 16316 ;; Return value:  Size  Location     Type
 16317 ;;                  2    6[COMRAM] int 
 16318 ;; Registers used:
 16319 ;;		wreg, status,2, status,0
 16320 ;; Tracked objects:
 16321 ;;		On entry : 0/0
 16322 ;;		On exit  : 0/0
 16323 ;;		Unchanged: 0/0
 16324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16326 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16328 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16329 ;;Total ram usage:        8 bytes
 16330 ;; Hardware stack levels used:    1
 16331 ;; This function calls:
 16332 ;;		Nothing
 16333 ;; This function is called by:
 16334 ;;		i2_fround
 16335 ;;		i2_scale
 16336 ;;		i2_sprintf
 16337 ;; This function uses a non-reentrant model
 16338 ;;
 16339                           
 16340                           	psect	text54
 16341  004BA8                     __ptext54:
 16342                           	opt stack 0
 16343  004BA8                     i2___awdiv:
 16344                           	opt stack 20
 16345                           
 16346                           ;incstack = 0
 16347  004BA8  0E00               	movlw	0
 16348  004BAA  6E0C               	movwf	i2___awdiv@sign,c
 16349  004BAC  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16350  004BAE  D006               	goto	i2l3949
 16351  004BB0  6C09               	negf	i2___awdiv@divisor,c
 16352  004BB2  1E0A               	comf	i2___awdiv@divisor+1,f,c
 16353  004BB4  B0D8               	btfsc	status,0,c
 16354  004BB6  2A0A               	incf	i2___awdiv@divisor+1,f,c
 16355  004BB8  0E01               	movlw	1
 16356  004BBA  6E0C               	movwf	i2___awdiv@sign,c
 16357  004BBC                     i2l3949:
 16358  004BBC  AE08               	btfss	i2___awdiv@dividend+1,7,c
 16359  004BBE  D006               	goto	i2l3955
 16360  004BC0  6C07               	negf	i2___awdiv@dividend,c
 16361  004BC2  1E08               	comf	i2___awdiv@dividend+1,f,c
 16362  004BC4  B0D8               	btfsc	status,0,c
 16363  004BC6  2A08               	incf	i2___awdiv@dividend+1,f,c
 16364  004BC8  0E01               	movlw	1
 16365  004BCA  1A0C               	xorwf	i2___awdiv@sign,f,c
 16366  004BCC                     i2l3955:
 16367  004BCC  0E00               	movlw	0
 16368  004BCE  6E0E               	movwf	i2___awdiv@quotient+1,c
 16369  004BD0  0E00               	movlw	0
 16370  004BD2  6E0D               	movwf	i2___awdiv@quotient,c
 16371  004BD4  5009               	movf	i2___awdiv@divisor,w,c
 16372  004BD6  100A               	iorwf	i2___awdiv@divisor+1,w,c
 16373  004BD8  B4D8               	btfsc	status,2,c
 16374  004BDA  D01C               	goto	i2l3977
 16375  004BDC  0E01               	movlw	1
 16376  004BDE  6E0B               	movwf	i2___awdiv@counter,c
 16377  004BE0  D004               	goto	i2l3963
 16378  004BE2                     i2l3961:
 16379  004BE2  90D8               	bcf	status,0,c
 16380  004BE4  3609               	rlcf	i2___awdiv@divisor,f,c
 16381  004BE6  360A               	rlcf	i2___awdiv@divisor+1,f,c
 16382  004BE8  2A0B               	incf	i2___awdiv@counter,f,c
 16383  004BEA                     i2l3963:
 16384  004BEA  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16385  004BEC  D7FA               	goto	i2l3961
 16386  004BEE                     i2l3965:
 16387  004BEE  90D8               	bcf	status,0,c
 16388  004BF0  360D               	rlcf	i2___awdiv@quotient,f,c
 16389  004BF2  360E               	rlcf	i2___awdiv@quotient+1,f,c
 16390  004BF4  5009               	movf	i2___awdiv@divisor,w,c
 16391  004BF6  5C07               	subwf	i2___awdiv@dividend,w,c
 16392  004BF8  500A               	movf	i2___awdiv@divisor+1,w,c
 16393  004BFA  5808               	subwfb	i2___awdiv@dividend+1,w,c
 16394  004BFC  A0D8               	btfss	status,0,c
 16395  004BFE  D005               	goto	i2l3973
 16396  004C00  5009               	movf	i2___awdiv@divisor,w,c
 16397  004C02  5E07               	subwf	i2___awdiv@dividend,f,c
 16398  004C04  500A               	movf	i2___awdiv@divisor+1,w,c
 16399  004C06  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 16400  004C08  800D               	bsf	i2___awdiv@quotient,0,c
 16401  004C0A                     i2l3973:
 16402  004C0A  90D8               	bcf	status,0,c
 16403  004C0C  320A               	rrcf	i2___awdiv@divisor+1,f,c
 16404  004C0E  3209               	rrcf	i2___awdiv@divisor,f,c
 16405  004C10  2E0B               	decfsz	i2___awdiv@counter,f,c
 16406  004C12  D7ED               	goto	i2l3965
 16407  004C14                     i2l3977:
 16408  004C14  500C               	movf	i2___awdiv@sign,w,c
 16409  004C16  B4D8               	btfsc	status,2,c
 16410  004C18  D004               	goto	i2l3981
 16411  004C1A  6C0D               	negf	i2___awdiv@quotient,c
 16412  004C1C  1E0E               	comf	i2___awdiv@quotient+1,f,c
 16413  004C1E  B0D8               	btfsc	status,0,c
 16414  004C20  2A0E               	incf	i2___awdiv@quotient+1,f,c
 16415  004C22                     i2l3981:
 16416  004C22  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 16417  004C26  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 16418  004C2A  0012               	return	
 16419  004C2C                     __end_ofi2___awdiv:
 16420                           	opt stack 0
 16421                           pclatu	equ	0xFFB
 16422                           pclath	equ	0xFFA
 16423                           tblptru	equ	0xFF8
 16424                           tblptrh	equ	0xFF7
 16425                           tblptrl	equ	0xFF6
 16426                           tablat	equ	0xFF5
 16427                           prodh	equ	0xFF4
 16428                           prodl	equ	0xFF3
 16429                           intcon	equ	0xFF2
 16430                           intcon2	equ	0xFF1
 16431                           intcon3	equ	0xFF0
 16432                           postinc0	equ	0xFEE
 16433                           fsr0h	equ	0xFEA
 16434                           fsr0l	equ	0xFE9
 16435                           wreg	equ	0xFE8
 16436                           indf1	equ	0xFE7
 16437                           postdec1	equ	0xFE5
 16438                           fsr1h	equ	0xFE2
 16439                           fsr1l	equ	0xFE1
 16440                           indf2	equ	0xFDF
 16441                           postinc2	equ	0xFDE
 16442                           postdec2	equ	0xFDD
 16443                           fsr2h	equ	0xFDA
 16444                           fsr2l	equ	0xFD9
 16445                           status	equ	0xFD8
 16446                           
 16447 ;; *************** function i2__tdiv_to_l_ *****************
 16448 ;; Defined at:
 16449 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
 16450 ;; Parameters:    Size  Location     Type
 16451 ;;  f1              3    0[COMRAM] float 
 16452 ;;  f2              3    3[COMRAM] float 
 16453 ;; Auto vars:     Size  Location     Type
 16454 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 16455 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 16456 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 16457 ;; Return value:  Size  Location     Type
 16458 ;;                  4    0[COMRAM] unsigned long 
 16459 ;; Registers used:
 16460 ;;		wreg, status,2, status,0
 16461 ;; Tracked objects:
 16462 ;;		On entry : 0/0
 16463 ;;		On exit  : 0/0
 16464 ;;		Unchanged: 0/0
 16465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16466 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16467 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16468 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16469 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16470 ;;Total ram usage:       15 bytes
 16471 ;; Hardware stack levels used:    1
 16472 ;; This function calls:
 16473 ;;		Nothing
 16474 ;; This function is called by:
 16475 ;;		i2_sprintf
 16476 ;; This function uses a non-reentrant model
 16477 ;;
 16478                           
 16479                           	psect	text55
 16480  003E80                     __ptext55:
 16481                           	opt stack 0
 16482  003E80                     i2__tdiv_to_l_:
 16483                           	opt stack 21
 16484                           
 16485                           ;incstack = 0
 16486  003E80  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 16487  003E84  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16488  003E86  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16489  003E88  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 16490  003E8A  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16491  003E8C  E301               	bnc	u506_41
 16492  003E8E  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16493  003E90                     u506_41:
 16494  003E90  5007               	movf	??i2__tdiv_to_l_,w,c
 16495  003E92  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 16496  003E94  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16497  003E96  A4D8               	btfss	status,2,c
 16498  003E98  D009               	goto	i2l4569
 16499  003E9A  0E00               	movlw	0
 16500  003E9C  6E01               	movwf	?i2__tdiv_to_l_,c
 16501  003E9E  0E00               	movlw	0
 16502  003EA0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16503  003EA2  0E00               	movlw	0
 16504  003EA4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16505  003EA6  0E00               	movlw	0
 16506  003EA8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16507  003EAA  0012               	return	
 16508  003EAC                     i2l4569:
 16509  003EAC  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 16510  003EB0  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16511  003EB2  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16512  003EB4  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 16513  003EB6  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16514  003EB8  E301               	bnc	u508_41
 16515  003EBA  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16516  003EBC                     u508_41:
 16517  003EBC  5007               	movf	??i2__tdiv_to_l_,w,c
 16518  003EBE  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16519  003EC0  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16520  003EC2  A4D8               	btfss	status,2,c
 16521  003EC4  D009               	goto	i2l4575
 16522  003EC6  0E00               	movlw	0
 16523  003EC8  6E01               	movwf	?i2__tdiv_to_l_,c
 16524  003ECA  0E00               	movlw	0
 16525  003ECC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16526  003ECE  0E00               	movlw	0
 16527  003ED0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16528  003ED2  0E00               	movlw	0
 16529  003ED4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16530  003ED6  0012               	return	
 16531  003ED8                     i2l4575:
 16532  003ED8  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 16533  003EDA  0EFF               	movlw	255
 16534  003EDC  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 16535  003EDE  0EFF               	movlw	255
 16536  003EE0  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 16537  003EE2  0E00               	movlw	0
 16538  003EE4  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 16539  003EE6  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 16540  003EE8  0EFF               	movlw	255
 16541  003EEA  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 16542  003EEC  0EFF               	movlw	255
 16543  003EEE  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 16544  003EF0  0E00               	movlw	0
 16545  003EF2  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 16546  003EF4  0E00               	movlw	0
 16547  003EF6  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 16548  003EF8  0E00               	movlw	0
 16549  003EFA  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 16550  003EFC  0E00               	movlw	0
 16551  003EFE  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 16552  003F00  0E00               	movlw	0
 16553  003F02  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 16554  003F04  0E7F               	movlw	127
 16555  003F06  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16556  003F08  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16557  003F0A  0F98               	addlw	152
 16558  003F0C  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16559  003F0E  0E18               	movlw	24
 16560  003F10  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16561  003F12                     i2l763:
 16562  003F12  90D8               	bcf	status,0,c
 16563  003F14  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16564  003F16  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16565  003F18  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16566  003F1A  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16567  003F1C  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16568  003F1E  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 16569  003F20  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16570  003F22  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 16571  003F24  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16572  003F26  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 16573  003F28  A0D8               	btfss	status,0,c
 16574  003F2A  D007               	goto	i2l764
 16575  003F2C  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16576  003F2E  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 16577  003F30  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16578  003F32  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 16579  003F34  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16580  003F36  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 16581  003F38  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 16582  003F3A                     i2l764:
 16583  003F3A  90D8               	bcf	status,0,c
 16584  003F3C  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 16585  003F3E  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 16586  003F40  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 16587  003F42  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 16588  003F44  D7E6               	goto	i2l763
 16589  003F46  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 16590  003F48  D016               	goto	i2l4609
 16591  003F4A  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16592  003F4C  0A80               	xorlw	128
 16593  003F4E  0F97               	addlw	151
 16594  003F50  B0D8               	btfsc	status,0,c
 16595  003F52  D009               	goto	i2l4605
 16596  003F54  0E00               	movlw	0
 16597  003F56  6E01               	movwf	?i2__tdiv_to_l_,c
 16598  003F58  0E00               	movlw	0
 16599  003F5A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16600  003F5C  0E00               	movlw	0
 16601  003F5E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16602  003F60  0E00               	movlw	0
 16603  003F62  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16604  003F64  0012               	return	
 16605  003F66                     i2l4605:
 16606  003F66  90D8               	bcf	status,0,c
 16607  003F68  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 16608  003F6A  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 16609  003F6C  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 16610  003F6E  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 16611  003F70  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 16612  003F72  D7F9               	goto	i2l4605
 16613  003F74  D015               	goto	i2l770
 16614  003F76                     i2l4609:
 16615  003F76  0E17               	movlw	23
 16616  003F78  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 16617  003F7A  D00F               	goto	i2l4617
 16618  003F7C  0E00               	movlw	0
 16619  003F7E  6E01               	movwf	?i2__tdiv_to_l_,c
 16620  003F80  0E00               	movlw	0
 16621  003F82  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16622  003F84  0E00               	movlw	0
 16623  003F86  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16624  003F88  0E00               	movlw	0
 16625  003F8A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16626  003F8C  0012               	return	
 16627  003F8E                     i2l4615:
 16628  003F8E  90D8               	bcf	status,0,c
 16629  003F90  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16630  003F92  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16631  003F94  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16632  003F96  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16633  003F98  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 16634  003F9A                     i2l4617:
 16635  003F9A  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16636  003F9C  A4D8               	btfss	status,2,c
 16637  003F9E  D7F7               	goto	i2l4615
 16638  003FA0                     i2l770:
 16639  003FA0  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16640  003FA4  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16641  003FA8  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16642  003FAC  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16643  003FB0  0012               	return		;funcret
 16644  003FB2                     __end_ofi2__tdiv_to_l_:
 16645                           	opt stack 0
 16646                           pclatu	equ	0xFFB
 16647                           pclath	equ	0xFFA
 16648                           tblptru	equ	0xFF8
 16649                           tblptrh	equ	0xFF7
 16650                           tblptrl	equ	0xFF6
 16651                           tablat	equ	0xFF5
 16652                           prodh	equ	0xFF4
 16653                           prodl	equ	0xFF3
 16654                           intcon	equ	0xFF2
 16655                           intcon2	equ	0xFF1
 16656                           intcon3	equ	0xFF0
 16657                           postinc0	equ	0xFEE
 16658                           fsr0h	equ	0xFEA
 16659                           fsr0l	equ	0xFE9
 16660                           wreg	equ	0xFE8
 16661                           indf1	equ	0xFE7
 16662                           postdec1	equ	0xFE5
 16663                           fsr1h	equ	0xFE2
 16664                           fsr1l	equ	0xFE1
 16665                           indf2	equ	0xFDF
 16666                           postinc2	equ	0xFDE
 16667                           postdec2	equ	0xFDD
 16668                           fsr2h	equ	0xFDA
 16669                           fsr2l	equ	0xFD9
 16670                           status	equ	0xFD8
 16671                           
 16672 ;; *************** function i2__div_to_l_ *****************
 16673 ;; Defined at:
 16674 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
 16675 ;; Parameters:    Size  Location     Type
 16676 ;;  f1              3    0[COMRAM] unsigned long 
 16677 ;;  f2              3    3[COMRAM] unsigned long 
 16678 ;; Auto vars:     Size  Location     Type
 16679 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 16680 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 16681 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 16682 ;; Return value:  Size  Location     Type
 16683 ;;                  4    0[COMRAM] unsigned long 
 16684 ;; Registers used:
 16685 ;;		wreg, status,2, status,0
 16686 ;; Tracked objects:
 16687 ;;		On entry : 0/0
 16688 ;;		On exit  : 0/0
 16689 ;;		Unchanged: 0/0
 16690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16691 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16692 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16694 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16695 ;;Total ram usage:       12 bytes
 16696 ;; Hardware stack levels used:    1
 16697 ;; This function calls:
 16698 ;;		Nothing
 16699 ;; This function is called by:
 16700 ;;		i2_sprintf
 16701 ;; This function uses a non-reentrant model
 16702 ;;
 16703                           
 16704                           	psect	text56
 16705  003FB2                     __ptext56:
 16706                           	opt stack 0
 16707  003FB2                     i2__div_to_l_:
 16708                           	opt stack 21
 16709                           
 16710                           ;incstack = 0
 16711  003FB2  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 16712  003FB4  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 16713  003FB6  6E0C               	movwf	i2__div_to_l_@exp1,c
 16714  003FB8  500C               	movf	i2__div_to_l_@exp1,w,c
 16715  003FBA  A4D8               	btfss	status,2,c
 16716  003FBC  D009               	goto	i2l4509
 16717  003FBE  0E00               	movlw	0
 16718  003FC0  6E01               	movwf	?i2__div_to_l_,c
 16719  003FC2  0E00               	movlw	0
 16720  003FC4  6E02               	movwf	?i2__div_to_l_+1,c
 16721  003FC6  0E00               	movlw	0
 16722  003FC8  6E03               	movwf	?i2__div_to_l_+2,c
 16723  003FCA  0E00               	movlw	0
 16724  003FCC  6E04               	movwf	?i2__div_to_l_+3,c
 16725  003FCE  0012               	return	
 16726  003FD0                     i2l4509:
 16727  003FD0  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 16728  003FD2  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 16729  003FD4  6E0B               	movwf	i2__div_to_l_@cntr,c
 16730  003FD6  500B               	movf	i2__div_to_l_@cntr,w,c
 16731  003FD8  A4D8               	btfss	status,2,c
 16732  003FDA  D009               	goto	i2l4515
 16733  003FDC  0E00               	movlw	0
 16734  003FDE  6E01               	movwf	?i2__div_to_l_,c
 16735  003FE0  0E00               	movlw	0
 16736  003FE2  6E02               	movwf	?i2__div_to_l_+1,c
 16737  003FE4  0E00               	movlw	0
 16738  003FE6  6E03               	movwf	?i2__div_to_l_+2,c
 16739  003FE8  0E00               	movlw	0
 16740  003FEA  6E04               	movwf	?i2__div_to_l_+3,c
 16741  003FEC  0012               	return	
 16742  003FEE                     i2l4515:
 16743  003FEE  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 16744  003FF0  0EFF               	movlw	255
 16745  003FF2  1601               	andwf	i2__div_to_l_@f1,f,c
 16746  003FF4  0EFF               	movlw	255
 16747  003FF6  1602               	andwf	i2__div_to_l_@f1+1,f,c
 16748  003FF8  0EFF               	movlw	255
 16749  003FFA  1603               	andwf	i2__div_to_l_@f1+2,f,c
 16750  003FFC  0E00               	movlw	0
 16751  003FFE  1604               	andwf	i2__div_to_l_@f1+3,f,c
 16752  004000  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 16753  004002  0EFF               	movlw	255
 16754  004004  1604               	andwf	i2__div_to_l_@f2,f,c
 16755  004006  0EFF               	movlw	255
 16756  004008  1605               	andwf	i2__div_to_l_@f2+1,f,c
 16757  00400A  0EFF               	movlw	255
 16758  00400C  1606               	andwf	i2__div_to_l_@f2+2,f,c
 16759  00400E  0E00               	movlw	0
 16760  004010  1607               	andwf	i2__div_to_l_@f2+3,f,c
 16761  004012  0E00               	movlw	0
 16762  004014  6E07               	movwf	i2__div_to_l_@quot,c
 16763  004016  0E00               	movlw	0
 16764  004018  6E08               	movwf	i2__div_to_l_@quot+1,c
 16765  00401A  0E00               	movlw	0
 16766  00401C  6E09               	movwf	i2__div_to_l_@quot+2,c
 16767  00401E  0E00               	movlw	0
 16768  004020  6E0A               	movwf	i2__div_to_l_@quot+3,c
 16769  004022  0E7F               	movlw	127
 16770  004024  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16771  004026  500B               	movf	i2__div_to_l_@cntr,w,c
 16772  004028  0FA0               	addlw	160
 16773  00402A  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16774  00402C  0E20               	movlw	32
 16775  00402E  6E0B               	movwf	i2__div_to_l_@cntr,c
 16776  004030                     i2l4529:
 16777  004030  90D8               	bcf	status,0,c
 16778  004032  3607               	rlcf	i2__div_to_l_@quot,f,c
 16779  004034  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16780  004036  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16781  004038  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16782  00403A  5004               	movf	i2__div_to_l_@f2,w,c
 16783  00403C  5C01               	subwf	i2__div_to_l_@f1,w,c
 16784  00403E  5005               	movf	i2__div_to_l_@f2+1,w,c
 16785  004040  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 16786  004042  5006               	movf	i2__div_to_l_@f2+2,w,c
 16787  004044  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 16788  004046  5007               	movf	i2__div_to_l_@f2+3,w,c
 16789  004048  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 16790  00404A  A0D8               	btfss	status,0,c
 16791  00404C  D009               	goto	i2l4537
 16792  00404E  5004               	movf	i2__div_to_l_@f2,w,c
 16793  004050  5E01               	subwf	i2__div_to_l_@f1,f,c
 16794  004052  5005               	movf	i2__div_to_l_@f2+1,w,c
 16795  004054  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 16796  004056  5006               	movf	i2__div_to_l_@f2+2,w,c
 16797  004058  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 16798  00405A  5007               	movf	i2__div_to_l_@f2+3,w,c
 16799  00405C  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 16800  00405E  8007               	bsf	i2__div_to_l_@quot,0,c
 16801  004060                     i2l4537:
 16802  004060  90D8               	bcf	status,0,c
 16803  004062  3601               	rlcf	i2__div_to_l_@f1,f,c
 16804  004064  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 16805  004066  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 16806  004068  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 16807  00406A  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 16808  00406C  D7E1               	goto	i2l4529
 16809  00406E  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 16810  004070  D016               	goto	i2l4553
 16811  004072  500C               	movf	i2__div_to_l_@exp1,w,c
 16812  004074  0A80               	xorlw	128
 16813  004076  0F9F               	addlw	159
 16814  004078  B0D8               	btfsc	status,0,c
 16815  00407A  D009               	goto	i2l4549
 16816  00407C  0E00               	movlw	0
 16817  00407E  6E01               	movwf	?i2__div_to_l_,c
 16818  004080  0E00               	movlw	0
 16819  004082  6E02               	movwf	?i2__div_to_l_+1,c
 16820  004084  0E00               	movlw	0
 16821  004086  6E03               	movwf	?i2__div_to_l_+2,c
 16822  004088  0E00               	movlw	0
 16823  00408A  6E04               	movwf	?i2__div_to_l_+3,c
 16824  00408C  0012               	return	
 16825  00408E                     i2l4549:
 16826  00408E  90D8               	bcf	status,0,c
 16827  004090  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 16828  004092  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 16829  004094  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 16830  004096  3207               	rrcf	i2__div_to_l_@quot,f,c
 16831  004098  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 16832  00409A  D7F9               	goto	i2l4549
 16833  00409C  D015               	goto	i2l666
 16834  00409E                     i2l4553:
 16835  00409E  0E1F               	movlw	31
 16836  0040A0  640C               	cpfsgt	i2__div_to_l_@exp1,c
 16837  0040A2  D00F               	goto	i2l4561
 16838  0040A4  0E00               	movlw	0
 16839  0040A6  6E01               	movwf	?i2__div_to_l_,c
 16840  0040A8  0E00               	movlw	0
 16841  0040AA  6E02               	movwf	?i2__div_to_l_+1,c
 16842  0040AC  0E00               	movlw	0
 16843  0040AE  6E03               	movwf	?i2__div_to_l_+2,c
 16844  0040B0  0E00               	movlw	0
 16845  0040B2  6E04               	movwf	?i2__div_to_l_+3,c
 16846  0040B4  0012               	return	
 16847  0040B6                     i2l4559:
 16848  0040B6  90D8               	bcf	status,0,c
 16849  0040B8  3607               	rlcf	i2__div_to_l_@quot,f,c
 16850  0040BA  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16851  0040BC  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16852  0040BE  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16853  0040C0  060C               	decf	i2__div_to_l_@exp1,f,c
 16854  0040C2                     i2l4561:
 16855  0040C2  500C               	movf	i2__div_to_l_@exp1,w,c
 16856  0040C4  A4D8               	btfss	status,2,c
 16857  0040C6  D7F7               	goto	i2l4559
 16858  0040C8                     i2l666:
 16859  0040C8  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 16860  0040CC  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 16861  0040D0  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 16862  0040D4  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 16863  0040D8  0012               	return		;funcret
 16864  0040DA                     __end_ofi2__div_to_l_:
 16865                           	opt stack 0
 16866                           pclatu	equ	0xFFB
 16867                           pclath	equ	0xFFA
 16868                           tblptru	equ	0xFF8
 16869                           tblptrh	equ	0xFF7
 16870                           tblptrl	equ	0xFF6
 16871                           tablat	equ	0xFF5
 16872                           prodh	equ	0xFF4
 16873                           prodl	equ	0xFF3
 16874                           intcon	equ	0xFF2
 16875                           intcon2	equ	0xFF1
 16876                           intcon3	equ	0xFF0
 16877                           postinc0	equ	0xFEE
 16878                           fsr0h	equ	0xFEA
 16879                           fsr0l	equ	0xFE9
 16880                           wreg	equ	0xFE8
 16881                           indf1	equ	0xFE7
 16882                           postdec1	equ	0xFE5
 16883                           fsr1h	equ	0xFE2
 16884                           fsr1l	equ	0xFE1
 16885                           indf2	equ	0xFDF
 16886                           postinc2	equ	0xFDE
 16887                           postdec2	equ	0xFDD
 16888                           fsr2h	equ	0xFDA
 16889                           fsr2l	equ	0xFD9
 16890                           status	equ	0xFD8
 16891                           
 16892 ;; *************** function i2___lltoft *****************
 16893 ;; Defined at:
 16894 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lltoft.c"
 16895 ;; Parameters:    Size  Location     Type
 16896 ;;  c               4    8[COMRAM] unsigned long 
 16897 ;; Auto vars:     Size  Location     Type
 16898 ;;  __lltoft        1   16[COMRAM] unsigned char 
 16899 ;; Return value:  Size  Location     Type
 16900 ;;                  3    8[COMRAM] float 
 16901 ;; Registers used:
 16902 ;;		wreg, status,2, status,0, cstack
 16903 ;; Tracked objects:
 16904 ;;		On entry : 0/0
 16905 ;;		On exit  : 0/0
 16906 ;;		Unchanged: 0/0
 16907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16910 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16911 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16912 ;;Total ram usage:        9 bytes
 16913 ;; Hardware stack levels used:    1
 16914 ;; Hardware stack levels required when called:    1
 16915 ;; This function calls:
 16916 ;;		i2___ftpack
 16917 ;; This function is called by:
 16918 ;;		i2_sprintf
 16919 ;; This function uses a non-reentrant model
 16920 ;;
 16921                           
 16922                           	psect	text57
 16923  004F50                     __ptext57:
 16924                           	opt stack 0
 16925  004F50                     i2___lltoft:
 16926                           	opt stack 20
 16927                           
 16928                           ;incstack = 0
 16929  004F50  0E8E               	movlw	142
 16930  004F52  6E11               	movwf	i2___lltoft@exp,c
 16931  004F54  D006               	goto	i2l4749
 16932  004F56                     i2l4747:
 16933  004F56  90D8               	bcf	status,0,c
 16934  004F58  320C               	rrcf	i2___lltoft@c+3,f,c
 16935  004F5A  320B               	rrcf	i2___lltoft@c+2,f,c
 16936  004F5C  320A               	rrcf	i2___lltoft@c+1,f,c
 16937  004F5E  3209               	rrcf	i2___lltoft@c,f,c
 16938  004F60  2A11               	incf	i2___lltoft@exp,f,c
 16939  004F62                     i2l4749:
 16940  004F62  0E00               	movlw	0
 16941  004F64  1409               	andwf	i2___lltoft@c,w,c
 16942  004F66  6E0D               	movwf	??i2___lltoft& (0+255),c
 16943  004F68  0E00               	movlw	0
 16944  004F6A  140A               	andwf	i2___lltoft@c+1,w,c
 16945  004F6C  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 16946  004F6E  0E00               	movlw	0
 16947  004F70  140B               	andwf	i2___lltoft@c+2,w,c
 16948  004F72  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 16949  004F74  0EFF               	movlw	255
 16950  004F76  140C               	andwf	i2___lltoft@c+3,w,c
 16951  004F78  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 16952  004F7A  500D               	movf	??i2___lltoft,w,c
 16953  004F7C  100E               	iorwf	??i2___lltoft+1,w,c
 16954  004F7E  100F               	iorwf	??i2___lltoft+2,w,c
 16955  004F80  1010               	iorwf	??i2___lltoft+3,w,c
 16956  004F82  A4D8               	btfss	status,2,c
 16957  004F84  D7E8               	goto	i2l4747
 16958  004F86  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 16959  004F8A  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 16960  004F8E  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 16961  004F92  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 16962  004F96  0E00               	movlw	0
 16963  004F98  6E05               	movwf	i2___ftpack@sign,c
 16964  004F9A  EC7B  F023         	call	i2___ftpack	;wreg free
 16965  004F9E  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 16966  004FA2  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 16967  004FA6  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 16968  004FAA  0012               	return	
 16969  004FAC                     __end_ofi2___lltoft:
 16970                           	opt stack 0
 16971                           pclatu	equ	0xFFB
 16972                           pclath	equ	0xFFA
 16973                           tblptru	equ	0xFF8
 16974                           tblptrh	equ	0xFF7
 16975                           tblptrl	equ	0xFF6
 16976                           tablat	equ	0xFF5
 16977                           prodh	equ	0xFF4
 16978                           prodl	equ	0xFF3
 16979                           intcon	equ	0xFF2
 16980                           intcon2	equ	0xFF1
 16981                           intcon3	equ	0xFF0
 16982                           postinc0	equ	0xFEE
 16983                           fsr0h	equ	0xFEA
 16984                           fsr0l	equ	0xFE9
 16985                           wreg	equ	0xFE8
 16986                           indf1	equ	0xFE7
 16987                           postdec1	equ	0xFE5
 16988                           fsr1h	equ	0xFE2
 16989                           fsr1l	equ	0xFE1
 16990                           indf2	equ	0xFDF
 16991                           postinc2	equ	0xFDE
 16992                           postdec2	equ	0xFDD
 16993                           fsr2h	equ	0xFDA
 16994                           fsr2l	equ	0xFD9
 16995                           status	equ	0xFD8
 16996                           
 16997 ;; *************** function i2___llmod *****************
 16998 ;; Defined at:
 16999 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
 17000 ;; Parameters:    Size  Location     Type
 17001 ;;  dividend        4   13[COMRAM] unsigned long 
 17002 ;;  divisor         4   17[COMRAM] unsigned long 
 17003 ;; Auto vars:     Size  Location     Type
 17004 ;;  __llmod         1   21[COMRAM] unsigned char 
 17005 ;; Return value:  Size  Location     Type
 17006 ;;                  4   13[COMRAM] unsigned long 
 17007 ;; Registers used:
 17008 ;;		wreg, status,2, status,0
 17009 ;; Tracked objects:
 17010 ;;		On entry : 0/0
 17011 ;;		On exit  : 0/0
 17012 ;;		Unchanged: 0/0
 17013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17014 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17017 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17018 ;;Total ram usage:        9 bytes
 17019 ;; Hardware stack levels used:    1
 17020 ;; This function calls:
 17021 ;;		Nothing
 17022 ;; This function is called by:
 17023 ;;		i2_sprintf
 17024 ;; This function uses a non-reentrant model
 17025 ;;
 17026                           
 17027                           	psect	text58
 17028  004E88                     __ptext58:
 17029                           	opt stack 0
 17030  004E88                     i2___llmod:
 17031                           	opt stack 21
 17032                           
 17033                           ;incstack = 0
 17034  004E88  5012               	movf	i2___llmod@divisor,w,c
 17035  004E8A  1013               	iorwf	i2___llmod@divisor+1,w,c
 17036  004E8C  1014               	iorwf	i2___llmod@divisor+2,w,c
 17037  004E8E  1015               	iorwf	i2___llmod@divisor+3,w,c
 17038  004E90  B4D8               	btfsc	status,2,c
 17039  004E92  D024               	goto	i2l855
 17040  004E94  0E01               	movlw	1
 17041  004E96  6E16               	movwf	i2___llmod@counter,c
 17042  004E98  D006               	goto	i2l4735
 17043  004E9A                     i2l4733:
 17044  004E9A  90D8               	bcf	status,0,c
 17045  004E9C  3612               	rlcf	i2___llmod@divisor,f,c
 17046  004E9E  3613               	rlcf	i2___llmod@divisor+1,f,c
 17047  004EA0  3614               	rlcf	i2___llmod@divisor+2,f,c
 17048  004EA2  3615               	rlcf	i2___llmod@divisor+3,f,c
 17049  004EA4  2A16               	incf	i2___llmod@counter,f,c
 17050  004EA6                     i2l4735:
 17051  004EA6  AE15               	btfss	i2___llmod@divisor+3,7,c
 17052  004EA8  D7F8               	goto	i2l4733
 17053  004EAA                     i2l4737:
 17054  004EAA  5012               	movf	i2___llmod@divisor,w,c
 17055  004EAC  5C0E               	subwf	i2___llmod@dividend,w,c
 17056  004EAE  5013               	movf	i2___llmod@divisor+1,w,c
 17057  004EB0  580F               	subwfb	i2___llmod@dividend+1,w,c
 17058  004EB2  5014               	movf	i2___llmod@divisor+2,w,c
 17059  004EB4  5810               	subwfb	i2___llmod@dividend+2,w,c
 17060  004EB6  5015               	movf	i2___llmod@divisor+3,w,c
 17061  004EB8  5811               	subwfb	i2___llmod@dividend+3,w,c
 17062  004EBA  A0D8               	btfss	status,0,c
 17063  004EBC  D008               	goto	i2l4741
 17064  004EBE  5012               	movf	i2___llmod@divisor,w,c
 17065  004EC0  5E0E               	subwf	i2___llmod@dividend,f,c
 17066  004EC2  5013               	movf	i2___llmod@divisor+1,w,c
 17067  004EC4  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 17068  004EC6  5014               	movf	i2___llmod@divisor+2,w,c
 17069  004EC8  5A10               	subwfb	i2___llmod@dividend+2,f,c
 17070  004ECA  5015               	movf	i2___llmod@divisor+3,w,c
 17071  004ECC  5A11               	subwfb	i2___llmod@dividend+3,f,c
 17072  004ECE                     i2l4741:
 17073  004ECE  90D8               	bcf	status,0,c
 17074  004ED0  3215               	rrcf	i2___llmod@divisor+3,f,c
 17075  004ED2  3214               	rrcf	i2___llmod@divisor+2,f,c
 17076  004ED4  3213               	rrcf	i2___llmod@divisor+1,f,c
 17077  004ED6  3212               	rrcf	i2___llmod@divisor,f,c
 17078  004ED8  2E16               	decfsz	i2___llmod@counter,f,c
 17079  004EDA  D7E7               	goto	i2l4737
 17080  004EDC                     i2l855:
 17081  004EDC  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 17082  004EE0  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 17083  004EE4  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 17084  004EE8  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 17085  004EEC  0012               	return		;funcret
 17086  004EEE                     __end_ofi2___llmod:
 17087                           	opt stack 0
 17088                           pclatu	equ	0xFFB
 17089                           pclath	equ	0xFFA
 17090                           tblptru	equ	0xFF8
 17091                           tblptrh	equ	0xFF7
 17092                           tblptrl	equ	0xFF6
 17093                           tablat	equ	0xFF5
 17094                           prodh	equ	0xFF4
 17095                           prodl	equ	0xFF3
 17096                           intcon	equ	0xFF2
 17097                           intcon2	equ	0xFF1
 17098                           intcon3	equ	0xFF0
 17099                           postinc0	equ	0xFEE
 17100                           fsr0h	equ	0xFEA
 17101                           fsr0l	equ	0xFE9
 17102                           wreg	equ	0xFE8
 17103                           indf1	equ	0xFE7
 17104                           postdec1	equ	0xFE5
 17105                           fsr1h	equ	0xFE2
 17106                           fsr1l	equ	0xFE1
 17107                           indf2	equ	0xFDF
 17108                           postinc2	equ	0xFDE
 17109                           postdec2	equ	0xFDD
 17110                           fsr2h	equ	0xFDA
 17111                           fsr2l	equ	0xFD9
 17112                           status	equ	0xFD8
 17113                           
 17114 ;; *************** function i2___lldiv *****************
 17115 ;; Defined at:
 17116 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
 17117 ;; Parameters:    Size  Location     Type
 17118 ;;  dividend        4    0[COMRAM] unsigned long 
 17119 ;;  divisor         4    4[COMRAM] unsigned long 
 17120 ;; Auto vars:     Size  Location     Type
 17121 ;;  __lldiv         4    8[COMRAM] unsigned long 
 17122 ;;  __lldiv         1   12[COMRAM] unsigned char 
 17123 ;; Return value:  Size  Location     Type
 17124 ;;                  4    0[COMRAM] unsigned long 
 17125 ;; Registers used:
 17126 ;;		wreg, status,2, status,0
 17127 ;; Tracked objects:
 17128 ;;		On entry : 0/0
 17129 ;;		On exit  : 0/0
 17130 ;;		Unchanged: 0/0
 17131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17132 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17133 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17135 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17136 ;;Total ram usage:       13 bytes
 17137 ;; Hardware stack levels used:    1
 17138 ;; This function calls:
 17139 ;;		Nothing
 17140 ;; This function is called by:
 17141 ;;		i2_sprintf
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145                           	psect	text59
 17146  004C2C                     __ptext59:
 17147                           	opt stack 0
 17148  004C2C                     i2___lldiv:
 17149                           	opt stack 21
 17150                           
 17151                           ;incstack = 0
 17152  004C2C  0E00               	movlw	0
 17153  004C2E  6E09               	movwf	i2___lldiv@quotient,c
 17154  004C30  0E00               	movlw	0
 17155  004C32  6E0A               	movwf	i2___lldiv@quotient+1,c
 17156  004C34  0E00               	movlw	0
 17157  004C36  6E0B               	movwf	i2___lldiv@quotient+2,c
 17158  004C38  0E00               	movlw	0
 17159  004C3A  6E0C               	movwf	i2___lldiv@quotient+3,c
 17160  004C3C  5005               	movf	i2___lldiv@divisor,w,c
 17161  004C3E  1006               	iorwf	i2___lldiv@divisor+1,w,c
 17162  004C40  1007               	iorwf	i2___lldiv@divisor+2,w,c
 17163  004C42  1008               	iorwf	i2___lldiv@divisor+3,w,c
 17164  004C44  B4D8               	btfsc	status,2,c
 17165  004C46  D02A               	goto	i2l845
 17166  004C48  0E01               	movlw	1
 17167  004C4A  6E0D               	movwf	i2___lldiv@counter,c
 17168  004C4C  D006               	goto	i2l4715
 17169  004C4E                     i2l4713:
 17170  004C4E  90D8               	bcf	status,0,c
 17171  004C50  3605               	rlcf	i2___lldiv@divisor,f,c
 17172  004C52  3606               	rlcf	i2___lldiv@divisor+1,f,c
 17173  004C54  3607               	rlcf	i2___lldiv@divisor+2,f,c
 17174  004C56  3608               	rlcf	i2___lldiv@divisor+3,f,c
 17175  004C58  2A0D               	incf	i2___lldiv@counter,f,c
 17176  004C5A                     i2l4715:
 17177  004C5A  AE08               	btfss	i2___lldiv@divisor+3,7,c
 17178  004C5C  D7F8               	goto	i2l4713
 17179  004C5E                     i2l4717:
 17180  004C5E  90D8               	bcf	status,0,c
 17181  004C60  3609               	rlcf	i2___lldiv@quotient,f,c
 17182  004C62  360A               	rlcf	i2___lldiv@quotient+1,f,c
 17183  004C64  360B               	rlcf	i2___lldiv@quotient+2,f,c
 17184  004C66  360C               	rlcf	i2___lldiv@quotient+3,f,c
 17185  004C68  5005               	movf	i2___lldiv@divisor,w,c
 17186  004C6A  5C01               	subwf	i2___lldiv@dividend,w,c
 17187  004C6C  5006               	movf	i2___lldiv@divisor+1,w,c
 17188  004C6E  5802               	subwfb	i2___lldiv@dividend+1,w,c
 17189  004C70  5007               	movf	i2___lldiv@divisor+2,w,c
 17190  004C72  5803               	subwfb	i2___lldiv@dividend+2,w,c
 17191  004C74  5008               	movf	i2___lldiv@divisor+3,w,c
 17192  004C76  5804               	subwfb	i2___lldiv@dividend+3,w,c
 17193  004C78  A0D8               	btfss	status,0,c
 17194  004C7A  D009               	goto	i2l4725
 17195  004C7C  5005               	movf	i2___lldiv@divisor,w,c
 17196  004C7E  5E01               	subwf	i2___lldiv@dividend,f,c
 17197  004C80  5006               	movf	i2___lldiv@divisor+1,w,c
 17198  004C82  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 17199  004C84  5007               	movf	i2___lldiv@divisor+2,w,c
 17200  004C86  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 17201  004C88  5008               	movf	i2___lldiv@divisor+3,w,c
 17202  004C8A  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 17203  004C8C  8009               	bsf	i2___lldiv@quotient,0,c
 17204  004C8E                     i2l4725:
 17205  004C8E  90D8               	bcf	status,0,c
 17206  004C90  3208               	rrcf	i2___lldiv@divisor+3,f,c
 17207  004C92  3207               	rrcf	i2___lldiv@divisor+2,f,c
 17208  004C94  3206               	rrcf	i2___lldiv@divisor+1,f,c
 17209  004C96  3205               	rrcf	i2___lldiv@divisor,f,c
 17210  004C98  2E0D               	decfsz	i2___lldiv@counter,f,c
 17211  004C9A  D7E1               	goto	i2l4717
 17212  004C9C                     i2l845:
 17213  004C9C  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 17214  004CA0  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 17215  004CA4  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 17216  004CA8  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 17217  004CAC  0012               	return		;funcret
 17218  004CAE                     __end_ofi2___lldiv:
 17219                           	opt stack 0
 17220                           pclatu	equ	0xFFB
 17221                           pclath	equ	0xFFA
 17222                           tblptru	equ	0xFF8
 17223                           tblptrh	equ	0xFF7
 17224                           tblptrl	equ	0xFF6
 17225                           tablat	equ	0xFF5
 17226                           prodh	equ	0xFF4
 17227                           prodl	equ	0xFF3
 17228                           intcon	equ	0xFF2
 17229                           intcon2	equ	0xFF1
 17230                           intcon3	equ	0xFF0
 17231                           postinc0	equ	0xFEE
 17232                           fsr0h	equ	0xFEA
 17233                           fsr0l	equ	0xFE9
 17234                           wreg	equ	0xFE8
 17235                           indf1	equ	0xFE7
 17236                           postdec1	equ	0xFE5
 17237                           fsr1h	equ	0xFE2
 17238                           fsr1l	equ	0xFE1
 17239                           indf2	equ	0xFDF
 17240                           postinc2	equ	0xFDE
 17241                           postdec2	equ	0xFDD
 17242                           fsr2h	equ	0xFDA
 17243                           fsr2l	equ	0xFD9
 17244                           status	equ	0xFD8
 17245                           
 17246 ;; *************** function i2___fttol *****************
 17247 ;; Defined at:
 17248 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
 17249 ;; Parameters:    Size  Location     Type
 17250 ;;  f1              3   35[COMRAM] float 
 17251 ;; Auto vars:     Size  Location     Type
 17252 ;;  __fttol         4   45[COMRAM] unsigned long 
 17253 ;;  __fttol         1   49[COMRAM] unsigned char 
 17254 ;;  __fttol         1   44[COMRAM] unsigned char 
 17255 ;; Return value:  Size  Location     Type
 17256 ;;                  4   35[COMRAM] long 
 17257 ;; Registers used:
 17258 ;;		wreg, status,2, status,0
 17259 ;; Tracked objects:
 17260 ;;		On entry : 0/0
 17261 ;;		On exit  : 0/0
 17262 ;;		Unchanged: 0/0
 17263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17265 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17266 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17267 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17268 ;;Total ram usage:       15 bytes
 17269 ;; Hardware stack levels used:    1
 17270 ;; This function calls:
 17271 ;;		Nothing
 17272 ;; This function is called by:
 17273 ;;		i2_sprintf
 17274 ;; This function uses a non-reentrant model
 17275 ;;
 17276                           
 17277                           	psect	text60
 17278  0042DA                     __ptext60:
 17279                           	opt stack 0
 17280  0042DA                     i2___fttol:
 17281                           	opt stack 21
 17282                           
 17283                           ;incstack = 0
 17284  0042DA  C026  F028         	movff	i2___fttol@f1+2,??i2___fttol
 17285  0042DE  6A29               	clrf	(??i2___fttol+1)& (0+255),c
 17286  0042E0  6A2A               	clrf	(??i2___fttol+2)& (0+255),c
 17287  0042E2  3425               	rlcf	i2___fttol@f1+1,w,c
 17288  0042E4  3628               	rlcf	??i2___fttol& (0+255),f,c
 17289  0042E6  E301               	bnc	u520_41
 17290  0042E8  8029               	bsf	(??i2___fttol+1)& (0+255),0,c
 17291  0042EA                     u520_41:
 17292  0042EA  5028               	movf	??i2___fttol,w,c
 17293  0042EC  6E32               	movwf	i2___fttol@exp1,c
 17294  0042EE  5032               	movf	i2___fttol@exp1,w,c
 17295  0042F0  A4D8               	btfss	status,2,c
 17296  0042F2  D009               	goto	i2l4655
 17297  0042F4  0E00               	movlw	0
 17298  0042F6  6E24               	movwf	?i2___fttol,c
 17299  0042F8  0E00               	movlw	0
 17300  0042FA  6E25               	movwf	?i2___fttol+1,c
 17301  0042FC  0E00               	movlw	0
 17302  0042FE  6E26               	movwf	?i2___fttol+2,c
 17303  004300  0E00               	movlw	0
 17304  004302  6E27               	movwf	?i2___fttol+3,c
 17305  004304  0012               	return	
 17306  004306                     i2l4655:
 17307  004306  0E17               	movlw	23
 17308  004308  6E28               	movwf	??i2___fttol& (0+255),c
 17309  00430A  C024  F029         	movff	i2___fttol@f1,??i2___fttol+1
 17310  00430E  C025  F02A         	movff	i2___fttol@f1+1,??i2___fttol+2
 17311  004312  C026  F02B         	movff	i2___fttol@f1+2,??i2___fttol+3
 17312  004316  2828               	incf	??i2___fttol,w,c
 17313  004318  6E2C               	movwf	(??i2___fttol+4)& (0+255),c
 17314  00431A  D004               	goto	i2u522_40
 17315  00431C                     i2u522_45:
 17316  00431C  90D8               	bcf	status,0,c
 17317  00431E  322B               	rrcf	??i2___fttol+3,f,c
 17318  004320  322A               	rrcf	??i2___fttol+2,f,c
 17319  004322  3229               	rrcf	??i2___fttol+1,f,c
 17320  004324                     i2u522_40:
 17321  004324  2E2C               	decfsz	(??i2___fttol+4)& (0+255),f,c
 17322  004326  D7FA               	goto	i2u522_45
 17323  004328  5029               	movf	??i2___fttol+1,w,c
 17324  00432A  6E2D               	movwf	i2___fttol@sign1,c
 17325  00432C  8E25               	bsf	i2___fttol@f1+1,7,c
 17326  00432E  0EFF               	movlw	255
 17327  004330  1624               	andwf	i2___fttol@f1,f,c
 17328  004332  0EFF               	movlw	255
 17329  004334  1625               	andwf	i2___fttol@f1+1,f,c
 17330  004336  0E00               	movlw	0
 17331  004338  1626               	andwf	i2___fttol@f1+2,f,c
 17332  00433A  5024               	movf	i2___fttol@f1,w,c
 17333  00433C  6E2E               	movwf	i2___fttol@lval,c
 17334  00433E  5025               	movf	i2___fttol@f1+1,w,c
 17335  004340  6E2F               	movwf	i2___fttol@lval+1,c
 17336  004342  5026               	movf	i2___fttol@f1+2,w,c
 17337  004344  6E30               	movwf	i2___fttol@lval+2,c
 17338  004346  6A31               	clrf	i2___fttol@lval+3,c
 17339  004348  0E8E               	movlw	142
 17340  00434A  5E32               	subwf	i2___fttol@exp1,f,c
 17341  00434C  AE32               	btfss	i2___fttol@exp1,7,c
 17342  00434E  D016               	goto	i2l4677
 17343  004350  5032               	movf	i2___fttol@exp1,w,c
 17344  004352  0A80               	xorlw	128
 17345  004354  0F8F               	addlw	143
 17346  004356  B0D8               	btfsc	status,0,c
 17347  004358  D009               	goto	i2l4673
 17348  00435A  0E00               	movlw	0
 17349  00435C  6E24               	movwf	?i2___fttol,c
 17350  00435E  0E00               	movlw	0
 17351  004360  6E25               	movwf	?i2___fttol+1,c
 17352  004362  0E00               	movlw	0
 17353  004364  6E26               	movwf	?i2___fttol+2,c
 17354  004366  0E00               	movlw	0
 17355  004368  6E27               	movwf	?i2___fttol+3,c
 17356  00436A  0012               	return	
 17357  00436C                     i2l4673:
 17358  00436C  90D8               	bcf	status,0,c
 17359  00436E  3231               	rrcf	i2___fttol@lval+3,f,c
 17360  004370  3230               	rrcf	i2___fttol@lval+2,f,c
 17361  004372  322F               	rrcf	i2___fttol@lval+1,f,c
 17362  004374  322E               	rrcf	i2___fttol@lval,f,c
 17363  004376  3E32               	incfsz	i2___fttol@exp1,f,c
 17364  004378  D7F9               	goto	i2l4673
 17365  00437A  D015               	goto	i2l4687
 17366  00437C                     i2l4677:
 17367  00437C  0E17               	movlw	23
 17368  00437E  6432               	cpfsgt	i2___fttol@exp1,c
 17369  004380  D00F               	goto	i2l4685
 17370  004382  0E00               	movlw	0
 17371  004384  6E24               	movwf	?i2___fttol,c
 17372  004386  0E00               	movlw	0
 17373  004388  6E25               	movwf	?i2___fttol+1,c
 17374  00438A  0E00               	movlw	0
 17375  00438C  6E26               	movwf	?i2___fttol+2,c
 17376  00438E  0E00               	movlw	0
 17377  004390  6E27               	movwf	?i2___fttol+3,c
 17378  004392  0012               	return	
 17379  004394                     i2l4683:
 17380  004394  90D8               	bcf	status,0,c
 17381  004396  362E               	rlcf	i2___fttol@lval,f,c
 17382  004398  362F               	rlcf	i2___fttol@lval+1,f,c
 17383  00439A  3630               	rlcf	i2___fttol@lval+2,f,c
 17384  00439C  3631               	rlcf	i2___fttol@lval+3,f,c
 17385  00439E  0632               	decf	i2___fttol@exp1,f,c
 17386  0043A0                     i2l4685:
 17387  0043A0  5032               	movf	i2___fttol@exp1,w,c
 17388  0043A2  A4D8               	btfss	status,2,c
 17389  0043A4  D7F7               	goto	i2l4683
 17390  0043A6                     i2l4687:
 17391  0043A6  502D               	movf	i2___fttol@sign1,w,c
 17392  0043A8  B4D8               	btfsc	status,2,c
 17393  0043AA  D008               	goto	i2l4691
 17394  0043AC  1E31               	comf	i2___fttol@lval+3,f,c
 17395  0043AE  1E30               	comf	i2___fttol@lval+2,f,c
 17396  0043B0  1E2F               	comf	i2___fttol@lval+1,f,c
 17397  0043B2  6C2E               	negf	i2___fttol@lval,c
 17398  0043B4  0E00               	movlw	0
 17399  0043B6  222F               	addwfc	i2___fttol@lval+1,f,c
 17400  0043B8  2230               	addwfc	i2___fttol@lval+2,f,c
 17401  0043BA  2231               	addwfc	i2___fttol@lval+3,f,c
 17402  0043BC                     i2l4691:
 17403  0043BC  C02E  F024         	movff	i2___fttol@lval,?i2___fttol
 17404  0043C0  C02F  F025         	movff	i2___fttol@lval+1,?i2___fttol+1
 17405  0043C4  C030  F026         	movff	i2___fttol@lval+2,?i2___fttol+2
 17406  0043C8  C031  F027         	movff	i2___fttol@lval+3,?i2___fttol+3
 17407  0043CC  0012               	return	
 17408  0043CE                     __end_ofi2___fttol:
 17409                           	opt stack 0
 17410                           pclatu	equ	0xFFB
 17411                           pclath	equ	0xFFA
 17412                           tblptru	equ	0xFF8
 17413                           tblptrh	equ	0xFF7
 17414                           tblptrl	equ	0xFF6
 17415                           tablat	equ	0xFF5
 17416                           prodh	equ	0xFF4
 17417                           prodl	equ	0xFF3
 17418                           intcon	equ	0xFF2
 17419                           intcon2	equ	0xFF1
 17420                           intcon3	equ	0xFF0
 17421                           postinc0	equ	0xFEE
 17422                           fsr0h	equ	0xFEA
 17423                           fsr0l	equ	0xFE9
 17424                           wreg	equ	0xFE8
 17425                           indf1	equ	0xFE7
 17426                           postdec1	equ	0xFE5
 17427                           fsr1h	equ	0xFE2
 17428                           fsr1l	equ	0xFE1
 17429                           indf2	equ	0xFDF
 17430                           postinc2	equ	0xFDE
 17431                           postdec2	equ	0xFDD
 17432                           fsr2h	equ	0xFDA
 17433                           fsr2l	equ	0xFD9
 17434                           status	equ	0xFD8
 17435                           
 17436 ;; *************** function i2___ftsub *****************
 17437 ;; Defined at:
 17438 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftsub.c"
 17439 ;; Parameters:    Size  Location     Type
 17440 ;;  f1              3   57[COMRAM] float 
 17441 ;;  f2              3   60[COMRAM] float 
 17442 ;; Auto vars:     Size  Location     Type
 17443 ;;		None
 17444 ;; Return value:  Size  Location     Type
 17445 ;;                  3   57[COMRAM] float 
 17446 ;; Registers used:
 17447 ;;		wreg, status,2, status,0, cstack
 17448 ;; Tracked objects:
 17449 ;;		On entry : 0/0
 17450 ;;		On exit  : 0/0
 17451 ;;		Unchanged: 0/0
 17452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17453 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17456 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17457 ;;Total ram usage:        6 bytes
 17458 ;; Hardware stack levels used:    1
 17459 ;; Hardware stack levels required when called:    2
 17460 ;; This function calls:
 17461 ;;		i2___ftadd
 17462 ;; This function is called by:
 17463 ;;		i2_sprintf
 17464 ;; This function uses a non-reentrant model
 17465 ;;
 17466                           
 17467                           	psect	text61
 17468  0052A8                     __ptext61:
 17469                           	opt stack 0
 17470  0052A8                     i2___ftsub:
 17471                           	opt stack 19
 17472                           
 17473                           ;incstack = 0
 17474  0052A8  503D               	movf	i2___ftsub@f2,w,c
 17475  0052AA  103E               	iorwf	i2___ftsub@f2+1,w,c
 17476  0052AC  103F               	iorwf	i2___ftsub@f2+2,w,c
 17477  0052AE  B4D8               	btfsc	status,2,c
 17478  0052B0  D006               	goto	i2l4645
 17479  0052B2  0E00               	movlw	0
 17480  0052B4  1A3D               	xorwf	i2___ftsub@f2,f,c
 17481  0052B6  0E00               	movlw	0
 17482  0052B8  1A3E               	xorwf	i2___ftsub@f2+1,f,c
 17483  0052BA  0E80               	movlw	128
 17484  0052BC  1A3F               	xorwf	i2___ftsub@f2+2,f,c
 17485  0052BE                     i2l4645:
 17486  0052BE  C03A  F02E         	movff	i2___ftsub@f1,i2___ftadd@f1
 17487  0052C2  C03B  F02F         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 17488  0052C6  C03C  F030         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 17489  0052CA  C03D  F031         	movff	i2___ftsub@f2,i2___ftadd@f2
 17490  0052CE  C03E  F032         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 17491  0052D2  C03F  F033         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 17492  0052D6  ECD5  F01A         	call	i2___ftadd	;wreg free
 17493  0052DA  C02E  F03A         	movff	?i2___ftadd,?i2___ftsub
 17494  0052DE  C02F  F03B         	movff	?i2___ftadd+1,?i2___ftsub+1
 17495  0052E2  C030  F03C         	movff	?i2___ftadd+2,?i2___ftsub+2
 17496  0052E6  0012               	return	
 17497  0052E8                     __end_ofi2___ftsub:
 17498                           	opt stack 0
 17499                           pclatu	equ	0xFFB
 17500                           pclath	equ	0xFFA
 17501                           tblptru	equ	0xFF8
 17502                           tblptrh	equ	0xFF7
 17503                           tblptrl	equ	0xFF6
 17504                           tablat	equ	0xFF5
 17505                           prodh	equ	0xFF4
 17506                           prodl	equ	0xFF3
 17507                           intcon	equ	0xFF2
 17508                           intcon2	equ	0xFF1
 17509                           intcon3	equ	0xFF0
 17510                           postinc0	equ	0xFEE
 17511                           fsr0h	equ	0xFEA
 17512                           fsr0l	equ	0xFE9
 17513                           wreg	equ	0xFE8
 17514                           indf1	equ	0xFE7
 17515                           postdec1	equ	0xFE5
 17516                           fsr1h	equ	0xFE2
 17517                           fsr1l	equ	0xFE1
 17518                           indf2	equ	0xFDF
 17519                           postinc2	equ	0xFDE
 17520                           postdec2	equ	0xFDD
 17521                           fsr2h	equ	0xFDA
 17522                           fsr2l	equ	0xFD9
 17523                           status	equ	0xFD8
 17524                           
 17525 ;; *************** function i2___ftadd *****************
 17526 ;; Defined at:
 17527 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
 17528 ;; Parameters:    Size  Location     Type
 17529 ;;  f1              3   45[COMRAM] float 
 17530 ;;  f2              3   48[COMRAM] float 
 17531 ;; Auto vars:     Size  Location     Type
 17532 ;;  __ftadd         1   56[COMRAM] unsigned char 
 17533 ;;  __ftadd         1   55[COMRAM] unsigned char 
 17534 ;;  __ftadd         1   54[COMRAM] unsigned char 
 17535 ;; Return value:  Size  Location     Type
 17536 ;;                  3   45[COMRAM] float 
 17537 ;; Registers used:
 17538 ;;		wreg, status,2, status,0, cstack
 17539 ;; Tracked objects:
 17540 ;;		On entry : 0/0
 17541 ;;		On exit  : 0/0
 17542 ;;		Unchanged: 0/0
 17543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17544 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17545 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17546 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17547 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17548 ;;Total ram usage:       12 bytes
 17549 ;; Hardware stack levels used:    1
 17550 ;; Hardware stack levels required when called:    1
 17551 ;; This function calls:
 17552 ;;		i2___ftpack
 17553 ;; This function is called by:
 17554 ;;		_timer0_isr
 17555 ;;		i2_sprintf
 17556 ;;		i2___ftsub
 17557 ;; This function uses a non-reentrant model
 17558 ;;
 17559                           
 17560                           	psect	text62
 17561  0035AA                     __ptext62:
 17562                           	opt stack 0
 17563  0035AA                     i2___ftadd:
 17564                           	opt stack 19
 17565                           
 17566                           ;incstack = 0
 17567  0035AA  C030  F034         	movff	i2___ftadd@f1+2,??i2___ftadd
 17568  0035AE  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 17569  0035B0  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 17570  0035B2  342F               	rlcf	i2___ftadd@f1+1,w,c
 17571  0035B4  3634               	rlcf	??i2___ftadd& (0+255),f,c
 17572  0035B6  E301               	bnc	u419_41
 17573  0035B8  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17574  0035BA                     u419_41:
 17575  0035BA  5034               	movf	??i2___ftadd,w,c
 17576  0035BC  6E39               	movwf	i2___ftadd@exp1,c
 17577  0035BE  C033  F034         	movff	i2___ftadd@f2+2,??i2___ftadd
 17578  0035C2  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 17579  0035C4  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 17580  0035C6  3432               	rlcf	i2___ftadd@f2+1,w,c
 17581  0035C8  3634               	rlcf	??i2___ftadd& (0+255),f,c
 17582  0035CA  E301               	bnc	u420_41
 17583  0035CC  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17584  0035CE                     u420_41:
 17585  0035CE  5034               	movf	??i2___ftadd,w,c
 17586  0035D0  6E38               	movwf	i2___ftadd@exp2,c
 17587  0035D2  5039               	movf	i2___ftadd@exp1,w,c
 17588  0035D4  B4D8               	btfsc	status,2,c
 17589  0035D6  D00B               	goto	i2l721
 17590  0035D8  5038               	movf	i2___ftadd@exp2,w,c
 17591  0035DA  5C39               	subwf	i2___ftadd@exp1,w,c
 17592  0035DC  B0D8               	btfsc	status,0,c
 17593  0035DE  D00E               	goto	i2l4029
 17594  0035E0  5039               	movf	i2___ftadd@exp1,w,c
 17595  0035E2  0800               	sublw	0
 17596  0035E4  2438               	addwf	i2___ftadd@exp2,w,c
 17597  0035E6  6E34               	movwf	??i2___ftadd& (0+255),c
 17598  0035E8  0E18               	movlw	24
 17599  0035EA  6434               	cpfsgt	??i2___ftadd,c
 17600  0035EC  D007               	goto	i2l4029
 17601  0035EE                     i2l721:
 17602  0035EE  C031  F02E         	movff	i2___ftadd@f2,?i2___ftadd
 17603  0035F2  C032  F02F         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 17604  0035F6  C033  F030         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 17605  0035FA  0012               	return	
 17606  0035FC                     i2l4029:
 17607  0035FC  5038               	movf	i2___ftadd@exp2,w,c
 17608  0035FE  B4D8               	btfsc	status,2,c
 17609  003600  D00B               	goto	i2l725
 17610  003602  5039               	movf	i2___ftadd@exp1,w,c
 17611  003604  5C38               	subwf	i2___ftadd@exp2,w,c
 17612  003606  B0D8               	btfsc	status,0,c
 17613  003608  D00E               	goto	i2l4035
 17614  00360A  5038               	movf	i2___ftadd@exp2,w,c
 17615  00360C  0800               	sublw	0
 17616  00360E  2439               	addwf	i2___ftadd@exp1,w,c
 17617  003610  6E34               	movwf	??i2___ftadd& (0+255),c
 17618  003612  0E18               	movlw	24
 17619  003614  6434               	cpfsgt	??i2___ftadd,c
 17620  003616  D007               	goto	i2l4035
 17621  003618                     i2l725:
 17622  003618  C02E  F02E         	movff	i2___ftadd@f1,?i2___ftadd
 17623  00361C  C02F  F02F         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 17624  003620  C030  F030         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 17625  003624  0012               	return	
 17626  003626                     i2l4035:
 17627  003626  0E06               	movlw	6
 17628  003628  6E37               	movwf	i2___ftadd@sign,c
 17629  00362A  BE30               	btfsc	i2___ftadd@f1+2,7,c
 17630  00362C  8E37               	bsf	i2___ftadd@sign,7,c
 17631  00362E  BE33               	btfsc	i2___ftadd@f2+2,7,c
 17632  003630  8C37               	bsf	i2___ftadd@sign,6,c
 17633  003632  8E2F               	bsf	i2___ftadd@f1+1,7,c
 17634  003634  0EFF               	movlw	255
 17635  003636  162E               	andwf	i2___ftadd@f1,f,c
 17636  003638  0EFF               	movlw	255
 17637  00363A  162F               	andwf	i2___ftadd@f1+1,f,c
 17638  00363C  0E00               	movlw	0
 17639  00363E  1630               	andwf	i2___ftadd@f1+2,f,c
 17640  003640  8E32               	bsf	i2___ftadd@f2+1,7,c
 17641  003642  0EFF               	movlw	255
 17642  003644  1631               	andwf	i2___ftadd@f2,f,c
 17643  003646  0EFF               	movlw	255
 17644  003648  1632               	andwf	i2___ftadd@f2+1,f,c
 17645  00364A  0E00               	movlw	0
 17646  00364C  1633               	andwf	i2___ftadd@f2+2,f,c
 17647  00364E  5038               	movf	i2___ftadd@exp2,w,c
 17648  003650  5C39               	subwf	i2___ftadd@exp1,w,c
 17649  003652  B0D8               	btfsc	status,0,c
 17650  003654  D01B               	goto	i2l4061
 17651  003656                     i2l4051:
 17652  003656  90D8               	bcf	status,0,c
 17653  003658  3631               	rlcf	i2___ftadd@f2,f,c
 17654  00365A  3632               	rlcf	i2___ftadd@f2+1,f,c
 17655  00365C  3633               	rlcf	i2___ftadd@f2+2,f,c
 17656  00365E  0638               	decf	i2___ftadd@exp2,f,c
 17657  003660  5039               	movf	i2___ftadd@exp1,w,c
 17658  003662  1838               	xorwf	i2___ftadd@exp2,w,c
 17659  003664  B4D8               	btfsc	status,2,c
 17660  003666  D00D               	goto	i2l4059
 17661  003668  0637               	decf	i2___ftadd@sign,f,c
 17662  00366A  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 17663  00366E  0E07               	movlw	7
 17664  003670  1634               	andwf	??i2___ftadd,f,c
 17665  003672  B4D8               	btfsc	status,2,c
 17666  003674  D006               	goto	i2l4059
 17667  003676  D7EF               	goto	i2l4051
 17668  003678                     i2l4057:
 17669  003678  90D8               	bcf	status,0,c
 17670  00367A  3230               	rrcf	i2___ftadd@f1+2,f,c
 17671  00367C  322F               	rrcf	i2___ftadd@f1+1,f,c
 17672  00367E  322E               	rrcf	i2___ftadd@f1,f,c
 17673  003680  2A39               	incf	i2___ftadd@exp1,f,c
 17674  003682                     i2l4059:
 17675  003682  5038               	movf	i2___ftadd@exp2,w,c
 17676  003684  1839               	xorwf	i2___ftadd@exp1,w,c
 17677  003686  B4D8               	btfsc	status,2,c
 17678  003688  D01F               	goto	i2l736
 17679  00368A  D7F6               	goto	i2l4057
 17680  00368C                     i2l4061:
 17681  00368C  5039               	movf	i2___ftadd@exp1,w,c
 17682  00368E  5C38               	subwf	i2___ftadd@exp2,w,c
 17683  003690  B0D8               	btfsc	status,0,c
 17684  003692  D01A               	goto	i2l736
 17685  003694                     i2l4063:
 17686  003694  90D8               	bcf	status,0,c
 17687  003696  362E               	rlcf	i2___ftadd@f1,f,c
 17688  003698  362F               	rlcf	i2___ftadd@f1+1,f,c
 17689  00369A  3630               	rlcf	i2___ftadd@f1+2,f,c
 17690  00369C  0639               	decf	i2___ftadd@exp1,f,c
 17691  00369E  5039               	movf	i2___ftadd@exp1,w,c
 17692  0036A0  1838               	xorwf	i2___ftadd@exp2,w,c
 17693  0036A2  B4D8               	btfsc	status,2,c
 17694  0036A4  D00D               	goto	i2l4071
 17695  0036A6  0637               	decf	i2___ftadd@sign,f,c
 17696  0036A8  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 17697  0036AC  0E07               	movlw	7
 17698  0036AE  1634               	andwf	??i2___ftadd,f,c
 17699  0036B0  B4D8               	btfsc	status,2,c
 17700  0036B2  D006               	goto	i2l4071
 17701  0036B4  D7EF               	goto	i2l4063
 17702  0036B6                     i2l4069:
 17703  0036B6  90D8               	bcf	status,0,c
 17704  0036B8  3233               	rrcf	i2___ftadd@f2+2,f,c
 17705  0036BA  3232               	rrcf	i2___ftadd@f2+1,f,c
 17706  0036BC  3231               	rrcf	i2___ftadd@f2,f,c
 17707  0036BE  2A38               	incf	i2___ftadd@exp2,f,c
 17708  0036C0                     i2l4071:
 17709  0036C0  5038               	movf	i2___ftadd@exp2,w,c
 17710  0036C2  1839               	xorwf	i2___ftadd@exp1,w,c
 17711  0036C4  A4D8               	btfss	status,2,c
 17712  0036C6  D7F7               	goto	i2l4069
 17713  0036C8                     i2l736:
 17714  0036C8  AE37               	btfss	i2___ftadd@sign,7,c
 17715  0036CA  D00C               	goto	i2l745
 17716  0036CC  0EFF               	movlw	255
 17717  0036CE  1A2E               	xorwf	i2___ftadd@f1,f,c
 17718  0036D0  0EFF               	movlw	255
 17719  0036D2  1A2F               	xorwf	i2___ftadd@f1+1,f,c
 17720  0036D4  0EFF               	movlw	255
 17721  0036D6  1A30               	xorwf	i2___ftadd@f1+2,f,c
 17722  0036D8  0E01               	movlw	1
 17723  0036DA  262E               	addwf	i2___ftadd@f1,f,c
 17724  0036DC  0E00               	movlw	0
 17725  0036DE  222F               	addwfc	i2___ftadd@f1+1,f,c
 17726  0036E0  0E00               	movlw	0
 17727  0036E2  2230               	addwfc	i2___ftadd@f1+2,f,c
 17728  0036E4                     i2l745:
 17729  0036E4  AC37               	btfss	i2___ftadd@sign,6,c
 17730  0036E6  D00C               	goto	i2l4077
 17731  0036E8  0EFF               	movlw	255
 17732  0036EA  1A31               	xorwf	i2___ftadd@f2,f,c
 17733  0036EC  0EFF               	movlw	255
 17734  0036EE  1A32               	xorwf	i2___ftadd@f2+1,f,c
 17735  0036F0  0EFF               	movlw	255
 17736  0036F2  1A33               	xorwf	i2___ftadd@f2+2,f,c
 17737  0036F4  0E01               	movlw	1
 17738  0036F6  2631               	addwf	i2___ftadd@f2,f,c
 17739  0036F8  0E00               	movlw	0
 17740  0036FA  2232               	addwfc	i2___ftadd@f2+1,f,c
 17741  0036FC  0E00               	movlw	0
 17742  0036FE  2233               	addwfc	i2___ftadd@f2+2,f,c
 17743  003700                     i2l4077:
 17744  003700  0E00               	movlw	0
 17745  003702  6E37               	movwf	i2___ftadd@sign,c
 17746  003704  502E               	movf	i2___ftadd@f1,w,c
 17747  003706  2631               	addwf	i2___ftadd@f2,f,c
 17748  003708  502F               	movf	i2___ftadd@f1+1,w,c
 17749  00370A  2232               	addwfc	i2___ftadd@f2+1,f,c
 17750  00370C  5030               	movf	i2___ftadd@f1+2,w,c
 17751  00370E  2233               	addwfc	i2___ftadd@f2+2,f,c
 17752  003710  AE33               	btfss	i2___ftadd@f2+2,7,c
 17753  003712  D00E               	goto	i2l4087
 17754  003714  0EFF               	movlw	255
 17755  003716  1A31               	xorwf	i2___ftadd@f2,f,c
 17756  003718  0EFF               	movlw	255
 17757  00371A  1A32               	xorwf	i2___ftadd@f2+1,f,c
 17758  00371C  0EFF               	movlw	255
 17759  00371E  1A33               	xorwf	i2___ftadd@f2+2,f,c
 17760  003720  0E01               	movlw	1
 17761  003722  2631               	addwf	i2___ftadd@f2,f,c
 17762  003724  0E00               	movlw	0
 17763  003726  2232               	addwfc	i2___ftadd@f2+1,f,c
 17764  003728  0E00               	movlw	0
 17765  00372A  2233               	addwfc	i2___ftadd@f2+2,f,c
 17766  00372C  0E01               	movlw	1
 17767  00372E  6E37               	movwf	i2___ftadd@sign,c
 17768  003730                     i2l4087:
 17769  003730  C031  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 17770  003734  C032  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 17771  003738  C033  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 17772  00373C  C039  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 17773  003740  C037  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 17774  003744  EC7B  F023         	call	i2___ftpack	;wreg free
 17775  003748  C001  F02E         	movff	?i2___ftpack,?i2___ftadd
 17776  00374C  C002  F02F         	movff	?i2___ftpack+1,?i2___ftadd+1
 17777  003750  C003  F030         	movff	?i2___ftpack+2,?i2___ftadd+2
 17778  003754  0012               	return	
 17779  003756                     __end_ofi2___ftadd:
 17780                           	opt stack 0
 17781                           pclatu	equ	0xFFB
 17782                           pclath	equ	0xFFA
 17783                           tblptru	equ	0xFF8
 17784                           tblptrh	equ	0xFF7
 17785                           tblptrl	equ	0xFF6
 17786                           tablat	equ	0xFF5
 17787                           prodh	equ	0xFF4
 17788                           prodl	equ	0xFF3
 17789                           intcon	equ	0xFF2
 17790                           intcon2	equ	0xFF1
 17791                           intcon3	equ	0xFF0
 17792                           postinc0	equ	0xFEE
 17793                           fsr0h	equ	0xFEA
 17794                           fsr0l	equ	0xFE9
 17795                           wreg	equ	0xFE8
 17796                           indf1	equ	0xFE7
 17797                           postdec1	equ	0xFE5
 17798                           fsr1h	equ	0xFE2
 17799                           fsr1l	equ	0xFE1
 17800                           indf2	equ	0xFDF
 17801                           postinc2	equ	0xFDE
 17802                           postdec2	equ	0xFDD
 17803                           fsr2h	equ	0xFDA
 17804                           fsr2l	equ	0xFD9
 17805                           status	equ	0xFD8
 17806                           
 17807 ;; *************** function i2___ftpack *****************
 17808 ;; Defined at:
 17809 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 17810 ;; Parameters:    Size  Location     Type
 17811 ;;  arg             3    0[COMRAM] unsigned um
 17812 ;;  exp             1    3[COMRAM] unsigned char 
 17813 ;;  sign            1    4[COMRAM] unsigned char 
 17814 ;; Auto vars:     Size  Location     Type
 17815 ;;		None
 17816 ;; Return value:  Size  Location     Type
 17817 ;;                  3    0[COMRAM] float 
 17818 ;; Registers used:
 17819 ;;		wreg, status,2, status,0
 17820 ;; Tracked objects:
 17821 ;;		On entry : 0/0
 17822 ;;		On exit  : 0/0
 17823 ;;		Unchanged: 0/0
 17824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17825 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17827 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17828 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17829 ;;Total ram usage:        8 bytes
 17830 ;; Hardware stack levels used:    1
 17831 ;; This function calls:
 17832 ;;		Nothing
 17833 ;; This function is called by:
 17834 ;;		___awtoft
 17835 ;;		___ftdiv
 17836 ;;		i2___ftadd
 17837 ;;		i2___ftmul
 17838 ;;		i2___lltoft
 17839 ;; This function uses a non-reentrant model
 17840 ;;
 17841                           
 17842                           	psect	text63
 17843  0046F6                     __ptext63:
 17844                           	opt stack 0
 17845  0046F6                     i2___ftpack:
 17846                           	opt stack 19
 17847                           
 17848                           ;incstack = 0
 17849  0046F6  5004               	movf	i2___ftpack@exp,w,c
 17850  0046F8  B4D8               	btfsc	status,2,c
 17851  0046FA  D005               	goto	i2l3831
 17852  0046FC  5001               	movf	i2___ftpack@arg,w,c
 17853  0046FE  1002               	iorwf	i2___ftpack@arg+1,w,c
 17854  004700  1003               	iorwf	i2___ftpack@arg+2,w,c
 17855  004702  A4D8               	btfss	status,2,c
 17856  004704  D00C               	goto	i2l3837
 17857  004706                     i2l3831:
 17858  004706  0E00               	movlw	0
 17859  004708  6E01               	movwf	?i2___ftpack,c
 17860  00470A  0E00               	movlw	0
 17861  00470C  6E02               	movwf	?i2___ftpack+1,c
 17862  00470E  0E00               	movlw	0
 17863  004710  6E03               	movwf	?i2___ftpack+2,c
 17864  004712  0012               	return	
 17865  004714                     i2l3835:
 17866  004714  2A04               	incf	i2___ftpack@exp,f,c
 17867  004716  90D8               	bcf	status,0,c
 17868  004718  3203               	rrcf	i2___ftpack@arg+2,f,c
 17869  00471A  3202               	rrcf	i2___ftpack@arg+1,f,c
 17870  00471C  3201               	rrcf	i2___ftpack@arg,f,c
 17871  00471E                     i2l3837:
 17872  00471E  0E00               	movlw	0
 17873  004720  1401               	andwf	i2___ftpack@arg,w,c
 17874  004722  6E06               	movwf	??i2___ftpack& (0+255),c
 17875  004724  0E00               	movlw	0
 17876  004726  1402               	andwf	i2___ftpack@arg+1,w,c
 17877  004728  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17878  00472A  0EFE               	movlw	254
 17879  00472C  1403               	andwf	i2___ftpack@arg+2,w,c
 17880  00472E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17881  004730  5006               	movf	??i2___ftpack,w,c
 17882  004732  1007               	iorwf	??i2___ftpack+1,w,c
 17883  004734  1008               	iorwf	??i2___ftpack+2,w,c
 17884  004736  B4D8               	btfsc	status,2,c
 17885  004738  D00C               	goto	i2l3843
 17886  00473A  D7EC               	goto	i2l3835
 17887  00473C                     i2l3839:
 17888  00473C  2A04               	incf	i2___ftpack@exp,f,c
 17889  00473E  0E01               	movlw	1
 17890  004740  2601               	addwf	i2___ftpack@arg,f,c
 17891  004742  0E00               	movlw	0
 17892  004744  2202               	addwfc	i2___ftpack@arg+1,f,c
 17893  004746  0E00               	movlw	0
 17894  004748  2203               	addwfc	i2___ftpack@arg+2,f,c
 17895  00474A  90D8               	bcf	status,0,c
 17896  00474C  3203               	rrcf	i2___ftpack@arg+2,f,c
 17897  00474E  3202               	rrcf	i2___ftpack@arg+1,f,c
 17898  004750  3201               	rrcf	i2___ftpack@arg,f,c
 17899  004752                     i2l3843:
 17900  004752  0E00               	movlw	0
 17901  004754  1401               	andwf	i2___ftpack@arg,w,c
 17902  004756  6E06               	movwf	??i2___ftpack& (0+255),c
 17903  004758  0E00               	movlw	0
 17904  00475A  1402               	andwf	i2___ftpack@arg+1,w,c
 17905  00475C  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17906  00475E  0EFF               	movlw	255
 17907  004760  1403               	andwf	i2___ftpack@arg+2,w,c
 17908  004762  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17909  004764  5006               	movf	??i2___ftpack,w,c
 17910  004766  1007               	iorwf	??i2___ftpack+1,w,c
 17911  004768  1008               	iorwf	??i2___ftpack+2,w,c
 17912  00476A  B4D8               	btfsc	status,2,c
 17913  00476C  D006               	goto	i2l3847
 17914  00476E  D7E6               	goto	i2l3839
 17915  004770                     i2l3845:
 17916  004770  0604               	decf	i2___ftpack@exp,f,c
 17917  004772  90D8               	bcf	status,0,c
 17918  004774  3601               	rlcf	i2___ftpack@arg,f,c
 17919  004776  3602               	rlcf	i2___ftpack@arg+1,f,c
 17920  004778  3603               	rlcf	i2___ftpack@arg+2,f,c
 17921  00477A                     i2l3847:
 17922  00477A  BE02               	btfsc	i2___ftpack@arg+1,7,c
 17923  00477C  D003               	goto	i2l698
 17924  00477E  0E02               	movlw	2
 17925  004780  6004               	cpfslt	i2___ftpack@exp,c
 17926  004782  D7F6               	goto	i2l3845
 17927  004784                     i2l698:
 17928  004784  A004               	btfss	i2___ftpack@exp,0,c
 17929  004786  9E02               	bcf	i2___ftpack@arg+1,7,c
 17930  004788  90D8               	bcf	status,0,c
 17931  00478A  3204               	rrcf	i2___ftpack@exp,f,c
 17932  00478C  5004               	movf	i2___ftpack@exp,w,c
 17933  00478E  1203               	iorwf	i2___ftpack@arg+2,f,c
 17934  004790  5005               	movf	i2___ftpack@sign,w,c
 17935  004792  A4D8               	btfss	status,2,c
 17936  004794  8E03               	bsf	i2___ftpack@arg+2,7,c
 17937  004796  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 17938  00479A  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 17939  00479E  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 17940  0047A2  0012               	return	
 17941  0047A4                     __end_ofi2___ftpack:
 17942                           	opt stack 0
 17943                           pclatu	equ	0xFFB
 17944                           pclath	equ	0xFFA
 17945                           tblptru	equ	0xFF8
 17946                           tblptrh	equ	0xFF7
 17947                           tblptrl	equ	0xFF6
 17948                           tablat	equ	0xFF5
 17949                           prodh	equ	0xFF4
 17950                           prodl	equ	0xFF3
 17951                           intcon	equ	0xFF2
 17952                           intcon2	equ	0xFF1
 17953                           intcon3	equ	0xFF0
 17954                           postinc0	equ	0xFEE
 17955                           fsr0h	equ	0xFEA
 17956                           fsr0l	equ	0xFE9
 17957                           wreg	equ	0xFE8
 17958                           indf1	equ	0xFE7
 17959                           postdec1	equ	0xFE5
 17960                           fsr1h	equ	0xFE2
 17961                           fsr1l	equ	0xFE1
 17962                           indf2	equ	0xFDF
 17963                           postinc2	equ	0xFDE
 17964                           postdec2	equ	0xFDD
 17965                           fsr2h	equ	0xFDA
 17966                           fsr2l	equ	0xFD9
 17967                           status	equ	0xFD8
 17968                           
 17969 ;; *************** function i2___ftneg *****************
 17970 ;; Defined at:
 17971 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;  f1              3    0[COMRAM] float 
 17974 ;; Auto vars:     Size  Location     Type
 17975 ;;		None
 17976 ;; Return value:  Size  Location     Type
 17977 ;;                  3    0[COMRAM] float 
 17978 ;; Registers used:
 17979 ;;		wreg, status,2, status,0
 17980 ;; Tracked objects:
 17981 ;;		On entry : 0/0
 17982 ;;		On exit  : 0/0
 17983 ;;		Unchanged: 0/0
 17984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17985 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17988 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17989 ;;Total ram usage:        3 bytes
 17990 ;; Hardware stack levels used:    1
 17991 ;; This function calls:
 17992 ;;		Nothing
 17993 ;; This function is called by:
 17994 ;;		i2_sprintf
 17995 ;; This function uses a non-reentrant model
 17996 ;;
 17997                           
 17998                           	psect	text64
 17999  005548                     __ptext64:
 18000                           	opt stack 0
 18001  005548                     i2___ftneg:
 18002                           	opt stack 21
 18003                           
 18004                           ;incstack = 0
 18005  005548  5001               	movf	i2___ftneg@f1,w,c
 18006  00554A  1002               	iorwf	i2___ftneg@f1+1,w,c
 18007  00554C  1003               	iorwf	i2___ftneg@f1+2,w,c
 18008  00554E  B4D8               	btfsc	status,2,c
 18009  005550  D006               	goto	i2l795
 18010  005552  0E00               	movlw	0
 18011  005554  1A01               	xorwf	i2___ftneg@f1,f,c
 18012  005556  0E00               	movlw	0
 18013  005558  1A02               	xorwf	i2___ftneg@f1+1,f,c
 18014  00555A  0E80               	movlw	128
 18015  00555C  1A03               	xorwf	i2___ftneg@f1+2,f,c
 18016  00555E                     i2l795:
 18017  00555E  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 18018  005562  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 18019  005566  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 18020  00556A  0012               	return		;funcret
 18021  00556C                     __end_ofi2___ftneg:
 18022                           	opt stack 0
 18023                           pclatu	equ	0xFFB
 18024                           pclath	equ	0xFFA
 18025                           tblptru	equ	0xFF8
 18026                           tblptrh	equ	0xFF7
 18027                           tblptrl	equ	0xFF6
 18028                           tablat	equ	0xFF5
 18029                           prodh	equ	0xFF4
 18030                           prodl	equ	0xFF3
 18031                           intcon	equ	0xFF2
 18032                           intcon2	equ	0xFF1
 18033                           intcon3	equ	0xFF0
 18034                           postinc0	equ	0xFEE
 18035                           fsr0h	equ	0xFEA
 18036                           fsr0l	equ	0xFE9
 18037                           wreg	equ	0xFE8
 18038                           indf1	equ	0xFE7
 18039                           postdec1	equ	0xFE5
 18040                           fsr1h	equ	0xFE2
 18041                           fsr1l	equ	0xFE1
 18042                           indf2	equ	0xFDF
 18043                           postinc2	equ	0xFDE
 18044                           postdec2	equ	0xFDD
 18045                           fsr2h	equ	0xFDA
 18046                           fsr2l	equ	0xFD9
 18047                           status	equ	0xFD8
 18048                           
 18049 ;; *************** function i2___ftge *****************
 18050 ;; Defined at:
 18051 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
 18052 ;; Parameters:    Size  Location     Type
 18053 ;;  ff1             3   57[COMRAM] float 
 18054 ;;  ff2             3   60[COMRAM] float 
 18055 ;; Auto vars:     Size  Location     Type
 18056 ;;		None
 18057 ;; Return value:  Size  Location     Type
 18058 ;;		None               void
 18059 ;; Registers used:
 18060 ;;		wreg, status,2, status,0
 18061 ;; Tracked objects:
 18062 ;;		On entry : 0/0
 18063 ;;		On exit  : 0/0
 18064 ;;		Unchanged: 0/0
 18065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18066 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18068 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18069 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18070 ;;Total ram usage:        9 bytes
 18071 ;; Hardware stack levels used:    1
 18072 ;; This function calls:
 18073 ;;		Nothing
 18074 ;; This function is called by:
 18075 ;;		_timer0_isr
 18076 ;;		i2_sprintf
 18077 ;; This function uses a non-reentrant model
 18078 ;;
 18079                           
 18080                           	psect	text65
 18081  004972                     __ptext65:
 18082                           	opt stack 0
 18083  004972                     i2___ftge:
 18084                           	opt stack 21
 18085                           
 18086                           ;incstack = 0
 18087  004972  AE3C               	btfss	i2___ftge@ff1+2,7,c
 18088  004974  D016               	goto	i2l4623
 18089  004976  C03A  F040         	movff	i2___ftge@ff1,??i2___ftge
 18090  00497A  C03B  F041         	movff	i2___ftge@ff1+1,??i2___ftge+1
 18091  00497E  C03C  F042         	movff	i2___ftge@ff1+2,??i2___ftge+2
 18092  004982  1E40               	comf	??i2___ftge,f,c
 18093  004984  1E41               	comf	??i2___ftge+1,f,c
 18094  004986  1E42               	comf	??i2___ftge+2,f,c
 18095  004988  2A40               	incf	??i2___ftge,f,c
 18096  00498A  0E00               	movlw	0
 18097  00498C  2241               	addwfc	??i2___ftge+1,f,c
 18098  00498E  2242               	addwfc	??i2___ftge+2,f,c
 18099  004990  0E00               	movlw	0
 18100  004992  2440               	addwf	??i2___ftge,w,c
 18101  004994  6E3A               	movwf	i2___ftge@ff1,c
 18102  004996  0E00               	movlw	0
 18103  004998  2041               	addwfc	??i2___ftge+1,w,c
 18104  00499A  6E3B               	movwf	i2___ftge@ff1+1,c
 18105  00499C  0E80               	movlw	128
 18106  00499E  2042               	addwfc	??i2___ftge+2,w,c
 18107  0049A0  6E3C               	movwf	i2___ftge@ff1+2,c
 18108  0049A2                     i2l4623:
 18109  0049A2  AE3F               	btfss	i2___ftge@ff2+2,7,c
 18110  0049A4  D016               	goto	i2l4627
 18111  0049A6  C03D  F040         	movff	i2___ftge@ff2,??i2___ftge
 18112  0049AA  C03E  F041         	movff	i2___ftge@ff2+1,??i2___ftge+1
 18113  0049AE  C03F  F042         	movff	i2___ftge@ff2+2,??i2___ftge+2
 18114  0049B2  1E40               	comf	??i2___ftge,f,c
 18115  0049B4  1E41               	comf	??i2___ftge+1,f,c
 18116  0049B6  1E42               	comf	??i2___ftge+2,f,c
 18117  0049B8  2A40               	incf	??i2___ftge,f,c
 18118  0049BA  0E00               	movlw	0
 18119  0049BC  2241               	addwfc	??i2___ftge+1,f,c
 18120  0049BE  2242               	addwfc	??i2___ftge+2,f,c
 18121  0049C0  0E00               	movlw	0
 18122  0049C2  2440               	addwf	??i2___ftge,w,c
 18123  0049C4  6E3D               	movwf	i2___ftge@ff2,c
 18124  0049C6  0E00               	movlw	0
 18125  0049C8  2041               	addwfc	??i2___ftge+1,w,c
 18126  0049CA  6E3E               	movwf	i2___ftge@ff2+1,c
 18127  0049CC  0E80               	movlw	128
 18128  0049CE  2042               	addwfc	??i2___ftge+2,w,c
 18129  0049D0  6E3F               	movwf	i2___ftge@ff2+2,c
 18130  0049D2                     i2l4627:
 18131  0049D2  0E00               	movlw	0
 18132  0049D4  1A3A               	xorwf	i2___ftge@ff1,f,c
 18133  0049D6  0E00               	movlw	0
 18134  0049D8  1A3B               	xorwf	i2___ftge@ff1+1,f,c
 18135  0049DA  0E80               	movlw	128
 18136  0049DC  1A3C               	xorwf	i2___ftge@ff1+2,f,c
 18137  0049DE  0E00               	movlw	0
 18138  0049E0  1A3D               	xorwf	i2___ftge@ff2,f,c
 18139  0049E2  0E00               	movlw	0
 18140  0049E4  1A3E               	xorwf	i2___ftge@ff2+1,f,c
 18141  0049E6  0E80               	movlw	128
 18142  0049E8  1A3F               	xorwf	i2___ftge@ff2+2,f,c
 18143  0049EA  503D               	movf	i2___ftge@ff2,w,c
 18144  0049EC  5C3A               	subwf	i2___ftge@ff1,w,c
 18145  0049EE  503E               	movf	i2___ftge@ff2+1,w,c
 18146  0049F0  583B               	subwfb	i2___ftge@ff1+1,w,c
 18147  0049F2  503F               	movf	i2___ftge@ff2+2,w,c
 18148  0049F4  583C               	subwfb	i2___ftge@ff1+2,w,c
 18149  0049F6  B0D8               	btfsc	status,0,c
 18150  0049F8  D002               	goto	i2l4633
 18151  0049FA  90D8               	bcf	status,0,c
 18152  0049FC  0012               	return	
 18153  0049FE                     i2l4633:
 18154  0049FE  80D8               	bsf	status,0,c
 18155  004A00  0012               	return	
 18156  004A02                     __end_ofi2___ftge:
 18157                           	opt stack 0
 18158                           pclatu	equ	0xFFB
 18159                           pclath	equ	0xFFA
 18160                           tblptru	equ	0xFF8
 18161                           tblptrh	equ	0xFF7
 18162                           tblptrl	equ	0xFF6
 18163                           tablat	equ	0xFF5
 18164                           prodh	equ	0xFF4
 18165                           prodl	equ	0xFF3
 18166                           intcon	equ	0xFF2
 18167                           intcon2	equ	0xFF1
 18168                           intcon3	equ	0xFF0
 18169                           postinc0	equ	0xFEE
 18170                           fsr0h	equ	0xFEA
 18171                           fsr0l	equ	0xFE9
 18172                           wreg	equ	0xFE8
 18173                           indf1	equ	0xFE7
 18174                           postdec1	equ	0xFE5
 18175                           fsr1h	equ	0xFE2
 18176                           fsr1l	equ	0xFE1
 18177                           indf2	equ	0xFDF
 18178                           postinc2	equ	0xFDE
 18179                           postdec2	equ	0xFDD
 18180                           fsr2h	equ	0xFDA
 18181                           fsr2l	equ	0xFD9
 18182                           status	equ	0xFD8
 18183                           
 18184 ;; *************** function i2_lcd_puts *****************
 18185 ;; Defined at:
 18186 ;;		line 87 in file "lcd_x8.c"
 18187 ;; Parameters:    Size  Location     Type
 18188 ;;  s               2   14[COMRAM] PTR unsigned char 
 18189 ;;		 -> Buffer4(16), Buffer3(16), Buffer2(16), Buffer1(16), 
 18190 ;; Auto vars:     Size  Location     Type
 18191 ;;		None
 18192 ;; Return value:  Size  Location     Type
 18193 ;;                  1    wreg      void 
 18194 ;; Registers used:
 18195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18196 ;; Tracked objects:
 18197 ;;		On entry : 0/0
 18198 ;;		On exit  : 0/0
 18199 ;;		Unchanged: 0/0
 18200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18205 ;;Total ram usage:        2 bytes
 18206 ;; Hardware stack levels used:    1
 18207 ;; Hardware stack levels required when called:    5
 18208 ;; This function calls:
 18209 ;;		i2_lcd_putc
 18210 ;; This function is called by:
 18211 ;;		_timer0_isr
 18212 ;;		_EXT_Int0_isr
 18213 ;; This function uses a non-reentrant model
 18214 ;;
 18215                           
 18216                           	psect	text66
 18217  00556C                     __ptext66:
 18218                           	opt stack 0
 18219  00556C                     i2_lcd_puts:
 18220                           	opt stack 17
 18221                           
 18222                           ;lcd_x8.c: 88: while (*s) {
 18223                           
 18224                           ;incstack = 0
 18225  00556C  D009               	goto	i2l5111
 18226  00556E                     i2l5107:
 18227                           
 18228                           ;lcd_x8.c: 89: lcd_putc(*s);
 18229  00556E  C00F  FFD9         	movff	i2lcd_puts@s,fsr2l
 18230  005572  C010  FFDA         	movff	i2lcd_puts@s+1,fsr2h
 18231  005576  50DF               	movf	indf2,w,c
 18232  005578  EC01  F028         	call	i2_lcd_putc
 18233                           
 18234                           ;lcd_x8.c: 90: s++;
 18235  00557C  4A0F               	infsnz	i2lcd_puts@s,f,c
 18236  00557E  2A10               	incf	i2lcd_puts@s+1,f,c
 18237  005580                     i2l5111:
 18238  005580  C00F  FFD9         	movff	i2lcd_puts@s,fsr2l
 18239  005584  C010  FFDA         	movff	i2lcd_puts@s+1,fsr2h
 18240  005588  50DF               	movf	indf2,w,c
 18241  00558A  B4D8               	btfsc	status,2,c
 18242  00558C  0012               	return	
 18243  00558E  D7EF               	goto	i2l5107
 18244  005590                     __end_ofi2_lcd_puts:
 18245                           	opt stack 0
 18246                           pclatu	equ	0xFFB
 18247                           pclath	equ	0xFFA
 18248                           tblptru	equ	0xFF8
 18249                           tblptrh	equ	0xFF7
 18250                           tblptrl	equ	0xFF6
 18251                           tablat	equ	0xFF5
 18252                           prodh	equ	0xFF4
 18253                           prodl	equ	0xFF3
 18254                           intcon	equ	0xFF2
 18255                           intcon2	equ	0xFF1
 18256                           intcon3	equ	0xFF0
 18257                           postinc0	equ	0xFEE
 18258                           fsr0h	equ	0xFEA
 18259                           fsr0l	equ	0xFE9
 18260                           wreg	equ	0xFE8
 18261                           indf1	equ	0xFE7
 18262                           postdec1	equ	0xFE5
 18263                           fsr1h	equ	0xFE2
 18264                           fsr1l	equ	0xFE1
 18265                           indf2	equ	0xFDF
 18266                           postinc2	equ	0xFDE
 18267                           postdec2	equ	0xFDD
 18268                           fsr2h	equ	0xFDA
 18269                           fsr2l	equ	0xFD9
 18270                           status	equ	0xFD8
 18271                           
 18272 ;; *************** function i2_lcd_putc *****************
 18273 ;; Defined at:
 18274 ;;		line 73 in file "lcd_x8.c"
 18275 ;; Parameters:    Size  Location     Type
 18276 ;;  c               1    wreg     unsigned char 
 18277 ;; Auto vars:     Size  Location     Type
 18278 ;;  c               1   13[COMRAM] unsigned char 
 18279 ;; Return value:  Size  Location     Type
 18280 ;;                  1    wreg      void 
 18281 ;; Registers used:
 18282 ;;		wreg, status,2, status,0, cstack
 18283 ;; Tracked objects:
 18284 ;;		On entry : 0/0
 18285 ;;		On exit  : 0/0
 18286 ;;		Unchanged: 0/0
 18287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18292 ;;Total ram usage:        1 bytes
 18293 ;; Hardware stack levels used:    1
 18294 ;; Hardware stack levels required when called:    4
 18295 ;; This function calls:
 18296 ;;		i2_delay_ms
 18297 ;;		i2_lcd_gotoxy
 18298 ;;		i2_lcd_send_byte
 18299 ;; This function is called by:
 18300 ;;		i2_lcd_puts
 18301 ;; This function uses a non-reentrant model
 18302 ;;
 18303                           
 18304                           	psect	text67
 18305  005002                     __ptext67:
 18306                           	opt stack 0
 18307  005002                     i2_lcd_putc:
 18308                           	opt stack 17
 18309                           
 18310                           ;incstack = 0
 18311                           ;i2lcd_putc@c stored from wreg
 18312  005002  6E0E               	movwf	i2lcd_putc@c,c
 18313                           
 18314                           ;lcd_x8.c: 74: switch (c) {
 18315  005004  D01E               	goto	i2l4441
 18316  005006                     i2l4431:
 18317  005006  0E01               	movlw	1
 18318  005008  6E09               	movwf	i2lcd_send_byte@n,c
 18319  00500A  0E00               	movlw	0
 18320  00500C  ECCD  F028         	call	i2_lcd_send_byte
 18321                           
 18322                           ;lcd_x8.c: 76: delay_ms(2);
 18323  005010  0E00               	movlw	0
 18324  005012  6E02               	movwf	i2delay_ms@n+1,c
 18325  005014  0E02               	movlw	2
 18326  005016  6E01               	movwf	i2delay_ms@n,c
 18327  005018  ECC8  F02A         	call	i2_delay_ms	;wreg free
 18328                           
 18329                           ;lcd_x8.c: 77: break;
 18330  00501C  0012               	return	
 18331  00501E                     i2l4433:
 18332  00501E  0E02               	movlw	2
 18333  005020  6E0B               	movwf	i2lcd_gotoxy@y,c
 18334  005022  0E01               	movlw	1
 18335  005024  EC13  F029         	call	i2_lcd_gotoxy
 18336                           
 18337                           ;lcd_x8.c: 79: break;
 18338  005028  0012               	return	
 18339  00502A                     i2l4435:
 18340  00502A  0E10               	movlw	16
 18341  00502C  6E09               	movwf	i2lcd_send_byte@n,c
 18342  00502E  0E00               	movlw	0
 18343  005030  ECCD  F028         	call	i2_lcd_send_byte
 18344                           
 18345                           ;lcd_x8.c: 81: break;
 18346  005034  0012               	return	
 18347  005036                     i2l4437:
 18348  005036  C00E  F009         	movff	i2lcd_putc@c,i2lcd_send_byte@n
 18349  00503A  0E01               	movlw	1
 18350  00503C  ECCD  F028         	call	i2_lcd_send_byte
 18351                           
 18352                           ;lcd_x8.c: 84: }
 18353                           
 18354                           ;lcd_x8.c: 83: break;
 18355  005040  0012               	return	
 18356  005042                     i2l4441:
 18357  005042  500E               	movf	i2lcd_putc@c,w,c
 18358                           
 18359                           ; Switch size 1, requested type "space"
 18360                           ; Number of cases is 3, Range of values is 8 to 12
 18361                           ; switch strategies available:
 18362                           ; Name         Instructions Cycles
 18363                           ; simple_byte           10     6 (average)
 18364                           ;	Chosen strategy is simple_byte
 18365  005044  0A08               	xorlw	8	; case 8
 18366  005046  B4D8               	btfsc	status,2,c
 18367  005048  D7F0               	goto	i2l4435
 18368  00504A  0A02               	xorlw	2	; case 10
 18369  00504C  B4D8               	btfsc	status,2,c
 18370  00504E  D7E7               	goto	i2l4433
 18371  005050  0A06               	xorlw	6	; case 12
 18372  005052  B4D8               	btfsc	status,2,c
 18373  005054  D7D8               	goto	i2l4431
 18374  005056  D7EF               	goto	i2l4437
 18375  005058                     __end_ofi2_lcd_putc:
 18376                           	opt stack 0
 18377                           pclatu	equ	0xFFB
 18378                           pclath	equ	0xFFA
 18379                           tblptru	equ	0xFF8
 18380                           tblptrh	equ	0xFF7
 18381                           tblptrl	equ	0xFF6
 18382                           tablat	equ	0xFF5
 18383                           prodh	equ	0xFF4
 18384                           prodl	equ	0xFF3
 18385                           intcon	equ	0xFF2
 18386                           intcon2	equ	0xFF1
 18387                           intcon3	equ	0xFF0
 18388                           postinc0	equ	0xFEE
 18389                           fsr0h	equ	0xFEA
 18390                           fsr0l	equ	0xFE9
 18391                           wreg	equ	0xFE8
 18392                           indf1	equ	0xFE7
 18393                           postdec1	equ	0xFE5
 18394                           fsr1h	equ	0xFE2
 18395                           fsr1l	equ	0xFE1
 18396                           indf2	equ	0xFDF
 18397                           postinc2	equ	0xFDE
 18398                           postdec2	equ	0xFDD
 18399                           fsr2h	equ	0xFDA
 18400                           fsr2l	equ	0xFD9
 18401                           status	equ	0xFD8
 18402                           
 18403 ;; *************** function i2_lcd_gotoxy *****************
 18404 ;; Defined at:
 18405 ;;		line 57 in file "lcd_x8.c"
 18406 ;; Parameters:    Size  Location     Type
 18407 ;;  x               1    wreg     unsigned char 
 18408 ;;  y               1   10[COMRAM] unsigned char 
 18409 ;; Auto vars:     Size  Location     Type
 18410 ;;  x               1   11[COMRAM] unsigned char 
 18411 ;;  lcd_gotoxy      1   12[COMRAM] unsigned char 
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  1    wreg      void 
 18414 ;; Registers used:
 18415 ;;		wreg, status,2, status,0, cstack
 18416 ;; Tracked objects:
 18417 ;;		On entry : 0/0
 18418 ;;		On exit  : 0/0
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18421 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18424 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18425 ;;Total ram usage:        3 bytes
 18426 ;; Hardware stack levels used:    1
 18427 ;; Hardware stack levels required when called:    3
 18428 ;; This function calls:
 18429 ;;		i2_lcd_send_byte
 18430 ;; This function is called by:
 18431 ;;		_timer0_isr
 18432 ;;		_EXT_Int0_isr
 18433 ;;		i2_lcd_putc
 18434 ;; This function uses a non-reentrant model
 18435 ;;
 18436                           
 18437                           	psect	text68
 18438  005226                     __ptext68:
 18439                           	opt stack 0
 18440  005226                     i2_lcd_gotoxy:
 18441                           	opt stack 17
 18442                           
 18443                           ;incstack = 0
 18444                           ;i2lcd_gotoxy@x stored from wreg
 18445  005226  6E0C               	movwf	i2lcd_gotoxy@x,c
 18446                           
 18447                           ;lcd_x8.c: 58: unsigned char address;
 18448                           ;lcd_x8.c: 59: switch (y) {
 18449  005228  D009               	goto	i2l3929
 18450  00522A                     i2l3919:
 18451  00522A  0E80               	movlw	128
 18452  00522C  D005               	goto	L30
 18453  00522E                     i2l3921:
 18454  00522E  0EC0               	movlw	192
 18455  005230  D003               	goto	L30
 18456  005232                     i2l3923:
 18457  005232  0E90               	movlw	144
 18458  005234  D001               	goto	L30
 18459  005236                     i2l3925:
 18460  005236  0ED0               	movlw	208
 18461  005238                     L30:
 18462  005238  6E0D               	movwf	i2lcd_gotoxy@address,c
 18463                           
 18464                           ;lcd_x8.c: 68: }
 18465                           
 18466                           ;lcd_x8.c: 67: break;
 18467  00523A  D00D               	goto	i2l3931
 18468  00523C                     i2l3929:
 18469  00523C  500B               	movf	i2lcd_gotoxy@y,w,c
 18470                           
 18471                           ; Switch size 1, requested type "space"
 18472                           ; Number of cases is 4, Range of values is 1 to 4
 18473                           ; switch strategies available:
 18474                           ; Name         Instructions Cycles
 18475                           ; simple_byte           13     7 (average)
 18476                           ;	Chosen strategy is simple_byte
 18477  00523E  0A01               	xorlw	1	; case 1
 18478  005240  B4D8               	btfsc	status,2,c
 18479  005242  D7F3               	goto	i2l3919
 18480  005244  0A03               	xorlw	3	; case 2
 18481  005246  B4D8               	btfsc	status,2,c
 18482  005248  D7F2               	goto	i2l3921
 18483  00524A  0A01               	xorlw	1	; case 3
 18484  00524C  B4D8               	btfsc	status,2,c
 18485  00524E  D7F1               	goto	i2l3923
 18486  005250  0A07               	xorlw	7	; case 4
 18487  005252  B4D8               	btfsc	status,2,c
 18488  005254  D7F0               	goto	i2l3925
 18489  005256                     i2l3931:
 18490                           
 18491                           ;lcd_x8.c: 69: address += x - 1;
 18492  005256  040C               	decf	i2lcd_gotoxy@x,w,c
 18493  005258  260D               	addwf	i2lcd_gotoxy@address,f,c
 18494                           
 18495                           ;lcd_x8.c: 70: lcd_send_byte(0, (unsigned char) (0x80 | address));
 18496  00525A  500D               	movf	i2lcd_gotoxy@address,w,c
 18497  00525C  0980               	iorlw	128
 18498  00525E  6E09               	movwf	i2lcd_send_byte@n,c
 18499  005260  0E00               	movlw	0
 18500  005262  ECCD  F028         	call	i2_lcd_send_byte
 18501  005266  0012               	return		;funcret
 18502  005268                     __end_ofi2_lcd_gotoxy:
 18503                           	opt stack 0
 18504                           pclatu	equ	0xFFB
 18505                           pclath	equ	0xFFA
 18506                           tblptru	equ	0xFF8
 18507                           tblptrh	equ	0xFF7
 18508                           tblptrl	equ	0xFF6
 18509                           tablat	equ	0xFF5
 18510                           prodh	equ	0xFF4
 18511                           prodl	equ	0xFF3
 18512                           intcon	equ	0xFF2
 18513                           intcon2	equ	0xFF1
 18514                           intcon3	equ	0xFF0
 18515                           postinc0	equ	0xFEE
 18516                           fsr0h	equ	0xFEA
 18517                           fsr0l	equ	0xFE9
 18518                           wreg	equ	0xFE8
 18519                           indf1	equ	0xFE7
 18520                           postdec1	equ	0xFE5
 18521                           fsr1h	equ	0xFE2
 18522                           fsr1l	equ	0xFE1
 18523                           indf2	equ	0xFDF
 18524                           postinc2	equ	0xFDE
 18525                           postdec2	equ	0xFDD
 18526                           fsr2h	equ	0xFDA
 18527                           fsr2l	equ	0xFD9
 18528                           status	equ	0xFD8
 18529                           
 18530 ;; *************** function i2_lcd_send_byte *****************
 18531 ;; Defined at:
 18532 ;;		line 26 in file "lcd_x8.c"
 18533 ;; Parameters:    Size  Location     Type
 18534 ;;  cm_data         1    wreg     unsigned char 
 18535 ;;  n               1    8[COMRAM] unsigned char 
 18536 ;; Auto vars:     Size  Location     Type
 18537 ;;  cm_data         1    9[COMRAM] unsigned char 
 18538 ;; Return value:  Size  Location     Type
 18539 ;;                  1    wreg      void 
 18540 ;; Registers used:
 18541 ;;		wreg, status,2, status,0, cstack
 18542 ;; Tracked objects:
 18543 ;;		On entry : 0/0
 18544 ;;		On exit  : 0/0
 18545 ;;		Unchanged: 0/0
 18546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18547 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18551 ;;Total ram usage:        2 bytes
 18552 ;; Hardware stack levels used:    1
 18553 ;; Hardware stack levels required when called:    2
 18554 ;; This function calls:
 18555 ;;		i2_delay_cycles
 18556 ;;		i2_delay_ms
 18557 ;;		i2_lcd_send_nibble
 18558 ;; This function is called by:
 18559 ;;		i2_lcd_gotoxy
 18560 ;;		i2_lcd_putc
 18561 ;; This function uses a non-reentrant model
 18562 ;;
 18563                           
 18564                           	psect	text69
 18565  00519A                     __ptext69:
 18566                           	opt stack 0
 18567  00519A                     i2_lcd_send_byte:
 18568                           	opt stack 18
 18569                           
 18570                           ;incstack = 0
 18571                           ;i2lcd_send_byte@cm_data stored from wreg
 18572  00519A  6E0A               	movwf	i2lcd_send_byte@cm_data,c
 18573                           
 18574                           ;lcd_x8.c: 27: PORTEbits.RE2 = cm_data;
 18575  00519C  B00A               	btfsc	i2lcd_send_byte@cm_data,0,c
 18576  00519E  D002               	bra	i2u387_45
 18577  0051A0  9484               	bcf	3972,2,c	;volatile
 18578  0051A2  D001               	bra	i2u387_46
 18579  0051A4                     i2u387_45:
 18580  0051A4  8484               	bsf	3972,2,c	;volatile
 18581  0051A6                     i2u387_46:
 18582                           
 18583                           ;lcd_x8.c: 28: delay_cycles(1);
 18584  0051A6  0E01               	movlw	1
 18585  0051A8  EC28  F02A         	call	i2_delay_cycles
 18586                           
 18587                           ;lcd_x8.c: 30: delay_cycles(1);
 18588  0051AC  0E01               	movlw	1
 18589  0051AE  EC28  F02A         	call	i2_delay_cycles
 18590                           
 18591                           ;lcd_x8.c: 31: PORTEbits.RE1 = 0;
 18592  0051B2  9284               	bcf	3972,1,c	;volatile
 18593                           
 18594                           ;lcd_x8.c: 32: lcd_send_nibble(n >> 4);
 18595  0051B4  3809               	swapf	i2lcd_send_byte@n,w,c
 18596  0051B6  0B0F               	andlw	15
 18597  0051B8  ECDA  F02A         	call	i2_lcd_send_nibble
 18598                           
 18599                           ;lcd_x8.c: 33: lcd_send_nibble(n & 0x0f);
 18600  0051BC  5009               	movf	i2lcd_send_byte@n,w,c
 18601  0051BE  0B0F               	andlw	15
 18602  0051C0  ECDA  F02A         	call	i2_lcd_send_nibble
 18603                           
 18604                           ;lcd_x8.c: 34: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 18605  0051C4  500A               	movf	i2lcd_send_byte@cm_data,w,c
 18606  0051C6  B4D8               	btfsc	status,2,c
 18607  0051C8  D005               	goto	i2l3825
 18608  0051CA  0E32               	movlw	50
 18609  0051CC                     i2u847_47:
 18610  0051CC  0004               	clrwdt	
 18611  0051CE  2EE8               	decfsz	wreg,f,c
 18612  0051D0  D7FD               	goto	i2u847_47
 18613  0051D2  0012               	return	
 18614  0051D4                     i2l3825:
 18615                           
 18616                           ;lcd_x8.c: 35: else
 18617                           ;lcd_x8.c: 36: delay_ms(2);
 18618  0051D4  0E00               	movlw	0
 18619  0051D6  6E02               	movwf	i2delay_ms@n+1,c
 18620  0051D8  0E02               	movlw	2
 18621  0051DA  6E01               	movwf	i2delay_ms@n,c
 18622  0051DC  ECC8  F02A         	call	i2_delay_ms	;wreg free
 18623  0051E0  0012               	return	
 18624  0051E2                     __end_ofi2_lcd_send_byte:
 18625                           	opt stack 0
 18626                           pclatu	equ	0xFFB
 18627                           pclath	equ	0xFFA
 18628                           tblptru	equ	0xFF8
 18629                           tblptrh	equ	0xFF7
 18630                           tblptrl	equ	0xFF6
 18631                           tablat	equ	0xFF5
 18632                           prodh	equ	0xFF4
 18633                           prodl	equ	0xFF3
 18634                           intcon	equ	0xFF2
 18635                           intcon2	equ	0xFF1
 18636                           intcon3	equ	0xFF0
 18637                           postinc0	equ	0xFEE
 18638                           fsr0h	equ	0xFEA
 18639                           fsr0l	equ	0xFE9
 18640                           wreg	equ	0xFE8
 18641                           indf1	equ	0xFE7
 18642                           postdec1	equ	0xFE5
 18643                           fsr1h	equ	0xFE2
 18644                           fsr1l	equ	0xFE1
 18645                           indf2	equ	0xFDF
 18646                           postinc2	equ	0xFDE
 18647                           postdec2	equ	0xFDD
 18648                           fsr2h	equ	0xFDA
 18649                           fsr2l	equ	0xFD9
 18650                           status	equ	0xFD8
 18651                           
 18652 ;; *************** function i2_lcd_send_nibble *****************
 18653 ;; Defined at:
 18654 ;;		line 18 in file "lcd_x8.c"
 18655 ;; Parameters:    Size  Location     Type
 18656 ;;  n               1    wreg     unsigned char 
 18657 ;; Auto vars:     Size  Location     Type
 18658 ;;  n               1    7[COMRAM] unsigned char 
 18659 ;; Return value:  Size  Location     Type
 18660 ;;                  1    wreg      void 
 18661 ;; Registers used:
 18662 ;;		wreg, status,2, status,0, cstack
 18663 ;; Tracked objects:
 18664 ;;		On entry : 0/0
 18665 ;;		On exit  : 0/0
 18666 ;;		Unchanged: 0/0
 18667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18672 ;;Total ram usage:        2 bytes
 18673 ;; Hardware stack levels used:    1
 18674 ;; Hardware stack levels required when called:    1
 18675 ;; This function calls:
 18676 ;;		i2_delay_cycles
 18677 ;; This function is called by:
 18678 ;;		i2_lcd_send_byte
 18679 ;; This function uses a non-reentrant model
 18680 ;;
 18681                           
 18682                           	psect	text70
 18683  0055B4                     __ptext70:
 18684                           	opt stack 0
 18685  0055B4                     i2_lcd_send_nibble:
 18686                           	opt stack 18
 18687                           
 18688                           ;incstack = 0
 18689                           ;i2lcd_send_nibble@n stored from wreg
 18690  0055B4  6E08               	movwf	i2lcd_send_nibble@n,c
 18691                           
 18692                           ;lcd_x8.c: 19: lcd.data = n;
 18693  0055B6  C008  F007         	movff	i2lcd_send_nibble@n,??i2_lcd_send_nibble
 18694  0055BA  3A07               	swapf	??i2_lcd_send_nibble,f,c
 18695  0055BC  5083               	movf	3971,w,c
 18696  0055BE  1807               	xorwf	??i2_lcd_send_nibble,w,c
 18697  0055C0  0B0F               	andlw	-241
 18698  0055C2  1807               	xorwf	??i2_lcd_send_nibble,w,c
 18699  0055C4  6E83               	movwf	3971,c
 18700                           
 18701                           ;lcd_x8.c: 20: delay_cycles(1);
 18702  0055C6  0E01               	movlw	1
 18703  0055C8  EC28  F02A         	call	i2_delay_cycles
 18704                           
 18705                           ;lcd_x8.c: 21: PORTEbits.RE1 = 1;
 18706  0055CC  8284               	bsf	3972,1,c	;volatile
 18707                           
 18708                           ;lcd_x8.c: 22: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 18709  0055CE  0004               	clrwdt	
 18710  0055D0  F000               	nop		;2 cycle nop
 18711                           
 18712                           ;lcd_x8.c: 23: PORTEbits.RE1 = 0;
 18713  0055D2  9284               	bcf	3972,1,c	;volatile
 18714  0055D4  0012               	return		;funcret
 18715  0055D6                     __end_ofi2_lcd_send_nibble:
 18716                           	opt stack 0
 18717                           pclatu	equ	0xFFB
 18718                           pclath	equ	0xFFA
 18719                           tblptru	equ	0xFF8
 18720                           tblptrh	equ	0xFF7
 18721                           tblptrl	equ	0xFF6
 18722                           tablat	equ	0xFF5
 18723                           prodh	equ	0xFF4
 18724                           prodl	equ	0xFF3
 18725                           intcon	equ	0xFF2
 18726                           intcon2	equ	0xFF1
 18727                           intcon3	equ	0xFF0
 18728                           postinc0	equ	0xFEE
 18729                           fsr0h	equ	0xFEA
 18730                           fsr0l	equ	0xFE9
 18731                           wreg	equ	0xFE8
 18732                           indf1	equ	0xFE7
 18733                           postdec1	equ	0xFE5
 18734                           fsr1h	equ	0xFE2
 18735                           fsr1l	equ	0xFE1
 18736                           indf2	equ	0xFDF
 18737                           postinc2	equ	0xFDE
 18738                           postdec2	equ	0xFDD
 18739                           fsr2h	equ	0xFDA
 18740                           fsr2l	equ	0xFD9
 18741                           status	equ	0xFD8
 18742                           
 18743 ;; *************** function i2_delay_cycles *****************
 18744 ;; Defined at:
 18745 ;;		line 11 in file "lcd_x8.c"
 18746 ;; Parameters:    Size  Location     Type
 18747 ;;  n               1    wreg     unsigned char 
 18748 ;; Auto vars:     Size  Location     Type
 18749 ;;  n               1    3[COMRAM] unsigned char 
 18750 ;;  delay_cycles    2    4[COMRAM] int 
 18751 ;; Return value:  Size  Location     Type
 18752 ;;                  1    wreg      void 
 18753 ;; Registers used:
 18754 ;;		wreg, status,2, status,0
 18755 ;; Tracked objects:
 18756 ;;		On entry : 0/0
 18757 ;;		On exit  : 0/0
 18758 ;;		Unchanged: 0/0
 18759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18761 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18762 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18763 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18764 ;;Total ram usage:        6 bytes
 18765 ;; Hardware stack levels used:    1
 18766 ;; This function calls:
 18767 ;;		Nothing
 18768 ;; This function is called by:
 18769 ;;		i2_lcd_send_nibble
 18770 ;;		i2_lcd_send_byte
 18771 ;; This function uses a non-reentrant model
 18772 ;;
 18773                           
 18774                           	psect	text71
 18775  005450                     __ptext71:
 18776                           	opt stack 0
 18777  005450                     i2_delay_cycles:
 18778                           	opt stack 18
 18779                           
 18780                           ;incstack = 0
 18781                           ;i2delay_cycles@n stored from wreg
 18782  005450  6E04               	movwf	i2delay_cycles@n,c
 18783                           
 18784                           ;lcd_x8.c: 12: int x;
 18785                           ;lcd_x8.c: 13: for (x = 0; x <= n; x++) {
 18786  005452  0E00               	movlw	0
 18787  005454  6E06               	movwf	i2delay_cycles@x+1,c
 18788  005456  0E00               	movlw	0
 18789  005458  6E05               	movwf	i2delay_cycles@x,c
 18790  00545A  D003               	goto	i2l3769
 18791  00545C                     i2l231:
 18792  00545C  0004               	clrwdt		;# 
 18793  00545E  4A05               	infsnz	i2delay_cycles@x,f,c
 18794  005460  2A06               	incf	i2delay_cycles@x+1,f,c
 18795  005462                     i2l3769:
 18796  005462  5004               	movf	i2delay_cycles@n,w,c
 18797  005464  6E01               	movwf	??i2_delay_cycles& (0+255),c
 18798  005466  6A02               	clrf	(??i2_delay_cycles+1)& (0+255),c
 18799  005468  5005               	movf	i2delay_cycles@x,w,c
 18800  00546A  5C01               	subwf	??i2_delay_cycles,w,c
 18801  00546C  5002               	movf	??i2_delay_cycles+1,w,c
 18802  00546E  0A80               	xorlw	128
 18803  005470  6E03               	movwf	(??i2_delay_cycles+2)& (0+255),c
 18804  005472  5006               	movf	i2delay_cycles@x+1,w,c
 18805  005474  0A80               	xorlw	128
 18806  005476  5803               	subwfb	(??i2_delay_cycles+2)& (0+255),w,c
 18807  005478  A0D8               	btfss	status,0,c
 18808  00547A  0012               	return	
 18809  00547C  D7EF               	goto	i2l231
 18810  00547E                     __end_ofi2_delay_cycles:
 18811                           	opt stack 0
 18812                           pclatu	equ	0xFFB
 18813                           pclath	equ	0xFFA
 18814                           tblptru	equ	0xFF8
 18815                           tblptrh	equ	0xFF7
 18816                           tblptrl	equ	0xFF6
 18817                           tablat	equ	0xFF5
 18818                           prodh	equ	0xFF4
 18819                           prodl	equ	0xFF3
 18820                           intcon	equ	0xFF2
 18821                           intcon2	equ	0xFF1
 18822                           intcon3	equ	0xFF0
 18823                           postinc0	equ	0xFEE
 18824                           fsr0h	equ	0xFEA
 18825                           fsr0l	equ	0xFE9
 18826                           wreg	equ	0xFE8
 18827                           indf1	equ	0xFE7
 18828                           postdec1	equ	0xFE5
 18829                           fsr1h	equ	0xFE2
 18830                           fsr1l	equ	0xFE1
 18831                           indf2	equ	0xFDF
 18832                           postinc2	equ	0xFDE
 18833                           postdec2	equ	0xFDD
 18834                           fsr2h	equ	0xFDA
 18835                           fsr2l	equ	0xFD9
 18836                           status	equ	0xFD8
 18837                           
 18838 ;; *************** function i2_delay_ms *****************
 18839 ;; Defined at:
 18840 ;;		line 4 in file "lcd_x8.c"
 18841 ;; Parameters:    Size  Location     Type
 18842 ;;  n               2    0[COMRAM] unsigned int 
 18843 ;; Auto vars:     Size  Location     Type
 18844 ;;  delay_ms        2    2[COMRAM] int 
 18845 ;; Return value:  Size  Location     Type
 18846 ;;                  1    wreg      void 
 18847 ;; Registers used:
 18848 ;;		wreg, status,2, status,0
 18849 ;; Tracked objects:
 18850 ;;		On entry : 0/0
 18851 ;;		On exit  : 0/0
 18852 ;;		Unchanged: 0/0
 18853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18855 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18857 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18858 ;;Total ram usage:        4 bytes
 18859 ;; Hardware stack levels used:    1
 18860 ;; This function calls:
 18861 ;;		Nothing
 18862 ;; This function is called by:
 18863 ;;		_timer0_isr
 18864 ;;		i2_lcd_send_byte
 18865 ;;		i2_lcd_putc
 18866 ;; This function uses a non-reentrant model
 18867 ;;
 18868                           
 18869                           	psect	text72
 18870  005590                     __ptext72:
 18871                           	opt stack 0
 18872  005590                     i2_delay_ms:
 18873                           	opt stack 19
 18874                           
 18875                           ;lcd_x8.c: 5: int x;
 18876                           ;lcd_x8.c: 6: for (x = 0; x <= n; x++) {
 18877                           
 18878                           ;incstack = 0
 18879  005590  0E00               	movlw	0
 18880  005592  6E04               	movwf	i2delay_ms@x+1,c
 18881  005594  0E00               	movlw	0
 18882  005596  6E03               	movwf	i2delay_ms@x,c
 18883  005598  D006               	goto	i2l224
 18884  00559A                     i2l3779:
 18885                           
 18886                           ;lcd_x8.c: 7: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 18887  00559A  0EFA               	movlw	250
 18888  00559C                     i2u848_47:
 18889  00559C  0004               	clrwdt	
 18890  00559E  2EE8               	decfsz	wreg,f,c
 18891  0055A0  D7FD               	goto	i2u848_47
 18892  0055A2  4A03               	infsnz	i2delay_ms@x,f,c
 18893  0055A4  2A04               	incf	i2delay_ms@x+1,f,c
 18894  0055A6                     i2l224:
 18895  0055A6  5003               	movf	i2delay_ms@x,w,c
 18896  0055A8  5C01               	subwf	i2delay_ms@n,w,c
 18897  0055AA  5004               	movf	i2delay_ms@x+1,w,c
 18898  0055AC  5802               	subwfb	i2delay_ms@n+1,w,c
 18899  0055AE  A0D8               	btfss	status,0,c
 18900  0055B0  0012               	return	
 18901  0055B2  D7F3               	goto	i2l3779
 18902  0055B4                     __end_ofi2_delay_ms:
 18903                           	opt stack 0
 18904                           pclatu	equ	0xFFB
 18905                           pclath	equ	0xFFA
 18906                           tblptru	equ	0xFF8
 18907                           tblptrh	equ	0xFF7
 18908                           tblptrl	equ	0xFF6
 18909                           tablat	equ	0xFF5
 18910                           prodh	equ	0xFF4
 18911                           prodl	equ	0xFF3
 18912                           intcon	equ	0xFF2
 18913                           intcon2	equ	0xFF1
 18914                           intcon3	equ	0xFF0
 18915                           postinc0	equ	0xFEE
 18916                           fsr0h	equ	0xFEA
 18917                           fsr0l	equ	0xFE9
 18918                           wreg	equ	0xFE8
 18919                           indf1	equ	0xFE7
 18920                           postdec1	equ	0xFE5
 18921                           fsr1h	equ	0xFE2
 18922                           fsr1l	equ	0xFE1
 18923                           indf2	equ	0xFDF
 18924                           postinc2	equ	0xFDE
 18925                           postdec2	equ	0xFDD
 18926                           fsr2h	equ	0xFDA
 18927                           fsr2l	equ	0xFD9
 18928                           status	equ	0xFD8
 18929                           pclatu	equ	0xFFB
 18930                           pclath	equ	0xFFA
 18931                           tblptru	equ	0xFF8
 18932                           tblptrh	equ	0xFF7
 18933                           tblptrl	equ	0xFF6
 18934                           tablat	equ	0xFF5
 18935                           prodh	equ	0xFF4
 18936                           prodl	equ	0xFF3
 18937                           intcon	equ	0xFF2
 18938                           intcon2	equ	0xFF1
 18939                           intcon3	equ	0xFF0
 18940                           postinc0	equ	0xFEE
 18941                           fsr0h	equ	0xFEA
 18942                           fsr0l	equ	0xFE9
 18943                           wreg	equ	0xFE8
 18944                           indf1	equ	0xFE7
 18945                           postdec1	equ	0xFE5
 18946                           fsr1h	equ	0xFE2
 18947                           fsr1l	equ	0xFE1
 18948                           indf2	equ	0xFDF
 18949                           postinc2	equ	0xFDE
 18950                           postdec2	equ	0xFDD
 18951                           fsr2h	equ	0xFDA
 18952                           fsr2l	equ	0xFD9
 18953                           status	equ	0xFD8
 18954                           
 18955                           	psect	rparam
 18956  0000                     pclatu	equ	0xFFB
 18957                           pclath	equ	0xFFA
 18958                           tblptru	equ	0xFF8
 18959                           tblptrh	equ	0xFF7
 18960                           tblptrl	equ	0xFF6
 18961                           tablat	equ	0xFF5
 18962                           prodh	equ	0xFF4
 18963                           prodl	equ	0xFF3
 18964                           intcon	equ	0xFF2
 18965                           intcon2	equ	0xFF1
 18966                           intcon3	equ	0xFF0
 18967                           postinc0	equ	0xFEE
 18968                           fsr0h	equ	0xFEA
 18969                           fsr0l	equ	0xFE9
 18970                           wreg	equ	0xFE8
 18971                           indf1	equ	0xFE7
 18972                           postdec1	equ	0xFE5
 18973                           fsr1h	equ	0xFE2
 18974                           fsr1l	equ	0xFE1
 18975                           indf2	equ	0xFDF
 18976                           postinc2	equ	0xFDE
 18977                           postdec2	equ	0xFDD
 18978                           fsr2h	equ	0xFDA
 18979                           fsr2l	equ	0xFD9
 18980                           status	equ	0xFD8
 18981                           
 18982                           	psect	temp
 18983  00007E                     btemp:
 18984                           	opt stack 0
 18985  00007E                     	ds	1
 18986  0000                     int$flags	set	btemp
 18987                           pclatu	equ	0xFFB
 18988                           pclath	equ	0xFFA
 18989                           tblptru	equ	0xFF8
 18990                           tblptrh	equ	0xFF7
 18991                           tblptrl	equ	0xFF6
 18992                           tablat	equ	0xFF5
 18993                           prodh	equ	0xFF4
 18994                           prodl	equ	0xFF3
 18995                           intcon	equ	0xFF2
 18996                           intcon2	equ	0xFF1
 18997                           intcon3	equ	0xFF0
 18998                           postinc0	equ	0xFEE
 18999                           fsr0h	equ	0xFEA
 19000                           fsr0l	equ	0xFE9
 19001                           wreg	equ	0xFE8
 19002                           indf1	equ	0xFE7
 19003                           postdec1	equ	0xFE5
 19004                           fsr1h	equ	0xFE2
 19005                           fsr1l	equ	0xFE1
 19006                           indf2	equ	0xFDF
 19007                           postinc2	equ	0xFDE
 19008                           postdec2	equ	0xFDD
 19009                           fsr2h	equ	0xFDA
 19010                           fsr2l	equ	0xFD9
 19011                           status	equ	0xFD8


Data Sizes:
    Strings     136
    Constant    118
    Data        96
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     125
    BANK0           128     89     113
    BANK1           256     35     183
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 14
		 -> m5(BANK1[14]), m4(BANK1[14]), m3(BANK1[14]), m2(BANK1[14]), 
		 -> m1(BANK1[14]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 14
		 -> m0(BANK1[14]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 14
		 -> m0(BANK1[14]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_21(CODE[7]), StateOFF(COMRAM[4]), StateON(BANK0[4]), m0(BANK1[14]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_20(CODE[6]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[16]), STR_15(CODE[23]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[23]), STR_5(CODE[23]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> Buffer4(BANK1[16]), Buffer3(BANK1[16]), Buffer2(BANK1[16]), Buffer1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_sprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 16
		 -> Buffer4(BANK1[16]), Buffer3(BANK1[16]), Buffer2(BANK1[16]), Buffer1(BANK1[16]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 14
		 -> m0(BANK1[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->_timer0_isr
    _timer0_isr->i2_sprintf
    i2___lwdiv->i2___wmul
    _read_adc_temp2->___ftdiv
    _read_adc_temp->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->i2___wmul
    _EXT_Int0_isr->i2_sprintf
    i2_sprintf->i2___ftge
    i2_scale->i2___ftmul
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___wmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2___ftmul
    i2___ftsub->i2___ftadd
    i2___ftadd->i2_fround
    i2___ftge->i2___ftadd
    i2_lcd_puts->i2_lcd_putc
    i2_lcd_putc->i2_lcd_gotoxy
    i2_lcd_gotoxy->i2_lcd_send_byte
    i2_lcd_send_byte->i2_lcd_send_nibble
    i2_lcd_send_nibble->i2_delay_cycles

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles
    ___lwdiv->___wmul

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   67522
                                             87 BANK0      2     2      0
                            ___lwdiv
                             ___wmul
                           _delay_ms
                    _init_adc_no_lib
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
                    _setupInterrupts
                         _setupPorts
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     735
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    36     10   51975
                                             77 BANK0     10     0     10
                                              0 BANK1     35    35      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   11455
                                             49 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   11257
                                             49 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    3613
                                             28 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4325
                                             34 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1580
                                             20 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                             14 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     591
                                             14 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2086
                                             22 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     671
                                             27 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     546
                                             14 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     444
                                             56 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3600
                                             71 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3303
                                             59 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1953
                                             14 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                             14 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     672
                                             14 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupInterrupts                                      0     0      0       0
                       _reloadTimer0
 ---------------------------------------------------------------------------------
 (2) _reloadTimer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    5352
                                             28 BANK0      2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    4287
                                             27 BANK0      1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    2401
                                             24 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    2024
                                             24 BANK0      1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1246
                                             22 BANK0      2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      68
                                             20 BANK0      2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (5) _delay_cycles                                         6     6      0      46
                                             14 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             4     2      2     596
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     826
                                             34 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _highIsr                                             14    14      0   69584
                                              0 BANK0     14    14      0
                       _EXT_Int0_isr
                       _EXT_Int1_isr
                       _EXT_Int2_isr
                         _timer0_isr
 ---------------------------------------------------------------------------------
 (8) _timer0_isr                                           6     6      0   42109
                                            111 COMRAM     6     6      0
                      _read_adc_temp
                     _read_adc_temp2
                          i2___ftadd
                           i2___ftge
                          i2___lwdiv
                           i2___wmul
                         i2_delay_ms
                       i2_lcd_gotoxy
                         i2_lcd_puts
                     i2_reloadTimer0
                          i2_sprintf
                           i2_strcpy
 ---------------------------------------------------------------------------------
 (9) i2_reloadTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2___lwdiv                                            7     3      4     266
                                             20 COMRAM     7     3      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) _read_adc_temp2                                      12     9      3    5367
                                             39 COMRAM    12     9      3
                           ___awtoft
                            ___ftdiv
                _read_adc_raw_no_lib
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) _read_adc_temp                                       12     9      3    5367
                                             39 COMRAM    12     9      3
                           ___awtoft
                            ___ftdiv
                _read_adc_raw_no_lib
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) _read_adc_raw_no_lib                                 7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) ___ftdiv                                            15     9      6    1259
                                             24 COMRAM    15     9      6
                           ___awtoft (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) ___awtoft                                            4     1      3     840
                                             20 COMRAM     4     1      3
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _EXT_Int2_isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EXT_Int1_isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EXT_Int0_isr                                         2     2      0   27475
                                            111 COMRAM     2     2      0
                       i2_lcd_gotoxy
                         i2_lcd_puts
                          i2_sprintf
                           i2_strcpy
 ---------------------------------------------------------------------------------
 (9) i2_strcpy                                             6     2      4     439
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2_sprintf                                           46    36     10   24559
                                             66 COMRAM    45    35     10
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_scale
 ---------------------------------------------------------------------------------
 (10) i2_scale                                            13    10      3    5205
                                             35 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2_fround                                           16    13      3    5007
                                             35 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4    1353
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftmul                                          15     9      6    1779
                                             20 COMRAM    15     9      6
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (10) i2__div_to_l_                                       12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) i2___lltoft                                          9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     330
                                             35 COMRAM    15    11      4
                          i2___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftsub                                           6     0      6    1788
                                             57 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftadd                                          12     6      6    1669
                                             45 COMRAM    12     6      6
                         i2___ftpack
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___ftpack                                          8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (10) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i2___ftge                                            9     3      6     396
                                             57 COMRAM     9     3      6
                          i2___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (9) i2_lcd_puts                                           2     0      2    1690
                                             14 COMRAM     2     0      2
                         i2_lcd_putc
 ---------------------------------------------------------------------------------
 (10) i2_lcd_putc                                          1     1      0    1385
                                             13 COMRAM     1     1      0
                         i2_delay_ms
                       i2_lcd_gotoxy
                    i2_lcd_send_byte
 ---------------------------------------------------------------------------------
 (11) i2_lcd_gotoxy                                        3     2      1     787
                                             10 COMRAM     3     2      1
                    i2_lcd_send_byte
 ---------------------------------------------------------------------------------
 (11) i2_lcd_send_byte                                     2     1      1     430
                                              8 COMRAM     2     1      1
                     i2_delay_cycles
                         i2_delay_ms
                  i2_lcd_send_nibble
 ---------------------------------------------------------------------------------
 (12) i2_lcd_send_nibble                                   2     2      0      68
                                              6 COMRAM     2     2      0
                     i2_delay_cycles
 ---------------------------------------------------------------------------------
 (13) i2_delay_cycles                                      6     6      0      46
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (12) i2_delay_ms                                          4     2      2     124
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___wmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _delay_ms
   _init_adc_no_lib
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_puts
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _setupInterrupts
     _reloadTimer0
   _setupPorts
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _strcpy

 _highIsr (ROOT)
   _EXT_Int0_isr
     i2_lcd_gotoxy
       i2_lcd_send_byte
         i2_delay_cycles
         i2_delay_ms
         i2_lcd_send_nibble
           i2_delay_cycles
     i2_lcd_puts
       i2_lcd_putc
         i2_delay_ms
         i2_lcd_gotoxy
           i2_lcd_send_byte
             i2_delay_cycles
             i2_delay_ms
             i2_lcd_send_nibble
               i2_delay_cycles
         i2_lcd_send_byte
           i2_delay_cycles
           i2_delay_ms
           i2_lcd_send_nibble
             i2_delay_cycles
     i2_sprintf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         i2___ftadd (ARG)
           i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
       i2___ftsub
         i2___ftadd
           i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
     i2_strcpy
   _EXT_Int1_isr
   _EXT_Int2_isr
   _timer0_isr
     _read_adc_temp
       ___awtoft
         i2___ftpack
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           i2___ftpack
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       _read_adc_raw_no_lib
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     _read_adc_temp2
       ___awtoft
         i2___ftpack
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           i2___ftpack
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       _read_adc_raw_no_lib
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftadd
       i2___ftpack
       i2_fround (ARG)
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
     i2___ftge
       i2___ftadd (ARG)
         i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
     i2___lwdiv
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___wmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
     i2_delay_ms
     i2_lcd_gotoxy
       i2_lcd_send_byte
         i2_delay_cycles
         i2_delay_ms
         i2_lcd_send_nibble
           i2_delay_cycles
     i2_lcd_puts
       i2_lcd_putc
         i2_delay_ms
         i2_lcd_gotoxy
           i2_lcd_send_byte
             i2_delay_cycles
             i2_delay_ms
             i2_lcd_send_nibble
               i2_delay_cycles
         i2_lcd_send_byte
           i2_delay_cycles
           i2_delay_ms
           i2_lcd_send_nibble
             i2_delay_cycles
     i2_reloadTimer0
     i2_sprintf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         i2___ftadd (ARG)
           i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
       i2___ftsub
         i2___ftadd
           i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
     i2_strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      B7       7       71.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     59      71       5       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      7D       1       99.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A5      34        0.0%
DATA                 0      0     1A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Apr 08 16:49:58 2022

         i2lcd_gotoxy@address 000D                i2_reloadTimer0 5640                            _CT 00D9  
                          _SP 00DC                ?_lcd_send_byte 0096                            _m0 0100  
                          _m1 010E                            _m2 011C                            _m3 012A  
                          _m4 0138                            _m5 0146                  ___awdiv@sign 0099  
         ___wmul@multiplicand 009E            i2___lwdiv@dividend 0015                   __CFG_BORV$3 000000  
                  i2___ftpack 46F6                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                   __CFG_OSC$XT 000000  
                ___ftadd@exp1 00C6                  ___ftadd@exp2 00C5                    i2___lltoft 4F50  
                 __CFG_LVP$ON 000000                  ___ftadd@sign 00C4                   __CFG_WDT$ON 000000  
                         l123 1B2A                           l124 1D08                           l126 1BC6  
                         l231 51F2                           l224 540C                           l136 1ED6  
                         l138 1D94                           l419 0924                           l721 33AA  
                         l725 33E4                           l727 340C                           l736 34E2  
                         l745 350C                           l666 3A6A                           l770 38E2  
                         l763 381E                           l764 3862                           l845 46E4  
                         l855 48CE                           l698 41B2                           l795 53E4  
                         l898 4D98                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         _lcd 000F83                           _min 00E7                           _sec 00E3  
                ___awmod@sign 0093                           prod 000FF3                           wreg 000FE8  
                  i2_delay_ms 5590                   lcd_gotoxy@x 0099                   lcd_gotoxy@y 0098  
             i2sprintf@tmpval 005C                  ___ftdiv@cntr 0022                  ___ftdiv@sign 0027  
                        l5001 4578                          l4211 3480                          l4203 3444  
                        l4141 5104                          l4221 34C8                          l4213 348E  
                        l4301 3C52                          l4143 5108                          l4151 5118  
                        l4223 34D6                          l4215 349A                          l5015 3D76  
                        l4145 510C                          l4153 5134                          l4209 3472  
                        l5033 3E08                          l4401 47F6                          l4147 5110  
                        l5051 3E6E                          l5043 3E38                          l4315 3CA0  
                        l4229 3536                          l4181 33B8                          l5045 3E48  
                        l5037 3E1C                          l5061 4668                          l4413 483C  
                        l4405 481A                          l4325 3CDE                          l4239 3584  
                        l5047 3E52                          l5063 4678                          l4351 45AE  
                        l4319 3CBE                          l4193 3402                          l5073 46D2  
                        l5065 467E                          l5081 4862                          l4361 45DE  
                        l4345 4598                          l4409 4828                          l4329 3CFC  
                        l4187 33F2                          l5083 4872                          l3901 41A4  
                        l5085 4878                          l4357 45CC                          l4373 461C  
                        l5095 4CB6                          l4359 45D8                          l4295 3C18  
                        l6145 4D48                          l3913 41D8                          l5089 48BC  
                        l5097 4CC6                          l4377 4630                          l4369 460E  
                        l4393 47D0                          l4801 2F9A                          l6401 018A  
                        l6147 4D54                          l3907 41BC                          l6403 01A2  
                        l6157 4D8A                          l6149 4D5A                          l4397 47E4  
                        l4389 47C0                          l6501 0546                          l6421 01FC  
                        l3775 51FA                          l4399 47F0                          l4823 21EA  
                        l6503 055C                          l6407 01B2                          l5561 4DC4  
                        l4905 3898                          l4809 308A                          l4841 245E  
                        l4833 22E8                          l6601 0928                          l6513 05D4  
                        l6441 02C0                          l6433 028A                          l6417 01EA  
                        l6409 01B8                          l3795 53FE                          l5571 4DEA  
                        l3891 4116                          l4931 3940                          l4915 38C8  
                        l6523 0632                          l6435 0296                          l6419 01F6  
                        l6451 0312                          l6371 004A                          l5557 4DBA  
                        l4781 4F10                          l3893 4146                          l3885 40F4  
                        l4925 391A                          l4917 38D8                          l4909 38AC  
                        l4829 22BC                          l6613 09AA                          l6541 06EA  
                        l6509 05A6                          l6429 0264                          l6453 0350  
                        l6373 0060                          l6365 002A                          l3879 4FF2  
                        l5575 4DF4                          l5567 4DDE                          l4783 4F1E  
                        l4847 2530                          l6631 0AC6                          l6623 0A9E  
                        l6527 0698                          l6447 02F8                          l6439 02A8  
                        l6383 009E                          l6391 0118                          l4785 4F2C  
                        l3897 4166                          l3889 4108                          l4953 39E8  
                        l4945 3994                          l6721 0D60                          l6625 0AAC  
                        l6609 0958                          l6545 073A                          l6529 069E  
                        l6633 0AD4                          l6377 006A                          l6801 1BA4  
                        l4779 4EF4                          l3899 4196                          l4875 37CA  
                        l4859 54CA                          l6715 0D32                          l6707 0D00  
                        l6651 0B44                          l6643 0B18                          l6563 07B6  
                        l6571 07E6                          l6459 036A                          l6731 0E30  
                        l4789 4F38                          l4965 3A20                          l4869 3790  
                        l6725 0DF4                          l6709 0D0C                          l6573 07FA  
                        l6565 07CC                          l6557 079C                          l6549 0762  
                        l6493 04D2                          l6485 0462                          l6469 03B0  
                        l6397 0142                          l4991 44F4                          l4983 5170  
                        l4975 3A50                          l6727 0DFA                          l6671 0BE8  
                        l6663 0B90                          l6807 1BE0                    i2_lcd_putc 5002  
                        l4977 3A60                          l4969 3A34                          l6649 0B3E  
                        l6577 0826                          l6497 0500                          l6729 0E10  
                        l6833 1D56                          l6825 1D2A                          l5963 5512  
                        l4995 4534                          l6691 0CA0                          l6683 0C54  
                        l6667 0BB8                          l6595 08F2                          l6579 082E  
                        l6587 08CA                          l6499 0516                          l6843 1DAE  
                        l6685 0C5E                          l6677 0C1C                          l6597 0906  
                        l6589 08D8                          l6837 1D72                          l6829 1D3A  
                        l5959 54FE                          l5967 539A                          l6689 0C96  
                        l5969 53A6                          l6793 1B6C                          l6699 0CD8  
                        l6797 1B88                          l6789 1B5C                    i2_lcd_puts 556C  
       __size_ofi2__div_to_l_ 0128                          STR_1 FF77                          STR_2 FFB0  
                        STR_3 FFC1                          STR_4 FF8E                          STR_5 FF77  
                        STR_6 FF77                          STR_7 FF9F                          STR_8 FFB0  
                        STR_9 FFC1                          _PIE1 000F9D                          _PIE2 000FA0  
                        u4471 3358                          u4481 3376                          u4731 3BF4  
                        u5461 376C                          u4751 3C2E                          u8040 091C  
                        u5481 37A6                          _PIR1 000F9E                          u3975 4FBA  
                        u5671 3D52                          u3976 4FBC                          u5690 3D9C  
                        u7700 0236                          u5695 3D92                          u7707 022C  
                        u7820 03F6                          u7760 02EA                          u8457 4FEA  
                        u7825 03EA                          u8467 5400                          u7767 02E0  
            ?_lcd_send_nibble 0001        i2lcd_send_byte@cm_data 000A                          _main 19D0  
                ___ftpack@arg 008E                          _hour 00E5                  ___ftpack@exp 0091  
                        fsr0h 000FEA                          fsr1h 000FE2            i2___lwdiv@quotient 0019  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 007E                  i2___ftadd@f1 002E                  i2___ftadd@f2 0031  
                        pclat 000FFA                  i2___ftge@ff1 003A                  i2___ftge@ff2 003D  
                        prodh 000FF4                          prodl 000FF3                          start 0016  
               __CFG_IESO$OFF 000000               __end_ofi2_scale 2E08                  i2___ftneg@f1 0001  
      __end_ofi2_reloadTimer0 564A                  _sprintf$1562 019A                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 00AF                  i2___ftmul@f1 0015                  i2___ftmul@f2 0018  
                ___param_bank 000010                  ___ftmul@sign 00B0                  i2___ftsub@f1 003A  
                i2___ftsub@f2 003D                  i2___fttol@f1 0024                  ___fttol@exp1 00C6  
                i2___lltoft@c 0009                  ___fttol@lval 00C2          __end_of_delay_cycles 5226  
                       ?_main 0001               __end_of___awdiv 463A               __end_of___ftadd 35AA  
                       STR_10 FF8E                         STR_11 FF9F                         STR_12 FFB0  
                       STR_20 FFF9                         STR_13 FFC1                         STR_21 FFF2  
                       STR_14 FF8E                         STR_15 FF77                         STR_16 FFD2  
                       STR_17 FFD2                         STR_18 FFE2                         STR_19 FFE2  
             __end_of___awmod 4846               __end_of___ftdiv 44B4               __end_of___ftneg 53F2  
             __end_of___lldiv 46F6               __end_of___ftmul 3D3C                         _T0CON 000FD5  
             ___awdiv@divisor 0096               __end_of___llmod 48E0               __end_of___ftsub 519A  
             __end_of___fttol 3E80               __end_of___lwdiv 4DA2                         i2l231 545C  
                       i2l224 55A6                         i2l160 491C                         i2l162 4926  
                       i2l164 4930                         i2l167 4936                         i2l419 15A8  
                       i2l296 52FE                         i2l721 35EE                         i2l725 3618  
                       i2l736 36C8                         i2l745 36E4                         i2l666 40C8  
                       i2l770 3FA0                         i2l763 3F12                         i2l764 3F3A  
                       i2l756 4482                         i2l845 4C9C                         i2l855 4EDC  
                       i2l698 4784                         i2l795 555E               ___awdiv@counter 0098  
                       i2l898 50F4                         _TMR0H 000FD7                         _TMR0L 000FD6  
                i2__div_to_l_ 3FB2                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                  ___lltoft@exp 009E  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000               __end_of_highIsr 4972  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                    i2isdigit@c 0003                 ___awtoft@sign 0018  
             __end_of_dpowers FF29                    i2scale@scl 002A                         _scale 2066  
             __end_of_isdigit 54D4               _init_adc_no_lib 5626                 ___ftpack@sign 0092  
                       tablat 000FF5              __end_ofi2___ftge 4A02              __end_ofi2___wmul 5548  
                       status 000FD8         __size_ofi2_lcd_gotoxy 0042               __end_of_sprintf 0E3E  
                 i2delay_ms@n 0001                   i2delay_ms@x 0003             ??i2_lcd_send_byte 000A  
            __end_ofi2_fround 3342            __size_ofi2___awdiv 0084            __size_ofi2___ftadd 01AC  
          __size_ofi2___awmod 0070                __CFG_PBADEN$ON 000000            __size_ofi2___ftneg 0024  
          __size_ofi2___lldiv 0082            __size_ofi2___ftmul 00F4            __size_ofi2___llmod 0066  
          __size_ofi2___ftsub 0040            __size_ofi2___fttol 00F4            __size_ofi2___lwdiv 0052  
             ?i2_reloadTimer0 0001              __end_ofi2_strcpy 5450               __initialization 4B1E  
           i2___lldiv@divisor 0005                  __end_of_main 2066               ??_lcd_send_byte 0097  
           i2___lldiv@counter 000D                 i2___ftmul@exp 001E            __size_ofi2_isdigit 001E  
     read_adc_temp2@raw_value 0031                   ?i2___ftpack 0001                   ?i2___lltoft 0009  
                      ??_main 00D7                 ___fttol@sign1 00C1                 __activetblptr 000003  
                  i2sprintf@c 006F                    i2sprintf@f 0045      __size_of_setupInterrupts 0040  
          __size_ofi2_sprintf 0B92          __size_of__tdiv_to_l_ 019E                    i2strcpy@cp 0005  
                  i2strcpy@to 0001                   i2lcd_putc@c 000E                   i2lcd_puts@s 000F  
                 ?i2_delay_ms 0001                  i2_lcd_gotoxy 5226                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              i2lcd_send_byte@n 0009  
            ___llmod@dividend 009B                        ?_scale 00B1                        _ADRESH 000FC4  
                      _ADRESL 000FC3              ___awdiv@dividend 0094              __end_of___awtoft 535A  
            __end_of___ftpack 41E6                   ?i2_lcd_putc 0001                   ?i2_lcd_puts 000F  
            __end_of___lltoft 4D2A                        i2l4001 4E46                        i2l4003 4E4E  
                      i2l4005 4E52                        i2l4013 4E70                        i2l4103 4236  
                      i2l4017 4E7E                        i2l4009 4E66                        i2l4121 4278  
                      i2l4051 3656                        i2l4035 3626                        i2l4131 42A0  
                      i2l4061 368C                        i2l4029 35FC                        i2l4117 4268  
                      i2l5111 5580                        i2l4071 36C0                        i2l4063 3694  
                      i2l4127 4290                        i2l4057 3678                        i2l5201 10A4  
                      i2l5121 0E66                        i2l5107 556E                        i2l4059 3682  
                      i2l5203 10DE                        i2l5123 0E78                        i2l5115 0E4A  
                      i2l4077 3700                        i2l4069 36B6                        i2l5133 0EB0  
                      i2l5141 0F10                        i2l6101 3ADA                        i2l4431 5006  
                      i2l4087 3730                        i2l5151 0F6C                        i2l5127 0E7E  
                      i2l6111 3B36                        i2l4255 441E                        i2l4433 501E  
                      i2l4441 5042                        i2l4097 420E                        i2l5401 1788  
                      i2l5313 1474                        i2l5321 149A                        i2l5209 10F2  
                      i2l5153 0F84                        i2l6113 3B4C                        i2l6105 3AF4  
                      i2l4425 5336                        i2l4249 43F6                        i2l6033 2798  
                      i2l6041 27CC                        i2l4435 502A                        i2l4515 3FEE  
                      i2l5323 14A8                        i2l5315 1484                        i2l5307 145E  
                      i2l5251 1288                        i2l5243 1226                        i2l5235 11C2  
                      i2l5219 1132                        i2l5171 0FCA                        i2l5147 0F34  
                      i2l6115 3B62                        i2l6107 3B0A                        i2l4275 445C  
                      i2l4437 5036                        i2l4509 3FD0                        i2l4605 3F66  
                      i2l4461 32FC                        i2l4453 3230                        i2l5421 1802  
                      i2l5413 17C6                        i2l5253 1298                        i2l5157 0F90  
                      i2l6109 3B20                        i2l6117 3B78                        i2l4623 49A2  
                      i2l3831 4706                        i2l4615 3F8E                        i2l4703 560C  
                      i2l5351 15AC                        i2l5327 14C8                        i2l5263 12F0  
                      i2l5247 124A                        i2l5191 105C                        i2l5183 1030  
                      i2l5167 0FBC                        i2l5159 0F94                        i2l5511 5434  
                      i2l6119 3BAA                        i2l5503 50EA                        i2l6063 290A  
                      i2l3825 51D4                        i2l3921 522E                        i2l4633 49FE  
                      i2l4713 4C4E                        i2l4561 40C2                        i2l4553 409E  
                      i2l4537 4060                        i2l4529 4030                        i2l4617 3F9A  
                      i2l4609 3F76                        i2l4481 2BC6                        i2l5441 187A  
                      i2l5433 1846                        i2l5417 17E2                        i2l5345 1584  
                      i2l5329 14CE                        i2l5337 1564                        i2l5273 1344  
                      i2l5249 125A                        i2l5185 103A                        i2l5169 0FC6  
                      i2l3923 5232                        i2l3931 5256                        i2l4627 49D2  
                      i2l3843 4752                        i2l3835 4714                        i2l4715 4C5A  
                      i2l4475 2B16                        i2l5435 184E                        i2l5427 1824  
                      i2l5363 161E                        i2l5347 1592                        i2l5339 156E  
                      i2l5291 13EA                        i2l5259 12CC                        i2l5179 101A  
                      i2l3925 5236                        i2l3845 4770                        i2l3837 471E  
                      i2l4645 52BE                        i2l4725 4C8E                        i2l4717 4C5E  
                      i2l4741 4ECE                        i2l4733 4E9A                        i2l4549 408E  
                      i2l4493 2D2E                        i2l4485 2BF0                        i2l5381 1728  
                      i2l5373 1708                        i2l5277 13A8                        i2l5197 1090  
                      i2l5189 104A                        i2l5509 542C                        i2l6093 3AAA  
                      i2l6077 2990                        i2l6069 2948                        i2l3919 522A  
                      i2l3847 477A                        i2l3839 473C                        i2l4655 4306  
                      i2l4735 4EA6                        i2l4559 40B6                        i2l4575 3ED8  
                      i2l5471 190A                        i2l5439 1872                        i2l5375 1712  
                      i2l5359 15CE                        i2l5295 141A                        i2l5279 13AC  
                      i2l5383 1732                        _INTCON 000FF2                        i2l3769 5462  
                      i2l3929 523C                        i2l4673 436C                        i2l4737 4EAA  
                      i2l4569 3EAC                        i2l3961 4BE2                        i2l5465 18E8  
                      i2l5449 18A2                        i2l5457 18C2                        i2l5393 176C  
                      i2l5481 19C2                        i2l6097 3AC2                        i2l6089 3A94  
                      i2l3779 559A                        i2l4691 43BC                        i2l4683 4394  
                      i2l4747 4F56                        i2l3963 4BEA                        i2l3955 4BCC  
                      i2l4499 2DDE                        i2l5475 1992                        i2l5459 18CA  
                      i2l5299 1434                        i2l5491 50C2                        i2l4685 43A0  
                      i2l4677 437C                        i2l4749 4F62                        i2l3981 4C22  
                      i2l3973 4C0A                        i2l3965 4BEE                        i2l3949 4BBC  
                      i2l5477 1996                        i2l5493 50CA                        i2l4687 43A6  
                      i2l5399 1784                        i2l5479 19A6                        i2l5495 50CE  
                      i2l3977 4C14                        i2l3993 4E2C                        i2l3997 4E38  
                      i2l5993 261E                        i2l5987 25D8                        u420_41 35CE  
                      i2l5997 2640                        u520_41 42EA                        u440_41 41F6  
                   ??i2_scale 0027                        u506_41 3E90                        u442_41 421E  
                      u419_41 35BA                        u508_41 3EBC                        u470_41 4406  
                      u468_41 43DE        __size_ofi2__tdiv_to_l_ 0132              __end_of_delay_ms 5422  
              __CFG_XINST$OFF 000000                  i2_scale$1778 0027              __end_of__powers_ FF77  
            __end_of_lcd_init 4E18              __end_of_lcd_putc 4F50              __end_of_lcd_puts 5522  
                      ___ftge 44B4                        _Totsec 00DF          read_adc_temp@channel 0033  
                      ___wmul 535A                     ??___awdiv 0098                     ??___ftadd 00C1  
              __CFG_STVREN$ON 000000                     ??___awmod 0092                     ??___ftdiv 001F  
                   ??___ftneg 0091                     ??___lldiv 0096                     ??___ftmul 00A8  
                   ??___llmod 00A3                     ??___ftsub 00CD                     ??___fttol 00BC  
                   ??___lwdiv 00A6        __size_of_read_adc_temp 008E                        _fround 2E08  
                      clear_0 4B24                        clear_1 4B30              ___awdiv@quotient 009A  
             ___awmod@divisor 0090               ___awmod@counter 0092                     ??_highIsr 0080  
                      _strcpy 5390                i2___awdiv@sign 000C         ___ftmul@f3_as_product 00AC  
     __end_of_init_adc_no_lib 5636                  __pdataCOMRAM 007A                     ??_isdigit 008E  
           __end_ofi2___awdiv 4C2C             __end_ofi2___ftadd 3756             __end_ofi2___awmod 4E88  
              i2___ftadd@exp1 0039                i2___ftadd@exp2 0038             __end_ofi2___ftneg 556C  
           __end_ofi2___lldiv 4CAE             __end_ofi2___ftmul 42DA             __end_ofi2___llmod 4EEE  
           __end_ofi2___ftsub 52E8             __end_ofi2___fttol 43CE                i2___ftadd@sign 0037  
           __end_ofi2___lwdiv 50FE          read_adc_temp@voltage 002B                  __mediumconst FF00  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
              i2___awmod@sign 0006                     ??_sprintf 0194             __end_ofi2_isdigit 5614  
                  __accesstop 0080       __end_of__initialization 4B9E                    ___ftadd@f1 00BB  
                  ___ftadd@f2 00BE           __size_ofi2___ftpack 00AE                    ___ftge@ff1 008E  
                  ___ftge@ff2 0091                 i2sprintf@flag 0066           __size_ofi2___lltoft 005C  
               i2sprintf@fval 0068                 ___rparam_used 000001                 i2sprintf@prec 006D  
                  ___ftdiv@f1 0019                    ___ftdiv@f2 001C                    ___ftdiv@f3 0023  
           __end_ofi2_sprintf 19D0                    ___ftneg@f1 008E                    ___awtoft@c 0015  
              i2___ftpack@arg 0001            i2__tdiv_to_l_@exp1 000F             i2___llmod@divisor 0012  
              i2___ftpack@exp 0004            i2__tdiv_to_l_@cntr 000E             i2___llmod@counter 0016  
          i2__tdiv_to_l_@quot 000A                    ___ftmul@f1 00A2                    ___ftmul@f2 00A5  
                  ___ftsub@f1 00C7                    ___ftsub@f2 00CA                    ___fttol@f1 00B8  
              __pcstackCOMRAM 0001            i2___lldiv@dividend 0001         read_adc_temp2@channel 0033  
         __size_ofi2_delay_ms 0024         __size_of_delay_cycles 0044                  __pidataBANK0 564A  
                __pidataBANK1 5058                i2_sprintf$1779 0053                    ___lltoft@c 0096  
               ?_EXT_Int0_isr 0001                 ?_EXT_Int1_isr 0001                 ?_EXT_Int2_isr 0001  
              i2___ftmul@cntr 0022                 __end_of_scale 255C             read_adc_temp@temp 002E  
              i2___ftmul@sign 0023           __size_ofi2_lcd_putc 0056           __size_ofi2_lcd_puts 0024  
              i2___fttol@exp1 0032                i2___fttol@lval 002E                     ?i2___ftge 003A  
                   ?i2___wmul 000F                 i2__tdiv_to_l_ 3E80                    __div_to_l_ 38F4  
                   ?i2_fround 0024         read_adc_temp2@voltage 002B             lcd_gotoxy@address 009A  
                   ?i2_strcpy 0001               __div_to_l_@exp1 0099               __div_to_l_@cntr 0098  
                     ??_scale 00B4                i2___lltoft@exp 0011             ??_setupInterrupts 008E  
             __div_to_l_@quot 0094                  sprintf@width 01B2            i2___lldiv@quotient 0009  
               _read_adc_temp 4A90                    __pbssBANK0 00D9                    __pbssBANK1 0154  
                 i2sprintf@ap 0058                   i2sprintf@cp 0056                   i2sprintf@sp 0043  
            i2__tdiv_to_l_@f1 0001              i2__tdiv_to_l_@f2 0004   __end_of_read_adc_raw_no_lib 5322  
             _clock_setup_SMH 00E1                  _delay_cycles 51E2                 __div_to_l_@f1 008E  
               __div_to_l_@f2 0091                 ?_reloadTimer0 0001       __size_ofi2_delay_cycles 002E  
              lcd_send_byte@n 0096                       ?___ftge 008E                ??_EXT_Int0_isr 0070  
              ??_EXT_Int1_isr 0001                ??_EXT_Int2_isr 0001                       ?___wmul 009C  
            lcd_send_nibble@n 0095                       ?_fround 00B1                     ?___awtoft 0015  
                   ?___ftpack 008E                     ?___lltoft 0096                ?i2__tdiv_to_l_ 0001  
                  ??i2___ftge 0040                       ?_strcpy 008E                    ??i2___wmul 0013  
            ?_init_adc_no_lib 0001                       _INTCON2 000FF1                       _INTCON3 000FF0  
                  ??i2_fround 0027                     ?_delay_ms 008E                    _lcd_gotoxy 50FE  
             i2_lcd_send_byte 519A                    ??i2_strcpy 0005                ?_read_adc_temp 0028  
                   ?_lcd_init 0001                     ?_lcd_putc 0001                     ?_lcd_puts 009C  
                     i2_scale 29D0              ??i2_reloadTimer0 0001                       _Buffer1 0154  
                     _Buffer2 0164                       _Buffer3 0174                       _Buffer4 0184  
              ??_reloadTimer0 008E             __end_of__npowers_ FF50                       __Hparam 0000  
                  _scale$1561 00B4                       __Lparam 0000      __size_of_lcd_send_nibble 0028  
                     _StateON 00ED               __size_of___ftge 00C8                       ___awdiv 457C  
                     ___ftadd 3342                       ___awmod 47A4                       ___ftdiv 43CE  
                     ___ftneg 53C2                       ___lldiv 463A               __size_of___wmul 0036  
                     ___ftmul 3BDE                       ___llmod 4846                       ___ftsub 514E  
                     ___fttol 3D3C                       ___lwdiv 4D2A                       __pcinit 4B1E  
                ??i2___ftpack 0006                    ??___awtoft 0018                    ??___ftpack 0093  
             __size_of_fround 02D0       i2___ftmul@f3_as_product 001F                       __ramtop 1000  
                ??i2___lltoft 000D                    ??___lltoft 009A                       __ptext0 19D0  
                     __ptext1 5390                       __ptext2 001A                       __ptext3 2066  
                     __ptext4 54AA                       __ptext5 2E08                       __ptext6 535A  
                     __ptext7 3BDE                       __ptext8 47A4                       __ptext9 457C  
                     _highIsr 0008                     _T0CONbits 000FD5                 i2_fround$1776 002A  
               i2_fround$1777 0027               __size_of_strcpy 0032                   ?__div_to_l_ 008E  
     __size_of_read_adc_temp2 008E                       _dpowers FF01                  i2fround@prec 002D  
                     _isdigit 54AA              ___awmod@dividend 008E                  ??i2_delay_ms 0003  
                  ??_delay_ms 0090                       _sprintf 001A                    ??_lcd_init 0098  
                ??i2_lcd_putc 000E                  ??i2_lcd_puts 0011                __pintcode_body 48E0  
                  ??_lcd_putc 009B                    ??_lcd_puts 009E          end_of_initialization 4B9E  
                 timer0_isr@i 0074                       int_func 48E0           i2___wmul@multiplier 000F  
        lcd_send_byte@cm_data 0097            __end_ofi2___ftpack 47A4            __end_ofi2___lltoft 4FAC  
             ___lldiv@divisor 0092               ___lldiv@counter 009A             i2_lcd_send_nibble 55B4  
                     postdec1 000FE5                       postdec2 000FDD                    _timer0_isr 255C  
                     postinc0 000FEE                       postinc2 000FDE            __end_ofi2_delay_ms 55B4  
              __tdiv_to_l_@f1 008E                __tdiv_to_l_@f2 0091         __end_of_lcd_send_byte 5002  
             ??i2__tdiv_to_l_ 0007            ?i2_lcd_send_nibble 0001                 ??__tdiv_to_l_ 0094  
          __end_ofi2_lcd_putc 5058       __end_ofi2_lcd_send_byte 51E2            __end_ofi2_lcd_puts 5590  
                   _PORTBbits 000F81                     _PORTCbits 000F82                     _PORTDbits 000F83  
                   _PORTEbits 000F84                    _setupPorts 5614           ??i2_lcd_send_nibble 0007  
                 ?_lcd_gotoxy 0098               ??_read_adc_temp 002B                     i2___awdiv 4BA8  
                   i2___ftadd 35AA          __end_of_EXT_Int0_isr 3BDE                     i2___awmod 4E18  
        __end_of_EXT_Int1_isr 54AA               _LCD_INIT_STRING 00E9          __end_of_EXT_Int2_isr 55F6  
                   i2___ftneg 5548             i2___lwdiv@divisor 0017                     i2___lldiv 4C2C  
                   i2___ftmul 41E6                     i2___llmod 4E88                     i2___ftsub 52A8  
                   i2___fttol 42DA                     i2___lwdiv 50AC             i2___lwdiv@counter 001B  
              i2sprintf@width 006B                   ___ftdiv@exp 0026            i2___llmod@dividend 000E  
          i2___awdiv@dividend 0007               i2___ftpack@sign 0005                     i2_isdigit 55F6  
         __size_of__div_to_l_ 0188     __end_ofi2_lcd_send_nibble 55D6                i2_delay_cycles 5450  
                 ___ftmul@exp 00AB            read_adc_temp2@temp 002E                     i2_sprintf 0E3E  
              __end_of___ftge 457C                __end_of___wmul 5390                 __pidataCOMRAM 5652  
               delay_cycles@n 0091                 delay_cycles@x 0092               _setupInterrupts 5268  
           ??_lcd_send_nibble 0094                __end_of_fround 30D8              i2___wmul@product 0013  
        __end_of_reloadTimer0 5640                __end_of_strcpy 53C2           start_initialization 4B1E  
           __size_ofi2___ftge 0090            i2___awdiv@quotient 000D             __size_ofi2___wmul 0026  
         __end_of__tdiv_to_l_ 38F4               i2___fttol@sign1 002D             __size_ofi2_fround 026A  
                  ?i2___awdiv 0007                    ?i2___ftadd 002E                    ?i2___awmod 0001  
                  ?i2___ftneg 0001                    ?i2___lldiv 0001                    ?i2___ftmul 0015  
                  ?i2___llmod 000E                    ?i2___ftsub 003A                    ?i2___fttol 0024  
                  ?i2___lwdiv 0015             __size_ofi2_strcpy 002E        __end_ofi2_delay_cycles 547E  
             ___llmod@divisor 009F               ___llmod@counter 00A3                    ?i2_isdigit 0001  
                    ??___ftge 0094                   ?_timer0_isr 0001           __size_of_lcd_gotoxy 0050  
                    ??___wmul 00A0                    ?i2_sprintf 0043                   __pdataBANK0 00E9  
                 __pdataBANK1 0100  read_adc_raw_no_lib@raw_value 0005              __CFG_LPT1OSC$OFF 000000  
                    ??_fround 00B4                 sprintf@tmpval 01A3              ?i2_lcd_send_byte 0009  
                    ??_strcpy 0092                   ?_setupPorts 0001                _read_adc_temp2 4A02  
                  fround@prec 00BA                 ?i2__div_to_l_ 0001             __size_of___awtoft 0038  
           __size_of___ftpack 010C             __size_of___lltoft 007C                  i2sprintf@len 005A  
                i2sprintf@exp 0064                   __pbssCOMRAM 0076                  i2sprintf@val 0060  
               __pcstackBANK0 0080                 __pcstackBANK1 0194                  _isdigit$1219 008F  
               i2lcd_gotoxy@x 000C                 i2lcd_gotoxy@y 000B             __size_of_delay_ms 0030  
                    ?i2_scale 0024                  i2strcpy@from 0003             __size_of_lcd_init 0076  
                 sprintf@flag 01AD             __size_of_lcd_putc 0062             __size_of_lcd_puts 0026  
                 sprintf@fval 01AF                   sprintf@prec 01B4               ?i2_delay_cycles 0001  
  __size_ofi2_lcd_send_nibble 0022              ___lwdiv@dividend 00A2             __CFG_CCP2MX$PORTC 000000  
     __end_of_setupInterrupts 52A8                     __pintcode 0008  __size_of_read_adc_raw_no_lib 003A  
               __pmediumconst FF00                      ?___awdiv 0094                      ?___ftadd 00BB  
                    ?___awmod 008E                      ?___ftdiv 0019                      ?___ftneg 008E  
                    ?___lldiv 008E                      ?___ftmul 00A2                      ?___llmod 009B  
                    ?___ftsub 00C7                     __npowers_ FF29                      ?___fttol 00B8  
                    ?___lwdiv 00A2        __end_of_read_adc_temp2 4A90                   __tdiv_to_l_ 3756  
                    ?_highIsr 0001                ??i2__div_to_l_ 0007                  ??__div_to_l_ 0094  
       __size_of_EXT_Int0_isr 0162            i2lcd_send_nibble@n 0008                      ?_isdigit 0001  
       __size_of_EXT_Int1_isr 002C         __size_of_EXT_Int2_isr 0020                 ?i2_lcd_gotoxy 000B  
            ___lwdiv@quotient 00A6                   ??i2___awdiv 000B                   ??i2___ftadd 0034  
                 ??i2___awmod 0005                      ?_sprintf 00CD                   ??i2___ftneg 0004  
                 ??i2___lldiv 0009                   ??i2___ftmul 001B                __size_of_scale 04F6  
                 ??i2___llmod 0016                   ??i2___ftsub 0040                   ??i2___fttol 0028  
         __size_of_timer0_isr 0474                   ??i2___lwdiv 0019      __size_of_init_adc_no_lib 0010  
              ___wmul@product 00A0                     delay_ms@n 008E                     delay_ms@x 0090  
         __size_of_setupPorts 0012                   ??i2_isdigit 0001                      i2u601_40 116A  
                    i2u601_45 1160            __end_of__div_to_l_ 3A7C                      i2u522_40 4324  
                    i2u522_45 431C                      _CK_state 0076                      i2u358_45 55F2  
                    i2u358_46 55F4                      i2u623_40 15A2                      i2u730_40 27A2  
                    i2u387_45 51A4                      i2u387_46 51A6                      i2u732_40 27CA  
                    i2u731_48 27A4                      i2u741_45 54A6                      i2u741_46 54A8  
                    i2u729_40 2796                      i2u595_40 1086                      i2u595_47 107C  
                    i2u589_40 0FF8                      i2u589_47 0FEE                      i2u847_47 51CC  
                    i2u848_47 559C                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
  read_adc_raw_no_lib@channel 0007                   ??i2_sprintf 004D                  _EXT_Int0_isr 3A7C  
                _EXT_Int1_isr 547E                  _EXT_Int2_isr 55D6               i2__div_to_l_@f1 0001  
             i2__div_to_l_@f2 0004         __size_of_reloadTimer0 000A               ?_read_adc_temp2 0028  
                  _ADCON0bits 000FC2                      _HT_state 0078             ___wmul@multiplier 009C  
                    i2___ftge 4972                      i2___wmul 5522                     lcd_init@i 0098  
                   lcd_putc@c 009B             i2___awdiv@divisor 0009                     lcd_puts@s 009C  
                    i2_fround 30D8                ??i2_lcd_gotoxy 000C             i2___awdiv@counter 000B  
                ??_lcd_gotoxy 0099                      i2_strcpy 5422                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                     copy_data0 4B52                     copy_data1 4B72  
                   copy_data2 4B92            i2___awmod@dividend 0001              __size_ofi2_scale 0438  
             _lcd_send_nibble 54D4                  _reloadTimer0 5636                      __Hrparam 0000  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000              ?_setupInterrupts 0001  
                    _StateOFF 007A       __size_ofi2_reloadTimer0 000A            __end_of_lcd_gotoxy 514E  
            __size_of___awdiv 00BE              __size_of___ftadd 0268              __size_of___awmod 00A2  
            __size_of___ftdiv 00E6              __size_of___ftneg 0030         i2___wmul@multiplicand 0011  
            __size_of___lldiv 00BC              __size_of___ftmul 015E              __size_of___llmod 009A  
            __size_of___ftsub 004C              __size_of___fttol 0144              __size_of___lwdiv 0078  
                    ___awtoft 5322                      ___ftpack 40DA                   _fround$1560 00B4  
                 _fround$1559 00B7                      ___lltoft 4CAE         __end_ofi2__tdiv_to_l_ 3FB2  
            __size_of_highIsr 496A                    sprintf@len 01A1                    sprintf@exp 01AB  
                  sprintf@val 01A7              __size_of_isdigit 002A                      _delay_ms 53F2  
             ___lwdiv@divisor 00A4               ___lwdiv@counter 00A8                      __ptext10 3756  
                    __ptext11 38F4                      __ptext20 44B4                      __ptext12 4CAE  
                    __ptext21 5614                      __ptext13 4846                      __ptext30 51E2  
                    __ptext22 5268                      __ptext14 463A                      __ptext31 53F2  
                    __ptext23 5636                      __ptext15 3D3C                      __ptext40 52E8  
                    __ptext32 5626                      __ptext24 54FC                      __ptext16 514E  
                    __ptext41 43CE                      __ptext33 4D2A                      __ptext25 4EEE  
                    __ptext17 3342                      __ptext50 30D8                      __ptext42 5322  
                    __ptext26 50FE                      __ptext18 40DA                      __ptext51 5522  
                    __ptext43 55D6                      __ptext35 255C                      __ptext27 4DA2  
                    __ptext19 53C2                      __ptext60 42DA                      __ptext52 41E6  
                    __ptext44 547E                      __ptext36 5640                      __ptext28 4FAC  
                    __ptext61 52A8                      __ptext53 4E18                      __ptext45 3A7C  
                    __ptext37 50AC                      __ptext29 54D4                      __ptext70 55B4  
                    __ptext62 35AA                      __ptext54 4BA8                      __ptext46 5422  
                    __ptext38 4A02                      __ptext71 5450                      __ptext63 46F6  
                    __ptext55 3E80                      __ptext47 0E3E                      __ptext39 4A90  
                    __ptext72 5590                      __ptext64 5548                      __ptext56 3FB2  
                    __ptext48 29D0                      __ptext65 4972                      __ptext57 4F50  
                    __ptext49 55F6                      __ptext66 556C                      __ptext58 4E88  
                    __ptext67 5002                      __ptext59 4C2C                      __ptext68 5226  
                    __ptext69 519A                      __powers_ FF50         __end_of_read_adc_temp 4B1E  
                    _lcd_init 4DA2                      _lcd_putc 4EEE                      _lcd_puts 54FC  
            __size_of_sprintf 0E24                i2_isdigit$1219 0002                    strcpy@from 0090  
      __size_of_lcd_send_byte 0056                 ?_delay_cycles 0001                 __size_of_main 0696  
        __end_ofi2__div_to_l_ 40DA             ??_init_adc_no_lib 008E                  ??_timer0_isr 0070  
                    int$flags 007E        read_adc_temp@raw_value 0031                  ??_setupPorts 008E  
           i2___awmod@divisor 0003             i2___awmod@counter 0005                    _INTCONbits 000FF2  
                    isdigit@c 0090           _read_adc_raw_no_lib 52E8                      scale@scl 00B7  
            ??i2_delay_cycles 0001                      intlevel2 0000            __end_of_timer0_isr 29D0  
                   sprintf@ap 019F                     sprintf@cp 019D       __end_of_lcd_send_nibble 54FC  
            __tdiv_to_l_@exp1 009C                     sprintf@sp 00CD              __tdiv_to_l_@cntr 009B  
              ??_delay_cycles 008E              __tdiv_to_l_@quot 0097              ___lldiv@dividend 008E  
          __end_of_setupPorts 5626          __end_ofi2_lcd_gotoxy 5268          ?_read_adc_raw_no_lib 0001  
               _lcd_send_byte 4FAC                  ?__tdiv_to_l_ 008E                      sprintf@c 01B6  
                    sprintf@f 00CF              ___lldiv@quotient 0096                      strcpy@cp 0092  
                    strcpy@to 008E               i2delay_cycles@n 0004               i2delay_cycles@x 0005  
    __size_ofi2_lcd_send_byte 0048             timer0_isr@channe0 0073             timer0_isr@channe2 0072  
           i2__div_to_l_@exp1 000C             i2__div_to_l_@cntr 000B             i2__div_to_l_@quot 0007  
            ??_read_adc_temp2 002B         ??_read_adc_raw_no_lib 0003  
