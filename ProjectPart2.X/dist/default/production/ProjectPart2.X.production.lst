

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat May 07 00:54:15 2022

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           	psect	idataCOMRAM
    38  001E7A                     __pidataCOMRAM:
    39                           	opt stack 0
    40                           
    41                           ;initializer for _LCD_INIT_STRING
    42  001E7A  28                 	db	40
    43  001E7B  0C                 	db	12
    44  001E7C  01                 	db	1
    45  001E7D  06                 	db	6
    46  0000                     _BAUDCONbits	set	4024
    47  0000                     _INTCON2	set	4081
    48  0000                     _LATA	set	3977
    49  0000                     _LATB	set	3978
    50  0000                     _LATC	set	3979
    51  0000                     _LATD	set	3980
    52  0000                     _LATE	set	3981
    53  0000                     _PIR1bits	set	3998
    54  0000                     _PORTBbits	set	3969
    55  0000                     _PORTCbits	set	3970
    56  0000                     _RCREG	set	4014
    57  0000                     _RCSTA	set	4011
    58  0000                     _RCSTAbits	set	4011
    59  0000                     _SPBRG	set	4015
    60  0000                     _SPBRGH	set	4016
    61  0000                     _TRISA	set	3986
    62  0000                     _TRISB	set	3987
    63  0000                     _TRISC	set	3988
    64  0000                     _TRISD	set	3989
    65  0000                     _TRISE	set	3990
    66  0000                     _TXREG	set	4013
    67  0000                     _TXSTA	set	4012
    68  0000                     _TXSTAbits	set	4012
    69  0000                     
    70                           	psect	smallconst
    71  001000                     __psmallconst:
    72                           	opt stack 0
    73  001000  00                 	db	0
    74  001001                     STR_1:
    75  001001  20                 	db	32
    76  001002  41                 	db	65	;'A'
    77  001003  68                 	db	104	;'h'
    78  001004  6D                 	db	109	;'m'
    79  001005  61                 	db	97	;'a'
    80  001006  64                 	db	100	;'d'
    81  001007  20                 	db	32
    82  001008  2D                 	db	45
    83  001009  2D                 	db	45
    84  00100A  20                 	db	32
    85  00100B  59                 	db	89	;'Y'
    86  00100C  61                 	db	97	;'a'
    87  00100D  68                 	db	104	;'h'
    88  00100E  69                 	db	105	;'i'
    89  00100F  61                 	db	97	;'a'
    90  001010  20                 	db	32
    91  001011  00                 	db	0
    92  001012                     STR_5:
    93  001012  20                 	db	32
    94  001013  20                 	db	32
    95  001014  2A                 	db	42
    96  001015  2A                 	db	42
    97  001016  2A                 	db	42
    98  001017  52                 	db	82	;'R'
    99  001018  45                 	db	69	;'E'
   100  001019  53                 	db	83	;'S'
   101  00101A  55                 	db	85	;'U'
   102  00101B  4C                 	db	76	;'L'
   103  00101C  54                 	db	84	;'T'
   104  00101D  2A                 	db	42
   105  00101E  2A                 	db	42
   106  00101F  2A                 	db	42
   107  001020  20                 	db	32
   108  001021  00                 	db	0
   109  001022                     STR_2:
   110  001022  45                 	db	69	;'E'
   111  001023  4E                 	db	78	;'N'
   112  001024  54                 	db	84	;'T'
   113  001025  45                 	db	69	;'E'
   114  001026  52                 	db	82	;'R'
   115  001027  20                 	db	32
   116  001028  4E                 	db	78	;'N'
   117  001029  55                 	db	85	;'U'
   118  00102A  4D                 	db	77	;'M'
   119  00102B  20                 	db	32
   120  00102C  31                 	db	49	;'1'
   121  00102D  20                 	db	32
   122  00102E  3D                 	db	61	;'='
   123  00102F  20                 	db	32
   124  001030  00                 	db	0
   125  001031                     STR_3:
   126  001031  45                 	db	69	;'E'
   127  001032  4E                 	db	78	;'N'
   128  001033  54                 	db	84	;'T'
   129  001034  45                 	db	69	;'E'
   130  001035  52                 	db	82	;'R'
   131  001036  20                 	db	32
   132  001037  4E                 	db	78	;'N'
   133  001038  55                 	db	85	;'U'
   134  001039  4D                 	db	77	;'M'
   135  00103A  20                 	db	32
   136  00103B  32                 	db	50	;'2'
   137  00103C  20                 	db	32
   138  00103D  3D                 	db	61	;'='
   139  00103E  20                 	db	32
   140  00103F  00                 	db	0
   141  001040                     STR_6:
   142  001040  25                 	db	37
   143  001041  63                 	db	99	;'c'
   144  001042  20                 	db	32
   145  001043  25                 	db	37
   146  001044  63                 	db	99	;'c'
   147  001045  20                 	db	32
   148  001046  25                 	db	37
   149  001047  63                 	db	99	;'c'
   150  001048  20                 	db	32
   151  001049  20                 	db	32
   152  00104A  3D                 	db	61	;'='
   153  00104B  20                 	db	32
   154  00104C  00                 	db	0
   155  00104D                     STR_4:
   156  00104D  45                 	db	69	;'E'
   157  00104E  4E                 	db	78	;'N'
   158  00104F  54                 	db	84	;'T'
   159  001050  45                 	db	69	;'E'
   160  001051  52                 	db	82	;'R'
   161  001052  20                 	db	32
   162  001053  4F                 	db	79	;'O'
   163  001054  50                 	db	80	;'P'
   164  001055  20                 	db	32
   165  001056  3D                 	db	61	;'='
   166  001057  20                 	db	32
   167  001058  00                 	db	0
   168                           
   169                           ; #config settings
   170  001059  00                 	db	0	; dummy byte at the end
   171  0000                     
   172                           	psect	cinit
   173  001D44                     __pcinit:
   174                           	opt stack 0
   175  001D44                     start_initialization:
   176                           	opt stack 0
   177  001D44                     __initialization:
   178                           	opt stack 0
   179                           
   180                           ; Clear objects allocated to COMRAM (25 bytes)
   181  001D44  EE00  F037         	lfsr	0,__pbssCOMRAM
   182  001D48  0E19               	movlw	25
   183  001D4A                     clear_0:
   184  001D4A  6AEE               	clrf	postinc0,c
   185  001D4C  06E8               	decf	wreg,f,c
   186  001D4E  E1FD               	bnz	clear_0
   187                           
   188                           ; Initialize objects allocated to COMRAM (4 bytes)
   189                           ; load TBLPTR registers with __pidataCOMRAM
   190  001D50  0E7A               	movlw	low __pidataCOMRAM
   191  001D52  6EF6               	movwf	tblptrl,c
   192  001D54  0E1E               	movlw	high __pidataCOMRAM
   193  001D56  6EF7               	movwf	tblptrh,c
   194  001D58  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   195  001D5A  6EF8               	movwf	tblptru,c
   196  001D5C  EE00  F050         	lfsr	0,__pdataCOMRAM
   197  001D60  EE10 F004          	lfsr	1,4
   198  001D64                     copy_data0:
   199  001D64  0009               	tblrd		*+
   200  001D66  CFF5 FFEE          	movff	tablat,postinc0
   201  001D6A  50E5               	movf	postdec1,w,c
   202  001D6C  50E1               	movf	fsr1l,w,c
   203  001D6E  E1FA               	bnz	copy_data0
   204  001D70                     end_of_initialization:
   205                           	opt stack 0
   206  001D70                     __end_of__initialization:
   207                           	opt stack 0
   208  001D70  0E00               	movlw	low (__Lmediumconst shr (0+16))
   209  001D72  6EF8               	movwf	tblptru,c
   210  001D74  0100               	movlb	0
   211  001D76  EF2D  F008         	goto	_main	;jump to C main() function
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           tblptrl	equ	0xFF6
   215                           tablat	equ	0xFF5
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           postdec1	equ	0xFE5
   219                           fsr1l	equ	0xFE1
   220                           
   221                           	psect	bssCOMRAM
   222  000037                     __pbssCOMRAM:
   223                           	opt stack 0
   224  000037                     _k1:
   225                           	opt stack 0
   226  000037                     	ds	2
   227  000039                     _k2:
   228                           	opt stack 0
   229  000039                     	ds	2
   230  00003B                     _position:
   231                           	opt stack 0
   232  00003B                     	ds	2
   233  00003D                     _ke:
   234                           	opt stack 0
   235  00003D                     	ds	1
   236  00003E                     _key:
   237                           	opt stack 0
   238  00003E                     	ds	1
   239  00003F                     _key1:
   240                           	opt stack 0
   241  00003F                     	ds	1
   242  000040                     _Buffer1:
   243                           	opt stack 0
   244  000040                     	ds	16
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           postdec1	equ	0xFE5
   252                           fsr1l	equ	0xFE1
   253                           
   254                           	psect	dataCOMRAM
   255  000050                     __pdataCOMRAM:
   256                           	opt stack 0
   257  000050                     _LCD_INIT_STRING:
   258                           	opt stack 0
   259  000050                     	ds	4
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	cstackCOMRAM
   270  000001                     __pcstackCOMRAM:
   271                           	opt stack 0
   272  000001                     ??_delay_cycles:
   273  000001                     ?_sprintf:
   274                           	opt stack 0
   275  000001                     ?_get_num:
   276                           	opt stack 0
   277  000001                     ?___wmul:
   278                           	opt stack 0
   279  000001                     ?___awdiv:
   280                           	opt stack 0
   281  000001                     ?___awmod:
   282                           	opt stack 0
   283  000001                     ?___ftpack:
   284                           	opt stack 0
   285  000001                     delay_ms@n:
   286                           	opt stack 0
   287  000001                     sprintf@sp:
   288                           	opt stack 0
   289  000001                     ___wmul@multiplier:
   290                           	opt stack 0
   291  000001                     ___awdiv@dividend:
   292                           	opt stack 0
   293  000001                     ___awmod@dividend:
   294                           	opt stack 0
   295  000001                     ___ftpack@arg:
   296                           	opt stack 0
   297                           
   298                           ; 3 bytes @ 0x0
   299  000001                     	ds	2
   300  000003                     get_num@ch:
   301                           	opt stack 0
   302  000003                     delay_ms@x:
   303                           	opt stack 0
   304  000003                     sprintf@f:
   305                           	opt stack 0
   306  000003                     ___wmul@multiplicand:
   307                           	opt stack 0
   308  000003                     ___awdiv@divisor:
   309                           	opt stack 0
   310  000003                     ___awmod@divisor:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x2
   314  000003                     	ds	1
   315  000004                     ___ftpack@exp:
   316                           	opt stack 0
   317  000004                     delay_cycles@x:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x3
   321  000004                     	ds	1
   322  000005                     GetKey@S:
   323                           	opt stack 0
   324  000005                     ___awdiv@counter:
   325                           	opt stack 0
   326  000005                     ___awmod@counter:
   327                           	opt stack 0
   328  000005                     ___ftpack@sign:
   329                           	opt stack 0
   330  000005                     ___wmul@product:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x4
   334  000005                     	ds	1
   335  000006                     ??___ftpack:
   336  000006                     delay_cycles@n:
   337                           	opt stack 0
   338  000006                     ___awdiv@sign:
   339                           	opt stack 0
   340  000006                     ___awmod@sign:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x5
   344  000006                     	ds	1
   345  000007                     ??_lcd_send_nibble:
   346  000007                     ___awdiv@quotient:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x6
   350  000007                     	ds	1
   351  000008                     lcd_send_nibble@n:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x7
   355  000008                     	ds	1
   356  000009                     ?___ftmul:
   357                           	opt stack 0
   358  000009                     ?___awtoft:
   359                           	opt stack 0
   360  000009                     lcd_send_byte@n:
   361                           	opt stack 0
   362  000009                     ___awtoft@c:
   363                           	opt stack 0
   364  000009                     ___ftmul@f1:
   365                           	opt stack 0
   366                           
   367                           ; 3 bytes @ 0x8
   368  000009                     	ds	1
   369  00000A                     lcd_send_byte@cm_data:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x9
   373  00000A                     	ds	1
   374  00000B                     lcd_init@i:
   375                           	opt stack 0
   376  00000B                     lcd_gotoxy@y:
   377                           	opt stack 0
   378  00000B                     sprintf@flag:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0xA
   382  00000B                     	ds	1
   383  00000C                     lcd_gotoxy@x:
   384                           	opt stack 0
   385  00000C                     ___awtoft@sign:
   386                           	opt stack 0
   387  00000C                     sprintf@ap:
   388                           	opt stack 0
   389  00000C                     ___ftmul@f2:
   390                           	opt stack 0
   391                           
   392                           ; 3 bytes @ 0xB
   393  00000C                     	ds	1
   394  00000D                     ?___ftdiv:
   395                           	opt stack 0
   396  00000D                     lcd_gotoxy@address:
   397                           	opt stack 0
   398  00000D                     ___ftdiv@f1:
   399                           	opt stack 0
   400                           
   401                           ; 3 bytes @ 0xC
   402  00000D                     	ds	1
   403  00000E                     lcd_putc@c:
   404                           	opt stack 0
   405  00000E                     sprintf@c:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0xD
   409  00000E                     	ds	1
   410  00000F                     ??___ftmul:
   411  00000F                     lcd_puts@s:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0xE
   415  00000F                     	ds	1
   416  000010                     ___ftdiv@f2:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0xF
   420  000010                     	ds	1
   421  000011                     
   422                           ; 1 bytes @ 0x10
   423  000011                     	ds	1
   424  000012                     ___ftmul@exp:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x11
   428  000012                     	ds	1
   429  000013                     ??___ftdiv:
   430  000013                     ___ftmul@f3_as_product:
   431                           	opt stack 0
   432                           
   433                           ; 3 bytes @ 0x12
   434  000013                     	ds	3
   435  000016                     ___ftdiv@cntr:
   436                           	opt stack 0
   437  000016                     ___ftmul@cntr:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x15
   441  000016                     	ds	1
   442  000017                     ___ftmul@sign:
   443                           	opt stack 0
   444  000017                     ___ftdiv@f3:
   445                           	opt stack 0
   446                           
   447                           ; 3 bytes @ 0x16
   448  000017                     	ds	1
   449  000018                     ?___fttol:
   450                           	opt stack 0
   451  000018                     ___fttol@f1:
   452                           	opt stack 0
   453                           
   454                           ; 3 bytes @ 0x17
   455  000018                     	ds	2
   456  00001A                     ___ftdiv@exp:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x19
   460  00001A                     	ds	1
   461  00001B                     ___ftdiv@sign:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x1A
   465  00001B                     	ds	1
   466  00001C                     ??___fttol:
   467                           
   468                           ; 1 bytes @ 0x1B
   469  00001C                     	ds	5
   470  000021                     ___fttol@sign1:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x20
   474  000021                     	ds	1
   475  000022                     ___fttol@lval:
   476                           	opt stack 0
   477                           
   478                           ; 4 bytes @ 0x21
   479  000022                     	ds	4
   480  000026                     ___fttol@exp1:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x25
   484  000026                     	ds	1
   485  000027                     disp_num@num:
   486                           	opt stack 0
   487                           
   488                           ; 3 bytes @ 0x26
   489  000027                     	ds	3
   490  00002A                     disp_num@j:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x29
   494  00002A                     	ds	2
   495  00002C                     disp_num@UnitDigit:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x2B
   499  00002C                     	ds	1
   500  00002D                     disp_num@decimal:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x2C
   504  00002D                     	ds	1
   505  00002E                     disp_num@TenthDigit:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x2D
   509  00002E                     	ds	1
   510  00002F                     disp_num@numb:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x2E
   514  00002F                     	ds	2
   515  000031                     ??_main:
   516                           
   517                           ; 1 bytes @ 0x30
   518  000031                     	ds	2
   519  000033                     main@i:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x32
   523  000033                     	ds	2
   524  000035                     main@i_539:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x34
   528  000035                     	ds	2
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           postdec1	equ	0xFE5
   536                           fsr1l	equ	0xFE1
   537                           
   538 ;;
   539 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   540 ;;
   541 ;; *************** function _main *****************
   542 ;; Defined at:
   543 ;;		line 80 in file "Main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  i               2   52[COMRAM] int 
   548 ;;  i               2   50[COMRAM] int 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;Total ram usage:        6 bytes
   563 ;; Hardware stack levels required when called:    6
   564 ;; This function calls:
   565 ;;		_GetKey
   566 ;;		___awtoft
   567 ;;		___ftdiv
   568 ;;		___wmul
   569 ;;		_delay_ms
   570 ;;		_disp_num
   571 ;;		_get_num
   572 ;;		_lcd_gotoxy
   573 ;;		_lcd_init
   574 ;;		_lcd_putc
   575 ;;		_lcd_puts
   576 ;;		_setupPorts
   577 ;;		_sprintf
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  00105A                     __ptext0:
   585                           	opt stack 0
   586  00105A                     _main:
   587                           	opt stack 25
   588                           
   589                           ;Main.c: 81: setupPorts();
   590                           
   591                           ;incstack = 0
   592  00105A  ECD4  F00E         	call	_setupPorts	;wreg free
   593                           
   594                           ;Main.c: 82: lcd_init();
   595  00105E  ECE5  F00D         	call	_lcd_init	;wreg free
   596                           
   597                           ;Main.c: 84: sprintf(Buffer1, " Ahmad -- Yahia ");
   598  001062  0E40               	movlw	low _Buffer1
   599  001064  6E01               	movwf	sprintf@sp,c
   600  001066  0E00               	movlw	high _Buffer1
   601  001068  6E02               	movwf	sprintf@sp+1,c
   602  00106A  0E01               	movlw	low STR_1
   603  00106C  6E03               	movwf	sprintf@f,c
   604  00106E  0E10               	movlw	high STR_1
   605  001070  6E04               	movwf	sprintf@f+1,c
   606  001072  EC26  F00D         	call	_sprintf	;wreg free
   607                           
   608                           ;Main.c: 85: lcd_gotoxy(1, 1);
   609  001076  0E01               	movlw	1
   610  001078  6E0B               	movwf	lcd_gotoxy@y,c
   611  00107A  0E01               	movlw	1
   612  00107C  EC65  F00E         	call	_lcd_gotoxy
   613                           
   614                           ;Main.c: 86: lcd_puts(Buffer1);
   615  001080  0E40               	movlw	low _Buffer1
   616  001082  6E0F               	movwf	lcd_puts@s,c
   617  001084  0E00               	movlw	high _Buffer1
   618  001086  6E10               	movwf	lcd_puts@s+1,c
   619  001088  ECFD  F00E         	call	_lcd_puts	;wreg free
   620                           
   621                           ;Main.c: 87: for (int i=0;i<5;i++)
   622  00108C  0E00               	movlw	0
   623  00108E  6E34               	movwf	main@i+1,c
   624  001090  0E00               	movlw	0
   625  001092  6E33               	movwf	main@i,c
   626  001094                     l2524:
   627  001094  BE34               	btfsc	main@i+1,7,c
   628  001096  D006               	goto	l2528
   629  001098  5034               	movf	main@i+1,w,c
   630  00109A  E10D               	bnz	l2534
   631  00109C  0E05               	movlw	5
   632  00109E  5C33               	subwf	main@i,w,c
   633  0010A0  B0D8               	btfsc	status,0,c
   634  0010A2  D009               	goto	l2534
   635  0010A4                     l2528:
   636                           
   637                           ;Main.c: 88: delay_ms(1000);
   638  0010A4  0E03               	movlw	3
   639  0010A6  6E02               	movwf	delay_ms@n+1,c
   640  0010A8  0EE8               	movlw	232
   641  0010AA  6E01               	movwf	delay_ms@n,c
   642  0010AC  EC0F  F00F         	call	_delay_ms	;wreg free
   643  0010B0  4A33               	infsnz	main@i,f,c
   644  0010B2  2A34               	incf	main@i+1,f,c
   645  0010B4  D7EF               	goto	l2524
   646  0010B6                     l2534:
   647                           
   648                           ;Main.c: 89: lcd_putc('\f');
   649  0010B6  0E0C               	movlw	12
   650  0010B8  EC16  F00E         	call	_lcd_putc
   651  0010BC                     l174:
   652  0010BC  0004               	clrwdt		;# 
   653                           
   654                           ;Main.c: 93: delay_ms(200);
   655  0010BE  0E00               	movlw	0
   656  0010C0  6E02               	movwf	delay_ms@n+1,c
   657  0010C2  0EC8               	movlw	200
   658  0010C4  6E01               	movwf	delay_ms@n,c
   659  0010C6  EC0F  F00F         	call	_delay_ms	;wreg free
   660                           
   661                           ;Main.c: 95: sprintf(Buffer1, "ENTER NUM 1 = ");
   662  0010CA  0E40               	movlw	low _Buffer1
   663  0010CC  6E01               	movwf	sprintf@sp,c
   664  0010CE  0E00               	movlw	high _Buffer1
   665  0010D0  6E02               	movwf	sprintf@sp+1,c
   666  0010D2  0E22               	movlw	low STR_2
   667  0010D4  6E03               	movwf	sprintf@f,c
   668  0010D6  0E10               	movlw	high STR_2
   669  0010D8  6E04               	movwf	sprintf@f+1,c
   670  0010DA  EC26  F00D         	call	_sprintf	;wreg free
   671                           
   672                           ;Main.c: 96: lcd_gotoxy(1, 1);
   673  0010DE  0E01               	movlw	1
   674  0010E0  6E0B               	movwf	lcd_gotoxy@y,c
   675  0010E2  0E01               	movlw	1
   676  0010E4  EC65  F00E         	call	_lcd_gotoxy
   677                           
   678                           ;Main.c: 97: lcd_puts(Buffer1);
   679  0010E8  0E40               	movlw	low _Buffer1
   680  0010EA  6E0F               	movwf	lcd_puts@s,c
   681  0010EC  0E00               	movlw	high _Buffer1
   682  0010EE  6E10               	movwf	lcd_puts@s+1,c
   683  0010F0  ECFD  F00E         	call	_lcd_puts	;wreg free
   684                           
   685                           ;Main.c: 98: position=15;
   686  0010F4  0E00               	movlw	0
   687  0010F6  6E3C               	movwf	_position+1,c
   688  0010F8  0E0F               	movlw	15
   689  0010FA  6E3B               	movwf	_position,c
   690                           
   691                           ;Main.c: 101: ke=GetKey();
   692  0010FC  EC32  F00F         	call	_GetKey	;wreg free
   693  001100  6E3D               	movwf	_ke,c
   694                           
   695                           ;Main.c: 102: k2 = get_num(ke);
   696  001102  503D               	movf	_ke,w,c
   697  001104  ECD7  F00C         	call	_get_num
   698  001108  C001  F039         	movff	?_get_num,_k2
   699  00110C  C002  F03A         	movff	?_get_num+1,_k2+1
   700                           
   701                           ;Main.c: 103: lcd_gotoxy(position, 1);
   702  001110  0E01               	movlw	1
   703  001112  6E0B               	movwf	lcd_gotoxy@y,c
   704  001114  503B               	movf	_position,w,c
   705  001116  EC65  F00E         	call	_lcd_gotoxy
   706                           
   707                           ;Main.c: 104: lcd_putc(ke);
   708  00111A  503D               	movf	_ke,w,c
   709  00111C  EC16  F00E         	call	_lcd_putc
   710                           
   711                           ;Main.c: 106: delay_ms(1000);
   712  001120  0E03               	movlw	3
   713  001122  6E02               	movwf	delay_ms@n+1,c
   714  001124  0EE8               	movlw	232
   715  001126  6E01               	movwf	delay_ms@n,c
   716  001128  EC0F  F00F         	call	_delay_ms	;wreg free
   717                           
   718                           ;Main.c: 107: lcd_putc('\f');
   719  00112C  0E0C               	movlw	12
   720  00112E  EC16  F00E         	call	_lcd_putc
   721                           
   722                           ;Main.c: 109: sprintf(Buffer1, "ENTER NUM 2 = " );
   723  001132  0E40               	movlw	low _Buffer1
   724  001134  6E01               	movwf	sprintf@sp,c
   725  001136  0E00               	movlw	high _Buffer1
   726  001138  6E02               	movwf	sprintf@sp+1,c
   727  00113A  0E31               	movlw	low STR_3
   728  00113C  6E03               	movwf	sprintf@f,c
   729  00113E  0E10               	movlw	high STR_3
   730  001140  6E04               	movwf	sprintf@f+1,c
   731  001142  EC26  F00D         	call	_sprintf	;wreg free
   732                           
   733                           ;Main.c: 110: lcd_gotoxy(1, 1);
   734  001146  0E01               	movlw	1
   735  001148  6E0B               	movwf	lcd_gotoxy@y,c
   736  00114A  0E01               	movlw	1
   737  00114C  EC65  F00E         	call	_lcd_gotoxy
   738                           
   739                           ;Main.c: 111: lcd_puts(Buffer1);
   740  001150  0E40               	movlw	low _Buffer1
   741  001152  6E0F               	movwf	lcd_puts@s,c
   742  001154  0E00               	movlw	high _Buffer1
   743  001156  6E10               	movwf	lcd_puts@s+1,c
   744  001158  ECFD  F00E         	call	_lcd_puts	;wreg free
   745                           
   746                           ;Main.c: 112: position=15;
   747  00115C  0E00               	movlw	0
   748  00115E  6E3C               	movwf	_position+1,c
   749  001160  0E0F               	movlw	15
   750  001162  6E3B               	movwf	_position,c
   751                           
   752                           ;Main.c: 117: key1=GetKey();
   753  001164  EC32  F00F         	call	_GetKey	;wreg free
   754  001168  6E3F               	movwf	_key1,c
   755                           
   756                           ;Main.c: 118: k1 = get_num(key1);
   757  00116A  503F               	movf	_key1,w,c
   758  00116C  ECD7  F00C         	call	_get_num
   759  001170  C001  F037         	movff	?_get_num,_k1
   760  001174  C002  F038         	movff	?_get_num+1,_k1+1
   761                           
   762                           ;Main.c: 120: lcd_gotoxy(position, 1);
   763  001178  0E01               	movlw	1
   764  00117A  6E0B               	movwf	lcd_gotoxy@y,c
   765  00117C  503B               	movf	_position,w,c
   766  00117E  EC65  F00E         	call	_lcd_gotoxy
   767                           
   768                           ;Main.c: 121: lcd_putc(key1);
   769  001182  503F               	movf	_key1,w,c
   770  001184  EC16  F00E         	call	_lcd_putc
   771                           
   772                           ;Main.c: 123: delay_ms(1000);
   773  001188  0E03               	movlw	3
   774  00118A  6E02               	movwf	delay_ms@n+1,c
   775  00118C  0EE8               	movlw	232
   776  00118E  6E01               	movwf	delay_ms@n,c
   777  001190  EC0F  F00F         	call	_delay_ms	;wreg free
   778                           
   779                           ;Main.c: 124: lcd_putc('\f');
   780  001194  0E0C               	movlw	12
   781  001196  EC16  F00E         	call	_lcd_putc
   782                           
   783                           ;Main.c: 126: sprintf(Buffer1, "ENTER OP = " );
   784  00119A  0E40               	movlw	low _Buffer1
   785  00119C  6E01               	movwf	sprintf@sp,c
   786  00119E  0E00               	movlw	high _Buffer1
   787  0011A0  6E02               	movwf	sprintf@sp+1,c
   788  0011A2  0E4D               	movlw	low STR_4
   789  0011A4  6E03               	movwf	sprintf@f,c
   790  0011A6  0E10               	movlw	high STR_4
   791  0011A8  6E04               	movwf	sprintf@f+1,c
   792  0011AA  EC26  F00D         	call	_sprintf	;wreg free
   793                           
   794                           ;Main.c: 127: lcd_gotoxy(1, 1);
   795  0011AE  0E01               	movlw	1
   796  0011B0  6E0B               	movwf	lcd_gotoxy@y,c
   797  0011B2  0E01               	movlw	1
   798  0011B4  EC65  F00E         	call	_lcd_gotoxy
   799                           
   800                           ;Main.c: 128: lcd_puts(Buffer1);
   801  0011B8  0E40               	movlw	low _Buffer1
   802  0011BA  6E0F               	movwf	lcd_puts@s,c
   803  0011BC  0E00               	movlw	high _Buffer1
   804  0011BE  6E10               	movwf	lcd_puts@s+1,c
   805  0011C0  ECFD  F00E         	call	_lcd_puts	;wreg free
   806                           
   807                           ;Main.c: 129: position=11;
   808  0011C4  0E00               	movlw	0
   809  0011C6  6E3C               	movwf	_position+1,c
   810  0011C8  0E0B               	movlw	11
   811  0011CA  6E3B               	movwf	_position,c
   812                           
   813                           ;Main.c: 131: key=GetKey();
   814  0011CC  EC32  F00F         	call	_GetKey	;wreg free
   815  0011D0  6E3E               	movwf	_key,c
   816                           
   817                           ;Main.c: 132: lcd_gotoxy(position, 1);
   818  0011D2  0E01               	movlw	1
   819  0011D4  6E0B               	movwf	lcd_gotoxy@y,c
   820  0011D6  503B               	movf	_position,w,c
   821  0011D8  EC65  F00E         	call	_lcd_gotoxy
   822                           
   823                           ;Main.c: 133: lcd_putc(key);
   824  0011DC  503E               	movf	_key,w,c
   825  0011DE  EC16  F00E         	call	_lcd_putc
   826                           
   827                           ;Main.c: 135: delay_ms(1000);
   828  0011E2  0E03               	movlw	3
   829  0011E4  6E02               	movwf	delay_ms@n+1,c
   830  0011E6  0EE8               	movlw	232
   831  0011E8  6E01               	movwf	delay_ms@n,c
   832  0011EA  EC0F  F00F         	call	_delay_ms	;wreg free
   833                           
   834                           ;Main.c: 136: lcd_putc('\f');
   835  0011EE  0E0C               	movlw	12
   836  0011F0  EC16  F00E         	call	_lcd_putc
   837                           
   838                           ;Main.c: 138: sprintf(Buffer1, "  ***RESULT*** " );
   839  0011F4  0E40               	movlw	low _Buffer1
   840  0011F6  6E01               	movwf	sprintf@sp,c
   841  0011F8  0E00               	movlw	high _Buffer1
   842  0011FA  6E02               	movwf	sprintf@sp+1,c
   843  0011FC  0E12               	movlw	low STR_5
   844  0011FE  6E03               	movwf	sprintf@f,c
   845  001200  0E10               	movlw	high STR_5
   846  001202  6E04               	movwf	sprintf@f+1,c
   847  001204  EC26  F00D         	call	_sprintf	;wreg free
   848                           
   849                           ;Main.c: 139: lcd_gotoxy(1, 1);
   850  001208  0E01               	movlw	1
   851  00120A  6E0B               	movwf	lcd_gotoxy@y,c
   852  00120C  0E01               	movlw	1
   853  00120E  EC65  F00E         	call	_lcd_gotoxy
   854                           
   855                           ;Main.c: 140: lcd_puts(Buffer1);
   856  001212  0E40               	movlw	low _Buffer1
   857  001214  6E0F               	movwf	lcd_puts@s,c
   858  001216  0E00               	movlw	high _Buffer1
   859  001218  6E10               	movwf	lcd_puts@s+1,c
   860  00121A  ECFD  F00E         	call	_lcd_puts	;wreg free
   861                           
   862                           ;Main.c: 142: sprintf(Buffer1,"%c %c %c  = ",ke,key,key1);
   863  00121E  0E40               	movlw	low _Buffer1
   864  001220  6E01               	movwf	sprintf@sp,c
   865  001222  0E00               	movlw	high _Buffer1
   866  001224  6E02               	movwf	sprintf@sp+1,c
   867  001226  0E40               	movlw	low STR_6
   868  001228  6E03               	movwf	sprintf@f,c
   869  00122A  0E10               	movlw	high STR_6
   870  00122C  6E04               	movwf	sprintf@f+1,c
   871  00122E  C03D  F005         	movff	_ke,?_sprintf+4
   872  001232  6A06               	clrf	?_sprintf+5,c
   873  001234  C03E  F007         	movff	_key,?_sprintf+6
   874  001238  6A08               	clrf	?_sprintf+7,c
   875  00123A  C03F  F009         	movff	_key1,?_sprintf+8
   876  00123E  6A0A               	clrf	?_sprintf+9,c
   877  001240  EC26  F00D         	call	_sprintf	;wreg free
   878                           
   879                           ;Main.c: 143: lcd_gotoxy(1, 2);
   880  001244  0E02               	movlw	2
   881  001246  6E0B               	movwf	lcd_gotoxy@y,c
   882  001248  0E01               	movlw	1
   883  00124A  EC65  F00E         	call	_lcd_gotoxy
   884                           
   885                           ;Main.c: 144: lcd_puts(Buffer1);
   886  00124E  0E40               	movlw	low _Buffer1
   887  001250  6E0F               	movwf	lcd_puts@s,c
   888  001252  0E00               	movlw	high _Buffer1
   889  001254  6E10               	movwf	lcd_puts@s+1,c
   890  001256  ECFD  F00E         	call	_lcd_puts	;wreg free
   891                           
   892                           ;Main.c: 146: position=11;
   893  00125A  0E00               	movlw	0
   894  00125C  6E3C               	movwf	_position+1,c
   895  00125E  0E0B               	movlw	11
   896  001260  6E3B               	movwf	_position,c
   897                           
   898                           ;Main.c: 149: switch (key) {
   899  001262  D066               	goto	l2606
   900  001264                     l2596:
   901                           
   902                           ;Main.c: 151: disp_num(k1 + k2);
   903  001264  5039               	movf	_k2,w,c
   904  001266  2437               	addwf	_k1,w,c
   905  001268  6E09               	movwf	___awtoft@c,c
   906  00126A  503A               	movf	_k2+1,w,c
   907  00126C  2038               	addwfc	_k1+1,w,c
   908  00126E  6E0A               	movwf	___awtoft@c+1,c
   909  001270  EC86  F00E         	call	___awtoft	;wreg free
   910  001274  C009  F027         	movff	?___awtoft,disp_num@num
   911  001278  C00A  F028         	movff	?___awtoft+1,disp_num@num+1
   912  00127C  C00B  F029         	movff	?___awtoft+2,disp_num@num+2
   913  001280  EC90  F00A         	call	_disp_num	;wreg free
   914                           
   915                           ;Main.c: 152: break;
   916  001284  D062               	goto	l2608
   917  001286                     l2598:
   918                           
   919                           ;Main.c: 154: disp_num(k2 - k1);
   920  001286  C037  F031         	movff	_k1,??_main
   921  00128A  C038  F032         	movff	_k1+1,??_main+1
   922  00128E  1E31               	comf	??_main,f,c
   923  001290  1E32               	comf	??_main+1,f,c
   924  001292  4A31               	infsnz	??_main,f,c
   925  001294  2A32               	incf	??_main+1,f,c
   926  001296  5039               	movf	_k2,w,c
   927  001298  2431               	addwf	??_main,w,c
   928  00129A  6E09               	movwf	___awtoft@c,c
   929  00129C  503A               	movf	_k2+1,w,c
   930  00129E  2032               	addwfc	??_main+1,w,c
   931  0012A0  6E0A               	movwf	___awtoft@c+1,c
   932  0012A2  EC86  F00E         	call	___awtoft	;wreg free
   933  0012A6  C009  F027         	movff	?___awtoft,disp_num@num
   934  0012AA  C00A  F028         	movff	?___awtoft+1,disp_num@num+1
   935  0012AE  C00B  F029         	movff	?___awtoft+2,disp_num@num+2
   936  0012B2  EC90  F00A         	call	_disp_num	;wreg free
   937                           
   938                           ;Main.c: 155: break;
   939  0012B6  D049               	goto	l2608
   940  0012B8                     l2600:
   941                           
   942                           ;Main.c: 157: disp_num(k2 * k1);
   943  0012B8  C039  F001         	movff	_k2,___wmul@multiplier
   944  0012BC  C03A  F002         	movff	_k2+1,___wmul@multiplier+1
   945  0012C0  C037  F003         	movff	_k1,___wmul@multiplicand
   946  0012C4  C038  F004         	movff	_k1+1,___wmul@multiplicand+1
   947  0012C8  ECEA  F00E         	call	___wmul	;wreg free
   948  0012CC  C001  F009         	movff	?___wmul,___awtoft@c
   949  0012D0  C002  F00A         	movff	?___wmul+1,___awtoft@c+1
   950  0012D4  EC86  F00E         	call	___awtoft	;wreg free
   951  0012D8  C009  F027         	movff	?___awtoft,disp_num@num
   952  0012DC  C00A  F028         	movff	?___awtoft+1,disp_num@num+1
   953  0012E0  C00B  F029         	movff	?___awtoft+2,disp_num@num+2
   954  0012E4  EC90  F00A         	call	_disp_num	;wreg free
   955                           
   956                           ;Main.c: 158: break;
   957  0012E8  D030               	goto	l2608
   958  0012EA                     l2602:
   959                           
   960                           ;Main.c: 160: disp_num((float) k2 / k1);
   961  0012EA  C039  F009         	movff	_k2,___awtoft@c
   962  0012EE  C03A  F00A         	movff	_k2+1,___awtoft@c+1
   963  0012F2  EC86  F00E         	call	___awtoft	;wreg free
   964  0012F6  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   965  0012FA  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   966  0012FE  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   967  001302  C037  F009         	movff	_k1,___awtoft@c
   968  001306  C038  F00A         	movff	_k1+1,___awtoft@c+1
   969  00130A  EC86  F00E         	call	___awtoft	;wreg free
   970  00130E  C009  F010         	movff	?___awtoft,___ftdiv@f2
   971  001312  C00A  F011         	movff	?___awtoft+1,___ftdiv@f2+1
   972  001316  C00B  F012         	movff	?___awtoft+2,___ftdiv@f2+2
   973  00131A  EC0D  F00C         	call	___ftdiv	;wreg free
   974  00131E  C00D  F027         	movff	?___ftdiv,disp_num@num
   975  001322  C00E  F028         	movff	?___ftdiv+1,disp_num@num+1
   976  001326  C00F  F029         	movff	?___ftdiv+2,disp_num@num+2
   977  00132A  EC90  F00A         	call	_disp_num	;wreg free
   978                           
   979                           ;Main.c: 162: }
   980                           
   981                           ;Main.c: 161: break;
   982  00132E  D00D               	goto	l2608
   983  001330                     l2606:
   984  001330  503E               	movf	_key,w,c
   985                           
   986                           ; Switch size 1, requested type "space"
   987                           ; Number of cases is 4, Range of values is 42 to 47
   988                           ; switch strategies available:
   989                           ; Name         Instructions Cycles
   990                           ; simple_byte           13     7 (average)
   991                           ;	Chosen strategy is simple_byte
   992  001332  0A2A               	xorlw	42	; case 42
   993  001334  B4D8               	btfsc	status,2,c
   994  001336  D7C0               	goto	l2600
   995  001338  0A01               	xorlw	1	; case 43
   996  00133A  B4D8               	btfsc	status,2,c
   997  00133C  D793               	goto	l2596
   998  00133E  0A06               	xorlw	6	; case 45
   999  001340  B4D8               	btfsc	status,2,c
  1000  001342  D7A1               	goto	l2598
  1001  001344  0A02               	xorlw	2	; case 47
  1002  001346  B4D8               	btfsc	status,2,c
  1003  001348  D7D0               	goto	l2602
  1004  00134A                     l2608:
  1005                           
  1006                           ;Main.c: 164: for (int i = 0 ; i< 10 ; i++ )
  1007  00134A  0E00               	movlw	0
  1008  00134C  6E36               	movwf	main@i_539+1,c
  1009  00134E  0E00               	movlw	0
  1010  001350  6E35               	movwf	main@i_539,c
  1011  001352                     l2610:
  1012  001352  BE36               	btfsc	main@i_539+1,7,c
  1013  001354  D006               	goto	l2614
  1014  001356  5036               	movf	main@i_539+1,w,c
  1015  001358  E10D               	bnz	l2620
  1016  00135A  0E0A               	movlw	10
  1017  00135C  5C35               	subwf	main@i_539,w,c
  1018  00135E  B0D8               	btfsc	status,0,c
  1019  001360  D009               	goto	l2620
  1020  001362                     l2614:
  1021                           
  1022                           ;Main.c: 165: delay_ms(1000);
  1023  001362  0E03               	movlw	3
  1024  001364  6E02               	movwf	delay_ms@n+1,c
  1025  001366  0EE8               	movlw	232
  1026  001368  6E01               	movwf	delay_ms@n,c
  1027  00136A  EC0F  F00F         	call	_delay_ms	;wreg free
  1028  00136E  4A35               	infsnz	main@i_539,f,c
  1029  001370  2A36               	incf	main@i_539+1,f,c
  1030  001372  D7EF               	goto	l2610
  1031  001374                     l2620:
  1032                           
  1033                           ;Main.c: 167: lcd_putc('\f');
  1034  001374  0E0C               	movlw	12
  1035  001376  EC16  F00E         	call	_lcd_putc
  1036  00137A  D6A0               	goto	l174
  1037  00137C                     __end_of_main:
  1038                           	opt stack 0
  1039                           tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           postdec1	equ	0xFE5
  1046                           fsr1l	equ	0xFE1
  1047                           status	equ	0xFD8
  1048                           
  1049 ;; *************** function _sprintf *****************
  1050 ;; Defined at:
  1051 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  sp              2    0[COMRAM] PTR unsigned char 
  1054 ;;		 -> Buffer1(16), 
  1055 ;;  f               2    2[COMRAM] PTR const unsigned char 
  1056 ;;		 -> STR_6(13), STR_5(16), STR_4(12), STR_3(15), 
  1057 ;;		 -> STR_2(15), STR_1(17), 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  tmpval          4    0        struct .
  1060 ;;  cp              3    0        PTR const unsigned char 
  1061 ;;  ap              2   11[COMRAM] PTR void [1]
  1062 ;;		 -> ?_sprintf(2), 
  1063 ;;  len             2    0        unsigned int 
  1064 ;;  val             2    0        unsigned int 
  1065 ;;  c               1   13[COMRAM] char 
  1066 ;;  flag            1   10[COMRAM] unsigned char 
  1067 ;;  prec            1    0        char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  2    0[COMRAM] int 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1077 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;Total ram usage:       14 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text1
  1091  001A4C                     __ptext1:
  1092                           	opt stack 0
  1093  001A4C                     _sprintf:
  1094                           	opt stack 30
  1095                           
  1096                           ;doprnt.c: 494: va_list ap;
  1097                           ;doprnt.c: 499: signed char c;
  1098                           ;doprnt.c: 506: signed char prec;
  1099                           ;doprnt.c: 508: unsigned char flag;
  1100                           ;doprnt.c: 523: union {
  1101                           ;doprnt.c: 524: unsigned long vd;
  1102                           ;doprnt.c: 525: double integ;
  1103                           ;doprnt.c: 526: } tmpval;
  1104                           ;doprnt.c: 528: unsigned int val;
  1105                           ;doprnt.c: 529: unsigned len;
  1106                           ;doprnt.c: 530: const char * cp;
  1107                           ;doprnt.c: 533: *ap = __va_start();
  1108                           
  1109                           ;incstack = 0
  1110  001A4C  0E05               	movlw	low (?_sprintf+4)
  1111  001A4E  6E0C               	movwf	sprintf@ap,c
  1112  001A50  0E00               	movlw	high (?_sprintf+4)
  1113  001A52  6E0D               	movwf	sprintf@ap+1,c
  1114                           
  1115                           ;doprnt.c: 536: while(c = *f++) {
  1116  001A54  D02D               	goto	l2314
  1117  001A56                     l2294:
  1118                           
  1119                           ;doprnt.c: 538: if(c != '%')
  1120  001A56  0E25               	movlw	37
  1121  001A58  180E               	xorwf	sprintf@c,w,c
  1122  001A5A  B4D8               	btfsc	status,2,c
  1123  001A5C  D004               	goto	l2300
  1124  001A5E  D010               	goto	l2306
  1125  001A60                     l2298:
  1126  001A60  4A01               	infsnz	sprintf@sp,f,c
  1127  001A62  2A02               	incf	sprintf@sp+1,f,c
  1128                           
  1129                           ;doprnt.c: 542: continue;
  1130  001A64  D025               	goto	l2314
  1131  001A66                     l2300:
  1132                           
  1133                           ;doprnt.c: 543: }
  1134                           ;doprnt.c: 548: flag = 0;
  1135  001A66  0E00               	movlw	0
  1136  001A68  6E0B               	movwf	sprintf@flag,c
  1137                           
  1138                           ;doprnt.c: 635: switch(c = *f++) {
  1139  001A6A  D011               	goto	l2312
  1140  001A6C                     l2302:
  1141                           
  1142                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  1143  001A6C  C00C  FFD9         	movff	sprintf@ap,fsr2l
  1144  001A70  C00D  FFDA         	movff	sprintf@ap+1,fsr2h
  1145  001A74  50DF               	movf	indf2,w,c
  1146  001A76  6E0E               	movwf	sprintf@c,c
  1147  001A78  0E02               	movlw	2
  1148  001A7A  260C               	addwf	sprintf@ap,f,c
  1149  001A7C  0E00               	movlw	0
  1150  001A7E  220D               	addwfc	sprintf@ap+1,f,c
  1151  001A80                     l2306:
  1152                           
  1153                           ;doprnt.c: 809: ((*sp++ = (c)));
  1154  001A80  C001  FFD9         	movff	sprintf@sp,fsr2l
  1155  001A84  C002  FFDA         	movff	sprintf@sp+1,fsr2h
  1156  001A88  C00E  FFDF         	movff	sprintf@c,indf2
  1157  001A8C  D7E9               	goto	l2298
  1158  001A8E                     l2312:
  1159  001A8E  C003  FFF6         	movff	sprintf@f,tblptrl
  1160  001A92  C004  FFF7         	movff	sprintf@f+1,tblptrh
  1161  001A96  4A03               	infsnz	sprintf@f,f,c
  1162  001A98  2A04               	incf	sprintf@f+1,f,c
  1163  001A9A                     	if	0	;tblptru may be non-zero
  1164  001A9A                     	endif
  1165  001A9A                     	if	0	;tblptru may be non-zero
  1166  001A9A                     	endif
  1167  001A9A  0008               	tblrd		*
  1168  001A9C  CFF5 F00E          	movff	tablat,sprintf@c
  1169  001AA0  500E               	movf	sprintf@c,w,c
  1170                           
  1171                           ; Switch size 1, requested type "space"
  1172                           ; Number of cases is 2, Range of values is 0 to 99
  1173                           ; switch strategies available:
  1174                           ; Name         Instructions Cycles
  1175                           ; simple_byte            7     4 (average)
  1176                           ;	Chosen strategy is simple_byte
  1177  001AA2  0A00               	xorlw	0	; case 0
  1178  001AA4  B4D8               	btfsc	status,2,c
  1179  001AA6  D010               	goto	l2316
  1180  001AA8  0A63               	xorlw	99	; case 99
  1181  001AAA  B4D8               	btfsc	status,2,c
  1182  001AAC  D7DF               	goto	l2302
  1183  001AAE  D7E8               	goto	l2306
  1184  001AB0                     l2314:
  1185  001AB0  C003  FFF6         	movff	sprintf@f,tblptrl
  1186  001AB4  C004  FFF7         	movff	sprintf@f+1,tblptrh
  1187  001AB8  4A03               	infsnz	sprintf@f,f,c
  1188  001ABA  2A04               	incf	sprintf@f+1,f,c
  1189  001ABC                     	if	0	;tblptru may be non-zero
  1190  001ABC                     	endif
  1191  001ABC                     	if	0	;tblptru may be non-zero
  1192  001ABC                     	endif
  1193  001ABC  0008               	tblrd		*
  1194  001ABE  CFF5 F00E          	movff	tablat,sprintf@c
  1195  001AC2  500E               	movf	sprintf@c,w,c
  1196  001AC4  A4D8               	btfss	status,2,c
  1197  001AC6  D7C7               	goto	l2294
  1198  001AC8                     l2316:
  1199                           
  1200                           ;doprnt.c: 1538: *sp = 0;
  1201  001AC8  C001  FFD9         	movff	sprintf@sp,fsr2l
  1202  001ACC  C002  FFDA         	movff	sprintf@sp+1,fsr2h
  1203  001AD0  0E00               	movlw	0
  1204  001AD2  6EDF               	movwf	indf2,c
  1205  001AD4  0012               	return	
  1206  001AD6                     __end_of_sprintf:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           tblptrh	equ	0xFF7
  1210                           tblptrl	equ	0xFF6
  1211                           tablat	equ	0xFF5
  1212                           postinc0	equ	0xFEE
  1213                           wreg	equ	0xFE8
  1214                           postdec1	equ	0xFE5
  1215                           fsr1l	equ	0xFE1
  1216                           indf2	equ	0xFDF
  1217                           fsr2h	equ	0xFDA
  1218                           fsr2l	equ	0xFD9
  1219                           status	equ	0xFD8
  1220                           
  1221 ;; *************** function _setupPorts *****************
  1222 ;; Defined at:
  1223 ;;		line 172 in file "Main.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text2
  1251  001DA8                     __ptext2:
  1252                           	opt stack 0
  1253  001DA8                     _setupPorts:
  1254                           	opt stack 30
  1255                           
  1256                           ;Main.c: 177: LATA = LATB = LATC = LATD = LATE =0;
  1257                           
  1258                           ;incstack = 0
  1259  001DA8  0E00               	movlw	0
  1260  001DAA  6E8D               	movwf	3981,c	;volatile
  1261  001DAC  CF8D FF8C          	movff	3981,3980	;volatile
  1262  001DB0  CF8C FF8B          	movff	3980,3979	;volatile
  1263  001DB4  CF8B FF8A          	movff	3979,3978	;volatile
  1264  001DB8  CF8A FF89          	movff	3978,3977	;volatile
  1265                           
  1266                           ;Main.c: 178: TRISA = 0xFF;
  1267  001DBC  6892               	setf	3986,c	;volatile
  1268                           
  1269                           ;Main.c: 179: TRISB = 0b11110000;
  1270  001DBE  0EF0               	movlw	240
  1271  001DC0  6E93               	movwf	3987,c	;volatile
  1272                           
  1273                           ;Main.c: 180: TRISC = 0b10000001;
  1274  001DC2  0E81               	movlw	129
  1275  001DC4  6E94               	movwf	3988,c	;volatile
  1276                           
  1277                           ;Main.c: 181: TRISD = 0x00;
  1278  001DC6  0E00               	movlw	0
  1279  001DC8  6E95               	movwf	3989,c	;volatile
  1280                           
  1281                           ;Main.c: 182: TRISE = 0x00;
  1282  001DCA  0E00               	movlw	0
  1283  001DCC  6E96               	movwf	3990,c	;volatile
  1284                           
  1285                           ;Main.c: 183: INTCON2 = 0;
  1286  001DCE  0E00               	movlw	0
  1287  001DD0  6EF1               	movwf	intcon2,c	;volatile
  1288  001DD2  0012               	return		;funcret
  1289  001DD4                     __end_of_setupPorts:
  1290                           	opt stack 0
  1291                           tblptru	equ	0xFF8
  1292                           tblptrh	equ	0xFF7
  1293                           tblptrl	equ	0xFF6
  1294                           tablat	equ	0xFF5
  1295                           intcon2	equ	0xFF1
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           postdec1	equ	0xFE5
  1299                           fsr1l	equ	0xFE1
  1300                           indf2	equ	0xFDF
  1301                           fsr2h	equ	0xFDA
  1302                           fsr2l	equ	0xFD9
  1303                           status	equ	0xFD8
  1304                           
  1305 ;; *************** function _lcd_puts *****************
  1306 ;; Defined at:
  1307 ;;		line 120 in file "lcd_x8.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  s               2   14[COMRAM] PTR unsigned char 
  1310 ;;		 -> Buffer1(16), 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;Total ram usage:        2 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    5
  1329 ;; This function calls:
  1330 ;;		_lcd_putc
  1331 ;; This function is called by:
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text3
  1337  001DFA                     __ptext3:
  1338                           	opt stack 0
  1339  001DFA                     _lcd_puts:
  1340                           	opt stack 25
  1341                           
  1342                           ;lcd_x8.c: 121: while (*s) {
  1343                           
  1344                           ;incstack = 0
  1345  001DFA  D009               	goto	l2290
  1346  001DFC                     l2286:
  1347                           
  1348                           ;lcd_x8.c: 122: lcd_putc(*s);
  1349  001DFC  C00F  FFD9         	movff	lcd_puts@s,fsr2l
  1350  001E00  C010  FFDA         	movff	lcd_puts@s+1,fsr2h
  1351  001E04  50DF               	movf	indf2,w,c
  1352  001E06  EC16  F00E         	call	_lcd_putc
  1353                           
  1354                           ;lcd_x8.c: 123: s++;
  1355  001E0A  4A0F               	infsnz	lcd_puts@s,f,c
  1356  001E0C  2A10               	incf	lcd_puts@s+1,f,c
  1357  001E0E                     l2290:
  1358  001E0E  C00F  FFD9         	movff	lcd_puts@s,fsr2l
  1359  001E12  C010  FFDA         	movff	lcd_puts@s+1,fsr2h
  1360  001E16  50DF               	movf	indf2,w,c
  1361  001E18  B4D8               	btfsc	status,2,c
  1362  001E1A  0012               	return	
  1363  001E1C  D7EF               	goto	l2286
  1364  001E1E                     __end_of_lcd_puts:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           intcon2	equ	0xFF1
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           postdec1	equ	0xFE5
  1374                           fsr1l	equ	0xFE1
  1375                           indf2	equ	0xFDF
  1376                           fsr2h	equ	0xFDA
  1377                           fsr2l	equ	0xFD9
  1378                           status	equ	0xFD8
  1379                           
  1380 ;; *************** function _lcd_init *****************
  1381 ;; Defined at:
  1382 ;;		line 56 in file "lcd_x8.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  i               1   10[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        1 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    3
  1403 ;; This function calls:
  1404 ;;		_delay_ms
  1405 ;;		_lcd_send_byte
  1406 ;;		_lcd_send_nibble
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text4
  1413  001BCA                     __ptext4:
  1414                           	opt stack 0
  1415  001BCA                     _lcd_init:
  1416                           	opt stack 27
  1417                           
  1418                           ;lcd_x8.c: 58: unsigned char i;
  1419                           ;lcd_x8.c: 61: lcd.rs = 0;;
  1420                           
  1421                           ;incstack = 0
  1422  001BCA  9283               	bcf	3971,1,c
  1423                           
  1424                           ;lcd_x8.c: 63: lcd.enable = 0;;
  1425  001BCC  9683               	bcf	3971,3,c
  1426                           
  1427                           ;lcd_x8.c: 65: delay_ms(25);
  1428  001BCE  0E00               	movlw	0
  1429  001BD0  6E02               	movwf	delay_ms@n+1,c
  1430  001BD2  0E19               	movlw	25
  1431  001BD4  6E01               	movwf	delay_ms@n,c
  1432  001BD6  EC0F  F00F         	call	_delay_ms	;wreg free
  1433                           
  1434                           ;lcd_x8.c: 66: for (i = 1; i <= 3; ++i) {
  1435  001BDA  0E01               	movlw	1
  1436  001BDC  6E0B               	movwf	lcd_init@i,c
  1437  001BDE                     l2260:
  1438  001BDE  0E03               	movlw	3
  1439  001BE0  640B               	cpfsgt	lcd_init@i,c
  1440  001BE2  D001               	goto	l2264
  1441  001BE4  D00B               	goto	l2270
  1442  001BE6                     l2264:
  1443                           
  1444                           ;lcd_x8.c: 67: lcd_send_nibble(3);
  1445  001BE6  0E03               	movlw	3
  1446  001BE8  EC21  F00F         	call	_lcd_send_nibble
  1447                           
  1448                           ;lcd_x8.c: 69: delay_ms(6);
  1449  001BEC  0E00               	movlw	0
  1450  001BEE  6E02               	movwf	delay_ms@n+1,c
  1451  001BF0  0E06               	movlw	6
  1452  001BF2  6E01               	movwf	delay_ms@n,c
  1453  001BF4  EC0F  F00F         	call	_delay_ms	;wreg free
  1454  001BF8  2A0B               	incf	lcd_init@i,f,c
  1455  001BFA  D7F1               	goto	l2260
  1456  001BFC                     l2270:
  1457                           
  1458                           ;lcd_x8.c: 70: }
  1459                           ;lcd_x8.c: 72: lcd_send_nibble(2);
  1460  001BFC  0E02               	movlw	2
  1461  001BFE  EC21  F00F         	call	_lcd_send_nibble
  1462                           
  1463                           ;lcd_x8.c: 74: for (i = 0; i <= 3; ++i)
  1464  001C02  0E00               	movlw	0
  1465  001C04  6E0B               	movwf	lcd_init@i,c
  1466  001C06                     l2274:
  1467  001C06  0E03               	movlw	3
  1468  001C08  640B               	cpfsgt	lcd_init@i,c
  1469  001C0A  D001               	goto	l2278
  1470  001C0C  0012               	return	
  1471  001C0E                     l2278:
  1472                           
  1473                           ;lcd_x8.c: 75: lcd_send_byte(0, LCD_INIT_STRING[i]);
  1474  001C0E  500B               	movf	lcd_init@i,w,c
  1475  001C10  0D01               	mullw	1
  1476  001C12  0E50               	movlw	low _LCD_INIT_STRING
  1477  001C14  24F3               	addwf	prodl,w,c
  1478  001C16  6ED9               	movwf	fsr2l,c
  1479  001C18  0E00               	movlw	high _LCD_INIT_STRING
  1480  001C1A  20F4               	addwfc	prodh,w,c
  1481  001C1C  6EDA               	movwf	fsr2h,c
  1482  001C1E  50DF               	movf	indf2,w,c
  1483  001C20  6E09               	movwf	lcd_send_byte@n,c
  1484  001C22  0E00               	movlw	0
  1485  001C24  EC41  F00E         	call	_lcd_send_byte
  1486  001C28  2A0B               	incf	lcd_init@i,f,c
  1487  001C2A  D7ED               	goto	l2274
  1488  001C2C                     __end_of_lcd_init:
  1489                           	opt stack 0
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           prodh	equ	0xFF4
  1495                           prodl	equ	0xFF3
  1496                           intcon2	equ	0xFF1
  1497                           postinc0	equ	0xFEE
  1498                           wreg	equ	0xFE8
  1499                           postdec1	equ	0xFE5
  1500                           fsr1l	equ	0xFE1
  1501                           indf2	equ	0xFDF
  1502                           fsr2h	equ	0xFDA
  1503                           fsr2l	equ	0xFD9
  1504                           status	equ	0xFD8
  1505                           
  1506 ;; *************** function _get_num *****************
  1507 ;; Defined at:
  1508 ;;		line 320 in file "Main.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  ch              1    wreg     unsigned char 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  ch              1    2[COMRAM] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  2    0[COMRAM] int 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;Total ram usage:        3 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text5
  1536  0019AE                     __ptext5:
  1537                           	opt stack 0
  1538  0019AE                     _get_num:
  1539                           	opt stack 30
  1540                           
  1541                           ;incstack = 0
  1542                           ;get_num@ch stored from wreg
  1543  0019AE  6E03               	movwf	get_num@ch,c
  1544                           
  1545                           ;Main.c: 322: switch (ch) {
  1546  0019B0  D029               	goto	l2394
  1547  0019B2                     l2332:
  1548  0019B2  0E00               	movlw	0
  1549  0019B4  6E02               	movwf	?_get_num+1,c
  1550  0019B6  0E00               	movlw	0
  1551  0019B8                     L1:
  1552  0019B8  6E01               	movwf	?_get_num,c
  1553  0019BA  0012               	return	
  1554  0019BC                     l2338:
  1555  0019BC  0E00               	movlw	0
  1556  0019BE  6E02               	movwf	?_get_num+1,c
  1557  0019C0  0E01               	movlw	1
  1558  0019C2  D7FA               	goto	L1
  1559  0019C4                     l2344:
  1560  0019C4  0E00               	movlw	0
  1561  0019C6  6E02               	movwf	?_get_num+1,c
  1562  0019C8  0E02               	movlw	2
  1563  0019CA  D7F6               	goto	L1
  1564  0019CC                     l2350:
  1565  0019CC  0E00               	movlw	0
  1566  0019CE  6E02               	movwf	?_get_num+1,c
  1567  0019D0  0E03               	movlw	3
  1568  0019D2  D7F2               	goto	L1
  1569  0019D4                     l2356:
  1570  0019D4  0E00               	movlw	0
  1571  0019D6  6E02               	movwf	?_get_num+1,c
  1572  0019D8  0E04               	movlw	4
  1573  0019DA  D7EE               	goto	L1
  1574  0019DC                     l2362:
  1575  0019DC  0E00               	movlw	0
  1576  0019DE  6E02               	movwf	?_get_num+1,c
  1577  0019E0  0E05               	movlw	5
  1578  0019E2  D7EA               	goto	L1
  1579  0019E4                     l2368:
  1580  0019E4  0E00               	movlw	0
  1581  0019E6  6E02               	movwf	?_get_num+1,c
  1582  0019E8  0E06               	movlw	6
  1583  0019EA  D7E6               	goto	L1
  1584  0019EC                     l2374:
  1585  0019EC  0E00               	movlw	0
  1586  0019EE  6E02               	movwf	?_get_num+1,c
  1587  0019F0  0E07               	movlw	7
  1588  0019F2  D7E2               	goto	L1
  1589  0019F4                     l2380:
  1590  0019F4  0E00               	movlw	0
  1591  0019F6  6E02               	movwf	?_get_num+1,c
  1592  0019F8  0E08               	movlw	8
  1593  0019FA  D7DE               	goto	L1
  1594  0019FC                     l2386:
  1595  0019FC  0E00               	movlw	0
  1596  0019FE  6E02               	movwf	?_get_num+1,c
  1597  001A00  0E09               	movlw	9
  1598  001A02  D7DA               	goto	L1
  1599  001A04                     l2394:
  1600  001A04  5003               	movf	get_num@ch,w,c
  1601                           
  1602                           ; Switch size 1, requested type "space"
  1603                           ; Number of cases is 10, Range of values is 48 to 57
  1604                           ; switch strategies available:
  1605                           ; Name         Instructions Cycles
  1606                           ; simple_byte           31    16 (average)
  1607                           ;	Chosen strategy is simple_byte
  1608  001A06  0A30               	xorlw	48	; case 48
  1609  001A08  B4D8               	btfsc	status,2,c
  1610  001A0A  D7D3               	goto	l2332
  1611  001A0C  0A01               	xorlw	1	; case 49
  1612  001A0E  B4D8               	btfsc	status,2,c
  1613  001A10  D7D5               	goto	l2338
  1614  001A12  0A03               	xorlw	3	; case 50
  1615  001A14  B4D8               	btfsc	status,2,c
  1616  001A16  D7D6               	goto	l2344
  1617  001A18  0A01               	xorlw	1	; case 51
  1618  001A1A  B4D8               	btfsc	status,2,c
  1619  001A1C  D7D7               	goto	l2350
  1620  001A1E  0A07               	xorlw	7	; case 52
  1621  001A20  B4D8               	btfsc	status,2,c
  1622  001A22  D7D8               	goto	l2356
  1623  001A24  0A01               	xorlw	1	; case 53
  1624  001A26  B4D8               	btfsc	status,2,c
  1625  001A28  D7D9               	goto	l2362
  1626  001A2A  0A03               	xorlw	3	; case 54
  1627  001A2C  B4D8               	btfsc	status,2,c
  1628  001A2E  D7DA               	goto	l2368
  1629  001A30  0A01               	xorlw	1	; case 55
  1630  001A32  B4D8               	btfsc	status,2,c
  1631  001A34  D7DB               	goto	l2374
  1632  001A36  0A0F               	xorlw	15	; case 56
  1633  001A38  B4D8               	btfsc	status,2,c
  1634  001A3A  D7DC               	goto	l2380
  1635  001A3C  0A01               	xorlw	1	; case 57
  1636  001A3E  B4D8               	btfsc	status,2,c
  1637  001A40  D7DD               	goto	l2386
  1638                           
  1639                           ;Main.c: 344: return 0;
  1640  001A42  0E00               	movlw	0
  1641  001A44  6E02               	movwf	?_get_num+1,c
  1642  001A46  0E00               	movlw	0
  1643  001A48  6E01               	movwf	?_get_num,c
  1644  001A4A  0012               	return	
  1645  001A4C                     __end_of_get_num:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           prodh	equ	0xFF4
  1652                           prodl	equ	0xFF3
  1653                           intcon2	equ	0xFF1
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           postdec1	equ	0xFE5
  1657                           fsr1l	equ	0xFE1
  1658                           indf2	equ	0xFDF
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _disp_num *****************
  1664 ;; Defined at:
  1665 ;;		line 347 in file "Main.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  num             3   38[COMRAM] float 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  numb            2   46[COMRAM] int 
  1670 ;;  j               2   41[COMRAM] int 
  1671 ;;  TenthDigit      1   45[COMRAM] unsigned char 
  1672 ;;  decimal         1   44[COMRAM] unsigned char 
  1673 ;;  UnitDigit       1   43[COMRAM] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1683 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;Total ram usage:       10 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    5
  1690 ;; This function calls:
  1691 ;;		___awdiv
  1692 ;;		___awmod
  1693 ;;		___ftmul
  1694 ;;		___fttol
  1695 ;;		_lcd_gotoxy
  1696 ;;		_lcd_putc
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text6
  1703  001520                     __ptext6:
  1704                           	opt stack 0
  1705  001520                     _disp_num:
  1706                           	opt stack 25
  1707                           
  1708                           ;Main.c: 349: unsigned char UnitDigit = 0;
  1709                           
  1710                           ;incstack = 0
  1711  001520  0E00               	movlw	0
  1712  001522  6E2C               	movwf	disp_num@UnitDigit,c
  1713                           
  1714                           ;Main.c: 350: unsigned char TenthDigit = 0;
  1715  001524  0E00               	movlw	0
  1716  001526  6E2E               	movwf	disp_num@TenthDigit,c
  1717                           
  1718                           ;Main.c: 351: unsigned char decimal = 0;
  1719  001528  0E00               	movlw	0
  1720  00152A  6E2D               	movwf	disp_num@decimal,c
  1721                           
  1722                           ;Main.c: 352: int j, numb;
  1723                           ;Main.c: 354: j = (int) (num * 10);
  1724  00152C  0E00               	movlw	0
  1725  00152E  6E0C               	movwf	___ftmul@f2,c
  1726  001530  0E20               	movlw	32
  1727  001532  6E0D               	movwf	___ftmul@f2+1,c
  1728  001534  0E41               	movlw	65
  1729  001536  6E0E               	movwf	___ftmul@f2+2,c
  1730  001538  C027  F009         	movff	disp_num@num,___ftmul@f1
  1731  00153C  C028  F00A         	movff	disp_num@num+1,___ftmul@f1+1
  1732  001540  C029  F00B         	movff	disp_num@num+2,___ftmul@f1+2
  1733  001544  EC93  F00B         	call	___ftmul	;wreg free
  1734  001548  C009  F018         	movff	?___ftmul,___fttol@f1
  1735  00154C  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  1736  001550  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  1737  001554  EC19  F00B         	call	___fttol	;wreg free
  1738  001558  C018  F02A         	movff	?___fttol,disp_num@j
  1739  00155C  C019  F02B         	movff	?___fttol+1,disp_num@j+1
  1740                           
  1741                           ;Main.c: 355: numb = (int) num;
  1742  001560  C027  F018         	movff	disp_num@num,___fttol@f1
  1743  001564  C028  F019         	movff	disp_num@num+1,___fttol@f1+1
  1744  001568  C029  F01A         	movff	disp_num@num+2,___fttol@f1+2
  1745  00156C  EC19  F00B         	call	___fttol	;wreg free
  1746  001570  C018  F02F         	movff	?___fttol,disp_num@numb
  1747  001574  C019  F030         	movff	?___fttol+1,disp_num@numb+1
  1748                           
  1749                           ;Main.c: 357: if (numb < 0) {
  1750  001578  AE30               	btfss	disp_num@numb+1,7,c
  1751  00157A  D00E               	goto	l299
  1752                           
  1753                           ;Main.c: 358: numb = -1 * numb;
  1754  00157C  6C2F               	negf	disp_num@numb,c
  1755  00157E  1E30               	comf	disp_num@numb+1,f,c
  1756  001580  B0D8               	btfsc	status,0,c
  1757  001582  2A30               	incf	disp_num@numb+1,f,c
  1758                           
  1759                           ;Main.c: 359: lcd_gotoxy(position++, 2);
  1760  001584  0E02               	movlw	2
  1761  001586  6E0B               	movwf	lcd_gotoxy@y,c
  1762  001588  503B               	movf	_position,w,c
  1763  00158A  EC65  F00E         	call	_lcd_gotoxy
  1764  00158E  4A3B               	infsnz	_position,f,c
  1765  001590  2A3C               	incf	_position+1,f,c
  1766                           
  1767                           ;Main.c: 360: lcd_putc('-');
  1768  001592  0E2D               	movlw	45
  1769  001594  EC16  F00E         	call	_lcd_putc
  1770  001598                     l299:
  1771                           
  1772                           ;Main.c: 363: }
  1773                           ;Main.c: 365: TenthDigit = (numb / 10);
  1774  001598  C02F  F001         	movff	disp_num@numb,___awdiv@dividend
  1775  00159C  C030  F002         	movff	disp_num@numb+1,___awdiv@dividend+1
  1776  0015A0  0E00               	movlw	0
  1777  0015A2  6E04               	movwf	___awdiv@divisor+1,c
  1778  0015A4  0E0A               	movlw	10
  1779  0015A6  6E03               	movwf	___awdiv@divisor,c
  1780  0015A8  EC6B  F00D         	call	___awdiv	;wreg free
  1781  0015AC  5001               	movf	?___awdiv,w,c
  1782  0015AE  6E2E               	movwf	disp_num@TenthDigit,c
  1783                           
  1784                           ;Main.c: 367: if (TenthDigit != 0){
  1785  0015B0  502E               	movf	disp_num@TenthDigit,w,c
  1786  0015B2  B4D8               	btfsc	status,2,c
  1787  0015B4  D00B               	goto	l2422
  1788                           
  1789                           ;Main.c: 368: lcd_gotoxy(position++, 2);
  1790  0015B6  0E02               	movlw	2
  1791  0015B8  6E0B               	movwf	lcd_gotoxy@y,c
  1792  0015BA  503B               	movf	_position,w,c
  1793  0015BC  EC65  F00E         	call	_lcd_gotoxy
  1794  0015C0  4A3B               	infsnz	_position,f,c
  1795  0015C2  2A3C               	incf	_position+1,f,c
  1796                           
  1797                           ;Main.c: 369: lcd_putc(TenthDigit + 0x30);
  1798  0015C4  502E               	movf	disp_num@TenthDigit,w,c
  1799  0015C6  0F30               	addlw	48
  1800  0015C8  EC16  F00E         	call	_lcd_putc
  1801  0015CC                     l2422:
  1802                           
  1803                           ;Main.c: 371: }
  1804                           ;Main.c: 372: UnitDigit = numb - (TenthDigit * 10);
  1805  0015CC  502E               	movf	disp_num@TenthDigit,w,c
  1806  0015CE  0D0A               	mullw	10
  1807  0015D0  50F3               	movf	prodl,w,c
  1808  0015D2  0800               	sublw	0
  1809  0015D4  242F               	addwf	disp_num@numb,w,c
  1810  0015D6  6E2C               	movwf	disp_num@UnitDigit,c
  1811                           
  1812                           ;Main.c: 373: lcd_gotoxy(position++, 2);
  1813  0015D8  0E02               	movlw	2
  1814  0015DA  6E0B               	movwf	lcd_gotoxy@y,c
  1815  0015DC  503B               	movf	_position,w,c
  1816  0015DE  EC65  F00E         	call	_lcd_gotoxy
  1817  0015E2  4A3B               	infsnz	_position,f,c
  1818  0015E4  2A3C               	incf	_position+1,f,c
  1819                           
  1820                           ;Main.c: 374: lcd_putc(UnitDigit + 0x30);
  1821  0015E6  502C               	movf	disp_num@UnitDigit,w,c
  1822  0015E8  0F30               	addlw	48
  1823  0015EA  EC16  F00E         	call	_lcd_putc
  1824                           
  1825                           ;Main.c: 376: lcd_gotoxy(position++, 2);
  1826  0015EE  0E02               	movlw	2
  1827  0015F0  6E0B               	movwf	lcd_gotoxy@y,c
  1828  0015F2  503B               	movf	_position,w,c
  1829  0015F4  EC65  F00E         	call	_lcd_gotoxy
  1830  0015F8  4A3B               	infsnz	_position,f,c
  1831  0015FA  2A3C               	incf	_position+1,f,c
  1832                           
  1833                           ;Main.c: 377: lcd_putc('.');
  1834  0015FC  0E2E               	movlw	46
  1835  0015FE  EC16  F00E         	call	_lcd_putc
  1836                           
  1837                           ;Main.c: 379: decimal = (j % 10) + 0x30;
  1838  001602  C02A  F001         	movff	disp_num@j,___awmod@dividend
  1839  001606  C02B  F002         	movff	disp_num@j+1,___awmod@dividend+1
  1840  00160A  0E00               	movlw	0
  1841  00160C  6E04               	movwf	___awmod@divisor+1,c
  1842  00160E  0E0A               	movlw	10
  1843  001610  6E03               	movwf	___awmod@divisor,c
  1844  001612  ECAD  F00D         	call	___awmod	;wreg free
  1845  001616  5001               	movf	?___awmod,w,c
  1846  001618  0F30               	addlw	48
  1847  00161A  6E2D               	movwf	disp_num@decimal,c
  1848                           
  1849                           ;Main.c: 380: lcd_gotoxy(position++, 2);
  1850  00161C  0E02               	movlw	2
  1851  00161E  6E0B               	movwf	lcd_gotoxy@y,c
  1852  001620  503B               	movf	_position,w,c
  1853  001622  EC65  F00E         	call	_lcd_gotoxy
  1854  001626  4A3B               	infsnz	_position,f,c
  1855  001628  2A3C               	incf	_position+1,f,c
  1856                           
  1857                           ;Main.c: 381: lcd_putc(decimal);
  1858  00162A  502D               	movf	disp_num@decimal,w,c
  1859  00162C  EC16  F00E         	call	_lcd_putc
  1860  001630  0012               	return		;funcret
  1861  001632                     __end_of_disp_num:
  1862                           	opt stack 0
  1863                           tblptru	equ	0xFF8
  1864                           tblptrh	equ	0xFF7
  1865                           tblptrl	equ	0xFF6
  1866                           tablat	equ	0xFF5
  1867                           prodh	equ	0xFF4
  1868                           prodl	equ	0xFF3
  1869                           intcon2	equ	0xFF1
  1870                           postinc0	equ	0xFEE
  1871                           wreg	equ	0xFE8
  1872                           postdec1	equ	0xFE5
  1873                           fsr1l	equ	0xFE1
  1874                           indf2	equ	0xFDF
  1875                           fsr2h	equ	0xFDA
  1876                           fsr2l	equ	0xFD9
  1877                           status	equ	0xFD8
  1878                           
  1879 ;; *************** function _lcd_putc *****************
  1880 ;; Defined at:
  1881 ;;		line 106 in file "lcd_x8.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  c               1    wreg     unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  c               1   13[COMRAM] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;Total ram usage:        1 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    4
  1902 ;; This function calls:
  1903 ;;		_delay_ms
  1904 ;;		_lcd_gotoxy
  1905 ;;		_lcd_send_byte
  1906 ;; This function is called by:
  1907 ;;		_lcd_puts
  1908 ;;		_main
  1909 ;;		_disp_num
  1910 ;;		_scan_key
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text7
  1915  001C2C                     __ptext7:
  1916                           	opt stack 0
  1917  001C2C                     _lcd_putc:
  1918                           	opt stack 25
  1919                           
  1920                           ;incstack = 0
  1921                           ;lcd_putc@c stored from wreg
  1922  001C2C  6E0E               	movwf	lcd_putc@c,c
  1923                           
  1924                           ;lcd_x8.c: 107: switch (c) {
  1925  001C2E  D01E               	goto	l1976
  1926  001C30                     l1966:
  1927  001C30  0E01               	movlw	1
  1928  001C32  6E09               	movwf	lcd_send_byte@n,c
  1929  001C34  0E00               	movlw	0
  1930  001C36  EC41  F00E         	call	_lcd_send_byte
  1931                           
  1932                           ;lcd_x8.c: 109: delay_ms(2);
  1933  001C3A  0E00               	movlw	0
  1934  001C3C  6E02               	movwf	delay_ms@n+1,c
  1935  001C3E  0E02               	movlw	2
  1936  001C40  6E01               	movwf	delay_ms@n,c
  1937  001C42  EC0F  F00F         	call	_delay_ms	;wreg free
  1938                           
  1939                           ;lcd_x8.c: 110: break;
  1940  001C46  0012               	return	
  1941  001C48                     l1968:
  1942  001C48  0E02               	movlw	2
  1943  001C4A  6E0B               	movwf	lcd_gotoxy@y,c
  1944  001C4C  0E01               	movlw	1
  1945  001C4E  EC65  F00E         	call	_lcd_gotoxy
  1946                           
  1947                           ;lcd_x8.c: 112: break;
  1948  001C52  0012               	return	
  1949  001C54                     l1970:
  1950  001C54  0E10               	movlw	16
  1951  001C56  6E09               	movwf	lcd_send_byte@n,c
  1952  001C58  0E00               	movlw	0
  1953  001C5A  EC41  F00E         	call	_lcd_send_byte
  1954                           
  1955                           ;lcd_x8.c: 114: break;
  1956  001C5E  0012               	return	
  1957  001C60                     l1972:
  1958  001C60  C00E  F009         	movff	lcd_putc@c,lcd_send_byte@n
  1959  001C64  0E01               	movlw	1
  1960  001C66  EC41  F00E         	call	_lcd_send_byte
  1961                           
  1962                           ;lcd_x8.c: 117: }
  1963                           
  1964                           ;lcd_x8.c: 116: break;
  1965  001C6A  0012               	return	
  1966  001C6C                     l1976:
  1967  001C6C  500E               	movf	lcd_putc@c,w,c
  1968                           
  1969                           ; Switch size 1, requested type "space"
  1970                           ; Number of cases is 3, Range of values is 8 to 12
  1971                           ; switch strategies available:
  1972                           ; Name         Instructions Cycles
  1973                           ; simple_byte           10     6 (average)
  1974                           ;	Chosen strategy is simple_byte
  1975  001C6E  0A08               	xorlw	8	; case 8
  1976  001C70  B4D8               	btfsc	status,2,c
  1977  001C72  D7F0               	goto	l1970
  1978  001C74  0A02               	xorlw	2	; case 10
  1979  001C76  B4D8               	btfsc	status,2,c
  1980  001C78  D7E7               	goto	l1968
  1981  001C7A  0A06               	xorlw	6	; case 12
  1982  001C7C  B4D8               	btfsc	status,2,c
  1983  001C7E  D7D8               	goto	l1966
  1984  001C80  D7EF               	goto	l1972
  1985  001C82                     __end_of_lcd_putc:
  1986                           	opt stack 0
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           intcon2	equ	0xFF1
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           postdec1	equ	0xFE5
  1997                           fsr1l	equ	0xFE1
  1998                           indf2	equ	0xFDF
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _lcd_gotoxy *****************
  2004 ;; Defined at:
  2005 ;;		line 89 in file "lcd_x8.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  x               1    wreg     unsigned char 
  2008 ;;  y               1   10[COMRAM] unsigned char 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  x               1   11[COMRAM] unsigned char 
  2011 ;;  address         1   12[COMRAM] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        3 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    3
  2028 ;; This function calls:
  2029 ;;		_lcd_send_byte
  2030 ;; This function is called by:
  2031 ;;		_lcd_putc
  2032 ;;		_main
  2033 ;;		_disp_num
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text8
  2038  001CCA                     __ptext8:
  2039                           	opt stack 0
  2040  001CCA                     _lcd_gotoxy:
  2041                           	opt stack 25
  2042                           
  2043                           ;incstack = 0
  2044                           ;lcd_gotoxy@x stored from wreg
  2045  001CCA  6E0C               	movwf	lcd_gotoxy@x,c
  2046                           
  2047                           ;lcd_x8.c: 90: unsigned char address;
  2048                           ;lcd_x8.c: 92: switch (y) {
  2049  001CCC  D009               	goto	l1922
  2050  001CCE                     l1912:
  2051  001CCE  0E80               	movlw	128
  2052  001CD0  D005               	goto	L4
  2053  001CD2                     l1914:
  2054  001CD2  0EC0               	movlw	192
  2055  001CD4  D003               	goto	L4
  2056  001CD6                     l1916:
  2057  001CD6  0E90               	movlw	144
  2058  001CD8  D001               	goto	L4
  2059  001CDA                     l1918:
  2060  001CDA  0ED0               	movlw	208
  2061  001CDC                     L4:
  2062  001CDC  6E0D               	movwf	lcd_gotoxy@address,c
  2063                           
  2064                           ;lcd_x8.c: 101: }
  2065                           
  2066                           ;lcd_x8.c: 100: break;
  2067  001CDE  D00D               	goto	l1924
  2068  001CE0                     l1922:
  2069  001CE0  500B               	movf	lcd_gotoxy@y,w,c
  2070                           
  2071                           ; Switch size 1, requested type "space"
  2072                           ; Number of cases is 4, Range of values is 1 to 4
  2073                           ; switch strategies available:
  2074                           ; Name         Instructions Cycles
  2075                           ; simple_byte           13     7 (average)
  2076                           ;	Chosen strategy is simple_byte
  2077  001CE2  0A01               	xorlw	1	; case 1
  2078  001CE4  B4D8               	btfsc	status,2,c
  2079  001CE6  D7F3               	goto	l1912
  2080  001CE8  0A03               	xorlw	3	; case 2
  2081  001CEA  B4D8               	btfsc	status,2,c
  2082  001CEC  D7F2               	goto	l1914
  2083  001CEE  0A01               	xorlw	1	; case 3
  2084  001CF0  B4D8               	btfsc	status,2,c
  2085  001CF2  D7F1               	goto	l1916
  2086  001CF4  0A07               	xorlw	7	; case 4
  2087  001CF6  B4D8               	btfsc	status,2,c
  2088  001CF8  D7F0               	goto	l1918
  2089  001CFA                     l1924:
  2090                           
  2091                           ;lcd_x8.c: 102: address += x - 1;
  2092  001CFA  040C               	decf	lcd_gotoxy@x,w,c
  2093  001CFC  260D               	addwf	lcd_gotoxy@address,f,c
  2094                           
  2095                           ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
  2096  001CFE  500D               	movf	lcd_gotoxy@address,w,c
  2097  001D00  0980               	iorlw	128
  2098  001D02  6E09               	movwf	lcd_send_byte@n,c
  2099  001D04  0E00               	movlw	0
  2100  001D06  EC41  F00E         	call	_lcd_send_byte
  2101  001D0A  0012               	return		;funcret
  2102  001D0C                     __end_of_lcd_gotoxy:
  2103                           	opt stack 0
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           prodh	equ	0xFF4
  2109                           prodl	equ	0xFF3
  2110                           intcon2	equ	0xFF1
  2111                           postinc0	equ	0xFEE
  2112                           wreg	equ	0xFE8
  2113                           postdec1	equ	0xFE5
  2114                           fsr1l	equ	0xFE1
  2115                           indf2	equ	0xFDF
  2116                           fsr2h	equ	0xFDA
  2117                           fsr2l	equ	0xFD9
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function _lcd_send_byte *****************
  2121 ;; Defined at:
  2122 ;;		line 39 in file "lcd_x8.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  cm_data         1    wreg     unsigned char 
  2125 ;;  n               1    8[COMRAM] unsigned char 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  cm_data         1    9[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:        2 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    2
  2144 ;; This function calls:
  2145 ;;		_delay_cycles
  2146 ;;		_delay_ms
  2147 ;;		_lcd_send_nibble
  2148 ;; This function is called by:
  2149 ;;		_lcd_init
  2150 ;;		_lcd_gotoxy
  2151 ;;		_lcd_putc
  2152 ;;		_Lcd_Shift_Right
  2153 ;;		_Lcd_Shift_Left
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text9
  2158  001C82                     __ptext9:
  2159                           	opt stack 0
  2160  001C82                     _lcd_send_byte:
  2161                           	opt stack 26
  2162                           
  2163                           ;incstack = 0
  2164                           ;lcd_send_byte@cm_data stored from wreg
  2165  001C82  6E0A               	movwf	lcd_send_byte@cm_data,c
  2166                           
  2167                           ;lcd_x8.c: 43: lcd.rs = cm_data;;
  2168  001C84  B00A               	btfsc	lcd_send_byte@cm_data,0,c
  2169  001C86  D002               	bra	u1265
  2170  001C88  9283               	bcf	3971,1,c
  2171  001C8A  D001               	bra	u1266
  2172  001C8C                     u1265:
  2173  001C8C  8283               	bsf	3971,1,c
  2174  001C8E                     u1266:
  2175                           
  2176                           ;lcd_x8.c: 44: delay_cycles(1);
  2177  001C8E  0E01               	movlw	1
  2178  001C90  ECBD  F00E         	call	_delay_cycles
  2179                           
  2180                           ;lcd_x8.c: 46: delay_cycles(1);
  2181  001C94  0E01               	movlw	1
  2182  001C96  ECBD  F00E         	call	_delay_cycles
  2183                           
  2184                           ;lcd_x8.c: 47: lcd.enable = 0;;
  2185  001C9A  9683               	bcf	3971,3,c
  2186                           
  2187                           ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
  2188  001C9C  3809               	swapf	lcd_send_byte@n,w,c
  2189  001C9E  0B0F               	andlw	15
  2190  001CA0  EC21  F00F         	call	_lcd_send_nibble
  2191                           
  2192                           ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
  2193  001CA4  5009               	movf	lcd_send_byte@n,w,c
  2194  001CA6  0B0F               	andlw	15
  2195  001CA8  EC21  F00F         	call	_lcd_send_nibble
  2196                           
  2197                           ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
  2198  001CAC  500A               	movf	lcd_send_byte@cm_data,w,c
  2199  001CAE  B4D8               	btfsc	status,2,c
  2200  001CB0  D005               	goto	l1908
  2201  001CB2  0E32               	movlw	50
  2202  001CB4                     u2437:
  2203  001CB4  0004               	clrwdt	
  2204  001CB6  2EE8               	decfsz	wreg,f,c
  2205  001CB8  D7FD               	goto	u2437
  2206  001CBA  0012               	return	
  2207  001CBC                     l1908:
  2208                           
  2209                           ;lcd_x8.c: 51: else
  2210                           ;lcd_x8.c: 52: delay_ms(2);
  2211  001CBC  0E00               	movlw	0
  2212  001CBE  6E02               	movwf	delay_ms@n+1,c
  2213  001CC0  0E02               	movlw	2
  2214  001CC2  6E01               	movwf	delay_ms@n,c
  2215  001CC4  EC0F  F00F         	call	_delay_ms	;wreg free
  2216  001CC8  0012               	return	
  2217  001CCA                     __end_of_lcd_send_byte:
  2218                           	opt stack 0
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           prodh	equ	0xFF4
  2224                           prodl	equ	0xFF3
  2225                           intcon2	equ	0xFF1
  2226                           postinc0	equ	0xFEE
  2227                           wreg	equ	0xFE8
  2228                           postdec1	equ	0xFE5
  2229                           fsr1l	equ	0xFE1
  2230                           indf2	equ	0xFDF
  2231                           fsr2h	equ	0xFDA
  2232                           fsr2l	equ	0xFD9
  2233                           status	equ	0xFD8
  2234                           
  2235 ;; *************** function _lcd_send_nibble *****************
  2236 ;; Defined at:
  2237 ;;		line 29 in file "lcd_x8.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  n               1    wreg     unsigned char 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  n               1    7[COMRAM] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;Total ram usage:        2 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    1
  2258 ;; This function calls:
  2259 ;;		_delay_cycles
  2260 ;; This function is called by:
  2261 ;;		_lcd_send_byte
  2262 ;;		_lcd_init
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text10
  2267  001E42                     __ptext10:
  2268                           	opt stack 0
  2269  001E42                     _lcd_send_nibble:
  2270                           	opt stack 26
  2271                           
  2272                           ;incstack = 0
  2273                           ;lcd_send_nibble@n stored from wreg
  2274  001E42  6E08               	movwf	lcd_send_nibble@n,c
  2275                           
  2276                           ;lcd_x8.c: 31: lcd.data = n;
  2277  001E44  C008  F007         	movff	lcd_send_nibble@n,??_lcd_send_nibble
  2278  001E48  3A07               	swapf	??_lcd_send_nibble,f,c
  2279  001E4A  5083               	movf	3971,w,c
  2280  001E4C  1807               	xorwf	??_lcd_send_nibble,w,c
  2281  001E4E  0B0F               	andlw	-241
  2282  001E50  1807               	xorwf	??_lcd_send_nibble,w,c
  2283  001E52  6E83               	movwf	3971,c
  2284                           
  2285                           ;lcd_x8.c: 33: delay_cycles(1);
  2286  001E54  0E01               	movlw	1
  2287  001E56  ECBD  F00E         	call	_delay_cycles
  2288                           
  2289                           ;lcd_x8.c: 34: lcd.enable = 1;;
  2290  001E5A  8683               	bsf	3971,3,c
  2291                           
  2292                           ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
  2293  001E5C  0004               	clrwdt	
  2294  001E5E  F000               	nop		;2 cycle nop
  2295                           
  2296                           ;lcd_x8.c: 36: lcd.enable = 0;;
  2297  001E60  9683               	bcf	3971,3,c
  2298  001E62  0012               	return		;funcret
  2299  001E64                     __end_of_lcd_send_nibble:
  2300                           	opt stack 0
  2301                           tblptru	equ	0xFF8
  2302                           tblptrh	equ	0xFF7
  2303                           tblptrl	equ	0xFF6
  2304                           tablat	equ	0xFF5
  2305                           prodh	equ	0xFF4
  2306                           prodl	equ	0xFF3
  2307                           intcon2	equ	0xFF1
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           postdec1	equ	0xFE5
  2311                           fsr1l	equ	0xFE1
  2312                           indf2	equ	0xFDF
  2313                           fsr2h	equ	0xFDA
  2314                           fsr2l	equ	0xFD9
  2315                           status	equ	0xFD8
  2316                           
  2317 ;; *************** function _delay_cycles *****************
  2318 ;; Defined at:
  2319 ;;		line 20 in file "lcd_x8.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  n               1    wreg     unsigned char 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  n               1    5[COMRAM] unsigned char 
  2324 ;;  x               2    3[COMRAM] int 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;Total ram usage:        6 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_lcd_send_nibble
  2344 ;;		_lcd_send_byte
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text11
  2349  001D7A                     __ptext11:
  2350                           	opt stack 0
  2351  001D7A                     _delay_cycles:
  2352                           	opt stack 26
  2353                           
  2354                           ;incstack = 0
  2355                           ;delay_cycles@n stored from wreg
  2356  001D7A  6E06               	movwf	delay_cycles@n,c
  2357                           
  2358                           ;lcd_x8.c: 21: int x;
  2359                           ;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
  2360  001D7C  0E00               	movlw	0
  2361  001D7E  6E05               	movwf	delay_cycles@x+1,c
  2362  001D80  0E00               	movlw	0
  2363  001D82  6E04               	movwf	delay_cycles@x,c
  2364  001D84  D003               	goto	l936
  2365  001D86                     l16:
  2366  001D86  0004               	clrwdt		;# 
  2367  001D88  4A04               	infsnz	delay_cycles@x,f,c
  2368  001D8A  2A05               	incf	delay_cycles@x+1,f,c
  2369  001D8C                     l936:
  2370  001D8C  5006               	movf	delay_cycles@n,w,c
  2371  001D8E  6E01               	movwf	??_delay_cycles& (0+255),c
  2372  001D90  6A02               	clrf	(??_delay_cycles+1)& (0+255),c
  2373  001D92  5004               	movf	delay_cycles@x,w,c
  2374  001D94  5C01               	subwf	??_delay_cycles,w,c
  2375  001D96  5002               	movf	??_delay_cycles+1,w,c
  2376  001D98  0A80               	xorlw	128
  2377  001D9A  6E03               	movwf	(??_delay_cycles+2)& (0+255),c
  2378  001D9C  5005               	movf	delay_cycles@x+1,w,c
  2379  001D9E  0A80               	xorlw	128
  2380  001DA0  5803               	subwfb	(??_delay_cycles+2)& (0+255),w,c
  2381  001DA2  A0D8               	btfss	status,0,c
  2382  001DA4  0012               	return	
  2383  001DA6  D7EF               	goto	l16
  2384  001DA8                     __end_of_delay_cycles:
  2385                           	opt stack 0
  2386                           tblptru	equ	0xFF8
  2387                           tblptrh	equ	0xFF7
  2388                           tblptrl	equ	0xFF6
  2389                           tablat	equ	0xFF5
  2390                           prodh	equ	0xFF4
  2391                           prodl	equ	0xFF3
  2392                           intcon2	equ	0xFF1
  2393                           postinc0	equ	0xFEE
  2394                           wreg	equ	0xFE8
  2395                           postdec1	equ	0xFE5
  2396                           fsr1l	equ	0xFE1
  2397                           indf2	equ	0xFDF
  2398                           fsr2h	equ	0xFDA
  2399                           fsr2l	equ	0xFD9
  2400                           status	equ	0xFD8
  2401                           
  2402 ;; *************** function ___fttol *****************
  2403 ;; Defined at:
  2404 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  f1              3   23[COMRAM] float 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  lval            4   33[COMRAM] unsigned long 
  2409 ;;  exp1            1   37[COMRAM] unsigned char 
  2410 ;;  sign1           1   32[COMRAM] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  4   23[COMRAM] long 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:       15 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_disp_num
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text12
  2434  001632                     __ptext12:
  2435                           	opt stack 0
  2436  001632                     ___fttol:
  2437                           	opt stack 29
  2438                           
  2439                           ;incstack = 0
  2440  001632  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  2441  001636  6A1D               	clrf	(??___fttol+1)& (0+255),c
  2442  001638  6A1E               	clrf	(??___fttol+2)& (0+255),c
  2443  00163A  3419               	rlcf	___fttol@f1+1,w,c
  2444  00163C  361C               	rlcf	??___fttol& (0+255),f,c
  2445  00163E  E301               	bnc	u1861
  2446  001640  801D               	bsf	(??___fttol+1)& (0+255),0,c
  2447  001642                     u1861:
  2448  001642  501C               	movf	??___fttol,w,c
  2449  001644  6E26               	movwf	___fttol@exp1,c
  2450  001646  5026               	movf	___fttol@exp1,w,c
  2451  001648  A4D8               	btfss	status,2,c
  2452  00164A  D009               	goto	l2214
  2453  00164C  0E00               	movlw	0
  2454  00164E  6E18               	movwf	?___fttol,c
  2455  001650  0E00               	movlw	0
  2456  001652  6E19               	movwf	?___fttol+1,c
  2457  001654  0E00               	movlw	0
  2458  001656  6E1A               	movwf	?___fttol+2,c
  2459  001658  0E00               	movlw	0
  2460  00165A  6E1B               	movwf	?___fttol+3,c
  2461  00165C  0012               	return	
  2462  00165E                     l2214:
  2463  00165E  0E17               	movlw	23
  2464  001660  6E1C               	movwf	??___fttol& (0+255),c
  2465  001662  C018  F01D         	movff	___fttol@f1,??___fttol+1
  2466  001666  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  2467  00166A  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  2468  00166E  281C               	incf	??___fttol,w,c
  2469  001670  6E20               	movwf	(??___fttol+4)& (0+255),c
  2470  001672  D004               	goto	u1880
  2471  001674                     u1885:
  2472  001674  90D8               	bcf	status,0,c
  2473  001676  321F               	rrcf	??___fttol+3,f,c
  2474  001678  321E               	rrcf	??___fttol+2,f,c
  2475  00167A  321D               	rrcf	??___fttol+1,f,c
  2476  00167C                     u1880:
  2477  00167C  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  2478  00167E  D7FA               	goto	u1885
  2479  001680  501D               	movf	??___fttol+1,w,c
  2480  001682  6E21               	movwf	___fttol@sign1,c
  2481  001684  8E19               	bsf	___fttol@f1+1,7,c
  2482  001686  0EFF               	movlw	255
  2483  001688  1618               	andwf	___fttol@f1,f,c
  2484  00168A  0EFF               	movlw	255
  2485  00168C  1619               	andwf	___fttol@f1+1,f,c
  2486  00168E  0E00               	movlw	0
  2487  001690  161A               	andwf	___fttol@f1+2,f,c
  2488  001692  5018               	movf	___fttol@f1,w,c
  2489  001694  6E22               	movwf	___fttol@lval,c
  2490  001696  5019               	movf	___fttol@f1+1,w,c
  2491  001698  6E23               	movwf	___fttol@lval+1,c
  2492  00169A  501A               	movf	___fttol@f1+2,w,c
  2493  00169C  6E24               	movwf	___fttol@lval+2,c
  2494  00169E  6A25               	clrf	___fttol@lval+3,c
  2495  0016A0  0E8E               	movlw	142
  2496  0016A2  5E26               	subwf	___fttol@exp1,f,c
  2497  0016A4  AE26               	btfss	___fttol@exp1,7,c
  2498  0016A6  D016               	goto	l2236
  2499  0016A8  5026               	movf	___fttol@exp1,w,c
  2500  0016AA  0A80               	xorlw	128
  2501  0016AC  0F8F               	addlw	143
  2502  0016AE  B0D8               	btfsc	status,0,c
  2503  0016B0  D009               	goto	l2232
  2504  0016B2  0E00               	movlw	0
  2505  0016B4  6E18               	movwf	?___fttol,c
  2506  0016B6  0E00               	movlw	0
  2507  0016B8  6E19               	movwf	?___fttol+1,c
  2508  0016BA  0E00               	movlw	0
  2509  0016BC  6E1A               	movwf	?___fttol+2,c
  2510  0016BE  0E00               	movlw	0
  2511  0016C0  6E1B               	movwf	?___fttol+3,c
  2512  0016C2  0012               	return	
  2513  0016C4                     l2232:
  2514  0016C4  90D8               	bcf	status,0,c
  2515  0016C6  3225               	rrcf	___fttol@lval+3,f,c
  2516  0016C8  3224               	rrcf	___fttol@lval+2,f,c
  2517  0016CA  3223               	rrcf	___fttol@lval+1,f,c
  2518  0016CC  3222               	rrcf	___fttol@lval,f,c
  2519  0016CE  3E26               	incfsz	___fttol@exp1,f,c
  2520  0016D0  D7F9               	goto	l2232
  2521  0016D2  D015               	goto	l2246
  2522  0016D4                     l2236:
  2523  0016D4  0E17               	movlw	23
  2524  0016D6  6426               	cpfsgt	___fttol@exp1,c
  2525  0016D8  D00F               	goto	l2244
  2526  0016DA  0E00               	movlw	0
  2527  0016DC  6E18               	movwf	?___fttol,c
  2528  0016DE  0E00               	movlw	0
  2529  0016E0  6E19               	movwf	?___fttol+1,c
  2530  0016E2  0E00               	movlw	0
  2531  0016E4  6E1A               	movwf	?___fttol+2,c
  2532  0016E6  0E00               	movlw	0
  2533  0016E8  6E1B               	movwf	?___fttol+3,c
  2534  0016EA  0012               	return	
  2535  0016EC                     l2242:
  2536  0016EC  90D8               	bcf	status,0,c
  2537  0016EE  3622               	rlcf	___fttol@lval,f,c
  2538  0016F0  3623               	rlcf	___fttol@lval+1,f,c
  2539  0016F2  3624               	rlcf	___fttol@lval+2,f,c
  2540  0016F4  3625               	rlcf	___fttol@lval+3,f,c
  2541  0016F6  0626               	decf	___fttol@exp1,f,c
  2542  0016F8                     l2244:
  2543  0016F8  5026               	movf	___fttol@exp1,w,c
  2544  0016FA  A4D8               	btfss	status,2,c
  2545  0016FC  D7F7               	goto	l2242
  2546  0016FE                     l2246:
  2547  0016FE  5021               	movf	___fttol@sign1,w,c
  2548  001700  B4D8               	btfsc	status,2,c
  2549  001702  D008               	goto	l2250
  2550  001704  1E25               	comf	___fttol@lval+3,f,c
  2551  001706  1E24               	comf	___fttol@lval+2,f,c
  2552  001708  1E23               	comf	___fttol@lval+1,f,c
  2553  00170A  6C22               	negf	___fttol@lval,c
  2554  00170C  0E00               	movlw	0
  2555  00170E  2223               	addwfc	___fttol@lval+1,f,c
  2556  001710  2224               	addwfc	___fttol@lval+2,f,c
  2557  001712  2225               	addwfc	___fttol@lval+3,f,c
  2558  001714                     l2250:
  2559  001714  C022  F018         	movff	___fttol@lval,?___fttol
  2560  001718  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  2561  00171C  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  2562  001720  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  2563  001724  0012               	return	
  2564  001726                     __end_of___fttol:
  2565                           	opt stack 0
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           prodh	equ	0xFF4
  2571                           prodl	equ	0xFF3
  2572                           intcon2	equ	0xFF1
  2573                           postinc0	equ	0xFEE
  2574                           wreg	equ	0xFE8
  2575                           postdec1	equ	0xFE5
  2576                           fsr1l	equ	0xFE1
  2577                           indf2	equ	0xFDF
  2578                           fsr2h	equ	0xFDA
  2579                           fsr2l	equ	0xFD9
  2580                           status	equ	0xFD8
  2581                           
  2582 ;; *************** function ___ftmul *****************
  2583 ;; Defined at:
  2584 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  f1              3    8[COMRAM] float 
  2587 ;;  f2              3   11[COMRAM] float 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  2590 ;;  sign            1   22[COMRAM] unsigned char 
  2591 ;;  cntr            1   21[COMRAM] unsigned char 
  2592 ;;  exp             1   17[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  3    8[COMRAM] float 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:       15 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    1
  2609 ;; This function calls:
  2610 ;;		___ftpack
  2611 ;; This function is called by:
  2612 ;;		_disp_num
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text13
  2617  001726                     __ptext13:
  2618                           	opt stack 0
  2619  001726                     ___ftmul:
  2620                           	opt stack 28
  2621                           
  2622                           ;incstack = 0
  2623  001726  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  2624  00172A  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2625  00172C  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2626  00172E  340A               	rlcf	___ftmul@f1+1,w,c
  2627  001730  360F               	rlcf	??___ftmul& (0+255),f,c
  2628  001732  E301               	bnc	u1681
  2629  001734  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2630  001736                     u1681:
  2631  001736  500F               	movf	??___ftmul,w,c
  2632  001738  6E12               	movwf	___ftmul@exp,c
  2633  00173A  5012               	movf	___ftmul@exp,w,c
  2634  00173C  A4D8               	btfss	status,2,c
  2635  00173E  D007               	goto	l2086
  2636  001740  0E00               	movlw	0
  2637  001742  6E09               	movwf	?___ftmul,c
  2638  001744  0E00               	movlw	0
  2639  001746  6E0A               	movwf	?___ftmul+1,c
  2640  001748  0E00               	movlw	0
  2641  00174A  6E0B               	movwf	?___ftmul+2,c
  2642  00174C  0012               	return	
  2643  00174E                     l2086:
  2644  00174E  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  2645  001752  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2646  001754  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2647  001756  340D               	rlcf	___ftmul@f2+1,w,c
  2648  001758  360F               	rlcf	??___ftmul& (0+255),f,c
  2649  00175A  E301               	bnc	u1701
  2650  00175C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2651  00175E                     u1701:
  2652  00175E  500F               	movf	??___ftmul,w,c
  2653  001760  6E17               	movwf	___ftmul@sign,c
  2654  001762  5017               	movf	___ftmul@sign,w,c
  2655  001764  A4D8               	btfss	status,2,c
  2656  001766  D007               	goto	l2092
  2657  001768  0E00               	movlw	0
  2658  00176A  6E09               	movwf	?___ftmul,c
  2659  00176C  0E00               	movlw	0
  2660  00176E  6E0A               	movwf	?___ftmul+1,c
  2661  001770  0E00               	movlw	0
  2662  001772  6E0B               	movwf	?___ftmul+2,c
  2663  001774  0012               	return	
  2664  001776                     l2092:
  2665  001776  5017               	movf	___ftmul@sign,w,c
  2666  001778  0F7B               	addlw	123
  2667  00177A  2612               	addwf	___ftmul@exp,f,c
  2668  00177C  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  2669  001780  500E               	movf	___ftmul@f2+2,w,c
  2670  001782  1A17               	xorwf	___ftmul@sign,f,c
  2671  001784  0E80               	movlw	128
  2672  001786  1617               	andwf	___ftmul@sign,f,c
  2673  001788  8E0A               	bsf	___ftmul@f1+1,7,c
  2674  00178A  8E0D               	bsf	___ftmul@f2+1,7,c
  2675  00178C  0EFF               	movlw	255
  2676  00178E  160C               	andwf	___ftmul@f2,f,c
  2677  001790  0EFF               	movlw	255
  2678  001792  160D               	andwf	___ftmul@f2+1,f,c
  2679  001794  0E00               	movlw	0
  2680  001796  160E               	andwf	___ftmul@f2+2,f,c
  2681  001798  0E00               	movlw	0
  2682  00179A  6E13               	movwf	___ftmul@f3_as_product,c
  2683  00179C  0E00               	movlw	0
  2684  00179E  6E14               	movwf	___ftmul@f3_as_product+1,c
  2685  0017A0  0E00               	movlw	0
  2686  0017A2  6E15               	movwf	___ftmul@f3_as_product+2,c
  2687  0017A4  0E07               	movlw	7
  2688  0017A6  6E16               	movwf	___ftmul@cntr,c
  2689  0017A8                     l2106:
  2690  0017A8  A009               	btfss	___ftmul@f1,0,c
  2691  0017AA  D006               	goto	l2110
  2692  0017AC  500C               	movf	___ftmul@f2,w,c
  2693  0017AE  2613               	addwf	___ftmul@f3_as_product,f,c
  2694  0017B0  500D               	movf	___ftmul@f2+1,w,c
  2695  0017B2  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2696  0017B4  500E               	movf	___ftmul@f2+2,w,c
  2697  0017B6  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2698  0017B8                     l2110:
  2699  0017B8  90D8               	bcf	status,0,c
  2700  0017BA  320B               	rrcf	___ftmul@f1+2,f,c
  2701  0017BC  320A               	rrcf	___ftmul@f1+1,f,c
  2702  0017BE  3209               	rrcf	___ftmul@f1,f,c
  2703  0017C0  90D8               	bcf	status,0,c
  2704  0017C2  360C               	rlcf	___ftmul@f2,f,c
  2705  0017C4  360D               	rlcf	___ftmul@f2+1,f,c
  2706  0017C6  360E               	rlcf	___ftmul@f2+2,f,c
  2707  0017C8  2E16               	decfsz	___ftmul@cntr,f,c
  2708  0017CA  D7EE               	goto	l2106
  2709  0017CC  0E09               	movlw	9
  2710  0017CE  6E16               	movwf	___ftmul@cntr,c
  2711  0017D0                     l2116:
  2712  0017D0  A009               	btfss	___ftmul@f1,0,c
  2713  0017D2  D006               	goto	l2120
  2714  0017D4  500C               	movf	___ftmul@f2,w,c
  2715  0017D6  2613               	addwf	___ftmul@f3_as_product,f,c
  2716  0017D8  500D               	movf	___ftmul@f2+1,w,c
  2717  0017DA  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2718  0017DC  500E               	movf	___ftmul@f2+2,w,c
  2719  0017DE  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2720  0017E0                     l2120:
  2721  0017E0  90D8               	bcf	status,0,c
  2722  0017E2  320B               	rrcf	___ftmul@f1+2,f,c
  2723  0017E4  320A               	rrcf	___ftmul@f1+1,f,c
  2724  0017E6  3209               	rrcf	___ftmul@f1,f,c
  2725  0017E8  90D8               	bcf	status,0,c
  2726  0017EA  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  2727  0017EC  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  2728  0017EE  3213               	rrcf	___ftmul@f3_as_product,f,c
  2729  0017F0  2E16               	decfsz	___ftmul@cntr,f,c
  2730  0017F2  D7EE               	goto	l2116
  2731  0017F4  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2732  0017F8  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2733  0017FC  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2734  001800  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  2735  001804  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  2736  001808  EC80  F00C         	call	___ftpack	;wreg free
  2737  00180C  C001  F009         	movff	?___ftpack,?___ftmul
  2738  001810  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  2739  001814  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  2740  001818  0012               	return	
  2741  00181A                     __end_of___ftmul:
  2742                           	opt stack 0
  2743                           tblptru	equ	0xFF8
  2744                           tblptrh	equ	0xFF7
  2745                           tblptrl	equ	0xFF6
  2746                           tablat	equ	0xFF5
  2747                           prodh	equ	0xFF4
  2748                           prodl	equ	0xFF3
  2749                           intcon2	equ	0xFF1
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           postdec1	equ	0xFE5
  2753                           fsr1l	equ	0xFE1
  2754                           indf2	equ	0xFDF
  2755                           fsr2h	equ	0xFDA
  2756                           fsr2l	equ	0xFD9
  2757                           status	equ	0xFD8
  2758                           
  2759 ;; *************** function ___awmod *****************
  2760 ;; Defined at:
  2761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  dividend        2    0[COMRAM] int 
  2764 ;;  divisor         2    2[COMRAM] int 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  sign            1    5[COMRAM] unsigned char 
  2767 ;;  counter         1    4[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2    0[COMRAM] int 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        6 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_disp_num
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text14
  2791  001B5A                     __ptext14:
  2792                           	opt stack 0
  2793  001B5A                     ___awmod:
  2794                           	opt stack 29
  2795                           
  2796                           ;incstack = 0
  2797  001B5A  0E00               	movlw	0
  2798  001B5C  6E06               	movwf	___awmod@sign,c
  2799  001B5E  AE02               	btfss	___awmod@dividend+1,7,c
  2800  001B60  D006               	goto	l2180
  2801  001B62  6C01               	negf	___awmod@dividend,c
  2802  001B64  1E02               	comf	___awmod@dividend+1,f,c
  2803  001B66  B0D8               	btfsc	status,0,c
  2804  001B68  2A02               	incf	___awmod@dividend+1,f,c
  2805  001B6A  0E01               	movlw	1
  2806  001B6C  6E06               	movwf	___awmod@sign,c
  2807  001B6E                     l2180:
  2808  001B6E  AE04               	btfss	___awmod@divisor+1,7,c
  2809  001B70  D004               	goto	l2184
  2810  001B72  6C03               	negf	___awmod@divisor,c
  2811  001B74  1E04               	comf	___awmod@divisor+1,f,c
  2812  001B76  B0D8               	btfsc	status,0,c
  2813  001B78  2A04               	incf	___awmod@divisor+1,f,c
  2814  001B7A                     l2184:
  2815  001B7A  5003               	movf	___awmod@divisor,w,c
  2816  001B7C  1004               	iorwf	___awmod@divisor+1,w,c
  2817  001B7E  B4D8               	btfsc	status,2,c
  2818  001B80  D018               	goto	l2200
  2819  001B82  0E01               	movlw	1
  2820  001B84  6E05               	movwf	___awmod@counter,c
  2821  001B86  D004               	goto	l2190
  2822  001B88                     l2188:
  2823  001B88  90D8               	bcf	status,0,c
  2824  001B8A  3603               	rlcf	___awmod@divisor,f,c
  2825  001B8C  3604               	rlcf	___awmod@divisor+1,f,c
  2826  001B8E  2A05               	incf	___awmod@counter,f,c
  2827  001B90                     l2190:
  2828  001B90  AE04               	btfss	___awmod@divisor+1,7,c
  2829  001B92  D7FA               	goto	l2188
  2830  001B94                     l2192:
  2831  001B94  5003               	movf	___awmod@divisor,w,c
  2832  001B96  5C01               	subwf	___awmod@dividend,w,c
  2833  001B98  5004               	movf	___awmod@divisor+1,w,c
  2834  001B9A  5802               	subwfb	___awmod@dividend+1,w,c
  2835  001B9C  A0D8               	btfss	status,0,c
  2836  001B9E  D004               	goto	l2196
  2837  001BA0  5003               	movf	___awmod@divisor,w,c
  2838  001BA2  5E01               	subwf	___awmod@dividend,f,c
  2839  001BA4  5004               	movf	___awmod@divisor+1,w,c
  2840  001BA6  5A02               	subwfb	___awmod@dividend+1,f,c
  2841  001BA8                     l2196:
  2842  001BA8  90D8               	bcf	status,0,c
  2843  001BAA  3204               	rrcf	___awmod@divisor+1,f,c
  2844  001BAC  3203               	rrcf	___awmod@divisor,f,c
  2845  001BAE  2E05               	decfsz	___awmod@counter,f,c
  2846  001BB0  D7F1               	goto	l2192
  2847  001BB2                     l2200:
  2848  001BB2  5006               	movf	___awmod@sign,w,c
  2849  001BB4  B4D8               	btfsc	status,2,c
  2850  001BB6  D004               	goto	l2204
  2851  001BB8  6C01               	negf	___awmod@dividend,c
  2852  001BBA  1E02               	comf	___awmod@dividend+1,f,c
  2853  001BBC  B0D8               	btfsc	status,0,c
  2854  001BBE  2A02               	incf	___awmod@dividend+1,f,c
  2855  001BC0                     l2204:
  2856  001BC0  C001  F001         	movff	___awmod@dividend,?___awmod
  2857  001BC4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2858  001BC8  0012               	return	
  2859  001BCA                     __end_of___awmod:
  2860                           	opt stack 0
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           prodh	equ	0xFF4
  2866                           prodl	equ	0xFF3
  2867                           intcon2	equ	0xFF1
  2868                           postinc0	equ	0xFEE
  2869                           wreg	equ	0xFE8
  2870                           postdec1	equ	0xFE5
  2871                           fsr1l	equ	0xFE1
  2872                           indf2	equ	0xFDF
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function ___awdiv *****************
  2878 ;; Defined at:
  2879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  dividend        2    0[COMRAM] int 
  2882 ;;  divisor         2    2[COMRAM] int 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  quotient        2    6[COMRAM] int 
  2885 ;;  sign            1    5[COMRAM] unsigned char 
  2886 ;;  counter         1    4[COMRAM] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  2    0[COMRAM] int 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;Total ram usage:        8 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_disp_num
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text15
  2910  001AD6                     __ptext15:
  2911                           	opt stack 0
  2912  001AD6                     ___awdiv:
  2913                           	opt stack 29
  2914                           
  2915                           ;incstack = 0
  2916  001AD6  0E00               	movlw	0
  2917  001AD8  6E06               	movwf	___awdiv@sign,c
  2918  001ADA  AE04               	btfss	___awdiv@divisor+1,7,c
  2919  001ADC  D006               	goto	l2136
  2920  001ADE  6C03               	negf	___awdiv@divisor,c
  2921  001AE0  1E04               	comf	___awdiv@divisor+1,f,c
  2922  001AE2  B0D8               	btfsc	status,0,c
  2923  001AE4  2A04               	incf	___awdiv@divisor+1,f,c
  2924  001AE6  0E01               	movlw	1
  2925  001AE8  6E06               	movwf	___awdiv@sign,c
  2926  001AEA                     l2136:
  2927  001AEA  AE02               	btfss	___awdiv@dividend+1,7,c
  2928  001AEC  D006               	goto	l2142
  2929  001AEE  6C01               	negf	___awdiv@dividend,c
  2930  001AF0  1E02               	comf	___awdiv@dividend+1,f,c
  2931  001AF2  B0D8               	btfsc	status,0,c
  2932  001AF4  2A02               	incf	___awdiv@dividend+1,f,c
  2933  001AF6  0E01               	movlw	1
  2934  001AF8  1A06               	xorwf	___awdiv@sign,f,c
  2935  001AFA                     l2142:
  2936  001AFA  0E00               	movlw	0
  2937  001AFC  6E08               	movwf	___awdiv@quotient+1,c
  2938  001AFE  0E00               	movlw	0
  2939  001B00  6E07               	movwf	___awdiv@quotient,c
  2940  001B02  5003               	movf	___awdiv@divisor,w,c
  2941  001B04  1004               	iorwf	___awdiv@divisor+1,w,c
  2942  001B06  B4D8               	btfsc	status,2,c
  2943  001B08  D01C               	goto	l2164
  2944  001B0A  0E01               	movlw	1
  2945  001B0C  6E05               	movwf	___awdiv@counter,c
  2946  001B0E  D004               	goto	l2150
  2947  001B10                     l2148:
  2948  001B10  90D8               	bcf	status,0,c
  2949  001B12  3603               	rlcf	___awdiv@divisor,f,c
  2950  001B14  3604               	rlcf	___awdiv@divisor+1,f,c
  2951  001B16  2A05               	incf	___awdiv@counter,f,c
  2952  001B18                     l2150:
  2953  001B18  AE04               	btfss	___awdiv@divisor+1,7,c
  2954  001B1A  D7FA               	goto	l2148
  2955  001B1C                     l2152:
  2956  001B1C  90D8               	bcf	status,0,c
  2957  001B1E  3607               	rlcf	___awdiv@quotient,f,c
  2958  001B20  3608               	rlcf	___awdiv@quotient+1,f,c
  2959  001B22  5003               	movf	___awdiv@divisor,w,c
  2960  001B24  5C01               	subwf	___awdiv@dividend,w,c
  2961  001B26  5004               	movf	___awdiv@divisor+1,w,c
  2962  001B28  5802               	subwfb	___awdiv@dividend+1,w,c
  2963  001B2A  A0D8               	btfss	status,0,c
  2964  001B2C  D005               	goto	l2160
  2965  001B2E  5003               	movf	___awdiv@divisor,w,c
  2966  001B30  5E01               	subwf	___awdiv@dividend,f,c
  2967  001B32  5004               	movf	___awdiv@divisor+1,w,c
  2968  001B34  5A02               	subwfb	___awdiv@dividend+1,f,c
  2969  001B36  8007               	bsf	___awdiv@quotient,0,c
  2970  001B38                     l2160:
  2971  001B38  90D8               	bcf	status,0,c
  2972  001B3A  3204               	rrcf	___awdiv@divisor+1,f,c
  2973  001B3C  3203               	rrcf	___awdiv@divisor,f,c
  2974  001B3E  2E05               	decfsz	___awdiv@counter,f,c
  2975  001B40  D7ED               	goto	l2152
  2976  001B42                     l2164:
  2977  001B42  5006               	movf	___awdiv@sign,w,c
  2978  001B44  B4D8               	btfsc	status,2,c
  2979  001B46  D004               	goto	l2168
  2980  001B48  6C07               	negf	___awdiv@quotient,c
  2981  001B4A  1E08               	comf	___awdiv@quotient+1,f,c
  2982  001B4C  B0D8               	btfsc	status,0,c
  2983  001B4E  2A08               	incf	___awdiv@quotient+1,f,c
  2984  001B50                     l2168:
  2985  001B50  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2986  001B54  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2987  001B58  0012               	return	
  2988  001B5A                     __end_of___awdiv:
  2989                           	opt stack 0
  2990                           tblptru	equ	0xFF8
  2991                           tblptrh	equ	0xFF7
  2992                           tblptrl	equ	0xFF6
  2993                           tablat	equ	0xFF5
  2994                           prodh	equ	0xFF4
  2995                           prodl	equ	0xFF3
  2996                           intcon2	equ	0xFF1
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           postdec1	equ	0xFE5
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function ___wmul *****************
  3007 ;; Defined at:
  3008 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  multiplier      2    0[COMRAM] unsigned int 
  3011 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  product         2    4[COMRAM] unsigned int 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  2    0[COMRAM] unsigned int 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0, prodl, prodh
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;Total ram usage:        6 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text16
  3037  001DD4                     __ptext16:
  3038                           	opt stack 0
  3039  001DD4                     ___wmul:
  3040                           	opt stack 30
  3041                           
  3042                           ;incstack = 0
  3043  001DD4  5001               	movf	___wmul@multiplier,w,c
  3044  001DD6  0203               	mulwf	___wmul@multiplicand,c
  3045  001DD8  CFF3 F005          	movff	prodl,___wmul@product
  3046  001DDC  CFF4 F006          	movff	prodh,___wmul@product+1
  3047  001DE0  5001               	movf	___wmul@multiplier,w,c
  3048  001DE2  0204               	mulwf	___wmul@multiplicand+1,c
  3049  001DE4  50F3               	movf	prodl,w,c
  3050  001DE6  2606               	addwf	___wmul@product+1,f,c
  3051  001DE8  5002               	movf	___wmul@multiplier+1,w,c
  3052  001DEA  0203               	mulwf	___wmul@multiplicand,c
  3053  001DEC  50F3               	movf	prodl,w,c
  3054  001DEE  2606               	addwf	___wmul@product+1,f,c
  3055  001DF0  C005  F001         	movff	___wmul@product,?___wmul
  3056  001DF4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3057  001DF8  0012               	return	
  3058  001DFA                     __end_of___wmul:
  3059                           	opt stack 0
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           prodh	equ	0xFF4
  3065                           prodl	equ	0xFF3
  3066                           intcon2	equ	0xFF1
  3067                           postinc0	equ	0xFEE
  3068                           wreg	equ	0xFE8
  3069                           postdec1	equ	0xFE5
  3070                           fsr1l	equ	0xFE1
  3071                           indf2	equ	0xFDF
  3072                           fsr2h	equ	0xFDA
  3073                           fsr2l	equ	0xFD9
  3074                           status	equ	0xFD8
  3075                           
  3076 ;; *************** function ___ftdiv *****************
  3077 ;; Defined at:
  3078 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  f1              3   12[COMRAM] float 
  3081 ;;  f2              3   15[COMRAM] float 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  f3              3   22[COMRAM] float 
  3084 ;;  sign            1   26[COMRAM] unsigned char 
  3085 ;;  exp             1   25[COMRAM] unsigned char 
  3086 ;;  cntr            1   21[COMRAM] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  3   12[COMRAM] float 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3096 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;Total ram usage:       15 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    1
  3103 ;; This function calls:
  3104 ;;		___ftpack
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text17
  3111  00181A                     __ptext17:
  3112                           	opt stack 0
  3113  00181A                     ___ftdiv:
  3114                           	opt stack 29
  3115                           
  3116                           ;incstack = 0
  3117  00181A  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  3118  00181E  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  3119  001820  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  3120  001822  340E               	rlcf	___ftdiv@f1+1,w,c
  3121  001824  3613               	rlcf	??___ftdiv& (0+255),f,c
  3122  001826  E301               	bnc	u2041
  3123  001828  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  3124  00182A                     u2041:
  3125  00182A  5013               	movf	??___ftdiv,w,c
  3126  00182C  6E1A               	movwf	___ftdiv@exp,c
  3127  00182E  501A               	movf	___ftdiv@exp,w,c
  3128  001830  A4D8               	btfss	status,2,c
  3129  001832  D007               	goto	l2456
  3130  001834  0E00               	movlw	0
  3131  001836  6E0D               	movwf	?___ftdiv,c
  3132  001838  0E00               	movlw	0
  3133  00183A  6E0E               	movwf	?___ftdiv+1,c
  3134  00183C  0E00               	movlw	0
  3135  00183E  6E0F               	movwf	?___ftdiv+2,c
  3136  001840  0012               	return	
  3137  001842                     l2456:
  3138  001842  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  3139  001846  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  3140  001848  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  3141  00184A  3411               	rlcf	___ftdiv@f2+1,w,c
  3142  00184C  3613               	rlcf	??___ftdiv& (0+255),f,c
  3143  00184E  E301               	bnc	u2061
  3144  001850  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  3145  001852                     u2061:
  3146  001852  5013               	movf	??___ftdiv,w,c
  3147  001854  6E1B               	movwf	___ftdiv@sign,c
  3148  001856  501B               	movf	___ftdiv@sign,w,c
  3149  001858  A4D8               	btfss	status,2,c
  3150  00185A  D007               	goto	l2462
  3151  00185C  0E00               	movlw	0
  3152  00185E  6E0D               	movwf	?___ftdiv,c
  3153  001860  0E00               	movlw	0
  3154  001862  6E0E               	movwf	?___ftdiv+1,c
  3155  001864  0E00               	movlw	0
  3156  001866  6E0F               	movwf	?___ftdiv+2,c
  3157  001868  0012               	return	
  3158  00186A                     l2462:
  3159  00186A  0E00               	movlw	0
  3160  00186C  6E17               	movwf	___ftdiv@f3,c
  3161  00186E  0E00               	movlw	0
  3162  001870  6E18               	movwf	___ftdiv@f3+1,c
  3163  001872  0E00               	movlw	0
  3164  001874  6E19               	movwf	___ftdiv@f3+2,c
  3165  001876  501B               	movf	___ftdiv@sign,w,c
  3166  001878  0F89               	addlw	137
  3167  00187A  5E1A               	subwf	___ftdiv@exp,f,c
  3168  00187C  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  3169  001880  5012               	movf	___ftdiv@f2+2,w,c
  3170  001882  1A1B               	xorwf	___ftdiv@sign,f,c
  3171  001884  0E80               	movlw	128
  3172  001886  161B               	andwf	___ftdiv@sign,f,c
  3173  001888  8E0E               	bsf	___ftdiv@f1+1,7,c
  3174  00188A  0EFF               	movlw	255
  3175  00188C  160D               	andwf	___ftdiv@f1,f,c
  3176  00188E  0EFF               	movlw	255
  3177  001890  160E               	andwf	___ftdiv@f1+1,f,c
  3178  001892  0E00               	movlw	0
  3179  001894  160F               	andwf	___ftdiv@f1+2,f,c
  3180  001896  8E11               	bsf	___ftdiv@f2+1,7,c
  3181  001898  0EFF               	movlw	255
  3182  00189A  1610               	andwf	___ftdiv@f2,f,c
  3183  00189C  0EFF               	movlw	255
  3184  00189E  1611               	andwf	___ftdiv@f2+1,f,c
  3185  0018A0  0E00               	movlw	0
  3186  0018A2  1612               	andwf	___ftdiv@f2+2,f,c
  3187  0018A4  0E18               	movlw	24
  3188  0018A6  6E16               	movwf	___ftdiv@cntr,c
  3189  0018A8                     l2482:
  3190  0018A8  90D8               	bcf	status,0,c
  3191  0018AA  3617               	rlcf	___ftdiv@f3,f,c
  3192  0018AC  3618               	rlcf	___ftdiv@f3+1,f,c
  3193  0018AE  3619               	rlcf	___ftdiv@f3+2,f,c
  3194  0018B0  5010               	movf	___ftdiv@f2,w,c
  3195  0018B2  5C0D               	subwf	___ftdiv@f1,w,c
  3196  0018B4  5011               	movf	___ftdiv@f2+1,w,c
  3197  0018B6  580E               	subwfb	___ftdiv@f1+1,w,c
  3198  0018B8  5012               	movf	___ftdiv@f2+2,w,c
  3199  0018BA  580F               	subwfb	___ftdiv@f1+2,w,c
  3200  0018BC  A0D8               	btfss	status,0,c
  3201  0018BE  D007               	goto	l601
  3202  0018C0  5010               	movf	___ftdiv@f2,w,c
  3203  0018C2  5E0D               	subwf	___ftdiv@f1,f,c
  3204  0018C4  5011               	movf	___ftdiv@f2+1,w,c
  3205  0018C6  5A0E               	subwfb	___ftdiv@f1+1,f,c
  3206  0018C8  5012               	movf	___ftdiv@f2+2,w,c
  3207  0018CA  5A0F               	subwfb	___ftdiv@f1+2,f,c
  3208  0018CC  8017               	bsf	___ftdiv@f3,0,c
  3209  0018CE                     l601:
  3210  0018CE  90D8               	bcf	status,0,c
  3211  0018D0  360D               	rlcf	___ftdiv@f1,f,c
  3212  0018D2  360E               	rlcf	___ftdiv@f1+1,f,c
  3213  0018D4  360F               	rlcf	___ftdiv@f1+2,f,c
  3214  0018D6  2E16               	decfsz	___ftdiv@cntr,f,c
  3215  0018D8  D7E7               	goto	l2482
  3216  0018DA  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  3217  0018DE  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3218  0018E2  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3219  0018E6  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  3220  0018EA  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  3221  0018EE  EC80  F00C         	call	___ftpack	;wreg free
  3222  0018F2  C001  F00D         	movff	?___ftpack,?___ftdiv
  3223  0018F6  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  3224  0018FA  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  3225  0018FE  0012               	return	
  3226  001900                     __end_of___ftdiv:
  3227                           	opt stack 0
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           prodh	equ	0xFF4
  3233                           prodl	equ	0xFF3
  3234                           intcon2	equ	0xFF1
  3235                           postinc0	equ	0xFEE
  3236                           wreg	equ	0xFE8
  3237                           postdec1	equ	0xFE5
  3238                           fsr1l	equ	0xFE1
  3239                           indf2	equ	0xFDF
  3240                           fsr2h	equ	0xFDA
  3241                           fsr2l	equ	0xFD9
  3242                           status	equ	0xFD8
  3243                           
  3244 ;; *************** function ___awtoft *****************
  3245 ;; Defined at:
  3246 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  c               2    8[COMRAM] int 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  sign            1   11[COMRAM] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  3    8[COMRAM] float 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3260 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;Total ram usage:        4 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    1
  3267 ;; This function calls:
  3268 ;;		___ftpack
  3269 ;; This function is called by:
  3270 ;;		_main
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text18
  3275  001D0C                     __ptext18:
  3276                           	opt stack 0
  3277  001D0C                     ___awtoft:
  3278                           	opt stack 29
  3279                           
  3280                           ;incstack = 0
  3281  001D0C  0E00               	movlw	0
  3282  001D0E  6E0C               	movwf	___awtoft@sign,c
  3283  001D10  AE0A               	btfss	___awtoft@c+1,7,c
  3284  001D12  D006               	goto	l2504
  3285  001D14  6C09               	negf	___awtoft@c,c
  3286  001D16  1E0A               	comf	___awtoft@c+1,f,c
  3287  001D18  B0D8               	btfsc	status,0,c
  3288  001D1A  2A0A               	incf	___awtoft@c+1,f,c
  3289  001D1C  0E01               	movlw	1
  3290  001D1E  6E0C               	movwf	___awtoft@sign,c
  3291  001D20                     l2504:
  3292  001D20  C009  F001         	movff	___awtoft@c,___ftpack@arg
  3293  001D24  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  3294  001D28  6A03               	clrf	___ftpack@arg+2,c
  3295  001D2A  0E8E               	movlw	142
  3296  001D2C  6E04               	movwf	___ftpack@exp,c
  3297  001D2E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  3298  001D32  EC80  F00C         	call	___ftpack	;wreg free
  3299  001D36  C001  F009         	movff	?___ftpack,?___awtoft
  3300  001D3A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  3301  001D3E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  3302  001D42  0012               	return	
  3303  001D44                     __end_of___awtoft:
  3304                           	opt stack 0
  3305                           tblptru	equ	0xFF8
  3306                           tblptrh	equ	0xFF7
  3307                           tblptrl	equ	0xFF6
  3308                           tablat	equ	0xFF5
  3309                           prodh	equ	0xFF4
  3310                           prodl	equ	0xFF3
  3311                           intcon2	equ	0xFF1
  3312                           postinc0	equ	0xFEE
  3313                           wreg	equ	0xFE8
  3314                           postdec1	equ	0xFE5
  3315                           fsr1l	equ	0xFE1
  3316                           indf2	equ	0xFDF
  3317                           fsr2h	equ	0xFDA
  3318                           fsr2l	equ	0xFD9
  3319                           status	equ	0xFD8
  3320                           
  3321 ;; *************** function ___ftpack *****************
  3322 ;; Defined at:
  3323 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  arg             3    0[COMRAM] unsigned um
  3326 ;;  exp             1    3[COMRAM] unsigned char 
  3327 ;;  sign            1    4[COMRAM] unsigned char 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  3    0[COMRAM] float 
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, status,0
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3339 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;Total ram usage:        8 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		___awtoft
  3349 ;;		___ftdiv
  3350 ;;		___ftmul
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text19
  3355  001900                     __ptext19:
  3356                           	opt stack 0
  3357  001900                     ___ftpack:
  3358                           	opt stack 28
  3359                           
  3360                           ;incstack = 0
  3361  001900  5004               	movf	___ftpack@exp,w,c
  3362  001902  B4D8               	btfsc	status,2,c
  3363  001904  D005               	goto	l1932
  3364  001906  5001               	movf	___ftpack@arg,w,c
  3365  001908  1002               	iorwf	___ftpack@arg+1,w,c
  3366  00190A  1003               	iorwf	___ftpack@arg+2,w,c
  3367  00190C  A4D8               	btfss	status,2,c
  3368  00190E  D00C               	goto	l1938
  3369  001910                     l1932:
  3370  001910  0E00               	movlw	0
  3371  001912  6E01               	movwf	?___ftpack,c
  3372  001914  0E00               	movlw	0
  3373  001916  6E02               	movwf	?___ftpack+1,c
  3374  001918  0E00               	movlw	0
  3375  00191A  6E03               	movwf	?___ftpack+2,c
  3376  00191C  0012               	return	
  3377  00191E                     l1936:
  3378  00191E  2A04               	incf	___ftpack@exp,f,c
  3379  001920  90D8               	bcf	status,0,c
  3380  001922  3203               	rrcf	___ftpack@arg+2,f,c
  3381  001924  3202               	rrcf	___ftpack@arg+1,f,c
  3382  001926  3201               	rrcf	___ftpack@arg,f,c
  3383  001928                     l1938:
  3384  001928  0E00               	movlw	0
  3385  00192A  1401               	andwf	___ftpack@arg,w,c
  3386  00192C  6E06               	movwf	??___ftpack& (0+255),c
  3387  00192E  0E00               	movlw	0
  3388  001930  1402               	andwf	___ftpack@arg+1,w,c
  3389  001932  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3390  001934  0EFE               	movlw	254
  3391  001936  1403               	andwf	___ftpack@arg+2,w,c
  3392  001938  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3393  00193A  5006               	movf	??___ftpack,w,c
  3394  00193C  1007               	iorwf	??___ftpack+1,w,c
  3395  00193E  1008               	iorwf	??___ftpack+2,w,c
  3396  001940  B4D8               	btfsc	status,2,c
  3397  001942  D00C               	goto	l1944
  3398  001944  D7EC               	goto	l1936
  3399  001946                     l1940:
  3400  001946  2A04               	incf	___ftpack@exp,f,c
  3401  001948  0E01               	movlw	1
  3402  00194A  2601               	addwf	___ftpack@arg,f,c
  3403  00194C  0E00               	movlw	0
  3404  00194E  2202               	addwfc	___ftpack@arg+1,f,c
  3405  001950  0E00               	movlw	0
  3406  001952  2203               	addwfc	___ftpack@arg+2,f,c
  3407  001954  90D8               	bcf	status,0,c
  3408  001956  3203               	rrcf	___ftpack@arg+2,f,c
  3409  001958  3202               	rrcf	___ftpack@arg+1,f,c
  3410  00195A  3201               	rrcf	___ftpack@arg,f,c
  3411  00195C                     l1944:
  3412  00195C  0E00               	movlw	0
  3413  00195E  1401               	andwf	___ftpack@arg,w,c
  3414  001960  6E06               	movwf	??___ftpack& (0+255),c
  3415  001962  0E00               	movlw	0
  3416  001964  1402               	andwf	___ftpack@arg+1,w,c
  3417  001966  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3418  001968  0EFF               	movlw	255
  3419  00196A  1403               	andwf	___ftpack@arg+2,w,c
  3420  00196C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3421  00196E  5006               	movf	??___ftpack,w,c
  3422  001970  1007               	iorwf	??___ftpack+1,w,c
  3423  001972  1008               	iorwf	??___ftpack+2,w,c
  3424  001974  B4D8               	btfsc	status,2,c
  3425  001976  D006               	goto	l1948
  3426  001978  D7E6               	goto	l1940
  3427  00197A                     l1946:
  3428  00197A  0604               	decf	___ftpack@exp,f,c
  3429  00197C  90D8               	bcf	status,0,c
  3430  00197E  3601               	rlcf	___ftpack@arg,f,c
  3431  001980  3602               	rlcf	___ftpack@arg+1,f,c
  3432  001982  3603               	rlcf	___ftpack@arg+2,f,c
  3433  001984                     l1948:
  3434  001984  BE02               	btfsc	___ftpack@arg+1,7,c
  3435  001986  D003               	goto	l543
  3436  001988  0E02               	movlw	2
  3437  00198A  6004               	cpfslt	___ftpack@exp,c
  3438  00198C  D7F6               	goto	l1946
  3439  00198E                     l543:
  3440  00198E  A004               	btfss	___ftpack@exp,0,c
  3441  001990  9E02               	bcf	___ftpack@arg+1,7,c
  3442  001992  90D8               	bcf	status,0,c
  3443  001994  3204               	rrcf	___ftpack@exp,f,c
  3444  001996  5004               	movf	___ftpack@exp,w,c
  3445  001998  1203               	iorwf	___ftpack@arg+2,f,c
  3446  00199A  5005               	movf	___ftpack@sign,w,c
  3447  00199C  A4D8               	btfss	status,2,c
  3448  00199E  8E03               	bsf	___ftpack@arg+2,7,c
  3449  0019A0  C001  F001         	movff	___ftpack@arg,?___ftpack
  3450  0019A4  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3451  0019A8  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3452  0019AC  0012               	return	
  3453  0019AE                     __end_of___ftpack:
  3454                           	opt stack 0
  3455                           tblptru	equ	0xFF8
  3456                           tblptrh	equ	0xFF7
  3457                           tblptrl	equ	0xFF6
  3458                           tablat	equ	0xFF5
  3459                           prodh	equ	0xFF4
  3460                           prodl	equ	0xFF3
  3461                           intcon2	equ	0xFF1
  3462                           postinc0	equ	0xFEE
  3463                           wreg	equ	0xFE8
  3464                           postdec1	equ	0xFE5
  3465                           fsr1l	equ	0xFE1
  3466                           indf2	equ	0xFDF
  3467                           fsr2h	equ	0xFDA
  3468                           fsr2l	equ	0xFD9
  3469                           status	equ	0xFD8
  3470                           
  3471 ;; *************** function _GetKey *****************
  3472 ;; Defined at:
  3473 ;;		line 213 in file "Main.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  S               1    4[COMRAM] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      unsigned char 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;Total ram usage:        1 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    2
  3494 ;; This function calls:
  3495 ;;		_READ_SWITCHES
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text20
  3502  001E64                     __ptext20:
  3503                           	opt stack 0
  3504  001E64                     _GetKey:
  3505                           	opt stack 28
  3506                           
  3507                           ;Main.c: 214: char S = 'n';
  3508                           
  3509                           ;incstack = 0
  3510  001E64  0E6E               	movlw	110
  3511  001E66  D002               	goto	L5
  3512  001E68                     l2322:
  3513                           
  3514                           ;Main.c: 216: S = READ_SWITCHES();
  3515  001E68  ECBE  F009         	call	_READ_SWITCHES	;wreg free
  3516  001E6C                     L5:
  3517  001E6C  6E05               	movwf	GetKey@S,c
  3518  001E6E  0E6E               	movlw	110
  3519  001E70  1805               	xorwf	GetKey@S,w,c
  3520  001E72  B4D8               	btfsc	status,2,c
  3521  001E74  D7F9               	goto	l2322
  3522                           
  3523                           ;Main.c: 217: return S;
  3524  001E76  5005               	movf	GetKey@S,w,c
  3525  001E78  0012               	return	
  3526  001E7A                     __end_of_GetKey:
  3527                           	opt stack 0
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           prodh	equ	0xFF4
  3533                           prodl	equ	0xFF3
  3534                           intcon2	equ	0xFF1
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           postdec1	equ	0xFE5
  3538                           fsr1l	equ	0xFE1
  3539                           indf2	equ	0xFDF
  3540                           fsr2h	equ	0xFDA
  3541                           fsr2l	equ	0xFD9
  3542                           status	equ	0xFD8
  3543                           
  3544 ;; *************** function _READ_SWITCHES *****************
  3545 ;; Defined at:
  3546 ;;		line 188 in file "Main.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      unsigned char 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    1
  3567 ;; This function calls:
  3568 ;;		_delay_ms
  3569 ;; This function is called by:
  3570 ;;		_GetKey
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text21
  3575  00137C                     __ptext21:
  3576                           	opt stack 0
  3577  00137C                     _READ_SWITCHES:
  3578                           	opt stack 28
  3579                           
  3580                           ;Main.c: 189: PORTBbits.RB0 = 0;PORTBbits.RB1 = 1;PORTBbits.RB2 = 1;PORTBbits.RB3 = 1;
  3581                           
  3582                           ;incstack = 0
  3583  00137C  9081               	bcf	3969,0,c	;volatile
  3584  00137E  8281               	bsf	3969,1,c	;volatile
  3585  001380  8481               	bsf	3969,2,c	;volatile
  3586  001382  8681               	bsf	3969,3,c	;volatile
  3587                           
  3588                           ;Main.c: 190: if (PORTBbits.RB4 == 0) {delay_ms(250);while (PORTBbits.RB4 == 0);return '
      +                          7';}
  3589  001384  B881               	btfsc	3969,4,c	;volatile
  3590  001386  D00A               	goto	l191
  3591  001388  0E00               	movlw	0
  3592  00138A  6E02               	movwf	delay_ms@n+1,c
  3593  00138C  0EFA               	movlw	250
  3594  00138E  6E01               	movwf	delay_ms@n,c
  3595  001390  EC0F  F00F         	call	_delay_ms	;wreg free
  3596  001394                     l192:
  3597  001394  A881               	btfss	3969,4,c	;volatile
  3598  001396  D7FE               	goto	l192
  3599  001398  0E37               	movlw	55
  3600  00139A  0012               	return	
  3601  00139C                     l191:
  3602                           
  3603                           ;Main.c: 191: if (PORTBbits.RB5 == 0) {delay_ms(250);while (PORTBbits.RB5 == 0);return '
      +                          8';}
  3604  00139C  BA81               	btfsc	3969,5,c	;volatile
  3605  00139E  D00A               	goto	l196
  3606  0013A0  0E00               	movlw	0
  3607  0013A2  6E02               	movwf	delay_ms@n+1,c
  3608  0013A4  0EFA               	movlw	250
  3609  0013A6  6E01               	movwf	delay_ms@n,c
  3610  0013A8  EC0F  F00F         	call	_delay_ms	;wreg free
  3611  0013AC                     l197:
  3612  0013AC  AA81               	btfss	3969,5,c	;volatile
  3613  0013AE  D7FE               	goto	l197
  3614  0013B0  0E38               	movlw	56
  3615  0013B2  0012               	return	
  3616  0013B4                     l196:
  3617                           
  3618                           ;Main.c: 192: if (PORTBbits.RB6 == 0) {delay_ms(250);while (PORTBbits.RB6 == 0);return '
      +                          9';}
  3619  0013B4  BC81               	btfsc	3969,6,c	;volatile
  3620  0013B6  D00A               	goto	l200
  3621  0013B8  0E00               	movlw	0
  3622  0013BA  6E02               	movwf	delay_ms@n+1,c
  3623  0013BC  0EFA               	movlw	250
  3624  0013BE  6E01               	movwf	delay_ms@n,c
  3625  0013C0  EC0F  F00F         	call	_delay_ms	;wreg free
  3626  0013C4                     l201:
  3627  0013C4  AC81               	btfss	3969,6,c	;volatile
  3628  0013C6  D7FE               	goto	l201
  3629  0013C8  0E39               	movlw	57
  3630  0013CA  0012               	return	
  3631  0013CC                     l200:
  3632                           
  3633                           ;Main.c: 193: if (PORTCbits.RC0 == 0) {delay_ms(250);while (PORTCbits.RC0 == 0);return '
      +                          /';}
  3634  0013CC  B082               	btfsc	3970,0,c	;volatile
  3635  0013CE  D00A               	goto	l204
  3636  0013D0  0E00               	movlw	0
  3637  0013D2  6E02               	movwf	delay_ms@n+1,c
  3638  0013D4  0EFA               	movlw	250
  3639  0013D6  6E01               	movwf	delay_ms@n,c
  3640  0013D8  EC0F  F00F         	call	_delay_ms	;wreg free
  3641  0013DC                     l205:
  3642  0013DC  A082               	btfss	3970,0,c	;volatile
  3643  0013DE  D7FE               	goto	l205
  3644  0013E0  0E2F               	movlw	47
  3645  0013E2  0012               	return	
  3646  0013E4                     l204:
  3647                           
  3648                           ;Main.c: 194: PORTBbits.RB0 = 1;PORTBbits.RB1 = 0;PORTBbits.RB2 = 1;PORTBbits.RB3 = 1;
  3649  0013E4  8081               	bsf	3969,0,c	;volatile
  3650  0013E6  9281               	bcf	3969,1,c	;volatile
  3651  0013E8  8481               	bsf	3969,2,c	;volatile
  3652  0013EA  8681               	bsf	3969,3,c	;volatile
  3653                           
  3654                           ;Main.c: 195: if (PORTBbits.RB4 == 0) {delay_ms(250);while (PORTBbits.RB4 == 0);return '
      +                          4';}
  3655  0013EC  B881               	btfsc	3969,4,c	;volatile
  3656  0013EE  D00A               	goto	l208
  3657  0013F0  0E00               	movlw	0
  3658  0013F2  6E02               	movwf	delay_ms@n+1,c
  3659  0013F4  0EFA               	movlw	250
  3660  0013F6  6E01               	movwf	delay_ms@n,c
  3661  0013F8  EC0F  F00F         	call	_delay_ms	;wreg free
  3662  0013FC                     l209:
  3663  0013FC  A881               	btfss	3969,4,c	;volatile
  3664  0013FE  D7FE               	goto	l209
  3665  001400  0E34               	movlw	52
  3666  001402  0012               	return	
  3667  001404                     l208:
  3668                           
  3669                           ;Main.c: 196: if (PORTBbits.RB5 == 0) {delay_ms(250);while (PORTBbits.RB5 == 0);return '
      +                          5';}
  3670  001404  BA81               	btfsc	3969,5,c	;volatile
  3671  001406  D00A               	goto	l212
  3672  001408  0E00               	movlw	0
  3673  00140A  6E02               	movwf	delay_ms@n+1,c
  3674  00140C  0EFA               	movlw	250
  3675  00140E  6E01               	movwf	delay_ms@n,c
  3676  001410  EC0F  F00F         	call	_delay_ms	;wreg free
  3677  001414                     l213:
  3678  001414  AA81               	btfss	3969,5,c	;volatile
  3679  001416  D7FE               	goto	l213
  3680  001418  0E35               	movlw	53
  3681  00141A  0012               	return	
  3682  00141C                     l212:
  3683                           
  3684                           ;Main.c: 197: if (PORTBbits.RB6 == 0) {delay_ms(250);while (PORTBbits.RB6 == 0);return '
      +                          6';}
  3685  00141C  BC81               	btfsc	3969,6,c	;volatile
  3686  00141E  D00A               	goto	l216
  3687  001420  0E00               	movlw	0
  3688  001422  6E02               	movwf	delay_ms@n+1,c
  3689  001424  0EFA               	movlw	250
  3690  001426  6E01               	movwf	delay_ms@n,c
  3691  001428  EC0F  F00F         	call	_delay_ms	;wreg free
  3692  00142C                     l217:
  3693  00142C  AC81               	btfss	3969,6,c	;volatile
  3694  00142E  D7FE               	goto	l217
  3695  001430  0E36               	movlw	54
  3696  001432  0012               	return	
  3697  001434                     l216:
  3698                           
  3699                           ;Main.c: 198: if (PORTCbits.RC0 == 0) {delay_ms(250);while (PORTCbits.RC0 == 0);return '
      +                          x';}
  3700  001434  B082               	btfsc	3970,0,c	;volatile
  3701  001436  D00A               	goto	l220
  3702  001438  0E00               	movlw	0
  3703  00143A  6E02               	movwf	delay_ms@n+1,c
  3704  00143C  0EFA               	movlw	250
  3705  00143E  6E01               	movwf	delay_ms@n,c
  3706  001440  EC0F  F00F         	call	_delay_ms	;wreg free
  3707  001444                     l221:
  3708  001444  A082               	btfss	3970,0,c	;volatile
  3709  001446  D7FE               	goto	l221
  3710  001448  0E78               	movlw	120
  3711  00144A  0012               	return	
  3712  00144C                     l220:
  3713                           
  3714                           ;Main.c: 199: PORTBbits.RB0 = 1;PORTBbits.RB1 = 1;PORTBbits.RB2 = 0;PORTBbits.RB3 = 1;
  3715  00144C  8081               	bsf	3969,0,c	;volatile
  3716  00144E  8281               	bsf	3969,1,c	;volatile
  3717  001450  9481               	bcf	3969,2,c	;volatile
  3718  001452  8681               	bsf	3969,3,c	;volatile
  3719                           
  3720                           ;Main.c: 200: if (PORTBbits.RB4 == 0) {delay_ms(250);while (PORTBbits.RB4 == 0);return '
      +                          1';}
  3721  001454  B881               	btfsc	3969,4,c	;volatile
  3722  001456  D00A               	goto	l224
  3723  001458  0E00               	movlw	0
  3724  00145A  6E02               	movwf	delay_ms@n+1,c
  3725  00145C  0EFA               	movlw	250
  3726  00145E  6E01               	movwf	delay_ms@n,c
  3727  001460  EC0F  F00F         	call	_delay_ms	;wreg free
  3728  001464                     l225:
  3729  001464  A881               	btfss	3969,4,c	;volatile
  3730  001466  D7FE               	goto	l225
  3731  001468  0E31               	movlw	49
  3732  00146A  0012               	return	
  3733  00146C                     l224:
  3734                           
  3735                           ;Main.c: 201: if (PORTBbits.RB5 == 0) {delay_ms(250);while (PORTBbits.RB5 == 0);return '
      +                          2';}
  3736  00146C  BA81               	btfsc	3969,5,c	;volatile
  3737  00146E  D00A               	goto	l228
  3738  001470  0E00               	movlw	0
  3739  001472  6E02               	movwf	delay_ms@n+1,c
  3740  001474  0EFA               	movlw	250
  3741  001476  6E01               	movwf	delay_ms@n,c
  3742  001478  EC0F  F00F         	call	_delay_ms	;wreg free
  3743  00147C                     l229:
  3744  00147C  AA81               	btfss	3969,5,c	;volatile
  3745  00147E  D7FE               	goto	l229
  3746  001480  0E32               	movlw	50
  3747  001482  0012               	return	
  3748  001484                     l228:
  3749                           
  3750                           ;Main.c: 202: if (PORTBbits.RB6 == 0) {delay_ms(250);while (PORTBbits.RB6 == 0);return '
      +                          3';}
  3751  001484  BC81               	btfsc	3969,6,c	;volatile
  3752  001486  D00A               	goto	l232
  3753  001488  0E00               	movlw	0
  3754  00148A  6E02               	movwf	delay_ms@n+1,c
  3755  00148C  0EFA               	movlw	250
  3756  00148E  6E01               	movwf	delay_ms@n,c
  3757  001490  EC0F  F00F         	call	_delay_ms	;wreg free
  3758  001494                     l233:
  3759  001494  AC81               	btfss	3969,6,c	;volatile
  3760  001496  D7FE               	goto	l233
  3761  001498  0E33               	movlw	51
  3762  00149A  0012               	return	
  3763  00149C                     l232:
  3764                           
  3765                           ;Main.c: 203: if (PORTCbits.RC0 == 0) {delay_ms(250);while (PORTCbits.RC0 == 0);return '
      +                          -';}
  3766  00149C  B082               	btfsc	3970,0,c	;volatile
  3767  00149E  D00A               	goto	l236
  3768  0014A0  0E00               	movlw	0
  3769  0014A2  6E02               	movwf	delay_ms@n+1,c
  3770  0014A4  0EFA               	movlw	250
  3771  0014A6  6E01               	movwf	delay_ms@n,c
  3772  0014A8  EC0F  F00F         	call	_delay_ms	;wreg free
  3773  0014AC                     l237:
  3774  0014AC  A082               	btfss	3970,0,c	;volatile
  3775  0014AE  D7FE               	goto	l237
  3776  0014B0  0E2D               	movlw	45
  3777  0014B2  0012               	return	
  3778  0014B4                     l236:
  3779                           
  3780                           ;Main.c: 204: PORTBbits.RB0 = 1;PORTBbits.RB1 = 1;PORTBbits.RB2 = 1;PORTBbits.RB3 = 0;
  3781  0014B4  8081               	bsf	3969,0,c	;volatile
  3782  0014B6  8281               	bsf	3969,1,c	;volatile
  3783  0014B8  8481               	bsf	3969,2,c	;volatile
  3784  0014BA  9681               	bcf	3969,3,c	;volatile
  3785                           
  3786                           ;Main.c: 205: if (PORTBbits.RB4 == 0) {delay_ms(250);while (PORTBbits.RB4 == 0);return '
      +                          C';}
  3787  0014BC  B881               	btfsc	3969,4,c	;volatile
  3788  0014BE  D00A               	goto	l240
  3789  0014C0  0E00               	movlw	0
  3790  0014C2  6E02               	movwf	delay_ms@n+1,c
  3791  0014C4  0EFA               	movlw	250
  3792  0014C6  6E01               	movwf	delay_ms@n,c
  3793  0014C8  EC0F  F00F         	call	_delay_ms	;wreg free
  3794  0014CC                     l241:
  3795  0014CC  A881               	btfss	3969,4,c	;volatile
  3796  0014CE  D7FE               	goto	l241
  3797  0014D0  0E43               	movlw	67
  3798  0014D2  0012               	return	
  3799  0014D4                     l240:
  3800                           
  3801                           ;Main.c: 206: if (PORTBbits.RB5 == 0) {delay_ms(250);while (PORTBbits.RB5 == 0);return '
      +                          0';}
  3802  0014D4  BA81               	btfsc	3969,5,c	;volatile
  3803  0014D6  D00A               	goto	l244
  3804  0014D8  0E00               	movlw	0
  3805  0014DA  6E02               	movwf	delay_ms@n+1,c
  3806  0014DC  0EFA               	movlw	250
  3807  0014DE  6E01               	movwf	delay_ms@n,c
  3808  0014E0  EC0F  F00F         	call	_delay_ms	;wreg free
  3809  0014E4                     l245:
  3810  0014E4  AA81               	btfss	3969,5,c	;volatile
  3811  0014E6  D7FE               	goto	l245
  3812  0014E8  0E30               	movlw	48
  3813  0014EA  0012               	return	
  3814  0014EC                     l244:
  3815                           
  3816                           ;Main.c: 207: if (PORTBbits.RB6 == 0) {delay_ms(250);while (PORTBbits.RB6 == 0);return '
      +                          =';}
  3817  0014EC  BC81               	btfsc	3969,6,c	;volatile
  3818  0014EE  D00A               	goto	l248
  3819  0014F0  0E00               	movlw	0
  3820  0014F2  6E02               	movwf	delay_ms@n+1,c
  3821  0014F4  0EFA               	movlw	250
  3822  0014F6  6E01               	movwf	delay_ms@n,c
  3823  0014F8  EC0F  F00F         	call	_delay_ms	;wreg free
  3824  0014FC                     l249:
  3825  0014FC  AC81               	btfss	3969,6,c	;volatile
  3826  0014FE  D7FE               	goto	l249
  3827  001500  0E3D               	movlw	61
  3828  001502  0012               	return	
  3829  001504                     l248:
  3830                           
  3831                           ;Main.c: 208: if (PORTCbits.RC0 == 0) {delay_ms(250);while (PORTCbits.RC0 == 0);return '
      +                          +';
  3832  001504  B082               	btfsc	3970,0,c	;volatile
  3833  001506  D00A               	goto	l2076
  3834  001508  0E00               	movlw	0
  3835  00150A  6E02               	movwf	delay_ms@n+1,c
  3836  00150C  0EFA               	movlw	250
  3837  00150E  6E01               	movwf	delay_ms@n,c
  3838  001510  EC0F  F00F         	call	_delay_ms	;wreg free
  3839  001514                     l253:
  3840  001514  A082               	btfss	3970,0,c	;volatile
  3841  001516  D7FE               	goto	l253
  3842  001518  0E2B               	movlw	43
  3843  00151A  0012               	return	
  3844  00151C                     l2076:
  3845                           
  3846                           ;Main.c: 209: }
  3847                           ;Main.c: 210: return 'n';
  3848  00151C  0E6E               	movlw	110
  3849  00151E  0012               	return	
  3850  001520                     __end_of_READ_SWITCHES:
  3851                           	opt stack 0
  3852                           tblptru	equ	0xFF8
  3853                           tblptrh	equ	0xFF7
  3854                           tblptrl	equ	0xFF6
  3855                           tablat	equ	0xFF5
  3856                           prodh	equ	0xFF4
  3857                           prodl	equ	0xFF3
  3858                           intcon2	equ	0xFF1
  3859                           postinc0	equ	0xFEE
  3860                           wreg	equ	0xFE8
  3861                           postdec1	equ	0xFE5
  3862                           fsr1l	equ	0xFE1
  3863                           indf2	equ	0xFDF
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8
  3867                           
  3868 ;; *************** function _delay_ms *****************
  3869 ;; Defined at:
  3870 ;;		line 12 in file "lcd_x8.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  n               2    0[COMRAM] unsigned int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  x               2    2[COMRAM] int 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;Total ram usage:        4 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_lcd_send_byte
  3894 ;;		_lcd_init
  3895 ;;		_lcd_putc
  3896 ;;		_main
  3897 ;;		_READ_SWITCHES
  3898 ;;		_scan_key
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text22
  3903  001E1E                     __ptext22:
  3904                           	opt stack 0
  3905  001E1E                     _delay_ms:
  3906                           	opt stack 27
  3907                           
  3908                           ;lcd_x8.c: 13: int x;
  3909                           ;lcd_x8.c: 14: for (x = 0; x <= n; x++) {
  3910                           
  3911                           ;incstack = 0
  3912  001E1E  0E00               	movlw	0
  3913  001E20  6E04               	movwf	delay_ms@x+1,c
  3914  001E22  0E00               	movlw	0
  3915  001E24  6E03               	movwf	delay_ms@x,c
  3916  001E26  D006               	goto	l9
  3917  001E28                     l1888:
  3918                           
  3919                           ;lcd_x8.c: 15: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
  3920  001E28  0EFA               	movlw	250
  3921  001E2A                     u2447:
  3922  001E2A  0004               	clrwdt	
  3923  001E2C  2EE8               	decfsz	wreg,f,c
  3924  001E2E  D7FD               	goto	u2447
  3925  001E30  4A03               	infsnz	delay_ms@x,f,c
  3926  001E32  2A04               	incf	delay_ms@x+1,f,c
  3927  001E34                     l9:
  3928  001E34  5003               	movf	delay_ms@x,w,c
  3929  001E36  5C01               	subwf	delay_ms@n,w,c
  3930  001E38  5004               	movf	delay_ms@x+1,w,c
  3931  001E3A  5802               	subwfb	delay_ms@n+1,w,c
  3932  001E3C  A0D8               	btfss	status,0,c
  3933  001E3E  0012               	return	
  3934  001E40  D7F3               	goto	l1888
  3935  001E42                     __end_of_delay_ms:
  3936                           	opt stack 0
  3937                           tblptru	equ	0xFF8
  3938                           tblptrh	equ	0xFF7
  3939                           tblptrl	equ	0xFF6
  3940                           tablat	equ	0xFF5
  3941                           prodh	equ	0xFF4
  3942                           prodl	equ	0xFF3
  3943                           intcon2	equ	0xFF1
  3944                           postinc0	equ	0xFEE
  3945                           wreg	equ	0xFE8
  3946                           postdec1	equ	0xFE5
  3947                           fsr1l	equ	0xFE1
  3948                           indf2	equ	0xFDF
  3949                           fsr2h	equ	0xFDA
  3950                           fsr2l	equ	0xFD9
  3951                           status	equ	0xFD8
  3952                           tblptru	equ	0xFF8
  3953                           tblptrh	equ	0xFF7
  3954                           tblptrl	equ	0xFF6
  3955                           tablat	equ	0xFF5
  3956                           prodh	equ	0xFF4
  3957                           prodl	equ	0xFF3
  3958                           intcon2	equ	0xFF1
  3959                           postinc0	equ	0xFEE
  3960                           wreg	equ	0xFE8
  3961                           postdec1	equ	0xFE5
  3962                           fsr1l	equ	0xFE1
  3963                           indf2	equ	0xFDF
  3964                           fsr2h	equ	0xFDA
  3965                           fsr2l	equ	0xFD9
  3966                           status	equ	0xFD8
  3967                           
  3968                           	psect	rparam
  3969  0000                     tblptru	equ	0xFF8
  3970                           tblptrh	equ	0xFF7
  3971                           tblptrl	equ	0xFF6
  3972                           tablat	equ	0xFF5
  3973                           prodh	equ	0xFF4
  3974                           prodl	equ	0xFF3
  3975                           intcon2	equ	0xFF1
  3976                           postinc0	equ	0xFEE
  3977                           wreg	equ	0xFE8
  3978                           postdec1	equ	0xFE5
  3979                           fsr1l	equ	0xFE1
  3980                           indf2	equ	0xFDF
  3981                           fsr2h	equ	0xFDA
  3982                           fsr2l	equ	0xFD9
  3983                           status	equ	0xFD8


Data Sizes:
    Strings     88
    Constant    0
    Data        4
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     54      83
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[13]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[15]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> Buffer1(COMRAM[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 16
		 -> Buffer1(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_disp_num
    _lcd_puts->_lcd_putc
    _lcd_init->_lcd_send_byte
    _disp_num->___fttol
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles
    ___fttol->___ftmul
    ___ftmul->___ftpack
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _READ_SWITCHES->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   61216
                                             48 COMRAM     6     6      0
                             _GetKey
                           ___awtoft
                            ___ftdiv
                             ___wmul
                           _delay_ms
                           _disp_num
                            _get_num
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                         _setupPorts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    16     10     974
                                              0 COMRAM    14     4     10
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2   10544
                                             14 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    5982
                                             10 COMRAM     1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (1) _get_num                                              3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _disp_num                                            10     7      3   18711
                                             38 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul
                            ___fttol
                             ___wmul (ARG)
                         _lcd_gotoxy
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0   10115
                                             13 COMRAM     1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    4248
                                             10 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    3217
                                              8 COMRAM     2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      45
                                              6 COMRAM     2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (5) _delay_cycles                                         6     6      0      30
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     380
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2587
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     424
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2541
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2442
                                              8 COMRAM     4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _GetKey                                               1     1      0    2652
                                              4 COMRAM     1     1      0
                      _READ_SWITCHES
 ---------------------------------------------------------------------------------
 (2) _READ_SWITCHES                                        0     0      0    2606
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             4     2      2    2606
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetKey
     _READ_SWITCHES
       _delay_ms
   ___awtoft
     ___ftpack
     ___wmul (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___ftpack (ARG)
   ___wmul
   _delay_ms
   _disp_num
     ___awdiv
     ___awmod
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
     ___wmul (ARG)
     _lcd_gotoxy (ARG)
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_putc (ARG)
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _get_num
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_puts
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _setupPorts
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     36      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53      34        0.0%
DATA                 0      0      53       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat May 07 00:54:15 2022

                       l9 1E34                        l16 1D86            ?_lcd_send_byte 0009  
                      _k1 0037                        _k2 0039              ___awdiv@sign 0006  
                      _ke 003D       ___wmul@multiplicand 0003               __CFG_BORV$3 000000  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000               __CFG_OSC$XT 000000               __CFG_LVP$ON 000000  
             __CFG_WDT$ON 000000                       l200 13CC                       l201 13C4  
                     l220 144C                       l212 141C                       l204 13E4  
                     l221 1444                       l213 1414                       l205 13DC  
                     l240 14D4                       l232 149C                       l224 146C  
                     l216 1434                       l208 1404                       l241 14CC  
                     l233 1494                       l225 1464                       l217 142C  
                     l209 13FC                       l244 14EC                       l236 14B4  
                     l228 1484                       l253 1514                       l245 14E4  
                     l237 14AC                       l229 147C                       l174 10BC  
                     l191 139C                       l248 1504                       l192 1394  
                     l249 14FC                       l601 18CE                       l196 13B4  
                     l197 13AC                       l543 198E                       l299 1598  
                     l936 1D8C              __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000  
      disp_num@TenthDigit 002E                       _lcd 000F83                       _key 003E  
            ___awmod@sign 0006                       prod 000FF3                       wreg 000FE8  
             lcd_gotoxy@x 000C               lcd_gotoxy@y 000B              ___ftdiv@cntr 0016  
             disp_num@num 0027              ___ftdiv@sign 001B                      l2110 17B8  
                    l2200 1BB2                      l2120 17E0                      l2106 17A8  
                    l2204 1BC0                      l2116 17D0                      l2300 1A66  
                    l2150 1B18                      l2142 1AFA                      l2214 165E  
                    l2302 1A6C                      l2160 1B38                      l2152 1B1C  
                    l2136 1AEA                      l2232 16C4                      l2312 1A8E  
                    l2322 1E68                      l2250 1714                      l2242 16EC  
                    l2306 1A80                      l2314 1AB0                      l2076 151C  
                    l2148 1B10                      l2164 1B42                      l2180 1B6E  
                    l2092 1776                      l2244 16F8                      l2236 16D4  
                    l2332 19B2                      l2260 1BDE                      l2316 1AC8  
                    l2190 1B90                      l2086 174E                      l2246 16FE  
                    l2422 15CC                      l2350 19CC                      l2270 1BFC  
                    l2504 1D20                      l2168 1B50                      l2192 1B94  
                    l2184 1B7A                      l2344 19C4                      l2264 1BE6  
                    l2600 12B8                      l2362 19DC                      l2338 19BC  
                    l2274 1C06                      l2290 1E0E                      l2610 1352  
                    l2602 12EA                      l2196 1BA8                      l2188 1B88  
                    l2380 19F4                      l2356 19D4                      l2620 1374  
                    l2524 1094                      l2462 186A                      l2374 19EC  
                    l2278 1C0E                      l2286 1DFC                      l2294 1A56  
                    l2614 1362                      l2606 1330                      l2534 10B6  
                    l2456 1842                      l1912 1CCE                      l2368 19E4  
                    l2608 134A                      l2528 10A4                      l2482 18A8  
                    l1914 1CD2                      l1922 1CE0                      l2386 19FC  
                    l2394 1A04                      l2298 1A60                      l1940 1946  
                    l1932 1910                      l1908 1CBC                      l1916 1CD6  
                    l1924 1CFA                      l1918 1CDA                      l1944 195C  
                    l1936 191E                      l1946 197A                      l1938 1928  
                    l1970 1C54                      l1948 1984                      l1972 1C60  
                    l2596 1264                      l1966 1C30                      l2598 1286  
                    l1888 1E28                      l1968 1C48                      l1976 1C6C  
                    STR_1 1001                      STR_2 1022                      STR_3 1031  
                    STR_4 104D                      STR_5 1012                      STR_6 1040  
                    u2041 182A                      u2061 1852                      _LATA 000F89  
                    _LATB 000F8A                      _LATC 000F8B                      _LATD 000F8C  
                    u1265 1C8C                      _LATE 000F8D                      u1266 1C8E  
                    u1701 175E                      u2437 1CB4                      u2447 1E2A  
                    u1681 1736                      u1861 1642                      u1880 167C  
                    u1885 1674          ?_lcd_send_nibble 0001                      _key1 003F  
                    _main 105A              ___ftpack@arg 0001              ___ftpack@exp 0004  
                    fsr2h 000FDA                      fsr1l 000FE1                      indf2 000FDF  
                    fsr2l 000FD9                      prodh 000FF4                      prodl 000FF3  
                    start 0300             __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000  
            ___ftmul@cntr 0016              ___param_bank 000010              ___ftmul@sign 0017  
            ___fttol@exp1 0026              ___fttol@lval 0022    __size_of_READ_SWITCHES 01A4  
            disp_num@numb 002F      __end_of_delay_cycles 1DA8                     ?_main 0001  
         __end_of___awdiv 1B5A           __end_of___awmod 1BCA           __end_of___ftdiv 1900  
         __end_of___ftmul 181A           ___awdiv@divisor 0003           __end_of___fttol 1726  
         ___awdiv@counter 0005                     _RCREG 000FAE                     _RCSTA 000FAB  
                   _SPBRG 000FAF                     _TRISA 000F92                     _TRISB 000F93  
                   _TRISC 000F94                     _TRISD 000F95                     _TRISE 000F96  
                   _TXREG 000FAD                     _TXSTA 000FAC             __CFG_PWRT$OFF 000000  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000  
         __end_of_get_num 1A4C             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000             ___awtoft@sign 000C  
           ___ftpack@sign 0005                     main@i 0033                     tablat 000FF5  
                   status 000FD8           __end_of_sprintf 1AD6            __CFG_PBADEN$ON 000000  
         __initialization 1D44              __end_of_main 137C           ??_lcd_send_byte 000A  
                  ??_main 0031             ___fttol@sign1 0021             __activetblptr 000002  
        ___awdiv@dividend 0001          __end_of___awtoft 1D44          __end_of___ftpack 19AE  
           _READ_SWITCHES 137C                    _SPBRGH 000FB0                    _GetKey 1E64  
        __end_of_delay_ms 1E42            __CFG_XINST$OFF 000000          __end_of_lcd_init 1C2C  
        __end_of_disp_num 1632          __end_of_lcd_putc 1C82          __end_of_lcd_puts 1E1E  
                  ___wmul 1DD4                 ??___awdiv 0005            __CFG_STVREN$ON 000000  
               ??___awmod 0005                 ??___ftdiv 0013                 ??___ftmul 000F  
               ??___fttol 001C                    clear_0 1D4A          ___awdiv@quotient 0007  
         ___awmod@divisor 0003           ___awmod@counter 0005                 ??_get_num 0003  
   ___ftmul@f3_as_product 0013              __pdataCOMRAM 0050              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
               ??_sprintf 000B            ?_READ_SWITCHES 0001                __accesstop 0080  
 __end_of__initialization 1D70             ___rparam_used 000001                ___ftdiv@f1 000D  
              ___ftdiv@f2 0010                ___ftdiv@f3 0017                ___awtoft@c 0009  
              ___ftmul@f1 0009                ___ftmul@f2 000C                ___fttol@f1 0018  
          __pcstackCOMRAM 0001     __size_of_delay_cycles 002E         lcd_gotoxy@address 000D  
            _delay_cycles 1D7A                   ?_GetKey 0001            lcd_send_byte@n 0009  
                 ?___wmul 0001          lcd_send_nibble@n 0008                 ?___awtoft 0009  
               ?___ftpack 0001                   _INTCON2 000FF1                   GetKey@S 0005  
               ?_delay_ms 0001                _lcd_gotoxy 1CCA           ??_READ_SWITCHES 0005  
               ?_lcd_init 0001                 ?_disp_num 0027                 ?_lcd_putc 0001  
               ?_lcd_puts 000F                   _Buffer1 0040           __size_of_GetKey 0016  
                 __Hparam 0000                   __Lparam 0000  __size_of_lcd_send_nibble 0022  
                 ___awdiv 1AD6                   ___awmod 1B5A                   ___ftdiv 181A  
         __size_of___wmul 0026                   ___ftmul 1726                   ___fttol 1632  
            __psmallconst 1000                   __pcinit 1D44                ??___awtoft 000C  
              ??___ftpack 0006                   __ramtop 1000                   __ptext0 105A  
                 __ptext1 1A4C                   __ptext2 1DA8                   __ptext3 1DFA  
                 __ptext4 1BCA                   __ptext5 19AE                   __ptext6 1520  
                 __ptext7 1C2C                   __ptext8 1CCA                   __ptext9 1C82  
                 _get_num 19AE          ___awmod@dividend 0001                ??_delay_ms 0003  
                 _sprintf 1A4C                ??_lcd_init 000B                ??_disp_num 002A  
              ??_lcd_putc 000E                ??_lcd_puts 0011      end_of_initialization 1D70  
           __Lmediumconst 0000      lcd_send_byte@cm_data 000A                 _RCSTAbits 000FAB  
                 postdec1 000FE5                   postinc0 000FEE     __end_of_lcd_send_byte 1CCA  
               _PORTBbits 000F81                 _PORTCbits 000F82                _setupPorts 1DA8  
             ?_lcd_gotoxy 000B           _LCD_INIT_STRING 0050               ___ftdiv@exp 001A  
               _TXSTAbits 000FAC         disp_num@UnitDigit 002C            __end_of_GetKey 1E7A  
             ___ftmul@exp 0012            __end_of___wmul 1DFA               _BAUDCONbits 000FB8  
           __pidataCOMRAM 1E7A             delay_cycles@n 0006             delay_cycles@x 0004  
       ??_lcd_send_nibble 0007       start_initialization 1D44                  ??_GetKey 0005  
     __size_of_lcd_gotoxy 0042                  ??___wmul 0005          __CFG_LPT1OSC$OFF 000000  
             ?_setupPorts 0001         __size_of___awtoft 0038         __size_of___ftpack 00AE  
             __pbssCOMRAM 0037           disp_num@decimal 002D         __size_of_delay_ms 0024  
       __size_of_lcd_init 0062         __size_of_disp_num 0112               sprintf@flag 000B  
       __size_of_lcd_putc 0056         __size_of_lcd_puts 0024         __CFG_CCP2MX$PORTC 000000  
                ?___awdiv 0001                  ?___awmod 0001                  ?___ftdiv 000D  
                ?___ftmul 0009                  ?___fttol 0018                  ?_get_num 0001  
             __smallconst 1000                  ?_sprintf 0001     __end_of_READ_SWITCHES 1520  
          ___wmul@product 0005                 delay_ms@n 0001                 delay_ms@x 0003  
     __size_of_setupPorts 002C                  _PIR1bits 000F9E          __CFG_WDTPS$32768 000000  
               main@i_539 0035         ___wmul@multiplier 0001                 lcd_init@i 000B  
               get_num@ch 0003                 disp_num@j 002A                 lcd_putc@c 000E  
               lcd_puts@s 000F              ??_lcd_gotoxy 000C                 copy_data0 1D64  
         _lcd_send_nibble 1E42                  __Hrparam 0000                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000        __end_of_lcd_gotoxy 1D0C          __size_of___awdiv 0084  
        __size_of___awmod 0070          __size_of___ftdiv 00E6          __size_of___ftmul 00F4  
        __size_of___fttol 00F4                  ___awtoft 1D0C                  ___ftpack 1900  
        __size_of_get_num 009E                  _delay_ms 1E1E                  __ptext10 1E42  
                __ptext11 1D7A                  __ptext20 1E64                  __ptext12 1632  
                __ptext21 137C                  __ptext13 1726                  __ptext22 1E1E  
                __ptext14 1B5A                  __ptext15 1AD6                  __ptext16 1DD4  
                __ptext17 181A                  __ptext18 1D0C                  __ptext19 1900  
                _lcd_init 1BCA                  _disp_num 1520                  _lcd_putc 1C2C  
                _lcd_puts 1DFA          __size_of_sprintf 008A    __size_of_lcd_send_byte 0048  
           ?_delay_cycles 0001             __size_of_main 0322                  _position 003B  
            ??_setupPorts 0001                 sprintf@ap 000C   __end_of_lcd_send_nibble 1E64  
               sprintf@sp 0001            ??_delay_cycles 0001        __end_of_setupPorts 1DD4  
           _lcd_send_byte 1C82                  sprintf@c 000E                  sprintf@f 0003  
