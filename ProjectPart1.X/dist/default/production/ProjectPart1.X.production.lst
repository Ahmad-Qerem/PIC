

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Apr 20 09:45:27 2022

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  0014E6                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for _LCD_INIT_STRING
    38  0014E6  28                 	db	40
    39  0014E7  0C                 	db	12
    40  0014E8  01                 	db	1
    41  0014E9  06                 	db	6
    42  0000                     _ADCON1	set	4033
    43  0000                     _BAUDCONbits	set	4024
    44  0000                     _INTCON	set	4082
    45  0000                     _LATA	set	3977
    46  0000                     _LATB	set	3978
    47  0000                     _LATC	set	3979
    48  0000                     _LATD	set	3980
    49  0000                     _LATE	set	3981
    50  0000                     _PIR1bits	set	3998
    51  0000                     _RCREG	set	4014
    52  0000                     _RCSTA	set	4011
    53  0000                     _RCSTAbits	set	4011
    54  0000                     _SPBRG	set	4015
    55  0000                     _SPBRGH	set	4016
    56  0000                     _TRISA	set	3986
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISC	set	3988
    59  0000                     _TRISD	set	3989
    60  0000                     _TRISE	set	3990
    61  0000                     _TXREG	set	4013
    62  0000                     _TXSTA	set	4012
    63  0000                     _TXSTAbits	set	4012
    64  0000                     
    65                           	psect	smallconst
    66  001000                     __psmallconst:
    67                           	opt stack 0
    68  001000  00                 	db	0
    69  001001                     STR_2:
    70  001001  20                 	db	32
    71  001002  41                 	db	65	;'A'
    72  001003  68                 	db	104	;'h'
    73  001004  6D                 	db	109	;'m'
    74  001005  61                 	db	97	;'a'
    75  001006  64                 	db	100	;'d'
    76  001007  20                 	db	32
    77  001008  2D                 	db	45
    78  001009  2D                 	db	45
    79  00100A  20                 	db	32
    80  00100B  59                 	db	89	;'Y'
    81  00100C  61                 	db	97	;'a'
    82  00100D  68                 	db	104	;'h'
    83  00100E  69                 	db	105	;'i'
    84  00100F  61                 	db	97	;'a'
    85  001010  20                 	db	32
    86  001011  0A                 	db	10
    87  001012  00                 	db	0
    88  001013                     STR_1:
    89  001013  20                 	db	32
    90  001014  41                 	db	65	;'A'
    91  001015  68                 	db	104	;'h'
    92  001016  6D                 	db	109	;'m'
    93  001017  61                 	db	97	;'a'
    94  001018  64                 	db	100	;'d'
    95  001019  20                 	db	32
    96  00101A  2D                 	db	45
    97  00101B  2D                 	db	45
    98  00101C  20                 	db	32
    99  00101D  59                 	db	89	;'Y'
   100  00101E  61                 	db	97	;'a'
   101  00101F  68                 	db	104	;'h'
   102  001020  69                 	db	105	;'i'
   103  001021  61                 	db	97	;'a'
   104  001022  20                 	db	32
   105  001023  00                 	db	0
   106  001024                     STR_3:
   107  001024  25                 	db	37
   108  001025  63                 	db	99	;'c'
   109  001026  00                 	db	0
   110                           
   111                           ; #config settings
   112  001027  00                 	db	0	; dummy byte at the end
   113  0000                     
   114                           	psect	cinit
   115  001364                     __pcinit:
   116                           	opt stack 0
   117  001364                     start_initialization:
   118                           	opt stack 0
   119  001364                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Clear objects allocated to COMRAM (16 bytes)
   123  001364  EE00  F024         	lfsr	0,__pbssCOMRAM
   124  001368  0E10               	movlw	16
   125  00136A                     clear_0:
   126  00136A  6AEE               	clrf	postinc0,c
   127  00136C  06E8               	decf	wreg,f,c
   128  00136E  E1FD               	bnz	clear_0
   129                           
   130                           ; Initialize objects allocated to COMRAM (4 bytes)
   131                           ; load TBLPTR registers with __pidataCOMRAM
   132  001370  0EE6               	movlw	low __pidataCOMRAM
   133  001372  6EF6               	movwf	tblptrl,c
   134  001374  0E14               	movlw	high __pidataCOMRAM
   135  001376  6EF7               	movwf	tblptrh,c
   136  001378  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   137  00137A  6EF8               	movwf	tblptru,c
   138  00137C  EE00  F034         	lfsr	0,__pdataCOMRAM
   139  001380  EE10 F004          	lfsr	1,4
   140  001384                     copy_data0:
   141  001384  0009               	tblrd		*+
   142  001386  CFF5 FFEE          	movff	tablat,postinc0
   143  00138A  50E5               	movf	postdec1,w,c
   144  00138C  50E1               	movf	fsr1l,w,c
   145  00138E  E1FA               	bnz	copy_data0
   146  001390                     end_of_initialization:
   147                           	opt stack 0
   148  001390                     __end_of__initialization:
   149                           	opt stack 0
   150  001390  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   151  001392  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   152  001394  0E00               	movlw	low (__Lmediumconst shr (0+16))
   153  001396  6EF8               	movwf	tblptru,c
   154  001398  0100               	movlb	0
   155  00139A  EF14  F008         	goto	_main	;jump to C main() function
   156                           tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           tblptrl	equ	0xFF6
   159                           tablat	equ	0xFF5
   160                           postinc0	equ	0xFEE
   161                           wreg	equ	0xFE8
   162                           postdec1	equ	0xFE5
   163                           fsr1l	equ	0xFE1
   164                           
   165                           	psect	bssCOMRAM
   166  000024                     __pbssCOMRAM:
   167                           	opt stack 0
   168  000024                     _Buffer1:
   169                           	opt stack 0
   170  000024                     	ds	16
   171                           tblptru	equ	0xFF8
   172                           tblptrh	equ	0xFF7
   173                           tblptrl	equ	0xFF6
   174                           tablat	equ	0xFF5
   175                           postinc0	equ	0xFEE
   176                           wreg	equ	0xFE8
   177                           postdec1	equ	0xFE5
   178                           fsr1l	equ	0xFE1
   179                           
   180                           	psect	dataCOMRAM
   181  000034                     __pdataCOMRAM:
   182                           	opt stack 0
   183  000034                     _LCD_INIT_STRING:
   184                           	opt stack 0
   185  000034                     	ds	4
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           postdec1	equ	0xFE5
   193                           fsr1l	equ	0xFE1
   194                           
   195                           	psect	cstackCOMRAM
   196  000001                     __pcstackCOMRAM:
   197                           	opt stack 0
   198  000001                     ??_highIsr:
   199  000001                     
   200                           ; 2 bytes @ 0x0
   201  000001                     	ds	14
   202  00000F                     ??_delay_cycles:
   203  00000F                     ?_sprintf:
   204                           	opt stack 0
   205  00000F                     setupSerial@dummy:
   206                           	opt stack 0
   207  00000F                     read_byte_no_lib@c:
   208                           	opt stack 0
   209  00000F                     send_byte_no_lib@c:
   210                           	opt stack 0
   211  00000F                     delay_ms@n:
   212                           	opt stack 0
   213  00000F                     sprintf@sp:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0xE
   217  00000F                     	ds	1
   218  000010                     send_string_no_lib@p:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0xF
   222  000010                     	ds	1
   223  000011                     delay_ms@x:
   224                           	opt stack 0
   225  000011                     sprintf@f:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x10
   229  000011                     	ds	1
   230  000012                     delay_cycles@x:
   231                           	opt stack 0
   232                           
   233                           ; 2 bytes @ 0x11
   234  000012                     	ds	2
   235  000014                     delay_cycles@n:
   236                           	opt stack 0
   237                           
   238                           ; 1 bytes @ 0x13
   239  000014                     	ds	1
   240  000015                     ??_lcd_send_nibble:
   241  000015                     sprintf@flag:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x14
   245  000015                     	ds	1
   246  000016                     lcd_send_nibble@n:
   247                           	opt stack 0
   248  000016                     sprintf@ap:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x15
   252  000016                     	ds	1
   253  000017                     lcd_send_byte@n:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x16
   257  000017                     	ds	1
   258  000018                     lcd_send_byte@cm_data:
   259                           	opt stack 0
   260  000018                     sprintf@c:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x17
   264  000018                     	ds	1
   265  000019                     lcd_init@i:
   266                           	opt stack 0
   267  000019                     lcd_gotoxy@y:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x18
   271  000019                     	ds	1
   272  00001A                     lcd_gotoxy@x:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x19
   276  00001A                     	ds	1
   277  00001B                     lcd_gotoxy@address:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x1A
   281  00001B                     	ds	1
   282  00001C                     lcd_putc@c:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x1B
   286  00001C                     	ds	1
   287  00001D                     lcd_puts@s:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x1C
   291  00001D                     	ds	2
   292  00001F                     main@i:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x1E
   296  00001F                     	ds	2
   297  000021                     main@psition:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x20
   301  000021                     	ds	2
   302  000023                     main@x:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x22
   306  000023                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   318 ;;
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 75 in file "ProjectPart1.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;  i               2   30[COMRAM] int 
   326 ;;  psition         2   32[COMRAM] int 
   327 ;;  x               1   34[COMRAM] unsigned char 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  2  117[None  ] int 
   330 ;; Registers used:
   331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   338 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   340 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   341 ;;Total ram usage:        5 bytes
   342 ;; Hardware stack levels required when called:    7
   343 ;; This function calls:
   344 ;;		_Lcd_Shift_Left
   345 ;;		_delay_ms
   346 ;;		_lcd_gotoxy
   347 ;;		_lcd_init
   348 ;;		_lcd_putc
   349 ;;		_lcd_puts
   350 ;;		_read_byte_no_lib
   351 ;;		_send_byte_no_lib
   352 ;;		_send_string_no_lib
   353 ;;		_setupPorts
   354 ;;		_setupSerial
   355 ;;		_sprintf
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text0
   362  001028                     __ptext0:
   363                           	opt stack 0
   364  001028                     _main:
   365                           	opt stack 24
   366                           
   367                           ;ProjectPart1.c: 77: INTCON = 0;
   368                           
   369                           ;incstack = 0
   370  001028  0E00               	movlw	0
   371  00102A  6EF2               	movwf	intcon,c	;volatile
   372                           
   373                           ;ProjectPart1.c: 78: setupPorts();
   374  00102C  ECE6  F009         	call	_setupPorts	;wreg free
   375                           
   376                           ;ProjectPart1.c: 79: setupSerial();
   377  001030  EC10  F00A         	call	_setupSerial	;wreg free
   378                           
   379                           ;ProjectPart1.c: 80: lcd_init();
   380  001034  EC11  F009         	call	_lcd_init	;wreg free
   381                           
   382                           ;ProjectPart1.c: 82: sprintf(Buffer1, " Ahmad -- Yahia ");
   383  001038  0E24               	movlw	low _Buffer1
   384  00103A  6E0F               	movwf	sprintf@sp,c
   385  00103C  0E00               	movlw	high _Buffer1
   386  00103E  6E10               	movwf	sprintf@sp+1,c
   387  001040  0E13               	movlw	low STR_1
   388  001042  6E11               	movwf	sprintf@f,c
   389  001044  0E10               	movlw	high STR_1
   390  001046  6E12               	movwf	sprintf@f+1,c
   391  001048  EC95  F008         	call	_sprintf	;wreg free
   392                           
   393                           ;ProjectPart1.c: 83: lcd_gotoxy(1, 1);
   394  00104C  0E01               	movlw	1
   395  00104E  6E19               	movwf	lcd_gotoxy@y,c
   396  001050  0E01               	movlw	1
   397  001052  EC91  F009         	call	_lcd_gotoxy
   398                           
   399                           ;ProjectPart1.c: 84: lcd_puts(Buffer1);
   400  001056  0E24               	movlw	low _Buffer1
   401  001058  6E1D               	movwf	lcd_puts@s,c
   402  00105A  0E00               	movlw	high _Buffer1
   403  00105C  6E1E               	movwf	lcd_puts@s+1,c
   404  00105E  EC22  F00A         	call	_lcd_puts	;wreg free
   405                           
   406                           ;ProjectPart1.c: 85: for (int i=0;i<20;i++)
   407  001062  0E00               	movlw	0
   408  001064  6E20               	movwf	main@i+1,c
   409  001066  0E00               	movlw	0
   410  001068  6E1F               	movwf	main@i,c
   411  00106A                     l1206:
   412  00106A  BE20               	btfsc	main@i+1,7,c
   413  00106C  D006               	goto	l1210
   414  00106E  5020               	movf	main@i+1,w,c
   415  001070  E10D               	bnz	l1216
   416  001072  0E14               	movlw	20
   417  001074  5C1F               	subwf	main@i,w,c
   418  001076  B0D8               	btfsc	status,0,c
   419  001078  D009               	goto	l1216
   420  00107A                     l1210:
   421                           
   422                           ;ProjectPart1.c: 86: delay_ms(1000);
   423  00107A  0E03               	movlw	3
   424  00107C  6E10               	movwf	delay_ms@n+1,c
   425  00107E  0EE8               	movlw	232
   426  001080  6E0F               	movwf	delay_ms@n,c
   427  001082  EC34  F00A         	call	_delay_ms	;wreg free
   428  001086  4A1F               	infsnz	main@i,f,c
   429  001088  2A20               	incf	main@i+1,f,c
   430  00108A  D7EF               	goto	l1206
   431  00108C                     l1216:
   432                           
   433                           ;ProjectPart1.c: 88: lcd_putc('\f');
   434  00108C  0E0C               	movlw	12
   435  00108E  EC42  F009         	call	_lcd_putc
   436                           
   437                           ;ProjectPart1.c: 89: send_string_no_lib((unsigned char *)" Ahmad -- Yahia \n");
   438  001092  0E01               	movlw	low STR_2
   439  001094  6E10               	movwf	send_string_no_lib@p,c
   440  001096  0E10               	movlw	high STR_2
   441  001098  6E11               	movwf	send_string_no_lib@p+1,c
   442  00109A  ECFB  F009         	call	_send_string_no_lib	;wreg free
   443  00109E                     
   444                           ;ProjectPart1.c: 91: char x;
   445                           ;ProjectPart1.c: 92: int psition=1;
   446  00109E  0E00               	movlw	0
   447  0010A0  6E22               	movwf	main@psition+1,c
   448  0010A2  0E01               	movlw	1
   449  0010A4  6E21               	movwf	main@psition,c
   450  0010A6                     l120:
   451  0010A6  0004               	clrwdt		;# 
   452                           
   453                           ;ProjectPart1.c: 95: delay_ms(200);
   454  0010A8  0E00               	movlw	0
   455  0010AA  6E10               	movwf	delay_ms@n+1,c
   456  0010AC  0EC8               	movlw	200
   457  0010AE  6E0F               	movwf	delay_ms@n,c
   458  0010B0  EC34  F00A         	call	_delay_ms	;wreg free
   459                           
   460                           ;ProjectPart1.c: 97: x = read_byte_no_lib();
   461  0010B4  EC57  F00A         	call	_read_byte_no_lib	;wreg free
   462  0010B8  6E23               	movwf	main@x,c
   463                           
   464                           ;ProjectPart1.c: 98: if (x!='*'){
   465  0010BA  0E2A               	movlw	42
   466  0010BC  1823               	xorwf	main@x,w,c
   467  0010BE  B4D8               	btfsc	status,2,c
   468  0010C0  D030               	goto	l1248
   469                           
   470                           ;ProjectPart1.c: 99: if( x >= 'a' && (x <= 'z')){
   471  0010C2  0E60               	movlw	96
   472  0010C4  6423               	cpfsgt	main@x,c
   473  0010C6  D005               	goto	l1234
   474  0010C8  0E7B               	movlw	123
   475  0010CA  6023               	cpfslt	main@x,c
   476  0010CC  D002               	goto	l1234
   477                           
   478                           ;ProjectPart1.c: 100: x += 'A' -'a';
   479  0010CE  0EE0               	movlw	224
   480  0010D0  2623               	addwf	main@x,f,c
   481  0010D2                     l1234:
   482                           
   483                           ;ProjectPart1.c: 101: }
   484                           ;ProjectPart1.c: 102: send_byte_no_lib(x);
   485  0010D2  5023               	movf	main@x,w,c
   486  0010D4  EC65  F00A         	call	_send_byte_no_lib
   487                           
   488                           ;ProjectPart1.c: 103: sprintf(Buffer1, "%c",x);
   489  0010D8  0E24               	movlw	low _Buffer1
   490  0010DA  6E0F               	movwf	sprintf@sp,c
   491  0010DC  0E00               	movlw	high _Buffer1
   492  0010DE  6E10               	movwf	sprintf@sp+1,c
   493  0010E0  0E24               	movlw	low STR_3
   494  0010E2  6E11               	movwf	sprintf@f,c
   495  0010E4  0E10               	movlw	high STR_3
   496  0010E6  6E12               	movwf	sprintf@f+1,c
   497  0010E8  C023  F013         	movff	main@x,?_sprintf+4
   498  0010EC  6A14               	clrf	?_sprintf+5,c
   499  0010EE  EC95  F008         	call	_sprintf	;wreg free
   500                           
   501                           ;ProjectPart1.c: 104: lcd_gotoxy(psition++, 1);
   502  0010F2  0E01               	movlw	1
   503  0010F4  6E19               	movwf	lcd_gotoxy@y,c
   504  0010F6  5021               	movf	main@psition,w,c
   505  0010F8  EC91  F009         	call	_lcd_gotoxy
   506  0010FC  4A21               	infsnz	main@psition,f,c
   507  0010FE  2A22               	incf	main@psition+1,f,c
   508                           
   509                           ;ProjectPart1.c: 105: lcd_puts(Buffer1);
   510  001100  0E24               	movlw	low _Buffer1
   511  001102  6E1D               	movwf	lcd_puts@s,c
   512  001104  0E00               	movlw	high _Buffer1
   513  001106  6E1E               	movwf	lcd_puts@s+1,c
   514  001108  EC22  F00A         	call	_lcd_puts	;wreg free
   515                           
   516                           ;ProjectPart1.c: 106: if (psition>16)
   517  00110C  BE22               	btfsc	main@psition+1,7,c
   518  00110E  D7CB               	goto	l120
   519  001110  5022               	movf	main@psition+1,w,c
   520  001112  E104               	bnz	u390
   521  001114  0E11               	movlw	17
   522  001116  5C21               	subwf	main@psition,w,c
   523  001118  A0D8               	btfss	status,0,c
   524  00111A  D7C5               	goto	l120
   525  00111C                     u390:
   526                           
   527                           ;ProjectPart1.c: 107: Lcd_Shift_Left();
   528  00111C  EC6D  F00A         	call	_Lcd_Shift_Left	;wreg free
   529                           
   530                           ;ProjectPart1.c: 110: }else {
   531  001120  D7C2               	goto	l120
   532  001122                     l1248:
   533                           
   534                           ;ProjectPart1.c: 111: lcd_putc('\f');
   535  001122  0E0C               	movlw	12
   536  001124  EC42  F009         	call	_lcd_putc
   537  001128  D7BA               	goto	L4
   538  00112A                     __end_of_main:
   539                           	opt stack 0
   540                           tblptru	equ	0xFF8
   541                           tblptrh	equ	0xFF7
   542                           tblptrl	equ	0xFF6
   543                           tablat	equ	0xFF5
   544                           intcon	equ	0xFF2
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           postdec1	equ	0xFE5
   548                           fsr1l	equ	0xFE1
   549                           status	equ	0xFD8
   550                           
   551 ;; *************** function _sprintf *****************
   552 ;; Defined at:
   553 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  sp              2   14[COMRAM] PTR unsigned char 
   556 ;;		 -> Buffer1(16), 
   557 ;;  f               2   16[COMRAM] PTR const unsigned char 
   558 ;;		 -> STR_3(3), STR_1(17), 
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  tmpval          4    0        struct .
   561 ;;  cp              3    0        PTR const unsigned char 
   562 ;;  ap              2   21[COMRAM] PTR void [1]
   563 ;;		 -> ?_sprintf(2), 
   564 ;;  len             2    0        unsigned int 
   565 ;;  val             2    0        unsigned int 
   566 ;;  c               1   23[COMRAM] char 
   567 ;;  flag            1   20[COMRAM] unsigned char 
   568 ;;  prec            1    0        char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  2   14[COMRAM] int 
   571 ;; Registers used:
   572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   578 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;Total ram usage:       10 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text1
   593  00112A                     __ptext1:
   594                           	opt stack 0
   595  00112A                     _sprintf:
   596                           	opt stack 29
   597                           
   598                           ;doprnt.c: 494: va_list ap;
   599                           ;doprnt.c: 499: signed char c;
   600                           ;doprnt.c: 506: signed char prec;
   601                           ;doprnt.c: 508: unsigned char flag;
   602                           ;doprnt.c: 523: union {
   603                           ;doprnt.c: 524: unsigned long vd;
   604                           ;doprnt.c: 525: double integ;
   605                           ;doprnt.c: 526: } tmpval;
   606                           ;doprnt.c: 528: unsigned int val;
   607                           ;doprnt.c: 529: unsigned len;
   608                           ;doprnt.c: 530: const char * cp;
   609                           ;doprnt.c: 533: *ap = __va_start();
   610                           
   611                           ;incstack = 0
   612  00112A  0E13               	movlw	low (?_sprintf+4)
   613  00112C  6E16               	movwf	sprintf@ap,c
   614  00112E  0E00               	movlw	high (?_sprintf+4)
   615  001130  6E17               	movwf	sprintf@ap+1,c
   616                           
   617                           ;doprnt.c: 536: while(c = *f++) {
   618  001132  D02D               	goto	l1174
   619  001134                     l1154:
   620                           
   621                           ;doprnt.c: 538: if(c != '%')
   622  001134  0E25               	movlw	37
   623  001136  1818               	xorwf	sprintf@c,w,c
   624  001138  B4D8               	btfsc	status,2,c
   625  00113A  D004               	goto	l1160
   626  00113C  D010               	goto	l1166
   627  00113E                     l1158:
   628  00113E  4A0F               	infsnz	sprintf@sp,f,c
   629  001140  2A10               	incf	sprintf@sp+1,f,c
   630                           
   631                           ;doprnt.c: 542: continue;
   632  001142  D025               	goto	l1174
   633  001144                     l1160:
   634                           
   635                           ;doprnt.c: 543: }
   636                           ;doprnt.c: 548: flag = 0;
   637  001144  0E00               	movlw	0
   638  001146  6E15               	movwf	sprintf@flag,c
   639                           
   640                           ;doprnt.c: 635: switch(c = *f++) {
   641  001148  D011               	goto	l1172
   642  00114A                     l1162:
   643                           
   644                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   645  00114A  C016  FFD9         	movff	sprintf@ap,fsr2l
   646  00114E  C017  FFDA         	movff	sprintf@ap+1,fsr2h
   647  001152  50DF               	movf	indf2,w,c
   648  001154  6E18               	movwf	sprintf@c,c
   649  001156  0E02               	movlw	2
   650  001158  2616               	addwf	sprintf@ap,f,c
   651  00115A  0E00               	movlw	0
   652  00115C  2217               	addwfc	sprintf@ap+1,f,c
   653  00115E                     l1166:
   654                           
   655                           ;doprnt.c: 809: ((*sp++ = (c)));
   656  00115E  C00F  FFD9         	movff	sprintf@sp,fsr2l
   657  001162  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   658  001166  C018  FFDF         	movff	sprintf@c,indf2
   659  00116A  D7E9               	goto	l1158
   660  00116C                     l1172:
   661  00116C  C011  FFF6         	movff	sprintf@f,tblptrl
   662  001170  C012  FFF7         	movff	sprintf@f+1,tblptrh
   663  001174  4A11               	infsnz	sprintf@f,f,c
   664  001176  2A12               	incf	sprintf@f+1,f,c
   665  001178                     	if	0	;tblptru may be non-zero
   666  001178                     	endif
   667  001178                     	if	0	;tblptru may be non-zero
   668  001178                     	endif
   669  001178  0008               	tblrd		*
   670  00117A  CFF5 F018          	movff	tablat,sprintf@c
   671  00117E  5018               	movf	sprintf@c,w,c
   672                           
   673                           ; Switch size 1, requested type "space"
   674                           ; Number of cases is 2, Range of values is 0 to 99
   675                           ; switch strategies available:
   676                           ; Name         Instructions Cycles
   677                           ; simple_byte            7     4 (average)
   678                           ;	Chosen strategy is simple_byte
   679  001180  0A00               	xorlw	0	; case 0
   680  001182  B4D8               	btfsc	status,2,c
   681  001184  D010               	goto	l1176
   682  001186  0A63               	xorlw	99	; case 99
   683  001188  B4D8               	btfsc	status,2,c
   684  00118A  D7DF               	goto	l1162
   685  00118C  D7E8               	goto	l1166
   686  00118E                     l1174:
   687  00118E  C011  FFF6         	movff	sprintf@f,tblptrl
   688  001192  C012  FFF7         	movff	sprintf@f+1,tblptrh
   689  001196  4A11               	infsnz	sprintf@f,f,c
   690  001198  2A12               	incf	sprintf@f+1,f,c
   691  00119A                     	if	0	;tblptru may be non-zero
   692  00119A                     	endif
   693  00119A                     	if	0	;tblptru may be non-zero
   694  00119A                     	endif
   695  00119A  0008               	tblrd		*
   696  00119C  CFF5 F018          	movff	tablat,sprintf@c
   697  0011A0  5018               	movf	sprintf@c,w,c
   698  0011A2  A4D8               	btfss	status,2,c
   699  0011A4  D7C7               	goto	l1154
   700  0011A6                     l1176:
   701                           
   702                           ;doprnt.c: 1538: *sp = 0;
   703  0011A6  C00F  FFD9         	movff	sprintf@sp,fsr2l
   704  0011AA  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   705  0011AE  0E00               	movlw	0
   706  0011B0  6EDF               	movwf	indf2,c
   707  0011B2  0012               	return	
   708  0011B4                     __end_of_sprintf:
   709                           	opt stack 0
   710                           tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           intcon	equ	0xFF2
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           postdec1	equ	0xFE5
   718                           fsr1l	equ	0xFE1
   719                           indf2	equ	0xFDF
   720                           fsr2h	equ	0xFDA
   721                           fsr2l	equ	0xFD9
   722                           status	equ	0xFD8
   723                           
   724 ;; *************** function _setupSerial *****************
   725 ;; Defined at:
   726 ;;		line 3 in file "my_ser.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  dummy           1   14[COMRAM] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;Total ram usage:        1 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    1
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text2
   755  001420                     __ptext2:
   756                           	opt stack 0
   757  001420                     _setupSerial:
   758                           	opt stack 29
   759                           
   760                           ;my_ser.c: 4: unsigned char dummy;
   761                           ;my_ser.c: 5: BAUDCONbits.BRG16 = 0;
   762                           
   763                           ;incstack = 0
   764  001420  96B8               	bcf	4024,3,c	;volatile
   765                           
   766                           ;my_ser.c: 6: TXSTA = 0;
   767  001422  0E00               	movlw	0
   768  001424  6EAC               	movwf	4012,c	;volatile
   769                           
   770                           ;my_ser.c: 7: SPBRG = 25;
   771  001426  0E19               	movlw	25
   772  001428  6EAF               	movwf	4015,c	;volatile
   773                           
   774                           ;my_ser.c: 8: SPBRGH = 0;
   775  00142A  0E00               	movlw	0
   776  00142C  6EB0               	movwf	4016,c	;volatile
   777                           
   778                           ;my_ser.c: 9: TXSTAbits.BRGH = 1;
   779  00142E  84AC               	bsf	4012,2,c	;volatile
   780                           
   781                           ;my_ser.c: 10: TXSTAbits.TXEN = 1;
   782  001430  8AAC               	bsf	4012,5,c	;volatile
   783                           
   784                           ;my_ser.c: 12: RCSTA = 0;
   785  001432  0E00               	movlw	0
   786  001434  6EAB               	movwf	4011,c	;volatile
   787                           
   788                           ;my_ser.c: 13: RCSTAbits.CREN = 1;
   789  001436  88AB               	bsf	4011,4,c	;volatile
   790                           
   791                           ;my_ser.c: 14: RCSTAbits.SPEN = 1;
   792  001438  8EAB               	bsf	4011,7,c	;volatile
   793                           
   794                           ;my_ser.c: 15: ;
   795                           ;my_ser.c: 16: dummy = RCREG;
   796  00143A  CFAE F00F          	movff	4014,setupSerial@dummy	;volatile
   797                           
   798                           ;my_ser.c: 17: dummy = RCREG;
   799  00143E  CFAE F00F          	movff	4014,setupSerial@dummy	;volatile
   800  001442  0012               	return	
   801  001444                     __end_of_setupSerial:
   802                           	opt stack 0
   803                           tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           intcon	equ	0xFF2
   808                           postinc0	equ	0xFEE
   809                           wreg	equ	0xFE8
   810                           postdec1	equ	0xFE5
   811                           fsr1l	equ	0xFE1
   812                           indf2	equ	0xFDF
   813                           fsr2h	equ	0xFDA
   814                           fsr2l	equ	0xFD9
   815                           status	equ	0xFD8
   816                           
   817 ;; *************** function _setupPorts *****************
   818 ;; Defined at:
   819 ;;		line 116 in file "ProjectPart1.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; Hardware stack levels required when called:    1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text3
   848  0013CC                     __ptext3:
   849                           	opt stack 0
   850  0013CC                     _setupPorts:
   851                           	opt stack 29
   852                           
   853                           ;ProjectPart1.c: 117: ADCON1 = 0xF;
   854                           
   855                           ;incstack = 0
   856  0013CC  0E0F               	movlw	15
   857  0013CE  6EC1               	movwf	4033,c	;volatile
   858                           
   859                           ;ProjectPart1.c: 118: LATA = LATB = LATC = LATD = LATE =0;
   860  0013D0  0E00               	movlw	0
   861  0013D2  6E8D               	movwf	3981,c	;volatile
   862  0013D4  CF8D FF8C          	movff	3981,3980	;volatile
   863  0013D8  CF8C FF8B          	movff	3980,3979	;volatile
   864  0013DC  CF8B FF8A          	movff	3979,3978	;volatile
   865  0013E0  CF8A FF89          	movff	3978,3977	;volatile
   866                           
   867                           ;ProjectPart1.c: 119: TRISA = 0xFF;
   868  0013E4  6892               	setf	3986,c	;volatile
   869                           
   870                           ;ProjectPart1.c: 120: TRISB = 0xFF;
   871  0013E6  6893               	setf	3987,c	;volatile
   872                           
   873                           ;ProjectPart1.c: 121: TRISC = 0x80;
   874  0013E8  0E80               	movlw	128
   875  0013EA  6E94               	movwf	3988,c	;volatile
   876                           
   877                           ;ProjectPart1.c: 122: TRISD = 0x00;
   878  0013EC  0E00               	movlw	0
   879  0013EE  6E95               	movwf	3989,c	;volatile
   880                           
   881                           ;ProjectPart1.c: 123: TRISE = 0x00;
   882  0013F0  0E00               	movlw	0
   883  0013F2  6E96               	movwf	3990,c	;volatile
   884  0013F4  0012               	return		;funcret
   885  0013F6                     __end_of_setupPorts:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           intcon	equ	0xFF2
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           postdec1	equ	0xFE5
   895                           fsr1l	equ	0xFE1
   896                           indf2	equ	0xFDF
   897                           fsr2h	equ	0xFDA
   898                           fsr2l	equ	0xFD9
   899                           status	equ	0xFD8
   900                           
   901 ;; *************** function _send_string_no_lib *****************
   902 ;; Defined at:
   903 ;;		line 45 in file "my_ser.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  p               2   15[COMRAM] PTR unsigned char 
   906 ;;		 -> STR_2(18), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:        2 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    2
   925 ;; This function calls:
   926 ;;		_send_byte_no_lib
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text4
   933  0013F6                     __ptext4:
   934                           	opt stack 0
   935  0013F6                     _send_string_no_lib:
   936                           	opt stack 28
   937                           
   938                           ;my_ser.c: 46: while (*p) {
   939                           
   940                           ;incstack = 0
   941  0013F6  D00A               	goto	l1186
   942  0013F8                     l1182:
   943                           
   944                           ;my_ser.c: 47: send_byte_no_lib(*p);
   945  0013F8  C010  FFF6         	movff	send_string_no_lib@p,tblptrl
   946  0013FC  C011  FFF7         	movff	send_string_no_lib@p+1,tblptrh
   947  001400                     	if	0	;tblptru may be non-zero
   948  001400                     	endif
   949  001400                     	if	0	;tblptru may be non-zero
   950  001400                     	endif
   951  001400  0008               	tblrd		*
   952  001402  50F5               	movf	tablat,w,c
   953  001404  EC65  F00A         	call	_send_byte_no_lib
   954                           
   955                           ;my_ser.c: 48: p++;
   956  001408  4A10               	infsnz	send_string_no_lib@p,f,c
   957  00140A  2A11               	incf	send_string_no_lib@p+1,f,c
   958  00140C                     l1186:
   959  00140C  C010  FFF6         	movff	send_string_no_lib@p,tblptrl
   960  001410  C011  FFF7         	movff	send_string_no_lib@p+1,tblptrh
   961  001414                     	if	0	;tblptru may be non-zero
   962  001414                     	endif
   963  001414                     	if	0	;tblptru may be non-zero
   964  001414                     	endif
   965  001414  0008               	tblrd		*
   966  001416  50F5               	movf	tablat,w,c
   967  001418  0900               	iorlw	0
   968  00141A  B4D8               	btfsc	status,2,c
   969  00141C  0012               	return	
   970  00141E  D7EC               	goto	l1182
   971  001420                     __end_of_send_string_no_lib:
   972                           	opt stack 0
   973                           tblptru	equ	0xFF8
   974                           tblptrh	equ	0xFF7
   975                           tblptrl	equ	0xFF6
   976                           tablat	equ	0xFF5
   977                           intcon	equ	0xFF2
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           postdec1	equ	0xFE5
   981                           fsr1l	equ	0xFE1
   982                           indf2	equ	0xFDF
   983                           fsr2h	equ	0xFDA
   984                           fsr2l	equ	0xFD9
   985                           status	equ	0xFD8
   986                           
   987 ;; *************** function _send_byte_no_lib *****************
   988 ;; Defined at:
   989 ;;		line 37 in file "my_ser.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  c               1    wreg     unsigned char 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  c               1   14[COMRAM] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;Total ram usage:        1 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;;		_send_string_no_lib
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text5
  1019  0014CA                     __ptext5:
  1020                           	opt stack 0
  1021  0014CA                     _send_byte_no_lib:
  1022                           	opt stack 28
  1023                           
  1024                           ;incstack = 0
  1025                           ;send_byte_no_lib@c stored from wreg
  1026  0014CA  6E0F               	movwf	send_byte_no_lib@c,c
  1027                           
  1028                           ;my_ser.c: 38: while (!TXSTAbits.TRMT)
  1029  0014CC  D001               	goto	l168
  1030  0014CE                     l169:
  1031  0014CE  0004               	clrwdt		;# 
  1032  0014D0                     l168:
  1033  0014D0  A2AC               	btfss	4012,1,c	;volatile
  1034  0014D2  D7FD               	goto	l169
  1035                           
  1036                           ;my_ser.c: 41: }
  1037                           ;my_ser.c: 42: TXREG = c;
  1038  0014D4  C00F  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
  1039  0014D8  0012               	return		;funcret
  1040  0014DA                     __end_of_send_byte_no_lib:
  1041                           	opt stack 0
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           intcon	equ	0xFF2
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           postdec1	equ	0xFE5
  1050                           fsr1l	equ	0xFE1
  1051                           indf2	equ	0xFDF
  1052                           fsr2h	equ	0xFDA
  1053                           fsr2l	equ	0xFD9
  1054                           status	equ	0xFD8
  1055                           
  1056 ;; *************** function _read_byte_no_lib *****************
  1057 ;; Defined at:
  1058 ;;		line 21 in file "my_ser.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  c               1   14[COMRAM] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      unsigned char 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;Total ram usage:        1 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text6
  1087  0014AE                     __ptext6:
  1088                           	opt stack 0
  1089  0014AE                     _read_byte_no_lib:
  1090                           	opt stack 29
  1091                           
  1092                           ;my_ser.c: 22: unsigned char c;
  1093                           ;my_ser.c: 24: if (RCSTAbits.FERR || RCSTAbits.OERR)
  1094                           
  1095                           ;incstack = 0
  1096  0014AE  B4AB               	btfsc	4011,2,c	;volatile
  1097  0014B0  D002               	goto	l161
  1098  0014B2  A2AB               	btfss	4011,1,c	;volatile
  1099  0014B4  D004               	goto	l162
  1100  0014B6                     l161:
  1101                           
  1102                           ;my_ser.c: 25: {
  1103                           ;my_ser.c: 26: RCSTAbits.CREN = 0;
  1104  0014B6  98AB               	bcf	4011,4,c	;volatile
  1105                           
  1106                           ;my_ser.c: 27: RCSTAbits.CREN = 1;
  1107  0014B8  88AB               	bsf	4011,4,c	;volatile
  1108                           
  1109                           ;my_ser.c: 28: }
  1110                           ;my_ser.c: 30: while (!(PIR1bits.RCIF)) {
  1111  0014BA  D001               	goto	l162
  1112  0014BC                     l163:
  1113  0014BC  0004               	clrwdt		;# 
  1114  0014BE                     l162:
  1115  0014BE  AA9E               	btfss	3998,5,c	;volatile
  1116  0014C0  D7FD               	goto	l163
  1117                           
  1118                           ;my_ser.c: 32: }
  1119                           ;my_ser.c: 33: c = RCREG;
  1120  0014C2  CFAE F00F          	movff	4014,read_byte_no_lib@c	;volatile
  1121                           
  1122                           ;my_ser.c: 34: return c;
  1123  0014C6  500F               	movf	read_byte_no_lib@c,w,c
  1124  0014C8  0012               	return	
  1125  0014CA                     __end_of_read_byte_no_lib:
  1126                           	opt stack 0
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           intcon	equ	0xFF2
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           postdec1	equ	0xFE5
  1135                           fsr1l	equ	0xFE1
  1136                           indf2	equ	0xFDF
  1137                           fsr2h	equ	0xFDA
  1138                           fsr2l	equ	0xFD9
  1139                           status	equ	0xFD8
  1140                           
  1141 ;; *************** function _lcd_puts *****************
  1142 ;; Defined at:
  1143 ;;		line 120 in file "lcd_x8.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  s               2   28[COMRAM] PTR unsigned char 
  1146 ;;		 -> Buffer1(16), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;Total ram usage:        2 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    6
  1165 ;; This function calls:
  1166 ;;		_lcd_putc
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text7
  1173  001444                     __ptext7:
  1174                           	opt stack 0
  1175  001444                     _lcd_puts:
  1176                           	opt stack 24
  1177                           
  1178                           ;lcd_x8.c: 121: while (*s) {
  1179                           
  1180                           ;incstack = 0
  1181  001444  D009               	goto	l1148
  1182  001446                     l1144:
  1183                           
  1184                           ;lcd_x8.c: 122: lcd_putc(*s);
  1185  001446  C01D  FFD9         	movff	lcd_puts@s,fsr2l
  1186  00144A  C01E  FFDA         	movff	lcd_puts@s+1,fsr2h
  1187  00144E  50DF               	movf	indf2,w,c
  1188  001450  EC42  F009         	call	_lcd_putc
  1189                           
  1190                           ;lcd_x8.c: 123: s++;
  1191  001454  4A1D               	infsnz	lcd_puts@s,f,c
  1192  001456  2A1E               	incf	lcd_puts@s+1,f,c
  1193  001458                     l1148:
  1194  001458  C01D  FFD9         	movff	lcd_puts@s,fsr2l
  1195  00145C  C01E  FFDA         	movff	lcd_puts@s+1,fsr2h
  1196  001460  50DF               	movf	indf2,w,c
  1197  001462  B4D8               	btfsc	status,2,c
  1198  001464  0012               	return	
  1199  001466  D7EF               	goto	l1144
  1200  001468                     __end_of_lcd_puts:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           intcon	equ	0xFF2
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1l	equ	0xFE1
  1211                           indf2	equ	0xFDF
  1212                           fsr2h	equ	0xFDA
  1213                           fsr2l	equ	0xFD9
  1214                           status	equ	0xFD8
  1215                           
  1216 ;; *************** function _lcd_putc *****************
  1217 ;; Defined at:
  1218 ;;		line 106 in file "lcd_x8.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  c               1    wreg     unsigned char 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  c               1   27[COMRAM] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;Total ram usage:        1 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    5
  1239 ;; This function calls:
  1240 ;;		_delay_ms
  1241 ;;		_lcd_gotoxy
  1242 ;;		_lcd_send_byte
  1243 ;; This function is called by:
  1244 ;;		_lcd_puts
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text8
  1250  001284                     __ptext8:
  1251                           	opt stack 0
  1252  001284                     _lcd_putc:
  1253                           	opt stack 24
  1254                           
  1255                           ;incstack = 0
  1256                           ;lcd_putc@c stored from wreg
  1257  001284  6E1C               	movwf	lcd_putc@c,c
  1258                           
  1259                           ;lcd_x8.c: 107: switch (c) {
  1260  001286  D01E               	goto	l1110
  1261  001288                     l1100:
  1262  001288  0E01               	movlw	1
  1263  00128A  6E17               	movwf	lcd_send_byte@n,c
  1264  00128C  0E00               	movlw	0
  1265  00128E  EC6D  F009         	call	_lcd_send_byte
  1266                           
  1267                           ;lcd_x8.c: 109: delay_ms(2);
  1268  001292  0E00               	movlw	0
  1269  001294  6E10               	movwf	delay_ms@n+1,c
  1270  001296  0E02               	movlw	2
  1271  001298  6E0F               	movwf	delay_ms@n,c
  1272  00129A  EC34  F00A         	call	_delay_ms	;wreg free
  1273                           
  1274                           ;lcd_x8.c: 110: break;
  1275  00129E  0012               	return	
  1276  0012A0                     l1102:
  1277  0012A0  0E02               	movlw	2
  1278  0012A2  6E19               	movwf	lcd_gotoxy@y,c
  1279  0012A4  0E01               	movlw	1
  1280  0012A6  EC91  F009         	call	_lcd_gotoxy
  1281                           
  1282                           ;lcd_x8.c: 112: break;
  1283  0012AA  0012               	return	
  1284  0012AC                     l1104:
  1285  0012AC  0E10               	movlw	16
  1286  0012AE  6E17               	movwf	lcd_send_byte@n,c
  1287  0012B0  0E00               	movlw	0
  1288  0012B2  EC6D  F009         	call	_lcd_send_byte
  1289                           
  1290                           ;lcd_x8.c: 114: break;
  1291  0012B6  0012               	return	
  1292  0012B8                     l1106:
  1293  0012B8  C01C  F017         	movff	lcd_putc@c,lcd_send_byte@n
  1294  0012BC  0E01               	movlw	1
  1295  0012BE  EC6D  F009         	call	_lcd_send_byte
  1296                           
  1297                           ;lcd_x8.c: 117: }
  1298                           
  1299                           ;lcd_x8.c: 116: break;
  1300  0012C2  0012               	return	
  1301  0012C4                     l1110:
  1302  0012C4  501C               	movf	lcd_putc@c,w,c
  1303                           
  1304                           ; Switch size 1, requested type "space"
  1305                           ; Number of cases is 3, Range of values is 8 to 12
  1306                           ; switch strategies available:
  1307                           ; Name         Instructions Cycles
  1308                           ; simple_byte           10     6 (average)
  1309                           ;	Chosen strategy is simple_byte
  1310  0012C6  0A08               	xorlw	8	; case 8
  1311  0012C8  B4D8               	btfsc	status,2,c
  1312  0012CA  D7F0               	goto	l1104
  1313  0012CC  0A02               	xorlw	2	; case 10
  1314  0012CE  B4D8               	btfsc	status,2,c
  1315  0012D0  D7E7               	goto	l1102
  1316  0012D2  0A06               	xorlw	6	; case 12
  1317  0012D4  B4D8               	btfsc	status,2,c
  1318  0012D6  D7D8               	goto	l1100
  1319  0012D8  D7EF               	goto	l1106
  1320  0012DA                     __end_of_lcd_putc:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           intcon	equ	0xFF2
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           postdec1	equ	0xFE5
  1330                           fsr1l	equ	0xFE1
  1331                           indf2	equ	0xFDF
  1332                           fsr2h	equ	0xFDA
  1333                           fsr2l	equ	0xFD9
  1334                           status	equ	0xFD8
  1335                           
  1336 ;; *************** function _lcd_gotoxy *****************
  1337 ;; Defined at:
  1338 ;;		line 89 in file "lcd_x8.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  x               1    wreg     unsigned char 
  1341 ;;  y               1   24[COMRAM] unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  x               1   25[COMRAM] unsigned char 
  1344 ;;  address         1   26[COMRAM] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1354 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;Total ram usage:        3 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    4
  1361 ;; This function calls:
  1362 ;;		_lcd_send_byte
  1363 ;; This function is called by:
  1364 ;;		_lcd_putc
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text9
  1370  001322                     __ptext9:
  1371                           	opt stack 0
  1372  001322                     _lcd_gotoxy:
  1373                           	opt stack 24
  1374                           
  1375                           ;incstack = 0
  1376                           ;lcd_gotoxy@x stored from wreg
  1377  001322  6E1A               	movwf	lcd_gotoxy@x,c
  1378                           
  1379                           ;lcd_x8.c: 90: unsigned char address;
  1380                           ;lcd_x8.c: 92: switch (y) {
  1381  001324  D009               	goto	l1092
  1382  001326                     l1082:
  1383  001326  0E80               	movlw	128
  1384  001328  D005               	goto	L3
  1385  00132A                     l1084:
  1386  00132A  0EC0               	movlw	192
  1387  00132C  D003               	goto	L3
  1388  00132E                     l1086:
  1389  00132E  0E90               	movlw	144
  1390  001330  D001               	goto	L3
  1391  001332                     l1088:
  1392  001332  0ED0               	movlw	208
  1393  001334                     L3:
  1394  001334  6E1B               	movwf	lcd_gotoxy@address,c
  1395                           
  1396                           ;lcd_x8.c: 101: }
  1397                           
  1398                           ;lcd_x8.c: 100: break;
  1399  001336  D00D               	goto	l1094
  1400  001338                     l1092:
  1401  001338  5019               	movf	lcd_gotoxy@y,w,c
  1402                           
  1403                           ; Switch size 1, requested type "space"
  1404                           ; Number of cases is 4, Range of values is 1 to 4
  1405                           ; switch strategies available:
  1406                           ; Name         Instructions Cycles
  1407                           ; simple_byte           13     7 (average)
  1408                           ;	Chosen strategy is simple_byte
  1409  00133A  0A01               	xorlw	1	; case 1
  1410  00133C  B4D8               	btfsc	status,2,c
  1411  00133E  D7F3               	goto	l1082
  1412  001340  0A03               	xorlw	3	; case 2
  1413  001342  B4D8               	btfsc	status,2,c
  1414  001344  D7F2               	goto	l1084
  1415  001346  0A01               	xorlw	1	; case 3
  1416  001348  B4D8               	btfsc	status,2,c
  1417  00134A  D7F1               	goto	l1086
  1418  00134C  0A07               	xorlw	7	; case 4
  1419  00134E  B4D8               	btfsc	status,2,c
  1420  001350  D7F0               	goto	l1088
  1421  001352                     l1094:
  1422                           
  1423                           ;lcd_x8.c: 102: address += x - 1;
  1424  001352  041A               	decf	lcd_gotoxy@x,w,c
  1425  001354  261B               	addwf	lcd_gotoxy@address,f,c
  1426                           
  1427                           ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
  1428  001356  501B               	movf	lcd_gotoxy@address,w,c
  1429  001358  0980               	iorlw	128
  1430  00135A  6E17               	movwf	lcd_send_byte@n,c
  1431  00135C  0E00               	movlw	0
  1432  00135E  EC6D  F009         	call	_lcd_send_byte
  1433  001362  0012               	return		;funcret
  1434  001364                     __end_of_lcd_gotoxy:
  1435                           	opt stack 0
  1436                           tblptru	equ	0xFF8
  1437                           tblptrh	equ	0xFF7
  1438                           tblptrl	equ	0xFF6
  1439                           tablat	equ	0xFF5
  1440                           intcon	equ	0xFF2
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           postdec1	equ	0xFE5
  1444                           fsr1l	equ	0xFE1
  1445                           indf2	equ	0xFDF
  1446                           fsr2h	equ	0xFDA
  1447                           fsr2l	equ	0xFD9
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function _lcd_init *****************
  1451 ;; Defined at:
  1452 ;;		line 56 in file "lcd_x8.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  i               1   24[COMRAM] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;Total ram usage:        1 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    4
  1473 ;; This function calls:
  1474 ;;		_delay_ms
  1475 ;;		_lcd_send_byte
  1476 ;;		_lcd_send_nibble
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text10
  1483  001222                     __ptext10:
  1484                           	opt stack 0
  1485  001222                     _lcd_init:
  1486                           	opt stack 26
  1487                           
  1488                           ;lcd_x8.c: 58: unsigned char i;
  1489                           ;lcd_x8.c: 61: lcd.rs = 0;
  1490                           
  1491                           ;incstack = 0
  1492  001222  9283               	bcf	3971,1,c
  1493                           
  1494                           ;lcd_x8.c: 63: lcd.enable = 0;
  1495  001224  9683               	bcf	3971,3,c
  1496                           
  1497                           ;lcd_x8.c: 65: delay_ms(25);
  1498  001226  0E00               	movlw	0
  1499  001228  6E10               	movwf	delay_ms@n+1,c
  1500  00122A  0E19               	movlw	25
  1501  00122C  6E0F               	movwf	delay_ms@n,c
  1502  00122E  EC34  F00A         	call	_delay_ms	;wreg free
  1503                           
  1504                           ;lcd_x8.c: 66: for (i = 1; i <= 3; ++i) {
  1505  001232  0E01               	movlw	1
  1506  001234  6E19               	movwf	lcd_init@i,c
  1507  001236                     l1118:
  1508  001236  0E03               	movlw	3
  1509  001238  6419               	cpfsgt	lcd_init@i,c
  1510  00123A  D001               	goto	l1122
  1511  00123C  D00B               	goto	l1128
  1512  00123E                     l1122:
  1513                           
  1514                           ;lcd_x8.c: 67: lcd_send_nibble(3);
  1515  00123E  0E03               	movlw	3
  1516  001240  EC46  F00A         	call	_lcd_send_nibble
  1517                           
  1518                           ;lcd_x8.c: 69: delay_ms(6);
  1519  001244  0E00               	movlw	0
  1520  001246  6E10               	movwf	delay_ms@n+1,c
  1521  001248  0E06               	movlw	6
  1522  00124A  6E0F               	movwf	delay_ms@n,c
  1523  00124C  EC34  F00A         	call	_delay_ms	;wreg free
  1524  001250  2A19               	incf	lcd_init@i,f,c
  1525  001252  D7F1               	goto	l1118
  1526  001254                     l1128:
  1527                           
  1528                           ;lcd_x8.c: 70: }
  1529                           ;lcd_x8.c: 72: lcd_send_nibble(2);
  1530  001254  0E02               	movlw	2
  1531  001256  EC46  F00A         	call	_lcd_send_nibble
  1532                           
  1533                           ;lcd_x8.c: 74: for (i = 0; i <= 3; ++i)
  1534  00125A  0E00               	movlw	0
  1535  00125C  6E19               	movwf	lcd_init@i,c
  1536  00125E                     l1132:
  1537  00125E  0E03               	movlw	3
  1538  001260  6419               	cpfsgt	lcd_init@i,c
  1539  001262  D001               	goto	l1136
  1540  001264  0012               	return	
  1541  001266                     l1136:
  1542                           
  1543                           ;lcd_x8.c: 75: lcd_send_byte(0, LCD_INIT_STRING[i]);
  1544  001266  5019               	movf	lcd_init@i,w,c
  1545  001268  0D01               	mullw	1
  1546  00126A  0E34               	movlw	low _LCD_INIT_STRING
  1547  00126C  24F3               	addwf	prodl,w,c
  1548  00126E  6ED9               	movwf	fsr2l,c
  1549  001270  0E00               	movlw	high _LCD_INIT_STRING
  1550  001272  20F4               	addwfc	prodh,w,c
  1551  001274  6EDA               	movwf	fsr2h,c
  1552  001276  50DF               	movf	indf2,w,c
  1553  001278  6E17               	movwf	lcd_send_byte@n,c
  1554  00127A  0E00               	movlw	0
  1555  00127C  EC6D  F009         	call	_lcd_send_byte
  1556  001280  2A19               	incf	lcd_init@i,f,c
  1557  001282  D7ED               	goto	l1132
  1558  001284                     __end_of_lcd_init:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           prodh	equ	0xFF4
  1565                           prodl	equ	0xFF3
  1566                           intcon	equ	0xFF2
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           postdec1	equ	0xFE5
  1570                           fsr1l	equ	0xFE1
  1571                           indf2	equ	0xFDF
  1572                           fsr2h	equ	0xFDA
  1573                           fsr2l	equ	0xFD9
  1574                           status	equ	0xFD8
  1575                           
  1576 ;; *************** function _Lcd_Shift_Left *****************
  1577 ;; Defined at:
  1578 ;;		line 134 in file "lcd_x8.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    4
  1599 ;; This function calls:
  1600 ;;		_lcd_send_byte
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text11
  1607  0014DA                     __ptext11:
  1608                           	opt stack 0
  1609  0014DA                     _Lcd_Shift_Left:
  1610                           	opt stack 26
  1611                           
  1612                           ;lcd_x8.c: 135: lcd_send_byte(0, 0x18);
  1613                           
  1614                           ;incstack = 0
  1615  0014DA  0E18               	movlw	24
  1616  0014DC  6E17               	movwf	lcd_send_byte@n,c
  1617  0014DE  0E00               	movlw	0
  1618  0014E0  EC6D  F009         	call	_lcd_send_byte
  1619  0014E4  0012               	return		;funcret
  1620  0014E6                     __end_of_Lcd_Shift_Left:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           tblptrl	equ	0xFF6
  1625                           tablat	equ	0xFF5
  1626                           prodh	equ	0xFF4
  1627                           prodl	equ	0xFF3
  1628                           intcon	equ	0xFF2
  1629                           postinc0	equ	0xFEE
  1630                           wreg	equ	0xFE8
  1631                           postdec1	equ	0xFE5
  1632                           fsr1l	equ	0xFE1
  1633                           indf2	equ	0xFDF
  1634                           fsr2h	equ	0xFDA
  1635                           fsr2l	equ	0xFD9
  1636                           status	equ	0xFD8
  1637                           
  1638 ;; *************** function _lcd_send_byte *****************
  1639 ;; Defined at:
  1640 ;;		line 39 in file "lcd_x8.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  cm_data         1    wreg     unsigned char 
  1643 ;;  n               1   22[COMRAM] unsigned char 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  cm_data         1   23[COMRAM] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1655 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;Total ram usage:        2 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    3
  1662 ;; This function calls:
  1663 ;;		_delay_cycles
  1664 ;;		_delay_ms
  1665 ;;		_lcd_send_nibble
  1666 ;; This function is called by:
  1667 ;;		_lcd_init
  1668 ;;		_lcd_gotoxy
  1669 ;;		_lcd_putc
  1670 ;;		_Lcd_Shift_Left
  1671 ;;		_Lcd_Shift_Right
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text12
  1676  0012DA                     __ptext12:
  1677                           	opt stack 0
  1678  0012DA                     _lcd_send_byte:
  1679                           	opt stack 25
  1680                           
  1681                           ;incstack = 0
  1682                           ;lcd_send_byte@cm_data stored from wreg
  1683  0012DA  6E18               	movwf	lcd_send_byte@cm_data,c
  1684                           
  1685                           ;lcd_x8.c: 43: lcd.rs = cm_data;
  1686  0012DC  B018               	btfsc	lcd_send_byte@cm_data,0,c
  1687  0012DE  D002               	bra	u245
  1688  0012E0  9283               	bcf	3971,1,c
  1689  0012E2  D001               	bra	u246
  1690  0012E4                     u245:
  1691  0012E4  8283               	bsf	3971,1,c
  1692  0012E6                     u246:
  1693                           
  1694                           ;lcd_x8.c: 44: delay_cycles(1);
  1695  0012E6  0E01               	movlw	1
  1696  0012E8  ECCF  F009         	call	_delay_cycles
  1697                           
  1698                           ;lcd_x8.c: 46: delay_cycles(1);
  1699  0012EC  0E01               	movlw	1
  1700  0012EE  ECCF  F009         	call	_delay_cycles
  1701                           
  1702                           ;lcd_x8.c: 47: lcd.enable = 0;
  1703  0012F2  9683               	bcf	3971,3,c
  1704                           
  1705                           ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
  1706  0012F4  3817               	swapf	lcd_send_byte@n,w,c
  1707  0012F6  0B0F               	andlw	15
  1708  0012F8  EC46  F00A         	call	_lcd_send_nibble
  1709                           
  1710                           ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
  1711  0012FC  5017               	movf	lcd_send_byte@n,w,c
  1712  0012FE  0B0F               	andlw	15
  1713  001300  EC46  F00A         	call	_lcd_send_nibble
  1714                           
  1715                           ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
  1716  001304  5018               	movf	lcd_send_byte@cm_data,w,c
  1717  001306  B4D8               	btfsc	status,2,c
  1718  001308  D005               	goto	l1078
  1719  00130A  0E32               	movlw	50
  1720  00130C                     u407:
  1721  00130C  0004               	clrwdt	
  1722  00130E  2EE8               	decfsz	wreg,f,c
  1723  001310  D7FD               	goto	u407
  1724  001312  0012               	return	
  1725  001314                     l1078:
  1726                           
  1727                           ;lcd_x8.c: 51: else
  1728                           ;lcd_x8.c: 52: delay_ms(2);
  1729  001314  0E00               	movlw	0
  1730  001316  6E10               	movwf	delay_ms@n+1,c
  1731  001318  0E02               	movlw	2
  1732  00131A  6E0F               	movwf	delay_ms@n,c
  1733  00131C  EC34  F00A         	call	_delay_ms	;wreg free
  1734  001320  0012               	return	
  1735  001322                     __end_of_lcd_send_byte:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           prodh	equ	0xFF4
  1742                           prodl	equ	0xFF3
  1743                           intcon	equ	0xFF2
  1744                           postinc0	equ	0xFEE
  1745                           wreg	equ	0xFE8
  1746                           postdec1	equ	0xFE5
  1747                           fsr1l	equ	0xFE1
  1748                           indf2	equ	0xFDF
  1749                           fsr2h	equ	0xFDA
  1750                           fsr2l	equ	0xFD9
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _lcd_send_nibble *****************
  1754 ;; Defined at:
  1755 ;;		line 29 in file "lcd_x8.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  n               1    wreg     unsigned char 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  n               1   21[COMRAM] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;Total ram usage:        2 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    2
  1776 ;; This function calls:
  1777 ;;		_delay_cycles
  1778 ;; This function is called by:
  1779 ;;		_lcd_send_byte
  1780 ;;		_lcd_init
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text13
  1785  00148C                     __ptext13:
  1786                           	opt stack 0
  1787  00148C                     _lcd_send_nibble:
  1788                           	opt stack 25
  1789                           
  1790                           ;incstack = 0
  1791                           ;lcd_send_nibble@n stored from wreg
  1792  00148C  6E16               	movwf	lcd_send_nibble@n,c
  1793                           
  1794                           ;lcd_x8.c: 31: lcd.data = n;
  1795  00148E  C016  F015         	movff	lcd_send_nibble@n,??_lcd_send_nibble
  1796  001492  3A15               	swapf	??_lcd_send_nibble,f,c
  1797  001494  5083               	movf	3971,w,c
  1798  001496  1815               	xorwf	??_lcd_send_nibble,w,c
  1799  001498  0B0F               	andlw	-241
  1800  00149A  1815               	xorwf	??_lcd_send_nibble,w,c
  1801  00149C  6E83               	movwf	3971,c
  1802                           
  1803                           ;lcd_x8.c: 33: delay_cycles(1);
  1804  00149E  0E01               	movlw	1
  1805  0014A0  ECCF  F009         	call	_delay_cycles
  1806                           
  1807                           ;lcd_x8.c: 34: lcd.enable = 1;
  1808  0014A4  8683               	bsf	3971,3,c
  1809                           
  1810                           ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
  1811  0014A6  0004               	clrwdt	
  1812  0014A8  F000               	nop		;2 cycle nop
  1813                           
  1814                           ;lcd_x8.c: 36: lcd.enable = 0;
  1815  0014AA  9683               	bcf	3971,3,c
  1816  0014AC  0012               	return		;funcret
  1817  0014AE                     __end_of_lcd_send_nibble:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodh	equ	0xFF4
  1824                           prodl	equ	0xFF3
  1825                           intcon	equ	0xFF2
  1826                           postinc0	equ	0xFEE
  1827                           wreg	equ	0xFE8
  1828                           postdec1	equ	0xFE5
  1829                           fsr1l	equ	0xFE1
  1830                           indf2	equ	0xFDF
  1831                           fsr2h	equ	0xFDA
  1832                           fsr2l	equ	0xFD9
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _delay_cycles *****************
  1836 ;; Defined at:
  1837 ;;		line 20 in file "lcd_x8.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  n               1    wreg     unsigned char 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  n               1   19[COMRAM] unsigned char 
  1842 ;;  x               2   17[COMRAM] int 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;Total ram usage:        6 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_lcd_send_nibble
  1863 ;;		_lcd_send_byte
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text14
  1868  00139E                     __ptext14:
  1869                           	opt stack 0
  1870  00139E                     _delay_cycles:
  1871                           	opt stack 25
  1872                           
  1873                           ;incstack = 0
  1874                           ;delay_cycles@n stored from wreg
  1875  00139E  6E14               	movwf	delay_cycles@n,c
  1876                           
  1877                           ;lcd_x8.c: 21: int x;
  1878                           ;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
  1879  0013A0  0E00               	movlw	0
  1880  0013A2  6E13               	movwf	delay_cycles@x+1,c
  1881  0013A4  0E00               	movlw	0
  1882  0013A6  6E12               	movwf	delay_cycles@x,c
  1883  0013A8  D003               	goto	l812
  1884  0013AA                     l16:
  1885  0013AA  0004               	clrwdt		;# 
  1886  0013AC  4A12               	infsnz	delay_cycles@x,f,c
  1887  0013AE  2A13               	incf	delay_cycles@x+1,f,c
  1888  0013B0                     l812:
  1889  0013B0  5014               	movf	delay_cycles@n,w,c
  1890  0013B2  6E0F               	movwf	??_delay_cycles& (0+255),c
  1891  0013B4  6A10               	clrf	(??_delay_cycles+1)& (0+255),c
  1892  0013B6  5012               	movf	delay_cycles@x,w,c
  1893  0013B8  5C0F               	subwf	??_delay_cycles,w,c
  1894  0013BA  5010               	movf	??_delay_cycles+1,w,c
  1895  0013BC  0A80               	xorlw	128
  1896  0013BE  6E11               	movwf	(??_delay_cycles+2)& (0+255),c
  1897  0013C0  5013               	movf	delay_cycles@x+1,w,c
  1898  0013C2  0A80               	xorlw	128
  1899  0013C4  5811               	subwfb	(??_delay_cycles+2)& (0+255),w,c
  1900  0013C6  A0D8               	btfss	status,0,c
  1901  0013C8  0012               	return	
  1902  0013CA  D7EF               	goto	l16
  1903  0013CC                     __end_of_delay_cycles:
  1904                           	opt stack 0
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           prodh	equ	0xFF4
  1910                           prodl	equ	0xFF3
  1911                           intcon	equ	0xFF2
  1912                           postinc0	equ	0xFEE
  1913                           wreg	equ	0xFE8
  1914                           postdec1	equ	0xFE5
  1915                           fsr1l	equ	0xFE1
  1916                           indf2	equ	0xFDF
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _delay_ms *****************
  1922 ;; Defined at:
  1923 ;;		line 12 in file "lcd_x8.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  n               2   14[COMRAM] unsigned int 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  x               2   16[COMRAM] int 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;Total ram usage:        4 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    1
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_lcd_send_byte
  1948 ;;		_lcd_init
  1949 ;;		_lcd_putc
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text15
  1955  001468                     __ptext15:
  1956                           	opt stack 0
  1957  001468                     _delay_ms:
  1958                           	opt stack 26
  1959                           
  1960                           ;lcd_x8.c: 13: int x;
  1961                           ;lcd_x8.c: 14: for (x = 0; x <= n; x++) {
  1962                           
  1963                           ;incstack = 0
  1964  001468  0E00               	movlw	0
  1965  00146A  6E12               	movwf	delay_ms@x+1,c
  1966  00146C  0E00               	movlw	0
  1967  00146E  6E11               	movwf	delay_ms@x,c
  1968  001470  D006               	goto	l9
  1969  001472                     l1058:
  1970                           
  1971                           ;lcd_x8.c: 15: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
  1972  001472  0EFA               	movlw	250
  1973  001474                     u417:
  1974  001474  0004               	clrwdt	
  1975  001476  2EE8               	decfsz	wreg,f,c
  1976  001478  D7FD               	goto	u417
  1977  00147A  4A11               	infsnz	delay_ms@x,f,c
  1978  00147C  2A12               	incf	delay_ms@x+1,f,c
  1979  00147E                     l9:
  1980  00147E  5011               	movf	delay_ms@x,w,c
  1981  001480  5C0F               	subwf	delay_ms@n,w,c
  1982  001482  5012               	movf	delay_ms@x+1,w,c
  1983  001484  5810               	subwfb	delay_ms@n+1,w,c
  1984  001486  A0D8               	btfss	status,0,c
  1985  001488  0012               	return	
  1986  00148A  D7F3               	goto	l1058
  1987  00148C                     __end_of_delay_ms:
  1988                           	opt stack 0
  1989                           tblptru	equ	0xFF8
  1990                           tblptrh	equ	0xFF7
  1991                           tblptrl	equ	0xFF6
  1992                           tablat	equ	0xFF5
  1993                           prodh	equ	0xFF4
  1994                           prodl	equ	0xFF3
  1995                           intcon	equ	0xFF2
  1996                           postinc0	equ	0xFEE
  1997                           wreg	equ	0xFE8
  1998                           postdec1	equ	0xFE5
  1999                           fsr1l	equ	0xFE1
  2000                           indf2	equ	0xFDF
  2001                           fsr2h	equ	0xFDA
  2002                           fsr2l	equ	0xFD9
  2003                           status	equ	0xFD8
  2004                           
  2005 ;; *************** function _highIsr *****************
  2006 ;; Defined at:
  2007 ;;		line 127 in file "ProjectPart1.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		None
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:       14 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		Interrupt level 2
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	intcode
  2035  000308                     __pintcode:
  2036                           	opt stack 0
  2037  000308                     _highIsr:
  2038                           	opt stack 24
  2039                           
  2040                           ;incstack = 0
  2041  000308  8238               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2042  00030A  CFFA F001          	movff	pclath,??_highIsr
  2043  00030E  CFFB F002          	movff	pclatu,??_highIsr+1
  2044  000312  EDDA  F008         	call	int_func,f	;refresh shadow registers
  2045                           pclatu	equ	0xFFB
  2046                           pclath	equ	0xFFA
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           prodh	equ	0xFF4
  2052                           prodl	equ	0xFF3
  2053                           intcon	equ	0xFF2
  2054                           postinc0	equ	0xFEE
  2055                           wreg	equ	0xFE8
  2056                           postdec1	equ	0xFE5
  2057                           fsr1l	equ	0xFE1
  2058                           indf2	equ	0xFDF
  2059                           fsr2h	equ	0xFDA
  2060                           fsr2l	equ	0xFD9
  2061                           status	equ	0xFD8
  2062                           
  2063                           	psect	intcode_body
  2064  0011B4                     __pintcode_body:
  2065                           	opt stack 24
  2066  0011B4                     int_func:
  2067                           	opt stack 24
  2068  0011B4  0006               	pop		; remove dummy address from shadow register refresh
  2069  0011B6  CFE9 F003          	movff	fsr0l,??_highIsr+2
  2070  0011BA  CFEA F004          	movff	fsr0h,??_highIsr+3
  2071  0011BE  CFE1 F005          	movff	fsr1l,??_highIsr+4
  2072  0011C2  CFE2 F006          	movff	fsr1h,??_highIsr+5
  2073  0011C6  CFD9 F007          	movff	fsr2l,??_highIsr+6
  2074  0011CA  CFDA F008          	movff	fsr2h,??_highIsr+7
  2075  0011CE  CFF3 F009          	movff	prodl,??_highIsr+8
  2076  0011D2  CFF4 F00A          	movff	prodh,??_highIsr+9
  2077  0011D6  CFF6 F00B          	movff	tblptrl,??_highIsr+10
  2078  0011DA  CFF7 F00C          	movff	tblptrh,??_highIsr+11
  2079  0011DE  CFF8 F00D          	movff	tblptru,??_highIsr+12
  2080  0011E2  CFF5 F00E          	movff	tablat,??_highIsr+13
  2081  0011E6  C00E  FFF5         	movff	??_highIsr+13,tablat
  2082  0011EA  C00D  FFF8         	movff	??_highIsr+12,tblptru
  2083  0011EE  C00C  FFF7         	movff	??_highIsr+11,tblptrh
  2084  0011F2  C00B  FFF6         	movff	??_highIsr+10,tblptrl
  2085  0011F6  C00A  FFF4         	movff	??_highIsr+9,prodh
  2086  0011FA  C009  FFF3         	movff	??_highIsr+8,prodl
  2087  0011FE  C008  FFDA         	movff	??_highIsr+7,fsr2h
  2088  001202  C007  FFD9         	movff	??_highIsr+6,fsr2l
  2089  001206  C006  FFE2         	movff	??_highIsr+5,fsr1h
  2090  00120A  C005  FFE1         	movff	??_highIsr+4,fsr1l
  2091  00120E  C004  FFEA         	movff	??_highIsr+3,fsr0h
  2092  001212  C003  FFE9         	movff	??_highIsr+2,fsr0l
  2093  001216  C002  FFFB         	movff	??_highIsr+1,pclatu
  2094  00121A  C001  FFFA         	movff	??_highIsr,pclath
  2095  00121E  9238               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2096  001220  0011               	retfie		f
  2097  001222                     __end_of_highIsr:
  2098                           	opt stack 0
  2099                           pclatu	equ	0xFFB
  2100                           pclath	equ	0xFFA
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           prodh	equ	0xFF4
  2106                           prodl	equ	0xFF3
  2107                           intcon	equ	0xFF2
  2108                           postinc0	equ	0xFEE
  2109                           fsr0h	equ	0xFEA
  2110                           fsr0l	equ	0xFE9
  2111                           wreg	equ	0xFE8
  2112                           postdec1	equ	0xFE5
  2113                           fsr1h	equ	0xFE2
  2114                           fsr1l	equ	0xFE1
  2115                           indf2	equ	0xFDF
  2116                           fsr2h	equ	0xFDA
  2117                           fsr2l	equ	0xFD9
  2118                           status	equ	0xFD8
  2119                           pclatu	equ	0xFFB
  2120                           pclath	equ	0xFFA
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           prodh	equ	0xFF4
  2126                           prodl	equ	0xFF3
  2127                           intcon	equ	0xFF2
  2128                           postinc0	equ	0xFEE
  2129                           fsr0h	equ	0xFEA
  2130                           fsr0l	equ	0xFE9
  2131                           wreg	equ	0xFE8
  2132                           postdec1	equ	0xFE5
  2133                           fsr1h	equ	0xFE2
  2134                           fsr1l	equ	0xFE1
  2135                           indf2	equ	0xFDF
  2136                           fsr2h	equ	0xFDA
  2137                           fsr2l	equ	0xFD9
  2138                           status	equ	0xFD8
  2139                           
  2140                           	psect	rparam
  2141  0000                     pclatu	equ	0xFFB
  2142                           pclath	equ	0xFFA
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           prodh	equ	0xFF4
  2148                           prodl	equ	0xFF3
  2149                           intcon	equ	0xFF2
  2150                           postinc0	equ	0xFEE
  2151                           fsr0h	equ	0xFEA
  2152                           fsr0l	equ	0xFE9
  2153                           wreg	equ	0xFE8
  2154                           postdec1	equ	0xFE5
  2155                           fsr1h	equ	0xFE2
  2156                           fsr1l	equ	0xFE1
  2157                           indf2	equ	0xFDF
  2158                           fsr2h	equ	0xFDA
  2159                           fsr2l	equ	0xFD9
  2160                           status	equ	0xFD8
  2161                           
  2162                           	psect	temp
  2163  000038                     btemp:
  2164                           	opt stack 0
  2165  000038                     	ds	1
  2166  0000                     int$flags	set	btemp
  2167                           pclatu	equ	0xFFB
  2168                           pclath	equ	0xFFA
  2169                           tblptru	equ	0xFF8
  2170                           tblptrh	equ	0xFF7
  2171                           tblptrl	equ	0xFF6
  2172                           tablat	equ	0xFF5
  2173                           prodh	equ	0xFF4
  2174                           prodl	equ	0xFF3
  2175                           intcon	equ	0xFF2
  2176                           postinc0	equ	0xFEE
  2177                           fsr0h	equ	0xFEA
  2178                           fsr0l	equ	0xFE9
  2179                           wreg	equ	0xFE8
  2180                           postdec1	equ	0xFE5
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           indf2	equ	0xFDF
  2184                           fsr2h	equ	0xFDA
  2185                           fsr2l	equ	0xFD9
  2186                           status	equ	0xFD8


Data Sizes:
    Strings     38
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     35      55
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[3]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> Buffer1(COMRAM[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 16
		 -> Buffer1(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_lcd_puts
    _send_string_no_lib->_send_byte_no_lib
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _Lcd_Shift_Left->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles

Critical Paths under _highIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   11037
                                             30 COMRAM     5     5      0
                     _Lcd_Shift_Left
                           _delay_ms
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                   _read_byte_no_lib
                   _send_byte_no_lib
                 _send_string_no_lib
                         _setupPorts
                        _setupSerial
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6     462
                                             14 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_string_no_lib                                   2     0      2     124
                                             15 COMRAM     2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (2) _send_byte_no_lib                                     1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_byte_no_lib                                     1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    2992
                                             28 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    2819
                                             27 COMRAM     1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    1304
                                             24 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    1630
                                             24 COMRAM     1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0    1041
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1041
                                             22 COMRAM     2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      45
                                             20 COMRAM     2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (5) _delay_cycles                                         6     6      0      30
                                             14 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             4     2      2     430
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _highIsr                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Shift_Left
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _delay_ms
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_puts
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _read_byte_no_lib
   _send_byte_no_lib
   _send_string_no_lib
     _send_byte_no_lib
   _setupPorts
   _setupSerial
   _sprintf

 _highIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     23      37       1       43.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      34        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Apr 20 09:45:27 2022

                          l9 147E                           l16 13AA               ?_lcd_send_byte 0017  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                  __CFG_OSC$XT 000000  
                __CFG_LVP$ON 000000                  __CFG_WDT$ON 000000                          l120 10A6  
                        l161 14B6                          l162 14BE                          l163 14BC  
                        l168 14D0                          l169 14CE                          l812 13B0  
               __CFG_CPB$OFF 000000                          u245 12E4                          u246 12E6  
                        u407 130C                          u417 1474                 __CFG_CPD$OFF 000000  
                        u390 111C                          _lcd 000F83                          prod 000FF3  
                        wreg 000FE8                  lcd_gotoxy@x 001A                  lcd_gotoxy@y 0019  
                       l1100 1288                         l1102 12A0                         l1110 12C4  
                       l1104 12AC                         l1122 123E                         l1106 12B8  
                       l1210 107A                         l1132 125E                         l1118 1236  
                       l1206 106A                         l1136 1266                         l1128 1254  
                       l1144 1446                         l1160 1144                         l1216 108C  
                       l1058 1472                         l1082 1326                         l1162 114A  
                       l1154 1134                         l1234 10D2                         l1084 132A  
                       l1092 1338                         l1148 1458                         l1172 116C  
                       l1078 1314                         l1086 132E                         l1094 1352  
                       l1182 13F8                         l1166 115E                         l1158 113E  
                       l1174 118E                         l1088 1332                         l1176 11A6  
                       l1248 1122                         l1186 140C                         STR_1 1013  
                       STR_2 1001                         STR_3 1024                         _LATA 000F89  
                       _LATB 000F8A                         _LATC 000F8B                         _LATD 000F8C  
                       _LATE 000F8D             ?_lcd_send_nibble 0001                         _main 1028  
           _send_byte_no_lib 14CA                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr0l 000FE9                         fsr2h 000FDA                         fsr1l 000FE1  
                       indf2 000FDF                         fsr2l 000FD9                         btemp 0038  
                       pclat 000FFA                  main@psition 0021                         prodh 000FF4  
                       prodl 000FF3                         start 0316                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000010         __end_of_delay_cycles 13CC  
                      ?_main 0001                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TXREG 000FAD                        _TXSTA 000FAC                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
            __end_of_highIsr 1222                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000      __size_of_Lcd_Shift_Left 000C  
                      main@i 001F                        main@x 0023                        tablat 000FF5  
                      status 000FD8              __end_of_sprintf 11B4               __CFG_PBADEN$ON 000000  
            __initialization 1364                 __end_of_main 112A              ??_lcd_send_byte 0018  
                     ??_main 001F                __activetblptr 000002                       _ADCON1 000FC1  
                     _INTCON 000FF2                       _SPBRGH 000FB0             __end_of_delay_ms 148C  
             __CFG_XINST$OFF 000000             __end_of_lcd_init 1284             __end_of_lcd_putc 12DA  
           __end_of_lcd_puts 1468               __CFG_STVREN$ON 000000                       clear_0 136A  
                  ??_highIsr 0001                 __pdataCOMRAM 0034                 __mediumconst 0000  
        send_string_no_lib@p 0010                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8           _send_string_no_lib 13F6                 ?_setupSerial 0001  
                  ??_sprintf 0015                   __accesstop 0080      __end_of__initialization 1390  
        ?_send_string_no_lib 0010            ?_read_byte_no_lib 0001                ___rparam_used 000001  
         ??_read_byte_no_lib 000F               __pcstackCOMRAM 0001        __size_of_delay_cycles 002E  
       ??_send_string_no_lib 0012     __end_of_send_byte_no_lib 14DA               _Lcd_Shift_Left 14DA  
          lcd_gotoxy@address 001B                 _delay_cycles 139E            read_byte_no_lib@c 000F  
             lcd_send_byte@n 0017             lcd_send_nibble@n 0016       __end_of_Lcd_Shift_Left 14E6  
                  ?_delay_ms 000F                   _lcd_gotoxy 1322                    ?_lcd_init 0001  
                  ?_lcd_putc 0001                    ?_lcd_puts 001D                      _Buffer1 0024  
                    __Hparam 0000                      __Lparam 0000     __size_of_lcd_send_nibble 0022  
               __psmallconst 1000                      __pcinit 1364                      __ramtop 1000  
                    __ptext0 1028                      __ptext1 112A                      __ptext2 1420  
                    __ptext3 13CC                      __ptext4 13F6                      __ptext5 14CA  
                    __ptext6 14AE                      __ptext7 1444                      __ptext8 1284  
                    __ptext9 1322                      _highIsr 0308              ?_Lcd_Shift_Left 0001  
                 ??_delay_ms 0011                      _sprintf 112A                   ??_lcd_init 0019  
             __pintcode_body 11B4                   ??_lcd_putc 001C                   ??_lcd_puts 001F  
       end_of_initialization 1390         __size_of_setupSerial 0024                __Lmediumconst 0000  
                    int_func 11B4         lcd_send_byte@cm_data 0018                    _RCSTAbits 000FAB  
                    postdec1 000FE5                      postinc0 000FEE        __end_of_lcd_send_byte 1322  
           setupSerial@dummy 000F                   _setupPorts 13CC                  ?_lcd_gotoxy 0019  
            _LCD_INIT_STRING 0034                    _TXSTAbits 000FAC            send_byte_no_lib@c 000F  
                _BAUDCONbits 000FB8                __pidataCOMRAM 14E6                delay_cycles@n 0014  
              delay_cycles@x 0012            ??_lcd_send_nibble 0015    __size_of_read_byte_no_lib 001C  
          ?_send_byte_no_lib 0001          start_initialization 1364           ??_send_byte_no_lib 000F  
        __size_of_lcd_gotoxy 0042             __CFG_LPT1OSC$OFF 000000  __size_of_send_string_no_lib 002A  
                ?_setupPorts 0001                  __pbssCOMRAM 0024            __size_of_delay_ms 0024  
          __size_of_lcd_init 0062                  sprintf@flag 0015            __size_of_lcd_putc 0056  
          __size_of_lcd_puts 0024            __CFG_CCP2MX$PORTC 000000                    __pintcode 0308  
           ??_Lcd_Shift_Left 0019                     ?_highIsr 0001                  __smallconst 1000  
                   ?_sprintf 000F                    delay_ms@n 000F                    delay_ms@x 0011  
        __size_of_setupPorts 002A                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
           _read_byte_no_lib 14AE                    lcd_init@i 0019                    lcd_putc@c 001C  
                  lcd_puts@s 001D                 ??_lcd_gotoxy 001A                ??_setupSerial 000F  
                  copy_data0 1384              _lcd_send_nibble 148C                     __Hrparam 0000  
                   __Lrparam 0000           __CFG_BOREN$SBORDIS 000000           __end_of_lcd_gotoxy 1364  
           __size_of_highIsr 0F1A                     _delay_ms 1468                     __ptext10 1222  
                   __ptext11 14DA                     __ptext12 12DA                     __ptext13 148C  
                   __ptext14 139E                     __ptext15 1468                     _lcd_init 1222  
                   _lcd_putc 1284                     _lcd_puts 1444             __size_of_sprintf 008A  
     __size_of_lcd_send_byte 0048                ?_delay_cycles 0001                __size_of_main 0102  
  __size_of_send_byte_no_lib 0010          __end_of_setupSerial 1444                     int$flags 0038  
               ??_setupPorts 000F                     intlevel2 0000                    sprintf@ap 0016  
    __end_of_lcd_send_nibble 14AE                    sprintf@sp 000F               ??_delay_cycles 000F  
         __end_of_setupPorts 13F6   __end_of_send_string_no_lib 1420                _lcd_send_byte 12DA  
                   sprintf@c 0018                     sprintf@f 0011                  _setupSerial 1420  
   __end_of_read_byte_no_lib 14CA  
