

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jun 11 10:27:28 2022

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           	psect	idataCOMRAM
    84  004084                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _MD1S
    88  004084  4D                 	db	77
    89  004085  44                 	db	68
    90  004086  3A                 	db	58
    91  004087  48                 	db	72
    92  004088  65                 	db	101
    93  004089  61                 	db	97
    94  00408A  74                 	db	116
    95  00408B  20                 	db	32
    96  00408C  20                 	db	32
    97  00408D  20                 	db	32
    98  00408E  20                 	db	32
    99  00408F  20                 	db	32
   100  004090  20                 	db	32
   101  004091  20                 	db	32
   102  004092  20                 	db	32
   103  004093  20                 	db	32
   104  004094  00                 	db	0
   105                           
   106                           ;initializer for _MD2S
   107  004095  4D                 	db	77
   108  004096  44                 	db	68
   109  004097  3A                 	db	58
   110  004098  43                 	db	67
   111  004099  6F                 	db	111
   112  00409A  6F                 	db	111
   113  00409B  6C                 	db	108
   114  00409C  20                 	db	32
   115  00409D  20                 	db	32
   116  00409E  20                 	db	32
   117  00409F  20                 	db	32
   118  0040A0  20                 	db	32
   119  0040A1  20                 	db	32
   120  0040A2  20                 	db	32
   121  0040A3  20                 	db	32
   122  0040A4  20                 	db	32
   123  0040A5  00                 	db	0
   124                           
   125                           ;initializer for _MD3S
   126  0040A6  4D                 	db	77
   127  0040A7  44                 	db	68
   128  0040A8  3A                 	db	58
   129  0040A9  41                 	db	65
   130  0040AA  75                 	db	117
   131  0040AB  74                 	db	116
   132  0040AC  6F                 	db	111
   133  0040AD  20                 	db	32
   134  0040AE  48                 	db	72
   135  0040AF  43                 	db	67
   136  0040B0  20                 	db	32
   137  0040B1  48                 	db	72
   138  0040B2  53                 	db	83
   139  0040B3  3A                 	db	58
   140  0040B4  20                 	db	32
   141  0040B5  20                 	db	32
   142  0040B6  00                 	db	0
   143                           
   144                           	psect	idataBANK0
   145  0042D4                     __pidataBANK0:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _LCD_INIT_STRING
   149  0042D4  28                 	db	40
   150  0042D5  0C                 	db	12
   151  0042D6  01                 	db	1
   152  0042D7  06                 	db	6
   153                           
   154                           	psect	idataBANK1
   155  00426E                     __pidataBANK1:
   156                           	opt stack 0
   157                           
   158                           ;initializer for _Cstate
   159  00426E  4E                 	db	78
   160                           
   161                           ;initializer for _HCstate
   162  00426F  4E                 	db	78
   163                           
   164                           ;initializer for _Hstate
   165  004270  4E                 	db	78
   166                           
   167                           ;initializer for _Received
   168  004271  24                 	db	36
   169                           
   170                           ;initializer for _MD0S
   171  004272  4D                 	db	77
   172  004273  44                 	db	68
   173  004274  3A                 	db	58
   174  004275  4F                 	db	79
   175  004276  46                 	db	70
   176  004277  46                 	db	70
   177  004278  20                 	db	32
   178  004279  20                 	db	32
   179  00427A  20                 	db	32
   180  00427B  20                 	db	32
   181  00427C  20                 	db	32
   182  00427D  20                 	db	32
   183  00427E  20                 	db	32
   184  00427F  20                 	db	32
   185  004280  20                 	db	32
   186  004281  20                 	db	32
   187  004282  00                 	db	0
   188                           
   189                           	psect	mediumconst
   190  00FE5E                     __pmediumconst:
   191                           	opt stack 0
   192  00FE5E  00                 	db	0
   193  00FE5F                     _dpowers:
   194                           	opt stack 0
   195  00FE5F  0001               	dw	1
   196  00FE61  0000               	dw	0
   197  00FE63  000A               	dw	10
   198  00FE65  0000               	dw	0
   199  00FE67  0064               	dw	100
   200  00FE69  0000               	dw	0
   201  00FE6B  03E8               	dw	1000
   202  00FE6D  0000               	dw	0
   203  00FE6F  2710               	dw	10000
   204  00FE71  0000               	dw	0
   205  00FE73  86A0               	dw	34464
   206  00FE75  0001               	dw	1
   207  00FE77  4240               	dw	16960
   208  00FE79  000F               	dw	15
   209  00FE7B  9680               	dw	38528
   210  00FE7D  0098               	dw	152
   211  00FE7F  E100               	dw	57600
   212  00FE81  05F5               	dw	1525
   213  00FE83  CA00               	dw	51712
   214  00FE85  3B9A               	dw	15258
   215  00FE87                     __end_of_dpowers:
   216                           	opt stack 0
   217  00FE87                     __npowers_:
   218                           	opt stack 0
   219  00FE87  00                 	db	0
   220  00FE88  80                 	db	128
   221  00FE89  3F                 	db	63
   222  00FE8A  CD                 	db	205
   223  00FE8B  CC                 	db	204
   224  00FE8C  3D                 	db	61
   225  00FE8D  D7                 	db	215
   226  00FE8E  23                 	db	35
   227  00FE8F  3C                 	db	60
   228  00FE90  12                 	db	18
   229  00FE91  83                 	db	131
   230  00FE92  3A                 	db	58
   231  00FE93  B7                 	db	183
   232  00FE94  D1                 	db	209
   233  00FE95  38                 	db	56
   234  00FE96  C6                 	db	198
   235  00FE97  27                 	db	39
   236  00FE98  37                 	db	55
   237  00FE99  38                 	db	56
   238  00FE9A  86                 	db	134
   239  00FE9B  35                 	db	53
   240  00FE9C  C0                 	db	192
   241  00FE9D  D6                 	db	214
   242  00FE9E  33                 	db	51
   243  00FE9F  CC                 	db	204
   244  00FEA0  2B                 	db	43
   245  00FEA1  32                 	db	50
   246  00FEA2  70                 	db	112
   247  00FEA3  89                 	db	137
   248  00FEA4  30                 	db	48
   249  00FEA5  E7                 	db	231
   250  00FEA6  DB                 	db	219
   251  00FEA7  2E                 	db	46
   252  00FEA8  E5                 	db	229
   253  00FEA9  3C                 	db	60
   254  00FEAA  1E                 	db	30
   255  00FEAB  42                 	db	66
   256  00FEAC  A2                 	db	162
   257  00FEAD  0D                 	db	13
   258  00FEAE                     __end_of__npowers_:
   259                           	opt stack 0
   260  00FEAE                     __powers_:
   261                           	opt stack 0
   262  00FEAE  00                 	db	0
   263  00FEAF  80                 	db	128
   264  00FEB0  3F                 	db	63
   265  00FEB1  00                 	db	0
   266  00FEB2  20                 	db	32
   267  00FEB3  41                 	db	65
   268  00FEB4  00                 	db	0
   269  00FEB5  C8                 	db	200
   270  00FEB6  42                 	db	66
   271  00FEB7  00                 	db	0
   272  00FEB8  7A                 	db	122
   273  00FEB9  44                 	db	68
   274  00FEBA  40                 	db	64
   275  00FEBB  1C                 	db	28
   276  00FEBC  46                 	db	70
   277  00FEBD  50                 	db	80
   278  00FEBE  C3                 	db	195
   279  00FEBF  47                 	db	71
   280  00FEC0  24                 	db	36
   281  00FEC1  74                 	db	116
   282  00FEC2  49                 	db	73
   283  00FEC3  97                 	db	151
   284  00FEC4  18                 	db	24
   285  00FEC5  4B                 	db	75
   286  00FEC6  BC                 	db	188
   287  00FEC7  BE                 	db	190
   288  00FEC8  4C                 	db	76
   289  00FEC9  6B                 	db	107
   290  00FECA  6E                 	db	110
   291  00FECB  4E                 	db	78
   292  00FECC  03                 	db	3
   293  00FECD  15                 	db	21
   294  00FECE  50                 	db	80
   295  00FECF  79                 	db	121
   296  00FED0  AD                 	db	173
   297  00FED1  60                 	db	96
   298  00FED2  F3                 	db	243
   299  00FED3  49                 	db	73
   300  00FED4  71                 	db	113
   301  00FED5                     __end_of__powers_:
   302                           	opt stack 0
   303  0000                     _ADCON0	set	4034
   304  0000                     _ADCON0bits	set	4034
   305  0000                     _ADCON1	set	4033
   306  0000                     _ADCON2	set	4032
   307  0000                     _ADRESH	set	4036
   308  0000                     _ADRESL	set	4035
   309  0000                     _BAUDCONbits	set	4024
   310  0000                     _CCP1CON	set	4029
   311  0000                     _CCP1CONbits	set	4029
   312  0000                     _CCPR1L	set	4030
   313  0000                     _INTCON	set	4082
   314  0000                     _INTCON2	set	4081
   315  0000                     _INTCON2bits	set	4081
   316  0000                     _INTCON3	set	4080
   317  0000                     _INTCON3bits	set	4080
   318  0000                     _INTCONbits	set	4082
   319  0000                     _PIE1	set	3997
   320  0000                     _PIE1bits	set	3997
   321  0000                     _PIE2	set	4000
   322  0000                     _PIE2bits	set	4000
   323  0000                     _PIR1bits	set	3998
   324  0000                     _PIR2bits	set	4001
   325  0000                     _PORTBbits	set	3969
   326  0000                     _PORTCbits	set	3970
   327  0000                     _PORTEbits	set	3972
   328  0000                     _PR2	set	4043
   329  0000                     _RCONbits	set	4048
   330  0000                     _RCREG	set	4014
   331  0000                     _RCSTA	set	4011
   332  0000                     _RCSTAbits	set	4011
   333  0000                     _SPBRG	set	4015
   334  0000                     _SPBRGH	set	4016
   335  0000                     _T0CON	set	4053
   336  0000                     _T0CONbits	set	4053
   337  0000                     _T1CONbits	set	4045
   338  0000                     _T2CON	set	4042
   339  0000                     _T2CONbits	set	4042
   340  0000                     _T3CON	set	4017
   341  0000                     _T3CONbits	set	4017
   342  0000                     _TMR0H	set	4055
   343  0000                     _TMR0L	set	4054
   344  0000                     _TMR1H	set	4047
   345  0000                     _TMR1L	set	4046
   346  0000                     _TMR3H	set	4019
   347  0000                     _TMR3L	set	4018
   348  0000                     _TRISA	set	3986
   349  0000                     _TRISB	set	3987
   350  0000                     _TRISC	set	3988
   351  0000                     _TRISCbits	set	3988
   352  0000                     _TRISD	set	3989
   353  0000                     _TRISE	set	3990
   354  0000                     _TXREG	set	4013
   355  0000                     _TXSTA	set	4012
   356  0000                     _TXSTAbits	set	4012
   357  00FED5                     STR_17:
   358  00FED5  52                 	db	82	;'R'
   359  00FED6  54                 	db	84	;'T'
   360  00FED7  3A                 	db	58	;':'
   361  00FED8  25                 	db	37
   362  00FED9  34                 	db	52	;'4'
   363  00FEDA  2E                 	db	46
   364  00FEDB  31                 	db	49	;'1'
   365  00FEDC  66                 	db	102	;'f'
   366  00FEDD  43                 	db	67	;'C'
   367  00FEDE  20                 	db	32
   368  00FEDF  2C                 	db	44
   369  00FEE0  20                 	db	32
   370  00FEE1  53                 	db	83	;'S'
   371  00FEE2  50                 	db	80	;'P'
   372  00FEE3  3A                 	db	58	;':'
   373  00FEE4  25                 	db	37
   374  00FEE5  34                 	db	52	;'4'
   375  00FEE6  2E                 	db	46
   376  00FEE7  31                 	db	49	;'1'
   377  00FEE8  66                 	db	102	;'f'
   378  00FEE9  43                 	db	67	;'C'
   379  00FEEA  20                 	db	32
   380  00FEEB  2C                 	db	44
   381  00FEEC  20                 	db	32
   382  00FEED  4F                 	db	79	;'O'
   383  00FEEE  54                 	db	84	;'T'
   384  00FEEF  3A                 	db	58	;':'
   385  00FEF0  25                 	db	37
   386  00FEF1  34                 	db	52	;'4'
   387  00FEF2  2E                 	db	46
   388  00FEF3  31                 	db	49	;'1'
   389  00FEF4  66                 	db	102	;'f'
   390  00FEF5  0D                 	db	13
   391  00FEF6  0A                 	db	10
   392  00FEF7  00                 	db	0
   393  00FEF8                     STR_22:
   394  00FEF8  2D                 	db	45
   395  00FEF9  2D                 	db	45
   396  00FEFA  2D                 	db	45
   397  00FEFB  2D                 	db	45
   398  00FEFC  2D                 	db	45
   399  00FEFD  2D                 	db	45
   400  00FEFE  2D                 	db	45
   401  00FEFF  2D                 	db	45
   402  00FF00  2D                 	db	45
   403  00FF01  2D                 	db	45
   404  00FF02  2D                 	db	45
   405  00FF03  2D                 	db	45
   406  00FF04  2D                 	db	45
   407  00FF05  2D                 	db	45
   408  00FF06  2D                 	db	45
   409  00FF07  2D                 	db	45
   410  00FF08  2D                 	db	45
   411  00FF09  2D                 	db	45
   412  00FF0A  2D                 	db	45
   413  00FF0B  2D                 	db	45
   414  00FF0C  2D                 	db	45
   415  00FF0D  2D                 	db	45
   416  00FF0E  2D                 	db	45
   417  00FF0F  2D                 	db	45
   418  00FF10  2D                 	db	45
   419  00FF11  2D                 	db	45
   420  00FF12  2D                 	db	45
   421  00FF13  2D                 	db	45
   422  00FF14  0D                 	db	13
   423  00FF15  0D                 	db	13
   424  00FF16  0A                 	db	10
   425  00FF17  00                 	db	0
   426  00FF18                     STR_3:
   427  00FF18  4F                 	db	79	;'O'
   428  00FF19  54                 	db	84	;'T'
   429  00FF1A  3A                 	db	58	;':'
   430  00FF1B  20                 	db	32
   431  00FF1C  20                 	db	32
   432  00FF1D  30                 	db	48	;'0'
   433  00FF1E  2E                 	db	46
   434  00FF1F  30                 	db	48	;'0'
   435  00FF20  43                 	db	67	;'C'
   436  00FF21  20                 	db	32
   437  00FF22  52                 	db	82	;'R'
   438  00FF23  3A                 	db	58	;':'
   439  00FF24  20                 	db	32
   440  00FF25  30                 	db	48	;'0'
   441  00FF26  2E                 	db	46
   442  00FF27  30                 	db	48	;'0'
   443  00FF28  25                 	db	37
   444  00FF29  25                 	db	37
   445  00FF2A  00                 	db	0
   446  00FF2B                     STR_7:
   447  00FF2B  4F                 	db	79	;'O'
   448  00FF2C  54                 	db	84	;'T'
   449  00FF2D  3A                 	db	58	;':'
   450  00FF2E  25                 	db	37
   451  00FF2F  35                 	db	53	;'5'
   452  00FF30  2E                 	db	46
   453  00FF31  31                 	db	49	;'1'
   454  00FF32  66                 	db	102	;'f'
   455  00FF33  43                 	db	67	;'C'
   456  00FF34  20                 	db	32
   457  00FF35  25                 	db	37
   458  00FF36  63                 	db	99	;'c'
   459  00FF37  3A                 	db	58	;':'
   460  00FF38  25                 	db	37
   461  00FF39  33                 	db	51	;'3'
   462  00FF3A  64                 	db	100	;'d'
   463  00FF3B  25                 	db	37
   464  00FF3C  25                 	db	37
   465  00FF3D  00                 	db	0
   466  00FF3E                     STR_6:
   467  00FF3E  53                 	db	83	;'S'
   468  00FF3F  50                 	db	80	;'P'
   469  00FF40  3A                 	db	58	;':'
   470  00FF41  25                 	db	37
   471  00FF42  35                 	db	53	;'5'
   472  00FF43  2E                 	db	46
   473  00FF44  31                 	db	49	;'1'
   474  00FF45  66                 	db	102	;'f'
   475  00FF46  43                 	db	67	;'C'
   476  00FF47  20                 	db	32
   477  00FF48  20                 	db	32
   478  00FF49  20                 	db	32
   479  00FF4A  20                 	db	32
   480  00FF4B  25                 	db	37
   481  00FF4C  63                 	db	99	;'c'
   482  00FF4D  20                 	db	32
   483  00FF4E  25                 	db	37
   484  00FF4F  63                 	db	99	;'c'
   485  00FF50  00                 	db	0
   486  00FF51                     STR_8:
   487  00FF51  4F                 	db	79	;'O'
   488  00FF52  54                 	db	84	;'T'
   489  00FF53  3A                 	db	58	;':'
   490  00FF54  25                 	db	37
   491  00FF55  35                 	db	53	;'5'
   492  00FF56  2E                 	db	46
   493  00FF57  31                 	db	49	;'1'
   494  00FF58  66                 	db	102	;'f'
   495  00FF59  43                 	db	67	;'C'
   496  00FF5A  20                 	db	32
   497  00FF5B  52                 	db	82	;'R'
   498  00FF5C  3A                 	db	58	;':'
   499  00FF5D  25                 	db	37
   500  00FF5E  34                 	db	52	;'4'
   501  00FF5F  2E                 	db	46
   502  00FF60  31                 	db	49	;'1'
   503  00FF61  66                 	db	102	;'f'
   504  00FF62  00                 	db	0
   505  00FF63                     STR_4:
   506  00FF63  4D                 	db	77	;'M'
   507  00FF64  44                 	db	68	;'D'
   508  00FF65  3A                 	db	58	;':'
   509  00FF66  4F                 	db	79	;'O'
   510  00FF67  46                 	db	70	;'F'
   511  00FF68  46                 	db	70	;'F'
   512  00FF69  20                 	db	32
   513  00FF6A  20                 	db	32
   514  00FF6B  20                 	db	32
   515  00FF6C  20                 	db	32
   516  00FF6D  20                 	db	32
   517  00FF6E  20                 	db	32
   518  00FF6F  20                 	db	32
   519  00FF70  20                 	db	32
   520  00FF71  20                 	db	32
   521  00FF72  20                 	db	32
   522  00FF73  00                 	db	0
   523  00FF74                     STR_1:
   524  00FF74  52                 	db	82	;'R'
   525  00FF75  54                 	db	84	;'T'
   526  00FF76  3A                 	db	58	;':'
   527  00FF77  20                 	db	32
   528  00FF78  20                 	db	32
   529  00FF79  30                 	db	48	;'0'
   530  00FF7A  2E                 	db	46
   531  00FF7B  30                 	db	48	;'0'
   532  00FF7C  43                 	db	67	;'C'
   533  00FF7D  20                 	db	32
   534  00FF7E  20                 	db	32
   535  00FF7F  20                 	db	32
   536  00FF80  20                 	db	32
   537  00FF81  48                 	db	72	;'H'
   538  00FF82  20                 	db	32
   539  00FF83  43                 	db	67	;'C'
   540  00FF84  00                 	db	0
   541  00FF85                     STR_5:
   542  00FF85  52                 	db	82	;'R'
   543  00FF86  54                 	db	84	;'T'
   544  00FF87  3A                 	db	58	;':'
   545  00FF88  25                 	db	37
   546  00FF89  35                 	db	53	;'5'
   547  00FF8A  2E                 	db	46
   548  00FF8B  31                 	db	49	;'1'
   549  00FF8C  66                 	db	102	;'f'
   550  00FF8D  43                 	db	67	;'C'
   551  00FF8E  20                 	db	32
   552  00FF8F  20                 	db	32
   553  00FF90  20                 	db	32
   554  00FF91  20                 	db	32
   555  00FF92  48                 	db	72	;'H'
   556  00FF93  20                 	db	32
   557  00FF94  43                 	db	67	;'C'
   558  00FF95  00                 	db	0
   559  00FF96                     STR_2:
   560  00FF96  53                 	db	83	;'S'
   561  00FF97  50                 	db	80	;'P'
   562  00FF98  3A                 	db	58	;':'
   563  00FF99  20                 	db	32
   564  00FF9A  20                 	db	32
   565  00FF9B  30                 	db	48	;'0'
   566  00FF9C  2E                 	db	46
   567  00FF9D  30                 	db	48	;'0'
   568  00FF9E  43                 	db	67	;'C'
   569  00FF9F  20                 	db	32
   570  00FFA0  20                 	db	32
   571  00FFA1  20                 	db	32
   572  00FFA2  20                 	db	32
   573  00FFA3  4E                 	db	78	;'N'
   574  00FFA4  20                 	db	32
   575  00FFA5  4E                 	db	78	;'N'
   576  00FFA6  00                 	db	0
   577  00FFA7                     STR_9:
   578  00FFA7  4D                 	db	77	;'M'
   579  00FFA8  44                 	db	68	;'D'
   580  00FFA9  3A                 	db	58	;':'
   581  00FFAA  41                 	db	65	;'A'
   582  00FFAB  75                 	db	117	;'u'
   583  00FFAC  74                 	db	116	;'t'
   584  00FFAD  6F                 	db	111	;'o'
   585  00FFAE  20                 	db	32
   586  00FFAF  48                 	db	72	;'H'
   587  00FFB0  43                 	db	67	;'C'
   588  00FFB1  20                 	db	32
   589  00FFB2  48                 	db	72	;'H'
   590  00FFB3  53                 	db	83	;'S'
   591  00FFB4  3A                 	db	58	;':'
   592  00FFB5  25                 	db	37
   593  00FFB6  64                 	db	100	;'d'
   594  00FFB7  00                 	db	0
   595  00FFB8                     STR_20:
   596  00FFB8  20                 	db	32
   597  00FFB9  2C                 	db	44
   598  00FFBA  20                 	db	32
   599  00FFBB  48                 	db	72	;'H'
   600  00FFBC  65                 	db	101	;'e'
   601  00FFBD  61                 	db	97	;'a'
   602  00FFBE  74                 	db	116	;'t'
   603  00FFBF  65                 	db	101	;'e'
   604  00FFC0  72                 	db	114	;'r'
   605  00FFC1  3A                 	db	58	;':'
   606  00FFC2  20                 	db	32
   607  00FFC3  00                 	db	0
   608  00FFC4                     STR_21:
   609  00FFC4  43                 	db	67	;'C'
   610  00FFC5  6F                 	db	111	;'o'
   611  00FFC6  6F                 	db	111	;'o'
   612  00FFC7  6C                 	db	108	;'l'
   613  00FFC8  65                 	db	101	;'e'
   614  00FFC9  72                 	db	114	;'r'
   615  00FFCA  3A                 	db	58	;':'
   616  00FFCB  20                 	db	32
   617  00FFCC  00                 	db	0
   618  00FFCD                     STR_12:
   619  00FFCD  41                 	db	65	;'A'
   620  00FFCE  75                 	db	117	;'u'
   621  00FFCF  74                 	db	116	;'t'
   622  00FFD0  6F                 	db	111	;'o'
   623  00FFD1  20                 	db	32
   624  00FFD2  48                 	db	72	;'H'
   625  00FFD3  43                 	db	67	;'C'
   626  00FFD4  00                 	db	0
   627  00FFD5                     STR_16:
   628  00FFD5  4F                 	db	79	;'O'
   629  00FFD6  46                 	db	70	;'F'
   630  00FFD7  46                 	db	70	;'F'
   631  00FFD8  20                 	db	32
   632  00FFD9  0D                 	db	13
   633  00FFDA  0A                 	db	10
   634  00FFDB  00                 	db	0
   635  00FFDC                     STR_19:
   636  00FFDC  4D                 	db	77	;'M'
   637  00FFDD  4F                 	db	79	;'O'
   638  00FFDE  44                 	db	68	;'D'
   639  00FFDF  45                 	db	69	;'E'
   640  00FFE0  3A                 	db	58	;':'
   641  00FFE1  20                 	db	32
   642  00FFE2  00                 	db	0
   643  00FFE3                     STR_15:
   644  00FFE3  4F                 	db	79	;'O'
   645  00FFE4  4E                 	db	78	;'N'
   646  00FFE5  20                 	db	32
   647  00FFE6  0D                 	db	13
   648  00FFE7  0A                 	db	10
   649  00FFE8  00                 	db	0
   650  00FFE9                     STR_14:
   651  00FFE9  4F                 	db	79	;'O'
   652  00FFEA  46                 	db	70	;'F'
   653  00FFEB  46                 	db	70	;'F'
   654  00FFEC  20                 	db	32
   655  00FFED  2C                 	db	44
   656  00FFEE  00                 	db	0
   657  00FFEF                     STR_13:
   658  00FFEF  4F                 	db	79	;'O'
   659  00FFF0  4E                 	db	78	;'N'
   660  00FFF1  20                 	db	32
   661  00FFF2  2C                 	db	44
   662  00FFF3  00                 	db	0
   663  00FFF4                     STR_11:
   664  00FFF4  43                 	db	67	;'C'
   665  00FFF5  6F                 	db	111	;'o'
   666  00FFF6  6F                 	db	111	;'o'
   667  00FFF7  6C                 	db	108	;'l'
   668  00FFF8  00                 	db	0
   669  00FFF9                     STR_10:
   670  00FFF9  48                 	db	72	;'H'
   671  00FFFA  65                 	db	101	;'e'
   672  00FFFB  61                 	db	97	;'a'
   673  00FFFC  74                 	db	116	;'t'
   674  00FFFD  00                 	db	0
   675  0000                     
   676                           ; #config settings
   677  00FFFE  00                 	db	0	; dummy byte at the end
   678  0000                     
   679                           	psect	cinit
   680  003AE0                     __pcinit:
   681                           	opt stack 0
   682  003AE0                     start_initialization:
   683                           	opt stack 0
   684  003AE0                     __initialization:
   685                           	opt stack 0
   686                           
   687                           ; Clear objects allocated to BANK1 (113 bytes)
   688  003AE0  EE01  F000         	lfsr	0,__pbssBANK1
   689  003AE4  0E71               	movlw	113
   690  003AE6                     clear_0:
   691  003AE6  6AEE               	clrf	postinc0,c
   692  003AE8  06E8               	decf	wreg,f,c
   693  003AEA  E1FD               	bnz	clear_0
   694                           
   695                           ; Initialize objects allocated to BANK1 (21 bytes)
   696                           ; load TBLPTR registers with __pidataBANK1
   697  003AEC  0E6E               	movlw	low __pidataBANK1
   698  003AEE  6EF6               	movwf	tblptrl,c
   699  003AF0  0E42               	movlw	high __pidataBANK1
   700  003AF2  6EF7               	movwf	tblptrh,c
   701  003AF4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   702  003AF6  6EF8               	movwf	tblptru,c
   703  003AF8  EE01  F0D1         	lfsr	0,__pdataBANK1
   704  003AFC  EE10 F015          	lfsr	1,21
   705  003B00                     copy_data0:
   706  003B00  0009               	tblrd		*+
   707  003B02  CFF5 FFEE          	movff	tablat,postinc0
   708  003B06  50E5               	movf	postdec1,w,c
   709  003B08  50E1               	movf	fsr1l,w,c
   710  003B0A  E1FA               	bnz	copy_data0
   711                           
   712                           ; Initialize objects allocated to BANK0 (4 bytes)
   713                           ; load TBLPTR registers with __pidataBANK0
   714  003B0C  0ED4               	movlw	low __pidataBANK0
   715  003B0E  6EF6               	movwf	tblptrl,c
   716  003B10  0E42               	movlw	high __pidataBANK0
   717  003B12  6EF7               	movwf	tblptrh,c
   718  003B14  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   719  003B16  6EF8               	movwf	tblptru,c
   720  003B18  EE00  F0F8         	lfsr	0,__pdataBANK0
   721  003B1C  EE10 F004          	lfsr	1,4
   722  003B20                     copy_data1:
   723  003B20  0009               	tblrd		*+
   724  003B22  CFF5 FFEE          	movff	tablat,postinc0
   725  003B26  50E5               	movf	postdec1,w,c
   726  003B28  50E1               	movf	fsr1l,w,c
   727  003B2A  E1FA               	bnz	copy_data1
   728                           
   729                           ; Initialize objects allocated to COMRAM (51 bytes)
   730                           ; load TBLPTR registers with __pidataCOMRAM
   731  003B2C  0E84               	movlw	low __pidataCOMRAM
   732  003B2E  6EF6               	movwf	tblptrl,c
   733  003B30  0E40               	movlw	high __pidataCOMRAM
   734  003B32  6EF7               	movwf	tblptrh,c
   735  003B34  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   736  003B36  6EF8               	movwf	tblptru,c
   737  003B38  EE00  F03F         	lfsr	0,__pdataCOMRAM
   738  003B3C  EE10 F033          	lfsr	1,51
   739  003B40                     copy_data2:
   740  003B40  0009               	tblrd		*+
   741  003B42  CFF5 FFEE          	movff	tablat,postinc0
   742  003B46  50E5               	movf	postdec1,w,c
   743  003B48  50E1               	movf	fsr1l,w,c
   744  003B4A  E1FA               	bnz	copy_data2
   745  003B4C                     end_of_initialization:
   746                           	opt stack 0
   747  003B4C                     __end_of__initialization:
   748                           	opt stack 0
   749  003B4C  9072               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   750  003B4E  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   751  003B50  0E00               	movlw	low (__Lmediumconst shr (0+16))
   752  003B52  6EF8               	movwf	tblptru,c
   753  003B54  0100               	movlb	0
   754  003B56  EFC3  F006         	goto	_main	;jump to C main() function
   755                           tblptru	equ	0xFF8
   756                           tblptrh	equ	0xFF7
   757                           tblptrl	equ	0xFF6
   758                           tablat	equ	0xFF5
   759                           postinc0	equ	0xFEE
   760                           wreg	equ	0xFE8
   761                           postdec1	equ	0xFE5
   762                           fsr1l	equ	0xFE1
   763                           
   764                           	psect	dataCOMRAM
   765  00003F                     __pdataCOMRAM:
   766                           	opt stack 0
   767  00003F                     _MD1S:
   768                           	opt stack 0
   769  00003F                     	ds	17
   770  000050                     _MD2S:
   771                           	opt stack 0
   772  000050                     	ds	17
   773  000061                     _MD3S:
   774                           	opt stack 0
   775  000061                     	ds	17
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           postdec1	equ	0xFE5
   783                           fsr1l	equ	0xFE1
   784                           
   785                           	psect	dataBANK0
   786  0000F8                     __pdataBANK0:
   787                           	opt stack 0
   788  0000F8                     _LCD_INIT_STRING:
   789                           	opt stack 0
   790  0000F8                     	ds	4
   791                           tblptru	equ	0xFF8
   792                           tblptrh	equ	0xFF7
   793                           tblptrl	equ	0xFF6
   794                           tablat	equ	0xFF5
   795                           postinc0	equ	0xFEE
   796                           wreg	equ	0xFE8
   797                           postdec1	equ	0xFE5
   798                           fsr1l	equ	0xFE1
   799                           
   800                           	psect	bssBANK1
   801  000100                     __pbssBANK1:
   802                           	opt stack 0
   803  000100                     _FanSpeed:
   804                           	opt stack 0
   805  000100                     	ds	3
   806  000103                     _OT:
   807                           	opt stack 0
   808  000103                     	ds	3
   809  000106                     _RT:
   810                           	opt stack 0
   811  000106                     	ds	3
   812  000109                     _SP:
   813                           	opt stack 0
   814  000109                     	ds	3
   815  00010C                     _C:
   816                           	opt stack 0
   817  00010C                     	ds	2
   818  00010E                     _GlobalConter:
   819                           	opt stack 0
   820  00010E                     	ds	2
   821  000110                     _H:
   822                           	opt stack 0
   823  000110                     	ds	2
   824  000112                     _HCP:
   825                           	opt stack 0
   826  000112                     	ds	2
   827  000114                     _HS:
   828                           	opt stack 0
   829  000114                     	ds	2
   830  000116                     _MD:
   831                           	opt stack 0
   832  000116                     	ds	2
   833  000118                     _RPS_C:
   834                           	opt stack 0
   835  000118                     	ds	2
   836  00011A                     _TonCounter:
   837                           	opt stack 0
   838  00011A                     	ds	2
   839  00011C                     _Buffer1:
   840                           	opt stack 0
   841  00011C                     	ds	17
   842  00012D                     _Buffer2:
   843                           	opt stack 0
   844  00012D                     	ds	17
   845  00013E                     _Buffer3:
   846                           	opt stack 0
   847  00013E                     	ds	17
   848  00014F                     _Buffer4:
   849                           	opt stack 0
   850  00014F                     	ds	17
   851  000160                     _MDS:
   852                           	opt stack 0
   853  000160                     	ds	17
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           postdec1	equ	0xFE5
   861                           fsr1l	equ	0xFE1
   862                           
   863                           	psect	dataBANK1
   864  0001D1                     __pdataBANK1:
   865                           	opt stack 0
   866  0001D1                     _Cstate:
   867                           	opt stack 0
   868  0001D1                     	ds	1
   869  0001D2                     _HCstate:
   870                           	opt stack 0
   871  0001D2                     	ds	1
   872  0001D3                     _Hstate:
   873                           	opt stack 0
   874  0001D3                     	ds	1
   875  0001D4                     _Received:
   876                           	opt stack 0
   877  0001D4                     	ds	1
   878  0001D5                     _MD0S:
   879                           	opt stack 0
   880  0001D5                     	ds	17
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           postinc0	equ	0xFEE
   886                           wreg	equ	0xFE8
   887                           postdec1	equ	0xFE5
   888                           fsr1l	equ	0xFE1
   889                           
   890                           	psect	cstackBANK1
   891  000171                     __pcstackBANK1:
   892                           	opt stack 0
   893  000171                     print_data@Buffer:
   894                           	opt stack 0
   895                           
   896                           ; 64 bytes @ 0x0
   897  000171                     	ds	64
   898  0001B1                     print_data@MODE:
   899                           	opt stack 0
   900                           
   901                           ; 8 bytes @ 0x40
   902  0001B1                     	ds	8
   903  0001B9                     print_data@HeaterState:
   904                           	opt stack 0
   905                           
   906                           ; 6 bytes @ 0x48
   907  0001B9                     	ds	6
   908  0001BF                     print_data@CoolerState:
   909                           	opt stack 0
   910                           
   911                           ; 6 bytes @ 0x4E
   912  0001BF                     	ds	6
   913  0001C5                     main@CoolError:
   914                           	opt stack 0
   915                           
   916                           ; 3 bytes @ 0x54
   917  0001C5                     	ds	3
   918  0001C8                     main@coolError:
   919                           	opt stack 0
   920                           
   921                           ; 3 bytes @ 0x57
   922  0001C8                     	ds	3
   923  0001CB                     main@HeatError:
   924                           	opt stack 0
   925                           
   926                           ; 3 bytes @ 0x5A
   927  0001CB                     	ds	3
   928  0001CE                     main@HeatError_1269:
   929                           	opt stack 0
   930                           
   931                           ; 3 bytes @ 0x5D
   932  0001CE                     	ds	3
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           postinc0	equ	0xFEE
   938                           wreg	equ	0xFE8
   939                           postdec1	equ	0xFE5
   940                           fsr1l	equ	0xFE1
   941                           
   942                           	psect	cstackBANK0
   943  000080                     __pcstackBANK0:
   944                           	opt stack 0
   945  000080                     ??_isdigit:
   946  000080                     ??_delay_cycles:
   947  000080                     ?_read_adc_raw_no_lib:
   948                           	opt stack 0
   949  000080                     ?___awmod:
   950                           	opt stack 0
   951  000080                     ?___ftpack:
   952                           	opt stack 0
   953  000080                     ?__tdiv_to_l_:
   954                           	opt stack 0
   955  000080                     ?__div_to_l_:
   956                           	opt stack 0
   957  000080                     ?___lldiv:
   958                           	opt stack 0
   959  000080                     setupSerial@dummy:
   960                           	opt stack 0
   961  000080                     send_byte_no_lib@c:
   962                           	opt stack 0
   963  000080                     delay_ms@n:
   964                           	opt stack 0
   965  000080                     set_pwm1_raw@raw_value:
   966                           	opt stack 0
   967  000080                     ___awmod@dividend:
   968                           	opt stack 0
   969  000080                     strcpy@to:
   970                           	opt stack 0
   971  000080                     __div_to_l_@f1:
   972                           	opt stack 0
   973  000080                     ___ftpack@arg:
   974                           	opt stack 0
   975  000080                     __tdiv_to_l_@f1:
   976                           	opt stack 0
   977  000080                     ___lldiv@dividend:
   978                           	opt stack 0
   979                           
   980                           ; 4 bytes @ 0x0
   981  000080                     	ds	1
   982  000081                     _isdigit$1900:
   983                           	opt stack 0
   984  000081                     send_string_no_lib@p:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x1
   988  000081                     	ds	1
   989  000082                     ??_read_adc_raw_no_lib:
   990  000082                     ??_set_pwm1_raw:
   991  000082                     isdigit@c:
   992                           	opt stack 0
   993  000082                     delay_ms@x:
   994                           	opt stack 0
   995  000082                     ___awmod@divisor:
   996                           	opt stack 0
   997  000082                     strcpy@from:
   998                           	opt stack 0
   999                           
  1000                           ; 2 bytes @ 0x2
  1001  000082                     	ds	1
  1002  000083                     delay_cycles@n:
  1003                           	opt stack 0
  1004  000083                     ___ftpack@exp:
  1005                           	opt stack 0
  1006  000083                     __div_to_l_@f2:
  1007                           	opt stack 0
  1008  000083                     __tdiv_to_l_@f2:
  1009                           	opt stack 0
  1010                           
  1011                           ; 3 bytes @ 0x3
  1012  000083                     	ds	1
  1013  000084                     read_adc_raw_no_lib@channel:
  1014                           	opt stack 0
  1015  000084                     ___awmod@counter:
  1016                           	opt stack 0
  1017  000084                     ___ftpack@sign:
  1018                           	opt stack 0
  1019  000084                     delay_cycles@x:
  1020                           	opt stack 0
  1021  000084                     strcpy@cp:
  1022                           	opt stack 0
  1023  000084                     ___lldiv@divisor:
  1024                           	opt stack 0
  1025                           
  1026                           ; 4 bytes @ 0x4
  1027  000084                     	ds	1
  1028  000085                     ??___ftpack:
  1029  000085                     ___awmod@sign:
  1030                           	opt stack 0
  1031  000085                     read_adc_raw_no_lib@raw_value:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x5
  1035  000085                     	ds	1
  1036  000086                     ??__tdiv_to_l_:
  1037  000086                     ??_lcd_send_nibble:
  1038  000086                     ?___awdiv:
  1039                           	opt stack 0
  1040  000086                     ___awdiv@dividend:
  1041                           	opt stack 0
  1042  000086                     __div_to_l_@quot:
  1043                           	opt stack 0
  1044                           
  1045                           ; 4 bytes @ 0x6
  1046  000086                     	ds	1
  1047  000087                     lcd_send_nibble@n:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x7
  1051  000087                     	ds	1
  1052  000088                     ?___lltoft:
  1053                           	opt stack 0
  1054  000088                     ?___lwtoft:
  1055                           	opt stack 0
  1056  000088                     lcd_send_byte@n:
  1057                           	opt stack 0
  1058  000088                     ___awdiv@divisor:
  1059                           	opt stack 0
  1060  000088                     ___lwtoft@c:
  1061                           	opt stack 0
  1062  000088                     ___lldiv@quotient:
  1063                           	opt stack 0
  1064  000088                     ___lltoft@c:
  1065                           	opt stack 0
  1066                           
  1067                           ; 4 bytes @ 0x8
  1068  000088                     	ds	1
  1069  000089                     lcd_send_byte@cm_data:
  1070                           	opt stack 0
  1071  000089                     __tdiv_to_l_@quot:
  1072                           	opt stack 0
  1073                           
  1074                           ; 4 bytes @ 0x9
  1075  000089                     	ds	1
  1076  00008A                     lcd_init@i:
  1077                           	opt stack 0
  1078  00008A                     lcd_gotoxy@y:
  1079                           	opt stack 0
  1080  00008A                     ___awdiv@counter:
  1081                           	opt stack 0
  1082  00008A                     __div_to_l_@cntr:
  1083                           	opt stack 0
  1084                           
  1085                           ; 1 bytes @ 0xA
  1086  00008A                     	ds	1
  1087  00008B                     lcd_gotoxy@x:
  1088                           	opt stack 0
  1089  00008B                     ___awdiv@sign:
  1090                           	opt stack 0
  1091  00008B                     __div_to_l_@exp1:
  1092                           	opt stack 0
  1093                           
  1094                           ; 1 bytes @ 0xB
  1095  00008B                     	ds	1
  1096  00008C                     ??___lltoft:
  1097  00008C                     lcd_gotoxy@address:
  1098                           	opt stack 0
  1099  00008C                     ___lldiv@counter:
  1100                           	opt stack 0
  1101  00008C                     ___awdiv@quotient:
  1102                           	opt stack 0
  1103                           
  1104                           ; 2 bytes @ 0xC
  1105  00008C                     	ds	1
  1106  00008D                     ?___llmod:
  1107                           	opt stack 0
  1108  00008D                     lcd_putc@c:
  1109                           	opt stack 0
  1110  00008D                     __tdiv_to_l_@cntr:
  1111                           	opt stack 0
  1112  00008D                     ___llmod@dividend:
  1113                           	opt stack 0
  1114                           
  1115                           ; 4 bytes @ 0xD
  1116  00008D                     	ds	1
  1117  00008E                     ?___wmul:
  1118                           	opt stack 0
  1119  00008E                     __tdiv_to_l_@exp1:
  1120                           	opt stack 0
  1121  00008E                     lcd_puts@s:
  1122                           	opt stack 0
  1123  00008E                     ___wmul@multiplier:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0xE
  1127  00008E                     	ds	2
  1128  000090                     ___lltoft@exp:
  1129                           	opt stack 0
  1130  000090                     ___wmul@multiplicand:
  1131                           	opt stack 0
  1132                           
  1133                           ; 2 bytes @ 0x10
  1134  000090                     	ds	1
  1135  000091                     ___llmod@divisor:
  1136                           	opt stack 0
  1137                           
  1138                           ; 4 bytes @ 0x11
  1139  000091                     	ds	1
  1140  000092                     ___wmul@product:
  1141                           	opt stack 0
  1142                           
  1143                           ; 2 bytes @ 0x12
  1144  000092                     	ds	2
  1145  000094                     ?___ftmul:
  1146                           	opt stack 0
  1147  000094                     ?___awtoft:
  1148                           	opt stack 0
  1149  000094                     ___awtoft@c:
  1150                           	opt stack 0
  1151  000094                     ___ftmul@f1:
  1152                           	opt stack 0
  1153                           
  1154                           ; 3 bytes @ 0x14
  1155  000094                     	ds	1
  1156  000095                     ___llmod@counter:
  1157                           	opt stack 0
  1158                           
  1159                           ; 1 bytes @ 0x15
  1160  000095                     	ds	2
  1161  000097                     ___awtoft@sign:
  1162                           	opt stack 0
  1163  000097                     ___ftmul@f2:
  1164                           	opt stack 0
  1165                           
  1166                           ; 3 bytes @ 0x17
  1167  000097                     	ds	1
  1168  000098                     ?___ftneg:
  1169                           	opt stack 0
  1170  000098                     ___ftneg@f1:
  1171                           	opt stack 0
  1172                           
  1173                           ; 3 bytes @ 0x18
  1174  000098                     	ds	2
  1175  00009A                     ??___ftmul:
  1176                           
  1177                           ; 1 bytes @ 0x1A
  1178  00009A                     	ds	1
  1179  00009B                     
  1180                           ; 1 bytes @ 0x1B
  1181  00009B                     	ds	2
  1182  00009D                     ___ftmul@exp:
  1183                           	opt stack 0
  1184                           
  1185                           ; 1 bytes @ 0x1D
  1186  00009D                     	ds	1
  1187  00009E                     ___ftmul@f3_as_product:
  1188                           	opt stack 0
  1189                           
  1190                           ; 3 bytes @ 0x1E
  1191  00009E                     	ds	3
  1192  0000A1                     ___ftmul@cntr:
  1193                           	opt stack 0
  1194                           
  1195                           ; 1 bytes @ 0x21
  1196  0000A1                     	ds	1
  1197  0000A2                     ___ftmul@sign:
  1198                           	opt stack 0
  1199                           
  1200                           ; 1 bytes @ 0x22
  1201  0000A2                     	ds	1
  1202  0000A3                     ?___ftdiv:
  1203                           	opt stack 0
  1204  0000A3                     ?_fround:
  1205                           	opt stack 0
  1206  0000A3                     ?_scale:
  1207                           	opt stack 0
  1208  0000A3                     ___ftdiv@f1:
  1209                           	opt stack 0
  1210                           
  1211                           ; 3 bytes @ 0x23
  1212  0000A3                     	ds	3
  1213  0000A6                     ___ftdiv@f2:
  1214                           	opt stack 0
  1215  0000A6                     _fround$2272:
  1216                           	opt stack 0
  1217  0000A6                     _scale$2273:
  1218                           	opt stack 0
  1219                           
  1220                           ; 3 bytes @ 0x26
  1221  0000A6                     	ds	3
  1222  0000A9                     ??___ftdiv:
  1223  0000A9                     scale@scl:
  1224                           	opt stack 0
  1225  0000A9                     _fround$2271:
  1226                           	opt stack 0
  1227                           
  1228                           ; 3 bytes @ 0x29
  1229  0000A9                     	ds	3
  1230  0000AC                     fround@prec:
  1231                           	opt stack 0
  1232  0000AC                     ___ftdiv@cntr:
  1233                           	opt stack 0
  1234                           
  1235                           ; 1 bytes @ 0x2C
  1236  0000AC                     	ds	1
  1237  0000AD                     ?___ftadd:
  1238                           	opt stack 0
  1239  0000AD                     ___ftadd@f1:
  1240                           	opt stack 0
  1241  0000AD                     ___ftdiv@f3:
  1242                           	opt stack 0
  1243                           
  1244                           ; 3 bytes @ 0x2D
  1245  0000AD                     	ds	3
  1246  0000B0                     ___ftdiv@exp:
  1247                           	opt stack 0
  1248  0000B0                     ___ftadd@f2:
  1249                           	opt stack 0
  1250                           
  1251                           ; 3 bytes @ 0x30
  1252  0000B0                     	ds	1
  1253  0000B1                     ___ftdiv@sign:
  1254                           	opt stack 0
  1255                           
  1256                           ; 1 bytes @ 0x31
  1257  0000B1                     	ds	1
  1258  0000B2                     ?_read_adc_voltage:
  1259                           	opt stack 0
  1260                           
  1261                           ; 3 bytes @ 0x32
  1262  0000B2                     	ds	1
  1263  0000B3                     ??___ftadd:
  1264                           
  1265                           ; 1 bytes @ 0x33
  1266  0000B3                     	ds	2
  1267  0000B5                     read_adc_voltage@voltage:
  1268                           	opt stack 0
  1269                           
  1270                           ; 3 bytes @ 0x35
  1271  0000B5                     	ds	1
  1272  0000B6                     ___ftadd@sign:
  1273                           	opt stack 0
  1274                           
  1275                           ; 1 bytes @ 0x36
  1276  0000B6                     	ds	1
  1277  0000B7                     ___ftadd@exp2:
  1278                           	opt stack 0
  1279                           
  1280                           ; 1 bytes @ 0x37
  1281  0000B7                     	ds	1
  1282  0000B8                     read_adc_voltage@channel:
  1283                           	opt stack 0
  1284  0000B8                     ___ftadd@exp1:
  1285                           	opt stack 0
  1286                           
  1287                           ; 1 bytes @ 0x38
  1288  0000B8                     	ds	1
  1289  0000B9                     ?___ftsub:
  1290                           	opt stack 0
  1291  0000B9                     ?___fttol:
  1292                           	opt stack 0
  1293  0000B9                     read_adc_voltage@raw_value:
  1294                           	opt stack 0
  1295  0000B9                     ___ftge@ff1:
  1296                           	opt stack 0
  1297  0000B9                     ___ftsub@f1:
  1298                           	opt stack 0
  1299  0000B9                     ___fttol@f1:
  1300                           	opt stack 0
  1301                           
  1302                           ; 3 bytes @ 0x39
  1303  0000B9                     	ds	3
  1304  0000BC                     ___ftge@ff2:
  1305                           	opt stack 0
  1306  0000BC                     ___ftsub@f2:
  1307                           	opt stack 0
  1308                           
  1309                           ; 3 bytes @ 0x3C
  1310  0000BC                     	ds	1
  1311  0000BD                     ??___fttol:
  1312                           
  1313                           ; 1 bytes @ 0x3D
  1314  0000BD                     	ds	2
  1315  0000BF                     ??___ftge:
  1316                           
  1317                           ; 1 bytes @ 0x3F
  1318  0000BF                     	ds	3
  1319  0000C2                     ___fttol@sign1:
  1320                           	opt stack 0
  1321                           
  1322                           ; 1 bytes @ 0x42
  1323  0000C2                     	ds	1
  1324  0000C3                     ___fttol@lval:
  1325                           	opt stack 0
  1326                           
  1327                           ; 4 bytes @ 0x43
  1328  0000C3                     	ds	4
  1329  0000C7                     ___fttol@exp1:
  1330                           	opt stack 0
  1331                           
  1332                           ; 1 bytes @ 0x47
  1333  0000C7                     	ds	1
  1334  0000C8                     ?_sprintf:
  1335                           	opt stack 0
  1336  0000C8                     sprintf@sp:
  1337                           	opt stack 0
  1338  0000C8                     set_pwm1_percent@value:
  1339                           	opt stack 0
  1340                           
  1341                           ; 3 bytes @ 0x48
  1342  0000C8                     	ds	2
  1343  0000CA                     sprintf@f:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0x4A
  1347  0000CA                     	ds	1
  1348  0000CB                     set_pwm1_percent@tmp:
  1349                           	opt stack 0
  1350                           
  1351                           ; 3 bytes @ 0x4B
  1352  0000CB                     	ds	3
  1353  0000CE                     set_pwm1_percent@raw_val:
  1354                           	opt stack 0
  1355                           
  1356                           ; 2 bytes @ 0x4E
  1357  0000CE                     	ds	7
  1358  0000D5                     ??_sprintf:
  1359                           
  1360                           ; 1 bytes @ 0x55
  1361  0000D5                     	ds	6
  1362  0000DB                     _sprintf$2274:
  1363                           	opt stack 0
  1364                           
  1365                           ; 3 bytes @ 0x5B
  1366  0000DB                     	ds	3
  1367  0000DE                     sprintf@cp:
  1368                           	opt stack 0
  1369                           
  1370                           ; 2 bytes @ 0x5E
  1371  0000DE                     	ds	2
  1372  0000E0                     sprintf@ap:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0x60
  1376  0000E0                     	ds	2
  1377  0000E2                     sprintf@len:
  1378                           	opt stack 0
  1379                           
  1380                           ; 2 bytes @ 0x62
  1381  0000E2                     	ds	2
  1382  0000E4                     sprintf@flag:
  1383                           	opt stack 0
  1384                           
  1385                           ; 2 bytes @ 0x64
  1386  0000E4                     	ds	2
  1387  0000E6                     sprintf@tmpval:
  1388                           	opt stack 0
  1389                           
  1390                           ; 4 bytes @ 0x66
  1391  0000E6                     	ds	4
  1392  0000EA                     sprintf@val:
  1393                           	opt stack 0
  1394                           
  1395                           ; 4 bytes @ 0x6A
  1396  0000EA                     	ds	4
  1397  0000EE                     sprintf@exp:
  1398                           	opt stack 0
  1399                           
  1400                           ; 2 bytes @ 0x6E
  1401  0000EE                     	ds	2
  1402  0000F0                     sprintf@width:
  1403                           	opt stack 0
  1404                           
  1405                           ; 2 bytes @ 0x70
  1406  0000F0                     	ds	2
  1407  0000F2                     sprintf@fval:
  1408                           	opt stack 0
  1409                           
  1410                           ; 3 bytes @ 0x72
  1411  0000F2                     	ds	3
  1412  0000F5                     sprintf@prec:
  1413                           	opt stack 0
  1414                           
  1415                           ; 2 bytes @ 0x75
  1416  0000F5                     	ds	2
  1417  0000F7                     sprintf@c:
  1418                           	opt stack 0
  1419                           
  1420                           ; 1 bytes @ 0x77
  1421  0000F7                     	ds	1
  1422  0000F8                     tblptru	equ	0xFF8
  1423                           tblptrh	equ	0xFF7
  1424                           tblptrl	equ	0xFF6
  1425                           tablat	equ	0xFF5
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1l	equ	0xFE1
  1430                           
  1431                           ; 1 bytes @ 0x78
  1432                           
  1433                           	psect	cstackCOMRAM
  1434  000001                     __pcstackCOMRAM:
  1435                           	opt stack 0
  1436  000001                     ??_TMR3_isr:
  1437  000001                     ??_TMR0_isr:
  1438  000001                     ?i2___ftpack:
  1439                           	opt stack 0
  1440  000001                     i2set_pwm1_raw@raw_value:
  1441                           	opt stack 0
  1442  000001                     i2strcpy@to:
  1443                           	opt stack 0
  1444  000001                     i2___ftpack@arg:
  1445                           	opt stack 0
  1446                           
  1447                           ; 3 bytes @ 0x0
  1448  000001                     	ds	2
  1449  000003                     ??i2_set_pwm1_raw:
  1450  000003                     i2strcpy@from:
  1451                           	opt stack 0
  1452                           
  1453                           ; 2 bytes @ 0x2
  1454  000003                     	ds	1
  1455  000004                     i2___ftpack@exp:
  1456                           	opt stack 0
  1457                           
  1458                           ; 1 bytes @ 0x3
  1459  000004                     	ds	1
  1460  000005                     i2___ftpack@sign:
  1461                           	opt stack 0
  1462  000005                     i2strcpy@cp:
  1463                           	opt stack 0
  1464                           
  1465                           ; 2 bytes @ 0x4
  1466  000005                     	ds	1
  1467  000006                     ??i2___ftpack:
  1468                           
  1469                           ; 1 bytes @ 0x5
  1470  000006                     	ds	3
  1471  000009                     ?i2___ftadd:
  1472                           	opt stack 0
  1473  000009                     ?i2___ftmul:
  1474                           	opt stack 0
  1475  000009                     i2___ftadd@f1:
  1476                           	opt stack 0
  1477  000009                     i2___ftmul@f1:
  1478                           	opt stack 0
  1479                           
  1480                           ; 3 bytes @ 0x8
  1481  000009                     	ds	3
  1482  00000C                     i2___ftadd@f2:
  1483                           	opt stack 0
  1484  00000C                     i2___ftmul@f2:
  1485                           	opt stack 0
  1486                           
  1487                           ; 3 bytes @ 0xB
  1488  00000C                     	ds	3
  1489  00000F                     ??i2___ftadd:
  1490  00000F                     ??i2___ftmul:
  1491                           
  1492                           ; 1 bytes @ 0xE
  1493  00000F                     	ds	3
  1494  000012                     i2___ftadd@sign:
  1495                           	opt stack 0
  1496  000012                     i2___ftmul@exp:
  1497                           	opt stack 0
  1498                           
  1499                           ; 1 bytes @ 0x11
  1500  000012                     	ds	1
  1501  000013                     i2___ftadd@exp2:
  1502                           	opt stack 0
  1503  000013                     i2___ftmul@f3_as_product:
  1504                           	opt stack 0
  1505                           
  1506                           ; 3 bytes @ 0x12
  1507  000013                     	ds	1
  1508  000014                     i2___ftadd@exp1:
  1509                           	opt stack 0
  1510                           
  1511                           ; 1 bytes @ 0x13
  1512  000014                     	ds	1
  1513  000015                     ?i2___fttol:
  1514                           	opt stack 0
  1515  000015                     i2___fttol@f1:
  1516                           	opt stack 0
  1517                           
  1518                           ; 3 bytes @ 0x14
  1519  000015                     	ds	1
  1520  000016                     i2___ftmul@cntr:
  1521                           	opt stack 0
  1522                           
  1523                           ; 1 bytes @ 0x15
  1524  000016                     	ds	1
  1525  000017                     i2___ftmul@sign:
  1526                           	opt stack 0
  1527                           
  1528                           ; 1 bytes @ 0x16
  1529  000017                     	ds	1
  1530  000018                     ?i2___ftdiv:
  1531                           	opt stack 0
  1532  000018                     i2___ftdiv@f1:
  1533                           	opt stack 0
  1534                           
  1535                           ; 3 bytes @ 0x17
  1536  000018                     	ds	1
  1537  000019                     ??i2___fttol:
  1538                           
  1539                           ; 1 bytes @ 0x18
  1540  000019                     	ds	2
  1541  00001B                     i2___ftdiv@f2:
  1542                           	opt stack 0
  1543                           
  1544                           ; 3 bytes @ 0x1A
  1545  00001B                     	ds	3
  1546  00001E                     ??i2___ftdiv:
  1547  00001E                     i2___fttol@sign1:
  1548                           	opt stack 0
  1549                           
  1550                           ; 1 bytes @ 0x1D
  1551  00001E                     	ds	1
  1552  00001F                     i2___fttol@lval:
  1553                           	opt stack 0
  1554                           
  1555                           ; 4 bytes @ 0x1E
  1556  00001F                     	ds	2
  1557  000021                     i2___ftdiv@cntr:
  1558                           	opt stack 0
  1559                           
  1560                           ; 1 bytes @ 0x20
  1561  000021                     	ds	1
  1562  000022                     i2___ftdiv@f3:
  1563                           	opt stack 0
  1564                           
  1565                           ; 3 bytes @ 0x21
  1566  000022                     	ds	1
  1567  000023                     i2___fttol@exp1:
  1568                           	opt stack 0
  1569                           
  1570                           ; 1 bytes @ 0x22
  1571  000023                     	ds	2
  1572  000025                     i2___ftdiv@exp:
  1573                           	opt stack 0
  1574                           
  1575                           ; 1 bytes @ 0x24
  1576  000025                     	ds	1
  1577  000026                     i2___ftdiv@sign:
  1578                           	opt stack 0
  1579                           
  1580                           ; 1 bytes @ 0x25
  1581  000026                     	ds	1
  1582  000027                     i2set_pwm1_percent@value:
  1583                           	opt stack 0
  1584                           
  1585                           ; 3 bytes @ 0x26
  1586  000027                     	ds	3
  1587  00002A                     i2set_pwm1_percent@tmp:
  1588                           	opt stack 0
  1589                           
  1590                           ; 3 bytes @ 0x29
  1591  00002A                     	ds	3
  1592  00002D                     i2set_pwm1_percent@raw_val:
  1593                           	opt stack 0
  1594                           
  1595                           ; 2 bytes @ 0x2C
  1596  00002D                     	ds	2
  1597  00002F                     ??_EXT_Int0_isr:
  1598                           
  1599                           ; 1 bytes @ 0x2E
  1600  00002F                     	ds	2
  1601  000031                     ??_highIsr:
  1602                           
  1603                           ; 1 bytes @ 0x30
  1604  000031                     	ds	14
  1605                           tblptru	equ	0xFF8
  1606                           tblptrh	equ	0xFF7
  1607                           tblptrl	equ	0xFF6
  1608                           tablat	equ	0xFF5
  1609                           postinc0	equ	0xFEE
  1610                           wreg	equ	0xFE8
  1611                           postdec1	equ	0xFE5
  1612                           fsr1l	equ	0xFE1
  1613                           
  1614 ;;
  1615 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1616 ;;
  1617 ;; *************** function _main *****************
  1618 ;; Defined at:
  1619 ;;		line 67 in file "main.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  CoolError       3   84[BANK1 ] float 
  1624 ;;  HeatError       3   93[BANK1 ] float 
  1625 ;;  HeatError       3   90[BANK1 ] float 
  1626 ;;  coolError       3   87[BANK1 ] float 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;Total ram usage:       12 bytes
  1641 ;; Hardware stack levels required when called:   12
  1642 ;; This function calls:
  1643 ;;		___awtoft
  1644 ;;		___ftadd
  1645 ;;		___ftdiv
  1646 ;;		___ftge
  1647 ;;		___ftmul
  1648 ;;		___ftneg
  1649 ;;		___fttol
  1650 ;;		___lwtoft
  1651 ;;		___wmul
  1652 ;;		_delay_ms
  1653 ;;		_init_adc_no_lib
  1654 ;;		_init_pwm1
  1655 ;;		_lcd_gotoxy
  1656 ;;		_lcd_init
  1657 ;;		_lcd_puts
  1658 ;;		_print_data
  1659 ;;		_read_adc_voltage
  1660 ;;		_set_pwm1_percent
  1661 ;;		_setupInterupt
  1662 ;;		_setupPorts
  1663 ;;		_setupSerial
  1664 ;;		_setupTimers
  1665 ;;		_sprintf
  1666 ;;		_strcpy
  1667 ;; This function is called by:
  1668 ;;		Startup code after reset
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text0
  1673  000D86                     __ptext0:
  1674                           	opt stack 0
  1675  000D86                     _main:
  1676                           	opt stack 19
  1677                           
  1678                           ;main.c: 68: setupPorts();
  1679                           
  1680                           ;incstack = 0
  1681  000D86  EC2A  F021         	call	_setupPorts	;wreg free
  1682                           
  1683                           ;main.c: 69: setupInterupt();
  1684  000D8A  ECE1  F020         	call	_setupInterupt	;wreg free
  1685                           
  1686                           ;main.c: 70: setupTimers();
  1687  000D8E  ECB4  F01E         	call	_setupTimers	;wreg free
  1688                           
  1689                           ;main.c: 71: lcd_init();
  1690  000D92  ECAD  F01D         	call	_lcd_init	;wreg free
  1691                           
  1692                           ;main.c: 72: init_pwm1();
  1693  000D96  EC42  F021         	call	_init_pwm1	;wreg free
  1694                           
  1695                           ;main.c: 73: setupSerial();
  1696  000D9A  EC07  F021         	call	_setupSerial	;wreg free
  1697                           
  1698                           ;main.c: 74: init_adc_no_lib();
  1699  000D9E  EC5F  F021         	call	_init_adc_no_lib	;wreg free
  1700                           
  1701                           ;main.c: 75: TRISCbits.RC0 = 1;
  1702  000DA2  8094               	bsf	3988,0,c	;volatile
  1703                           
  1704                           ;main.c: 76: RT=0,SP=0,OT=0,H=0,C=0,MD=0,HCP=0,HS=0,FanSpeed=0,GlobalConter=0,TonCounter
      +                          =0;
  1705  000DA4  0E00               	movlw	0
  1706  000DA6  0101               	movlb	1	; () banked
  1707  000DA8  6F06               	movwf	_RT& (0+255),b
  1708  000DAA  0E00               	movlw	0
  1709  000DAC  0101               	movlb	1	; () banked
  1710  000DAE  6F07               	movwf	(_RT+1)& (0+255),b
  1711  000DB0  0E00               	movlw	0
  1712  000DB2  0101               	movlb	1	; () banked
  1713  000DB4  6F08               	movwf	(_RT+2)& (0+255),b
  1714                           
  1715                           ; BSR set to: 1
  1716  000DB6  0E00               	movlw	0
  1717  000DB8  0101               	movlb	1	; () banked
  1718  000DBA  6F09               	movwf	_SP& (0+255),b
  1719  000DBC  0E00               	movlw	0
  1720  000DBE  0101               	movlb	1	; () banked
  1721  000DC0  6F0A               	movwf	(_SP+1)& (0+255),b
  1722  000DC2  0E00               	movlw	0
  1723  000DC4  0101               	movlb	1	; () banked
  1724  000DC6  6F0B               	movwf	(_SP+2)& (0+255),b
  1725                           
  1726                           ; BSR set to: 1
  1727  000DC8  0E00               	movlw	0
  1728  000DCA  0101               	movlb	1	; () banked
  1729  000DCC  6F03               	movwf	_OT& (0+255),b
  1730  000DCE  0E00               	movlw	0
  1731  000DD0  0101               	movlb	1	; () banked
  1732  000DD2  6F04               	movwf	(_OT+1)& (0+255),b
  1733  000DD4  0E00               	movlw	0
  1734  000DD6  0101               	movlb	1	; () banked
  1735  000DD8  6F05               	movwf	(_OT+2)& (0+255),b
  1736                           
  1737                           ; BSR set to: 1
  1738  000DDA  0E00               	movlw	0
  1739  000DDC  0101               	movlb	1	; () banked
  1740  000DDE  6F11               	movwf	(_H+1)& (0+255),b
  1741  000DE0  0E00               	movlw	0
  1742  000DE2  6F10               	movwf	_H& (0+255),b
  1743                           
  1744                           ; BSR set to: 1
  1745  000DE4  0E00               	movlw	0
  1746  000DE6  0101               	movlb	1	; () banked
  1747  000DE8  6F0D               	movwf	(_C+1)& (0+255),b
  1748  000DEA  0E00               	movlw	0
  1749  000DEC  6F0C               	movwf	_C& (0+255),b
  1750                           
  1751                           ; BSR set to: 1
  1752  000DEE  0E00               	movlw	0
  1753  000DF0  0101               	movlb	1	; () banked
  1754  000DF2  6F17               	movwf	(_MD+1)& (0+255),b
  1755  000DF4  0E00               	movlw	0
  1756  000DF6  6F16               	movwf	_MD& (0+255),b
  1757                           
  1758                           ; BSR set to: 1
  1759  000DF8  0E00               	movlw	0
  1760  000DFA  0101               	movlb	1	; () banked
  1761  000DFC  6F13               	movwf	(_HCP+1)& (0+255),b
  1762  000DFE  0E00               	movlw	0
  1763  000E00  6F12               	movwf	_HCP& (0+255),b
  1764                           
  1765                           ; BSR set to: 1
  1766  000E02  0E00               	movlw	0
  1767  000E04  0101               	movlb	1	; () banked
  1768  000E06  6F15               	movwf	(_HS+1)& (0+255),b
  1769  000E08  0E00               	movlw	0
  1770  000E0A  6F14               	movwf	_HS& (0+255),b
  1771                           
  1772                           ; BSR set to: 1
  1773  000E0C  0E00               	movlw	0
  1774  000E0E  0101               	movlb	1	; () banked
  1775  000E10  6F00               	movwf	_FanSpeed& (0+255),b
  1776  000E12  0E00               	movlw	0
  1777  000E14  0101               	movlb	1	; () banked
  1778  000E16  6F01               	movwf	(_FanSpeed+1)& (0+255),b
  1779  000E18  0E00               	movlw	0
  1780  000E1A  0101               	movlb	1	; () banked
  1781  000E1C  6F02               	movwf	(_FanSpeed+2)& (0+255),b
  1782                           
  1783                           ; BSR set to: 1
  1784  000E1E  0E00               	movlw	0
  1785  000E20  0101               	movlb	1	; () banked
  1786  000E22  6F0F               	movwf	(_GlobalConter+1)& (0+255),b
  1787  000E24  0E00               	movlw	0
  1788  000E26  6F0E               	movwf	_GlobalConter& (0+255),b
  1789                           
  1790                           ; BSR set to: 1
  1791  000E28  0E00               	movlw	0
  1792  000E2A  0101               	movlb	1	; () banked
  1793  000E2C  6F1B               	movwf	(_TonCounter+1)& (0+255),b
  1794  000E2E  0E00               	movlw	0
  1795  000E30  6F1A               	movwf	_TonCounter& (0+255),b
  1796                           
  1797                           ; BSR set to: 1
  1798                           ;main.c: 77: PIE1bits.TXIE=0;
  1799  000E32  989D               	bcf	3997,4,c	;volatile
  1800                           
  1801                           ; BSR set to: 1
  1802                           ;main.c: 78: sprintf(Buffer1, "RT:  0.0C    H C");
  1803  000E34  0E1C               	movlw	low _Buffer1
  1804  000E36  0100               	movlb	0	; () banked
  1805  000E38  6FC8               	movwf	sprintf@sp& (0+255),b
  1806  000E3A  0E01               	movlw	high _Buffer1
  1807  000E3C  0100               	movlb	0	; () banked
  1808  000E3E  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  1809  000E40  0E74               	movlw	low STR_1
  1810  000E42  0100               	movlb	0	; () banked
  1811  000E44  6FCA               	movwf	sprintf@f& (0+255),b
  1812  000E46  0EFF               	movlw	high STR_1
  1813  000E48  0100               	movlb	0	; () banked
  1814  000E4A  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  1815  000E4C  EC0D  F000         	call	_sprintf	;wreg free
  1816                           
  1817                           ;main.c: 79: lcd_gotoxy(1, 1);
  1818  000E50  0E01               	movlw	1
  1819  000E52  0100               	movlb	0	; () banked
  1820  000E54  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1821  000E56  0E01               	movlw	1
  1822  000E58  EC0A  F01F         	call	_lcd_gotoxy
  1823                           
  1824                           ;main.c: 80: lcd_puts(Buffer1);
  1825  000E5C  0E1C               	movlw	low _Buffer1
  1826  000E5E  0100               	movlb	0	; () banked
  1827  000E60  6F8E               	movwf	lcd_puts@s& (0+255),b
  1828  000E62  0E01               	movlw	high _Buffer1
  1829  000E64  0100               	movlb	0	; () banked
  1830  000E66  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1831  000E68  ECF4  F020         	call	_lcd_puts	;wreg free
  1832                           
  1833                           ;main.c: 81: sprintf(Buffer2, "SP:  0.0C    N N");
  1834  000E6C  0E2D               	movlw	low _Buffer2
  1835  000E6E  0100               	movlb	0	; () banked
  1836  000E70  6FC8               	movwf	sprintf@sp& (0+255),b
  1837  000E72  0E01               	movlw	high _Buffer2
  1838  000E74  0100               	movlb	0	; () banked
  1839  000E76  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  1840  000E78  0E96               	movlw	low STR_2
  1841  000E7A  0100               	movlb	0	; () banked
  1842  000E7C  6FCA               	movwf	sprintf@f& (0+255),b
  1843  000E7E  0EFF               	movlw	high STR_2
  1844  000E80  0100               	movlb	0	; () banked
  1845  000E82  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  1846  000E84  EC0D  F000         	call	_sprintf	;wreg free
  1847                           
  1848                           ;main.c: 82: lcd_gotoxy(1, 2);
  1849  000E88  0E02               	movlw	2
  1850  000E8A  0100               	movlb	0	; () banked
  1851  000E8C  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1852  000E8E  0E01               	movlw	1
  1853  000E90  EC0A  F01F         	call	_lcd_gotoxy
  1854                           
  1855                           ;main.c: 83: lcd_puts(Buffer2);
  1856  000E94  0E2D               	movlw	low _Buffer2
  1857  000E96  0100               	movlb	0	; () banked
  1858  000E98  6F8E               	movwf	lcd_puts@s& (0+255),b
  1859  000E9A  0E01               	movlw	high _Buffer2
  1860  000E9C  0100               	movlb	0	; () banked
  1861  000E9E  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1862  000EA0  ECF4  F020         	call	_lcd_puts	;wreg free
  1863                           
  1864                           ;main.c: 84: sprintf(Buffer3, "OT:  0.0C R: 0.0%%");
  1865  000EA4  0E3E               	movlw	low _Buffer3
  1866  000EA6  0100               	movlb	0	; () banked
  1867  000EA8  6FC8               	movwf	sprintf@sp& (0+255),b
  1868  000EAA  0E01               	movlw	high _Buffer3
  1869  000EAC  0100               	movlb	0	; () banked
  1870  000EAE  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  1871  000EB0  0E18               	movlw	low STR_3
  1872  000EB2  0100               	movlb	0	; () banked
  1873  000EB4  6FCA               	movwf	sprintf@f& (0+255),b
  1874  000EB6  0EFF               	movlw	high STR_3
  1875  000EB8  0100               	movlb	0	; () banked
  1876  000EBA  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  1877  000EBC  EC0D  F000         	call	_sprintf	;wreg free
  1878                           
  1879                           ;main.c: 85: lcd_gotoxy(1, 3);
  1880  000EC0  0E03               	movlw	3
  1881  000EC2  0100               	movlb	0	; () banked
  1882  000EC4  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1883  000EC6  0E01               	movlw	1
  1884  000EC8  EC0A  F01F         	call	_lcd_gotoxy
  1885                           
  1886                           ;main.c: 86: lcd_puts(Buffer3);
  1887  000ECC  0E3E               	movlw	low _Buffer3
  1888  000ECE  0100               	movlb	0	; () banked
  1889  000ED0  6F8E               	movwf	lcd_puts@s& (0+255),b
  1890  000ED2  0E01               	movlw	high _Buffer3
  1891  000ED4  0100               	movlb	0	; () banked
  1892  000ED6  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1893  000ED8  ECF4  F020         	call	_lcd_puts	;wreg free
  1894                           
  1895                           ;main.c: 87: sprintf(Buffer4, "MD:OFF          ");
  1896  000EDC  0E4F               	movlw	low _Buffer4
  1897  000EDE  0100               	movlb	0	; () banked
  1898  000EE0  6FC8               	movwf	sprintf@sp& (0+255),b
  1899  000EE2  0E01               	movlw	high _Buffer4
  1900  000EE4  0100               	movlb	0	; () banked
  1901  000EE6  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  1902  000EE8  0E63               	movlw	low STR_4
  1903  000EEA  0100               	movlb	0	; () banked
  1904  000EEC  6FCA               	movwf	sprintf@f& (0+255),b
  1905  000EEE  0EFF               	movlw	high STR_4
  1906  000EF0  0100               	movlb	0	; () banked
  1907  000EF2  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  1908  000EF4  EC0D  F000         	call	_sprintf	;wreg free
  1909                           
  1910                           ;main.c: 88: lcd_gotoxy(1, 4);
  1911  000EF8  0E04               	movlw	4
  1912  000EFA  0100               	movlb	0	; () banked
  1913  000EFC  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1914  000EFE  0E01               	movlw	1
  1915  000F00  EC0A  F01F         	call	_lcd_gotoxy
  1916                           
  1917                           ;main.c: 89: lcd_puts(Buffer4);
  1918  000F04  0E4F               	movlw	low _Buffer4
  1919  000F06  0100               	movlb	0	; () banked
  1920  000F08  6F8E               	movwf	lcd_puts@s& (0+255),b
  1921  000F0A  0E01               	movlw	high _Buffer4
  1922  000F0C  0100               	movlb	0	; () banked
  1923  000F0E  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1924  000F10  ECF4  F020         	call	_lcd_puts	;wreg free
  1925  000F14                     l290:
  1926  000F14  0004               	clrwdt		;# 
  1927                           
  1928                           ;main.c: 92: delay_ms(200);
  1929  000F16  0E00               	movlw	0
  1930  000F18  0100               	movlb	0	; () banked
  1931  000F1A  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  1932  000F1C  0EC8               	movlw	200
  1933  000F1E  6F80               	movwf	delay_ms@n& (0+255),b
  1934  000F20  EC74  F020         	call	_delay_ms	;wreg free
  1935                           
  1936                           ;main.c: 94: if (PORTBbits.RB3==0||Received=='S'){
  1937  000F24  A681               	btfss	3969,3,c	;volatile
  1938  000F26  D005               	goto	l6405
  1939  000F28  0E53               	movlw	83
  1940  000F2A  0101               	movlb	1	; () banked
  1941  000F2C  19D4               	xorwf	_Received& (0+255),w,b
  1942  000F2E  A4D8               	btfss	status,2,c
  1943  000F30  D00F               	goto	l6411
  1944  000F32                     l6405:
  1945                           
  1946                           ;main.c: 95: delay_ms(200);
  1947  000F32  0E00               	movlw	0
  1948  000F34  0100               	movlb	0	; () banked
  1949  000F36  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  1950  000F38  0EC8               	movlw	200
  1951  000F3A  6F80               	movwf	delay_ms@n& (0+255),b
  1952  000F3C  EC74  F020         	call	_delay_ms	;wreg free
  1953                           
  1954                           ;main.c: 96: MD=0;
  1955  000F40  0E00               	movlw	0
  1956  000F42  0101               	movlb	1	; () banked
  1957  000F44  6F17               	movwf	(_MD+1)& (0+255),b
  1958  000F46  0E00               	movlw	0
  1959  000F48  6F16               	movwf	_MD& (0+255),b
  1960                           
  1961                           ; BSR set to: 1
  1962                           ;main.c: 97: Received='$';
  1963  000F4A  0E24               	movlw	36
  1964  000F4C  0101               	movlb	1	; () banked
  1965  000F4E  6FD4               	movwf	_Received& (0+255),b
  1966  000F50                     l6411:
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;main.c: 98: }
  1970                           ;main.c: 99: RT = read_adc_voltage(2);
  1971  000F50  0E02               	movlw	2
  1972  000F52  ECE8  F01D         	call	_read_adc_voltage
  1973  000F56  C0B2  F106         	movff	?_read_adc_voltage,_RT
  1974  000F5A  C0B3  F107         	movff	?_read_adc_voltage+1,_RT+1
  1975  000F5E  C0B4  F108         	movff	?_read_adc_voltage+2,_RT+2
  1976                           
  1977                           ;main.c: 100: RT = RT * 100;
  1978  000F62  C106  F094         	movff	_RT,___ftmul@f1
  1979  000F66  C107  F095         	movff	_RT+1,___ftmul@f1+1
  1980  000F6A  C108  F096         	movff	_RT+2,___ftmul@f1+2
  1981  000F6E  0E00               	movlw	0
  1982  000F70  0100               	movlb	0	; () banked
  1983  000F72  6F97               	movwf	___ftmul@f2& (0+255),b
  1984  000F74  0EC8               	movlw	200
  1985  000F76  0100               	movlb	0	; () banked
  1986  000F78  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  1987  000F7A  0E42               	movlw	66
  1988  000F7C  0100               	movlb	0	; () banked
  1989  000F7E  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  1990  000F80  ECBC  F015         	call	___ftmul	;wreg free
  1991  000F84  C094  F106         	movff	?___ftmul,_RT
  1992  000F88  C095  F107         	movff	?___ftmul+1,_RT+1
  1993  000F8C  C096  F108         	movff	?___ftmul+2,_RT+2
  1994                           
  1995                           ;main.c: 101: SP = read_adc_voltage(0);
  1996  000F90  0E00               	movlw	0
  1997  000F92  ECE8  F01D         	call	_read_adc_voltage
  1998  000F96  C0B2  F109         	movff	?_read_adc_voltage,_SP
  1999  000F9A  C0B3  F10A         	movff	?_read_adc_voltage+1,_SP+1
  2000  000F9E  C0B4  F10B         	movff	?_read_adc_voltage+2,_SP+2
  2001                           
  2002                           ;main.c: 102: SP = SP * 100 / 5;
  2003  000FA2  0E00               	movlw	0
  2004  000FA4  0100               	movlb	0	; () banked
  2005  000FA6  6F97               	movwf	___ftmul@f2& (0+255),b
  2006  000FA8  0EC8               	movlw	200
  2007  000FAA  0100               	movlb	0	; () banked
  2008  000FAC  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  2009  000FAE  0E42               	movlw	66
  2010  000FB0  0100               	movlb	0	; () banked
  2011  000FB2  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  2012  000FB4  C109  F094         	movff	_SP,___ftmul@f1
  2013  000FB8  C10A  F095         	movff	_SP+1,___ftmul@f1+1
  2014  000FBC  C10B  F096         	movff	_SP+2,___ftmul@f1+2
  2015  000FC0  ECBC  F015         	call	___ftmul	;wreg free
  2016  000FC4  C094  F0A3         	movff	?___ftmul,___ftdiv@f1
  2017  000FC8  C095  F0A4         	movff	?___ftmul+1,___ftdiv@f1+1
  2018  000FCC  C096  F0A5         	movff	?___ftmul+2,___ftdiv@f1+2
  2019  000FD0  0E00               	movlw	0
  2020  000FD2  0100               	movlb	0	; () banked
  2021  000FD4  6FA6               	movwf	___ftdiv@f2& (0+255),b
  2022  000FD6  0EA0               	movlw	160
  2023  000FD8  0100               	movlb	0	; () banked
  2024  000FDA  6FA7               	movwf	(___ftdiv@f2+1)& (0+255),b
  2025  000FDC  0E40               	movlw	64
  2026  000FDE  0100               	movlb	0	; () banked
  2027  000FE0  6FA8               	movwf	(___ftdiv@f2+2)& (0+255),b
  2028  000FE2  EC6B  F016         	call	___ftdiv	;wreg free
  2029  000FE6  C0A3  F109         	movff	?___ftdiv,_SP
  2030  000FEA  C0A4  F10A         	movff	?___ftdiv+1,_SP+1
  2031  000FEE  C0A5  F10B         	movff	?___ftdiv+2,_SP+2
  2032                           
  2033                           ;main.c: 103: OT = read_adc_voltage(1);
  2034  000FF2  0E01               	movlw	1
  2035  000FF4  ECE8  F01D         	call	_read_adc_voltage
  2036  000FF8  C0B2  F103         	movff	?_read_adc_voltage,_OT
  2037  000FFC  C0B3  F104         	movff	?_read_adc_voltage+1,_OT+1
  2038  001000  C0B4  F105         	movff	?_read_adc_voltage+2,_OT+2
  2039                           
  2040                           ;main.c: 104: OT = OT * 100 / 5;
  2041  001004  0E00               	movlw	0
  2042  001006  0100               	movlb	0	; () banked
  2043  001008  6F97               	movwf	___ftmul@f2& (0+255),b
  2044  00100A  0EC8               	movlw	200
  2045  00100C  0100               	movlb	0	; () banked
  2046  00100E  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  2047  001010  0E42               	movlw	66
  2048  001012  0100               	movlb	0	; () banked
  2049  001014  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  2050  001016  C103  F094         	movff	_OT,___ftmul@f1
  2051  00101A  C104  F095         	movff	_OT+1,___ftmul@f1+1
  2052  00101E  C105  F096         	movff	_OT+2,___ftmul@f1+2
  2053  001022  ECBC  F015         	call	___ftmul	;wreg free
  2054  001026  C094  F0A3         	movff	?___ftmul,___ftdiv@f1
  2055  00102A  C095  F0A4         	movff	?___ftmul+1,___ftdiv@f1+1
  2056  00102E  C096  F0A5         	movff	?___ftmul+2,___ftdiv@f1+2
  2057  001032  0E00               	movlw	0
  2058  001034  0100               	movlb	0	; () banked
  2059  001036  6FA6               	movwf	___ftdiv@f2& (0+255),b
  2060  001038  0EA0               	movlw	160
  2061  00103A  0100               	movlb	0	; () banked
  2062  00103C  6FA7               	movwf	(___ftdiv@f2+1)& (0+255),b
  2063  00103E  0E40               	movlw	64
  2064  001040  0100               	movlb	0	; () banked
  2065  001042  6FA8               	movwf	(___ftdiv@f2+2)& (0+255),b
  2066  001044  EC6B  F016         	call	___ftdiv	;wreg free
  2067  001048  C0A3  F103         	movff	?___ftdiv,_OT
  2068  00104C  C0A4  F104         	movff	?___ftdiv+1,_OT+1
  2069  001050  C0A5  F105         	movff	?___ftdiv+2,_OT+2
  2070                           
  2071                           ;main.c: 105: if (MD==0){
  2072  001054  0101               	movlb	1	; () banked
  2073  001056  5116               	movf	_MD& (0+255),w,b
  2074  001058  0101               	movlb	1	; () banked
  2075  00105A  1117               	iorwf	(_MD+1)& (0+255),w,b
  2076  00105C  A4D8               	btfss	status,2,c
  2077  00105E  D050               	goto	l6429
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;main.c: 106: RT=0,SP=0,OT=0,H=0,C=0,HCP=0;
  2081  001060  0E00               	movlw	0
  2082  001062  0101               	movlb	1	; () banked
  2083  001064  6F06               	movwf	_RT& (0+255),b
  2084  001066  0E00               	movlw	0
  2085  001068  0101               	movlb	1	; () banked
  2086  00106A  6F07               	movwf	(_RT+1)& (0+255),b
  2087  00106C  0E00               	movlw	0
  2088  00106E  0101               	movlb	1	; () banked
  2089  001070  6F08               	movwf	(_RT+2)& (0+255),b
  2090  001072  0E00               	movlw	0
  2091  001074  0101               	movlb	1	; () banked
  2092  001076  6F09               	movwf	_SP& (0+255),b
  2093  001078  0E00               	movlw	0
  2094  00107A  0101               	movlb	1	; () banked
  2095  00107C  6F0A               	movwf	(_SP+1)& (0+255),b
  2096  00107E  0E00               	movlw	0
  2097  001080  0101               	movlb	1	; () banked
  2098  001082  6F0B               	movwf	(_SP+2)& (0+255),b
  2099  001084  0E00               	movlw	0
  2100  001086  0101               	movlb	1	; () banked
  2101  001088  6F03               	movwf	_OT& (0+255),b
  2102  00108A  0E00               	movlw	0
  2103  00108C  0101               	movlb	1	; () banked
  2104  00108E  6F04               	movwf	(_OT+1)& (0+255),b
  2105  001090  0E00               	movlw	0
  2106  001092  0101               	movlb	1	; () banked
  2107  001094  6F05               	movwf	(_OT+2)& (0+255),b
  2108  001096  0E00               	movlw	0
  2109  001098  0101               	movlb	1	; () banked
  2110  00109A  6F11               	movwf	(_H+1)& (0+255),b
  2111  00109C  0E00               	movlw	0
  2112  00109E  6F10               	movwf	_H& (0+255),b
  2113  0010A0  0E00               	movlw	0
  2114  0010A2  0101               	movlb	1	; () banked
  2115  0010A4  6F0D               	movwf	(_C+1)& (0+255),b
  2116  0010A6  0E00               	movlw	0
  2117  0010A8  6F0C               	movwf	_C& (0+255),b
  2118  0010AA  0E00               	movlw	0
  2119  0010AC  0101               	movlb	1	; () banked
  2120  0010AE  6F13               	movwf	(_HCP+1)& (0+255),b
  2121  0010B0  0E00               	movlw	0
  2122  0010B2  6F12               	movwf	_HCP& (0+255),b
  2123                           
  2124                           ;main.c: 107: HCstate='R';
  2125  0010B4  0E52               	movlw	82
  2126  0010B6  0101               	movlb	1	; () banked
  2127  0010B8  6FD2               	movwf	_HCstate& (0+255),b
  2128                           
  2129                           ; BSR set to: 1
  2130                           ;main.c: 108: set_pwm1_percent(0);
  2131  0010BA  0E00               	movlw	0
  2132  0010BC  0100               	movlb	0	; () banked
  2133  0010BE  6FC8               	movwf	set_pwm1_percent@value& (0+255),b
  2134  0010C0  0E00               	movlw	0
  2135  0010C2  0100               	movlb	0	; () banked
  2136  0010C4  6FC9               	movwf	(set_pwm1_percent@value+1)& (0+255),b
  2137  0010C6  0E00               	movlw	0
  2138  0010C8  0100               	movlb	0	; () banked
  2139  0010CA  6FCA               	movwf	(set_pwm1_percent@value+2)& (0+255),b
  2140  0010CC  ECC1  F01A         	call	_set_pwm1_percent	;wreg free
  2141                           
  2142                           ;main.c: 109: strcpy(MDS,MD0S);
  2143  0010D0  0E60               	movlw	low _MDS
  2144  0010D2  0100               	movlb	0	; () banked
  2145  0010D4  6F80               	movwf	strcpy@to& (0+255),b
  2146  0010D6  0E01               	movlw	high _MDS
  2147  0010D8  0100               	movlb	0	; () banked
  2148  0010DA  6F81               	movwf	(strcpy@to+1)& (0+255),b
  2149  0010DC  0ED5               	movlw	low _MD0S
  2150  0010DE  0100               	movlb	0	; () banked
  2151  0010E0  6F82               	movwf	strcpy@from& (0+255),b
  2152  0010E2  0E01               	movlw	high _MD0S
  2153  0010E4  0100               	movlb	0	; () banked
  2154  0010E6  6F83               	movwf	(strcpy@from+1)& (0+255),b
  2155  0010E8  EC7E  F01F         	call	_strcpy	;wreg free
  2156                           
  2157                           ;main.c: 110: FanSpeed = 0;
  2158  0010EC  0E00               	movlw	0
  2159  0010EE  0101               	movlb	1	; () banked
  2160  0010F0  6F00               	movwf	_FanSpeed& (0+255),b
  2161  0010F2  0E00               	movlw	0
  2162  0010F4  0101               	movlb	1	; () banked
  2163  0010F6  6F01               	movwf	(_FanSpeed+1)& (0+255),b
  2164  0010F8  0E00               	movlw	0
  2165  0010FA  0101               	movlb	1	; () banked
  2166  0010FC  6F02               	movwf	(_FanSpeed+2)& (0+255),b
  2167                           
  2168                           ;main.c: 111: }else if (MD==1){
  2169  0010FE  D2D9               	goto	l6525
  2170  001100                     l6429:
  2171                           
  2172                           ; BSR set to: 1
  2173  001100  0101               	movlb	1	; () banked
  2174  001102  0516               	decf	_MD& (0+255),w,b
  2175  001104  0101               	movlb	1	; () banked
  2176  001106  1117               	iorwf	(_MD+1)& (0+255),w,b
  2177  001108  A4D8               	btfss	status,2,c
  2178  00110A  D011               	goto	l6435
  2179                           
  2180                           ; BSR set to: 1
  2181                           ;main.c: 112: PORTCbits.RC2 = 0;
  2182  00110C  9482               	bcf	3970,2,c	;volatile
  2183                           
  2184                           ; BSR set to: 1
  2185                           ;main.c: 113: HCP=H*5;
  2186  00110E  C110  F08E         	movff	_H,___wmul@multiplier
  2187  001112  C111  F08F         	movff	_H+1,___wmul@multiplier+1
  2188  001116  0E00               	movlw	0
  2189  001118  0100               	movlb	0	; () banked
  2190  00111A  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2191  00111C  0E05               	movlw	5
  2192  00111E  6F90               	movwf	___wmul@multiplicand& (0+255),b
  2193  001120  EC27  F020         	call	___wmul	;wreg free
  2194  001124  C08E  F112         	movff	?___wmul,_HCP
  2195  001128  C08F  F113         	movff	?___wmul+1,_HCP+1
  2196                           
  2197                           ;main.c: 114: }else if (MD==2){
  2198  00112C  D2C2               	goto	l6525
  2199  00112E                     l6435:
  2200  00112E  0E02               	movlw	2
  2201  001130  0101               	movlb	1	; () banked
  2202  001132  1916               	xorwf	_MD& (0+255),w,b
  2203  001134  0101               	movlb	1	; () banked
  2204  001136  1117               	iorwf	(_MD+1)& (0+255),w,b
  2205  001138  A4D8               	btfss	status,2,c
  2206  00113A  D01F               	goto	l6443
  2207                           
  2208                           ; BSR set to: 1
  2209                           ;main.c: 115: PORTCbits.RC5 = 0;
  2210  00113C  9A82               	bcf	3970,5,c	;volatile
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;main.c: 116: HCP=C*5;
  2214  00113E  C10C  F08E         	movff	_C,___wmul@multiplier
  2215  001142  C10D  F08F         	movff	_C+1,___wmul@multiplier+1
  2216  001146  0E00               	movlw	0
  2217  001148  0100               	movlb	0	; () banked
  2218  00114A  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2219  00114C  0E05               	movlw	5
  2220  00114E  6F90               	movwf	___wmul@multiplicand& (0+255),b
  2221  001150  EC27  F020         	call	___wmul	;wreg free
  2222  001154  C08E  F112         	movff	?___wmul,_HCP
  2223  001158  C08F  F113         	movff	?___wmul+1,_HCP+1
  2224                           
  2225                           ;main.c: 117: set_pwm1_percent(HCP);
  2226  00115C  C112  F094         	movff	_HCP,___awtoft@c
  2227  001160  C113  F095         	movff	_HCP+1,___awtoft@c+1
  2228  001164  ECC6  F01F         	call	___awtoft	;wreg free
  2229  001168  C094  F0C8         	movff	?___awtoft,set_pwm1_percent@value
  2230  00116C  C095  F0C9         	movff	?___awtoft+1,set_pwm1_percent@value+1
  2231  001170  C096  F0CA         	movff	?___awtoft+2,set_pwm1_percent@value+2
  2232  001174  ECC1  F01A         	call	_set_pwm1_percent	;wreg free
  2233                           
  2234                           ;main.c: 118: }else if (MD==3) {
  2235  001178  D29C               	goto	l6525
  2236  00117A                     l6443:
  2237  00117A  0E03               	movlw	3
  2238  00117C  0101               	movlb	1	; () banked
  2239  00117E  1916               	xorwf	_MD& (0+255),w,b
  2240  001180  0101               	movlb	1	; () banked
  2241  001182  1117               	iorwf	(_MD+1)& (0+255),w,b
  2242  001184  A4D8               	btfss	status,2,c
  2243  001186  D295               	goto	l6525
  2244                           
  2245                           ; BSR set to: 1
  2246                           ;main.c: 119: if (OT > 60) {
  2247  001188  0E00               	movlw	0
  2248  00118A  0100               	movlb	0	; () banked
  2249  00118C  6FB9               	movwf	___ftge@ff1& (0+255),b
  2250  00118E  0E70               	movlw	112
  2251  001190  0100               	movlb	0	; () banked
  2252  001192  6FBA               	movwf	(___ftge@ff1+1)& (0+255),b
  2253  001194  0E42               	movlw	66
  2254  001196  0100               	movlb	0	; () banked
  2255  001198  6FBB               	movwf	(___ftge@ff1+2)& (0+255),b
  2256  00119A  C103  F0BC         	movff	_OT,___ftge@ff2
  2257  00119E  C104  F0BD         	movff	_OT+1,___ftge@ff2+1
  2258  0011A2  C105  F0BE         	movff	_OT+2,___ftge@ff2+2
  2259  0011A6  ECA0  F019         	call	___ftge	;wreg free
  2260  0011AA  0100               	movlb	0	; () banked
  2261  0011AC  B0D8               	btfsc	status,0,c
  2262  0011AE  D0B4               	goto	l6467
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;main.c: 120: float coolError = RT - SP;
  2266  0011B0  C109  F098         	movff	_SP,___ftneg@f1
  2267  0011B4  C10A  F099         	movff	_SP+1,___ftneg@f1+1
  2268  0011B8  C10B  F09A         	movff	_SP+2,___ftneg@f1+2
  2269  0011BC  EC5C  F020         	call	___ftneg	;wreg free
  2270  0011C0  C098  F0AD         	movff	?___ftneg,___ftadd@f1
  2271  0011C4  C099  F0AE         	movff	?___ftneg+1,___ftadd@f1+1
  2272  0011C8  C09A  F0AF         	movff	?___ftneg+2,___ftadd@f1+2
  2273  0011CC  C106  F0B0         	movff	_RT,___ftadd@f2
  2274  0011D0  C107  F0B1         	movff	_RT+1,___ftadd@f2+1
  2275  0011D4  C108  F0B2         	movff	_RT+2,___ftadd@f2+2
  2276  0011D8  EC6C  F011         	call	___ftadd	;wreg free
  2277  0011DC  C0AD  F1C8         	movff	?___ftadd,main@coolError
  2278  0011E0  C0AE  F1C9         	movff	?___ftadd+1,main@coolError+1
  2279  0011E4  C0AF  F1CA         	movff	?___ftadd+2,main@coolError+2
  2280                           
  2281                           ;main.c: 121: if (coolError > 0) {
  2282  0011E8  0E00               	movlw	0
  2283  0011EA  0100               	movlb	0	; () banked
  2284  0011EC  6FB9               	movwf	___ftge@ff1& (0+255),b
  2285  0011EE  0E00               	movlw	0
  2286  0011F0  0100               	movlb	0	; () banked
  2287  0011F2  6FBA               	movwf	(___ftge@ff1+1)& (0+255),b
  2288  0011F4  0E00               	movlw	0
  2289  0011F6  0100               	movlb	0	; () banked
  2290  0011F8  6FBB               	movwf	(___ftge@ff1+2)& (0+255),b
  2291  0011FA  C1C8  F0BC         	movff	main@coolError,___ftge@ff2
  2292  0011FE  C1C9  F0BD         	movff	main@coolError+1,___ftge@ff2+1
  2293  001202  C1CA  F0BE         	movff	main@coolError+2,___ftge@ff2+2
  2294  001206  ECA0  F019         	call	___ftge	;wreg free
  2295  00120A  0100               	movlb	0	; () banked
  2296  00120C  B0D8               	btfsc	status,0,c
  2297  00120E  D041               	goto	l6461
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;main.c: 122: H=0;
  2301  001210  0E00               	movlw	0
  2302  001212  0101               	movlb	1	; () banked
  2303  001214  6F11               	movwf	(_H+1)& (0+255),b
  2304  001216  0E00               	movlw	0
  2305  001218  6F10               	movwf	_H& (0+255),b
  2306                           
  2307                           ; BSR set to: 1
  2308                           ;main.c: 123: PORTCbits.RC5 = 0;
  2309  00121A  9A82               	bcf	3970,5,c	;volatile
  2310                           
  2311                           ; BSR set to: 1
  2312                           ;main.c: 124: C = coolError * 10;
  2313  00121C  0E00               	movlw	0
  2314  00121E  0100               	movlb	0	; () banked
  2315  001220  6F97               	movwf	___ftmul@f2& (0+255),b
  2316  001222  0E20               	movlw	32
  2317  001224  0100               	movlb	0	; () banked
  2318  001226  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  2319  001228  0E41               	movlw	65
  2320  00122A  0100               	movlb	0	; () banked
  2321  00122C  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  2322  00122E  C1C8  F094         	movff	main@coolError,___ftmul@f1
  2323  001232  C1C9  F095         	movff	main@coolError+1,___ftmul@f1+1
  2324  001236  C1CA  F096         	movff	main@coolError+2,___ftmul@f1+2
  2325  00123A  ECBC  F015         	call	___ftmul	;wreg free
  2326  00123E  C094  F0B9         	movff	?___ftmul,___fttol@f1
  2327  001242  C095  F0BA         	movff	?___ftmul+1,___fttol@f1+1
  2328  001246  C096  F0BB         	movff	?___ftmul+2,___fttol@f1+2
  2329  00124A  EC11  F017         	call	___fttol	;wreg free
  2330  00124E  C0B9  F10C         	movff	?___fttol,_C
  2331  001252  C0BA  F10D         	movff	?___fttol+1,_C+1
  2332                           
  2333                           ;main.c: 125: if (C < 25) C = 25;
  2334  001256  0101               	movlb	1	; () banked
  2335  001258  BF0D               	btfsc	(_C+1)& (0+255),7,b
  2336  00125A  D008               	goto	l6457
  2337  00125C  0101               	movlb	1	; () banked
  2338  00125E  510D               	movf	(_C+1)& (0+255),w,b
  2339  001260  E10A               	bnz	l6459
  2340  001262  0E19               	movlw	25
  2341  001264  0101               	movlb	1	; () banked
  2342  001266  5D0C               	subwf	_C& (0+255),w,b
  2343  001268  B0D8               	btfsc	status,0,c
  2344  00126A  D005               	goto	l6459
  2345  00126C                     l6457:
  2346                           
  2347                           ; BSR set to: 1
  2348  00126C  0E00               	movlw	0
  2349  00126E  0101               	movlb	1	; () banked
  2350  001270  6F0D               	movwf	(_C+1)& (0+255),b
  2351  001272  0E19               	movlw	25
  2352  001274  6F0C               	movwf	_C& (0+255),b
  2353  001276                     l6459:
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;main.c: 126: set_pwm1_percent(C);
  2357  001276  C10C  F094         	movff	_C,___awtoft@c
  2358  00127A  C10D  F095         	movff	_C+1,___awtoft@c+1
  2359  00127E  ECC6  F01F         	call	___awtoft	;wreg free
  2360  001282  C094  F0C8         	movff	?___awtoft,set_pwm1_percent@value
  2361  001286  C095  F0C9         	movff	?___awtoft+1,set_pwm1_percent@value+1
  2362  00128A  C096  F0CA         	movff	?___awtoft+2,set_pwm1_percent@value+2
  2363  00128E  ECC1  F01A         	call	_set_pwm1_percent	;wreg free
  2364  001292                     l6461:
  2365                           
  2366                           ;main.c: 127: }
  2367                           ;main.c: 128: if (RT < (SP - HS)) {
  2368  001292  C106  F0B9         	movff	_RT,___ftge@ff1
  2369  001296  C107  F0BA         	movff	_RT+1,___ftge@ff1+1
  2370  00129A  C108  F0BB         	movff	_RT+2,___ftge@ff1+2
  2371  00129E  C109  F0B0         	movff	_SP,___ftadd@f2
  2372  0012A2  C10A  F0B1         	movff	_SP+1,___ftadd@f2+1
  2373  0012A6  C10B  F0B2         	movff	_SP+2,___ftadd@f2+2
  2374  0012AA  C114  F094         	movff	_HS,___awtoft@c
  2375  0012AE  C115  F095         	movff	_HS+1,___awtoft@c+1
  2376  0012B2  ECC6  F01F         	call	___awtoft	;wreg free
  2377  0012B6  C094  F098         	movff	?___awtoft,___ftneg@f1
  2378  0012BA  C095  F099         	movff	?___awtoft+1,___ftneg@f1+1
  2379  0012BE  C096  F09A         	movff	?___awtoft+2,___ftneg@f1+2
  2380  0012C2  EC5C  F020         	call	___ftneg	;wreg free
  2381  0012C6  C098  F0AD         	movff	?___ftneg,___ftadd@f1
  2382  0012CA  C099  F0AE         	movff	?___ftneg+1,___ftadd@f1+1
  2383  0012CE  C09A  F0AF         	movff	?___ftneg+2,___ftadd@f1+2
  2384  0012D2  EC6C  F011         	call	___ftadd	;wreg free
  2385  0012D6  C0AD  F0BC         	movff	?___ftadd,___ftge@ff2
  2386  0012DA  C0AE  F0BD         	movff	?___ftadd+1,___ftge@ff2+1
  2387  0012DE  C0AF  F0BE         	movff	?___ftadd+2,___ftge@ff2+2
  2388  0012E2  ECA0  F019         	call	___ftge	;wreg free
  2389  0012E6  0100               	movlb	0	; () banked
  2390  0012E8  B0D8               	btfsc	status,0,c
  2391  0012EA  D1E3               	goto	l6525
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;main.c: 129: C=0;
  2395  0012EC  0E00               	movlw	0
  2396  0012EE  0101               	movlb	1	; () banked
  2397  0012F0  6F0D               	movwf	(_C+1)& (0+255),b
  2398  0012F2  0E00               	movlw	0
  2399  0012F4  6F0C               	movwf	_C& (0+255),b
  2400                           
  2401                           ;main.c: 130: H=10;
  2402  0012F6  0E00               	movlw	0
  2403  0012F8  0101               	movlb	1	; () banked
  2404  0012FA  6F11               	movwf	(_H+1)& (0+255),b
  2405  0012FC  0E0A               	movlw	10
  2406  0012FE  6F10               	movwf	_H& (0+255),b
  2407                           
  2408                           ; BSR set to: 1
  2409                           ;main.c: 131: set_pwm1_percent(0);
  2410  001300  0E00               	movlw	0
  2411  001302  0100               	movlb	0	; () banked
  2412  001304  6FC8               	movwf	set_pwm1_percent@value& (0+255),b
  2413  001306  0E00               	movlw	0
  2414  001308  0100               	movlb	0	; () banked
  2415  00130A  6FC9               	movwf	(set_pwm1_percent@value+1)& (0+255),b
  2416  00130C  0E00               	movlw	0
  2417  00130E  0100               	movlb	0	; () banked
  2418  001310  6FCA               	movwf	(set_pwm1_percent@value+2)& (0+255),b
  2419  001312  ECC1  F01A         	call	_set_pwm1_percent	;wreg free
  2420                           
  2421                           ;main.c: 132: }
  2422                           ;main.c: 133: }
  2423  001316  D1CD               	goto	l6525
  2424  001318                     l6467:
  2425                           
  2426                           ;main.c: 134: else if (OT < 40) {
  2427  001318  C103  F0B9         	movff	_OT,___ftge@ff1
  2428  00131C  C104  F0BA         	movff	_OT+1,___ftge@ff1+1
  2429  001320  C105  F0BB         	movff	_OT+2,___ftge@ff1+2
  2430  001324  0E00               	movlw	0
  2431  001326  0100               	movlb	0	; () banked
  2432  001328  6FBC               	movwf	___ftge@ff2& (0+255),b
  2433  00132A  0E20               	movlw	32
  2434  00132C  0100               	movlb	0	; () banked
  2435  00132E  6FBD               	movwf	(___ftge@ff2+1)& (0+255),b
  2436  001330  0E42               	movlw	66
  2437  001332  0100               	movlb	0	; () banked
  2438  001334  6FBE               	movwf	(___ftge@ff2+2)& (0+255),b
  2439  001336  ECA0  F019         	call	___ftge	;wreg free
  2440  00133A  0100               	movlb	0	; () banked
  2441  00133C  B0D8               	btfsc	status,0,c
  2442  00133E  D0D7               	goto	l6495
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;main.c: 135: float HeatError = SP - RT;
  2446  001340  C106  F098         	movff	_RT,___ftneg@f1
  2447  001344  C107  F099         	movff	_RT+1,___ftneg@f1+1
  2448  001348  C108  F09A         	movff	_RT+2,___ftneg@f1+2
  2449  00134C  EC5C  F020         	call	___ftneg	;wreg free
  2450  001350  C098  F0AD         	movff	?___ftneg,___ftadd@f1
  2451  001354  C099  F0AE         	movff	?___ftneg+1,___ftadd@f1+1
  2452  001358  C09A  F0AF         	movff	?___ftneg+2,___ftadd@f1+2
  2453  00135C  C109  F0B0         	movff	_SP,___ftadd@f2
  2454  001360  C10A  F0B1         	movff	_SP+1,___ftadd@f2+1
  2455  001364  C10B  F0B2         	movff	_SP+2,___ftadd@f2+2
  2456  001368  EC6C  F011         	call	___ftadd	;wreg free
  2457  00136C  C0AD  F1CB         	movff	?___ftadd,main@HeatError
  2458  001370  C0AE  F1CC         	movff	?___ftadd+1,main@HeatError+1
  2459  001374  C0AF  F1CD         	movff	?___ftadd+2,main@HeatError+2
  2460                           
  2461                           ;main.c: 136: if(HeatError > 0){
  2462  001378  0E00               	movlw	0
  2463  00137A  0100               	movlb	0	; () banked
  2464  00137C  6FB9               	movwf	___ftge@ff1& (0+255),b
  2465  00137E  0E00               	movlw	0
  2466  001380  0100               	movlb	0	; () banked
  2467  001382  6FBA               	movwf	(___ftge@ff1+1)& (0+255),b
  2468  001384  0E00               	movlw	0
  2469  001386  0100               	movlb	0	; () banked
  2470  001388  6FBB               	movwf	(___ftge@ff1+2)& (0+255),b
  2471  00138A  C1CB  F0BC         	movff	main@HeatError,___ftge@ff2
  2472  00138E  C1CC  F0BD         	movff	main@HeatError+1,___ftge@ff2+1
  2473  001392  C1CD  F0BE         	movff	main@HeatError+2,___ftge@ff2+2
  2474  001396  ECA0  F019         	call	___ftge	;wreg free
  2475  00139A  0100               	movlb	0	; () banked
  2476  00139C  B0D8               	btfsc	status,0,c
  2477  00139E  D066               	goto	l6487
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;main.c: 137: H = 2 * HeatError;
  2481  0013A0  0E00               	movlw	0
  2482  0013A2  0100               	movlb	0	; () banked
  2483  0013A4  6F97               	movwf	___ftmul@f2& (0+255),b
  2484  0013A6  0E00               	movlw	0
  2485  0013A8  0100               	movlb	0	; () banked
  2486  0013AA  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  2487  0013AC  0E40               	movlw	64
  2488  0013AE  0100               	movlb	0	; () banked
  2489  0013B0  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  2490  0013B2  C1CB  F094         	movff	main@HeatError,___ftmul@f1
  2491  0013B6  C1CC  F095         	movff	main@HeatError+1,___ftmul@f1+1
  2492  0013BA  C1CD  F096         	movff	main@HeatError+2,___ftmul@f1+2
  2493  0013BE  ECBC  F015         	call	___ftmul	;wreg free
  2494  0013C2  C094  F0B9         	movff	?___ftmul,___fttol@f1
  2495  0013C6  C095  F0BA         	movff	?___ftmul+1,___fttol@f1+1
  2496  0013CA  C096  F0BB         	movff	?___ftmul+2,___fttol@f1+2
  2497  0013CE  EC11  F017         	call	___fttol	;wreg free
  2498  0013D2  C0B9  F110         	movff	?___fttol,_H
  2499  0013D6  C0BA  F111         	movff	?___fttol+1,_H+1
  2500                           
  2501                           ;main.c: 138: if(H >20) H = 20 ;
  2502  0013DA  0101               	movlb	1	; () banked
  2503  0013DC  BF11               	btfsc	(_H+1)& (0+255),7,b
  2504  0013DE  D00D               	goto	l6477
  2505  0013E0  0101               	movlb	1	; () banked
  2506  0013E2  5111               	movf	(_H+1)& (0+255),w,b
  2507  0013E4  E105               	bnz	u7610
  2508  0013E6  0E15               	movlw	21
  2509  0013E8  0101               	movlb	1	; () banked
  2510  0013EA  5D10               	subwf	_H& (0+255),w,b
  2511  0013EC  A0D8               	btfss	status,0,c
  2512  0013EE  D005               	goto	l6477
  2513  0013F0                     u7610:
  2514                           
  2515                           ; BSR set to: 1
  2516  0013F0  0E00               	movlw	0
  2517  0013F2  0101               	movlb	1	; () banked
  2518  0013F4  6F11               	movwf	(_H+1)& (0+255),b
  2519  0013F6  0E14               	movlw	20
  2520  0013F8  6F10               	movwf	_H& (0+255),b
  2521  0013FA                     l6477:
  2522                           
  2523                           ; BSR set to: 1
  2524                           ;main.c: 139: if(H < 10) H = 10;
  2525  0013FA  0101               	movlb	1	; () banked
  2526  0013FC  BF11               	btfsc	(_H+1)& (0+255),7,b
  2527  0013FE  D008               	goto	l6479
  2528  001400  0101               	movlb	1	; () banked
  2529  001402  5111               	movf	(_H+1)& (0+255),w,b
  2530  001404  E10A               	bnz	l6481
  2531  001406  0E0A               	movlw	10
  2532  001408  0101               	movlb	1	; () banked
  2533  00140A  5D10               	subwf	_H& (0+255),w,b
  2534  00140C  B0D8               	btfsc	status,0,c
  2535  00140E  D005               	goto	l6481
  2536  001410                     l6479:
  2537                           
  2538                           ; BSR set to: 1
  2539  001410  0E00               	movlw	0
  2540  001412  0101               	movlb	1	; () banked
  2541  001414  6F11               	movwf	(_H+1)& (0+255),b
  2542  001416  0E0A               	movlw	10
  2543  001418  6F10               	movwf	_H& (0+255),b
  2544  00141A                     l6481:
  2545                           
  2546                           ; BSR set to: 1
  2547                           ;main.c: 140: if (SP > 52) H = 20;
  2548  00141A  0E00               	movlw	0
  2549  00141C  0100               	movlb	0	; () banked
  2550  00141E  6FB9               	movwf	___ftge@ff1& (0+255),b
  2551  001420  0E50               	movlw	80
  2552  001422  0100               	movlb	0	; () banked
  2553  001424  6FBA               	movwf	(___ftge@ff1+1)& (0+255),b
  2554  001426  0E42               	movlw	66
  2555  001428  0100               	movlb	0	; () banked
  2556  00142A  6FBB               	movwf	(___ftge@ff1+2)& (0+255),b
  2557  00142C  C109  F0BC         	movff	_SP,___ftge@ff2
  2558  001430  C10A  F0BD         	movff	_SP+1,___ftge@ff2+1
  2559  001434  C10B  F0BE         	movff	_SP+2,___ftge@ff2+2
  2560  001438  ECA0  F019         	call	___ftge	;wreg free
  2561  00143C  0100               	movlb	0	; () banked
  2562  00143E  B0D8               	btfsc	status,0,c
  2563  001440  D005               	goto	l310
  2564                           
  2565                           ; BSR set to: 0
  2566  001442  0E00               	movlw	0
  2567  001444  0101               	movlb	1	; () banked
  2568  001446  6F11               	movwf	(_H+1)& (0+255),b
  2569  001448  0E14               	movlw	20
  2570  00144A  6F10               	movwf	_H& (0+255),b
  2571  00144C                     l310:
  2572                           
  2573                           ;main.c: 141: C=0;
  2574  00144C  0E00               	movlw	0
  2575  00144E  0101               	movlb	1	; () banked
  2576  001450  6F0D               	movwf	(_C+1)& (0+255),b
  2577  001452  0E00               	movlw	0
  2578  001454  6F0C               	movwf	_C& (0+255),b
  2579                           
  2580                           ; BSR set to: 1
  2581                           ;main.c: 142: set_pwm1_percent(0);
  2582  001456  0E00               	movlw	0
  2583  001458  0100               	movlb	0	; () banked
  2584  00145A  6FC8               	movwf	set_pwm1_percent@value& (0+255),b
  2585  00145C  0E00               	movlw	0
  2586  00145E  0100               	movlb	0	; () banked
  2587  001460  6FC9               	movwf	(set_pwm1_percent@value+1)& (0+255),b
  2588  001462  0E00               	movlw	0
  2589  001464  0100               	movlb	0	; () banked
  2590  001466  6FCA               	movwf	(set_pwm1_percent@value+2)& (0+255),b
  2591  001468  ECC1  F01A         	call	_set_pwm1_percent	;wreg free
  2592  00146C                     l6487:
  2593                           
  2594                           ;main.c: 143: }
  2595                           ;main.c: 144: if(RT > (SP + HS)) {
  2596  00146C  C109  F0B0         	movff	_SP,___ftadd@f2
  2597  001470  C10A  F0B1         	movff	_SP+1,___ftadd@f2+1
  2598  001474  C10B  F0B2         	movff	_SP+2,___ftadd@f2+2
  2599  001478  C114  F094         	movff	_HS,___awtoft@c
  2600  00147C  C115  F095         	movff	_HS+1,___awtoft@c+1
  2601  001480  ECC6  F01F         	call	___awtoft	;wreg free
  2602  001484  C094  F0AD         	movff	?___awtoft,___ftadd@f1
  2603  001488  C095  F0AE         	movff	?___awtoft+1,___ftadd@f1+1
  2604  00148C  C096  F0AF         	movff	?___awtoft+2,___ftadd@f1+2
  2605  001490  EC6C  F011         	call	___ftadd	;wreg free
  2606  001494  C0AD  F0B9         	movff	?___ftadd,___ftge@ff1
  2607  001498  C0AE  F0BA         	movff	?___ftadd+1,___ftge@ff1+1
  2608  00149C  C0AF  F0BB         	movff	?___ftadd+2,___ftge@ff1+2
  2609  0014A0  C106  F0BC         	movff	_RT,___ftge@ff2
  2610  0014A4  C107  F0BD         	movff	_RT+1,___ftge@ff2+1
  2611  0014A8  C108  F0BE         	movff	_RT+2,___ftge@ff2+2
  2612  0014AC  ECA0  F019         	call	___ftge	;wreg free
  2613  0014B0  0100               	movlb	0	; () banked
  2614  0014B2  B0D8               	btfsc	status,0,c
  2615  0014B4  D0FE               	goto	l6525
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;main.c: 145: H = 0;
  2619  0014B6  0E00               	movlw	0
  2620  0014B8  0101               	movlb	1	; () banked
  2621  0014BA  6F11               	movwf	(_H+1)& (0+255),b
  2622  0014BC  0E00               	movlw	0
  2623  0014BE  6F10               	movwf	_H& (0+255),b
  2624                           
  2625                           ;main.c: 146: C = 0;
  2626  0014C0  0E00               	movlw	0
  2627  0014C2  0101               	movlb	1	; () banked
  2628  0014C4  6F0D               	movwf	(_C+1)& (0+255),b
  2629  0014C6  0E00               	movlw	0
  2630  0014C8  6F0C               	movwf	_C& (0+255),b
  2631                           
  2632                           ;main.c: 147: HCP = 0;
  2633  0014CA  0E00               	movlw	0
  2634  0014CC  0101               	movlb	1	; () banked
  2635  0014CE  6F13               	movwf	(_HCP+1)& (0+255),b
  2636  0014D0  0E00               	movlw	0
  2637  0014D2  6F12               	movwf	_HCP& (0+255),b
  2638                           
  2639                           ; BSR set to: 1
  2640                           ;main.c: 148: PORTCbits.RC5 = 0;
  2641  0014D4  9A82               	bcf	3970,5,c	;volatile
  2642                           
  2643                           ; BSR set to: 1
  2644                           ;main.c: 149: set_pwm1_percent(0);
  2645  0014D6  0E00               	movlw	0
  2646  0014D8  0100               	movlb	0	; () banked
  2647  0014DA  6FC8               	movwf	set_pwm1_percent@value& (0+255),b
  2648  0014DC  0E00               	movlw	0
  2649  0014DE  0100               	movlb	0	; () banked
  2650  0014E0  6FC9               	movwf	(set_pwm1_percent@value+1)& (0+255),b
  2651  0014E2  0E00               	movlw	0
  2652  0014E4  0100               	movlb	0	; () banked
  2653  0014E6  6FCA               	movwf	(set_pwm1_percent@value+2)& (0+255),b
  2654  0014E8  ECC1  F01A         	call	_set_pwm1_percent	;wreg free
  2655                           
  2656                           ;main.c: 150: }
  2657                           ;main.c: 151: }
  2658  0014EC  D0E2               	goto	l6525
  2659  0014EE                     l6495:
  2660                           
  2661                           ;main.c: 152: else {
  2662                           ;main.c: 153: float HeatError = SP - RT;
  2663  0014EE  C106  F098         	movff	_RT,___ftneg@f1
  2664  0014F2  C107  F099         	movff	_RT+1,___ftneg@f1+1
  2665  0014F6  C108  F09A         	movff	_RT+2,___ftneg@f1+2
  2666  0014FA  EC5C  F020         	call	___ftneg	;wreg free
  2667  0014FE  C098  F0AD         	movff	?___ftneg,___ftadd@f1
  2668  001502  C099  F0AE         	movff	?___ftneg+1,___ftadd@f1+1
  2669  001506  C09A  F0AF         	movff	?___ftneg+2,___ftadd@f1+2
  2670  00150A  C109  F0B0         	movff	_SP,___ftadd@f2
  2671  00150E  C10A  F0B1         	movff	_SP+1,___ftadd@f2+1
  2672  001512  C10B  F0B2         	movff	_SP+2,___ftadd@f2+2
  2673  001516  EC6C  F011         	call	___ftadd	;wreg free
  2674  00151A  C0AD  F1CE         	movff	?___ftadd,main@HeatError_1269
  2675  00151E  C0AE  F1CF         	movff	?___ftadd+1,main@HeatError_1269+1
  2676  001522  C0AF  F1D0         	movff	?___ftadd+2,main@HeatError_1269+2
  2677                           
  2678                           ;main.c: 154: if (HeatError > 0) {
  2679  001526  0E00               	movlw	0
  2680  001528  0100               	movlb	0	; () banked
  2681  00152A  6FB9               	movwf	___ftge@ff1& (0+255),b
  2682  00152C  0E00               	movlw	0
  2683  00152E  0100               	movlb	0	; () banked
  2684  001530  6FBA               	movwf	(___ftge@ff1+1)& (0+255),b
  2685  001532  0E00               	movlw	0
  2686  001534  0100               	movlb	0	; () banked
  2687  001536  6FBB               	movwf	(___ftge@ff1+2)& (0+255),b
  2688  001538  C1CE  F0BC         	movff	main@HeatError_1269,___ftge@ff2
  2689  00153C  C1CF  F0BD         	movff	main@HeatError_1269+1,___ftge@ff2+1
  2690  001540  C1D0  F0BE         	movff	main@HeatError_1269+2,___ftge@ff2+2
  2691  001544  ECA0  F019         	call	___ftge	;wreg free
  2692  001548  0100               	movlb	0	; () banked
  2693  00154A  B0D8               	btfsc	status,0,c
  2694  00154C  D056               	goto	l6513
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;main.c: 155: H = HeatError;
  2698  00154E  C1CE  F0B9         	movff	main@HeatError_1269,___fttol@f1
  2699  001552  C1CF  F0BA         	movff	main@HeatError_1269+1,___fttol@f1+1
  2700  001556  C1D0  F0BB         	movff	main@HeatError_1269+2,___fttol@f1+2
  2701  00155A  EC11  F017         	call	___fttol	;wreg free
  2702  00155E  C0B9  F110         	movff	?___fttol,_H
  2703  001562  C0BA  F111         	movff	?___fttol+1,_H+1
  2704                           
  2705                           ;main.c: 156: if (H > 20) H = 20;
  2706  001566  0101               	movlb	1	; () banked
  2707  001568  BF11               	btfsc	(_H+1)& (0+255),7,b
  2708  00156A  D00D               	goto	l6503
  2709  00156C  0101               	movlb	1	; () banked
  2710  00156E  5111               	movf	(_H+1)& (0+255),w,b
  2711  001570  E105               	bnz	u7660
  2712  001572  0E15               	movlw	21
  2713  001574  0101               	movlb	1	; () banked
  2714  001576  5D10               	subwf	_H& (0+255),w,b
  2715  001578  A0D8               	btfss	status,0,c
  2716  00157A  D005               	goto	l6503
  2717  00157C                     u7660:
  2718                           
  2719                           ; BSR set to: 1
  2720  00157C  0E00               	movlw	0
  2721  00157E  0101               	movlb	1	; () banked
  2722  001580  6F11               	movwf	(_H+1)& (0+255),b
  2723  001582  0E14               	movlw	20
  2724  001584  6F10               	movwf	_H& (0+255),b
  2725  001586                     l6503:
  2726                           
  2727                           ; BSR set to: 1
  2728                           ;main.c: 157: if (H < 10) H = 10;
  2729  001586  0101               	movlb	1	; () banked
  2730  001588  BF11               	btfsc	(_H+1)& (0+255),7,b
  2731  00158A  D008               	goto	l6505
  2732  00158C  0101               	movlb	1	; () banked
  2733  00158E  5111               	movf	(_H+1)& (0+255),w,b
  2734  001590  E10A               	bnz	l6507
  2735  001592  0E0A               	movlw	10
  2736  001594  0101               	movlb	1	; () banked
  2737  001596  5D10               	subwf	_H& (0+255),w,b
  2738  001598  B0D8               	btfsc	status,0,c
  2739  00159A  D005               	goto	l6507
  2740  00159C                     l6505:
  2741                           
  2742                           ; BSR set to: 1
  2743  00159C  0E00               	movlw	0
  2744  00159E  0101               	movlb	1	; () banked
  2745  0015A0  6F11               	movwf	(_H+1)& (0+255),b
  2746  0015A2  0E0A               	movlw	10
  2747  0015A4  6F10               	movwf	_H& (0+255),b
  2748  0015A6                     l6507:
  2749                           
  2750                           ; BSR set to: 1
  2751                           ;main.c: 158: if (SP > 52) H = 20;
  2752  0015A6  0E00               	movlw	0
  2753  0015A8  0100               	movlb	0	; () banked
  2754  0015AA  6FB9               	movwf	___ftge@ff1& (0+255),b
  2755  0015AC  0E50               	movlw	80
  2756  0015AE  0100               	movlb	0	; () banked
  2757  0015B0  6FBA               	movwf	(___ftge@ff1+1)& (0+255),b
  2758  0015B2  0E42               	movlw	66
  2759  0015B4  0100               	movlb	0	; () banked
  2760  0015B6  6FBB               	movwf	(___ftge@ff1+2)& (0+255),b
  2761  0015B8  C109  F0BC         	movff	_SP,___ftge@ff2
  2762  0015BC  C10A  F0BD         	movff	_SP+1,___ftge@ff2+1
  2763  0015C0  C10B  F0BE         	movff	_SP+2,___ftge@ff2+2
  2764  0015C4  ECA0  F019         	call	___ftge	;wreg free
  2765  0015C8  0100               	movlb	0	; () banked
  2766  0015CA  B0D8               	btfsc	status,0,c
  2767  0015CC  D005               	goto	l316
  2768                           
  2769                           ; BSR set to: 0
  2770  0015CE  0E00               	movlw	0
  2771  0015D0  0101               	movlb	1	; () banked
  2772  0015D2  6F11               	movwf	(_H+1)& (0+255),b
  2773  0015D4  0E14               	movlw	20
  2774  0015D6  6F10               	movwf	_H& (0+255),b
  2775  0015D8                     l316:
  2776                           
  2777                           ;main.c: 159: C=0;
  2778  0015D8  0E00               	movlw	0
  2779  0015DA  0101               	movlb	1	; () banked
  2780  0015DC  6F0D               	movwf	(_C+1)& (0+255),b
  2781  0015DE  0E00               	movlw	0
  2782  0015E0  6F0C               	movwf	_C& (0+255),b
  2783                           
  2784                           ; BSR set to: 1
  2785                           ;main.c: 160: set_pwm1_percent(0);
  2786  0015E2  0E00               	movlw	0
  2787  0015E4  0100               	movlb	0	; () banked
  2788  0015E6  6FC8               	movwf	set_pwm1_percent@value& (0+255),b
  2789  0015E8  0E00               	movlw	0
  2790  0015EA  0100               	movlb	0	; () banked
  2791  0015EC  6FC9               	movwf	(set_pwm1_percent@value+1)& (0+255),b
  2792  0015EE  0E00               	movlw	0
  2793  0015F0  0100               	movlb	0	; () banked
  2794  0015F2  6FCA               	movwf	(set_pwm1_percent@value+2)& (0+255),b
  2795  0015F4  ECC1  F01A         	call	_set_pwm1_percent	;wreg free
  2796                           
  2797                           ;main.c: 161: } else {
  2798  0015F8  D05C               	goto	l6525
  2799  0015FA                     l6513:
  2800                           
  2801                           ;main.c: 162: float CoolError = RT - SP;
  2802  0015FA  C109  F098         	movff	_SP,___ftneg@f1
  2803  0015FE  C10A  F099         	movff	_SP+1,___ftneg@f1+1
  2804  001602  C10B  F09A         	movff	_SP+2,___ftneg@f1+2
  2805  001606  EC5C  F020         	call	___ftneg	;wreg free
  2806  00160A  C098  F0AD         	movff	?___ftneg,___ftadd@f1
  2807  00160E  C099  F0AE         	movff	?___ftneg+1,___ftadd@f1+1
  2808  001612  C09A  F0AF         	movff	?___ftneg+2,___ftadd@f1+2
  2809  001616  C106  F0B0         	movff	_RT,___ftadd@f2
  2810  00161A  C107  F0B1         	movff	_RT+1,___ftadd@f2+1
  2811  00161E  C108  F0B2         	movff	_RT+2,___ftadd@f2+2
  2812  001622  EC6C  F011         	call	___ftadd	;wreg free
  2813  001626  C0AD  F1C5         	movff	?___ftadd,main@CoolError
  2814  00162A  C0AE  F1C6         	movff	?___ftadd+1,main@CoolError+1
  2815  00162E  C0AF  F1C7         	movff	?___ftadd+2,main@CoolError+2
  2816                           
  2817                           ;main.c: 163: H=0;
  2818  001632  0E00               	movlw	0
  2819  001634  0101               	movlb	1	; () banked
  2820  001636  6F11               	movwf	(_H+1)& (0+255),b
  2821  001638  0E00               	movlw	0
  2822  00163A  6F10               	movwf	_H& (0+255),b
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;main.c: 165: C = CoolError * 10;
  2826  00163C  0E00               	movlw	0
  2827  00163E  0100               	movlb	0	; () banked
  2828  001640  6F97               	movwf	___ftmul@f2& (0+255),b
  2829  001642  0E20               	movlw	32
  2830  001644  0100               	movlb	0	; () banked
  2831  001646  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  2832  001648  0E41               	movlw	65
  2833  00164A  0100               	movlb	0	; () banked
  2834  00164C  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  2835  00164E  C1C5  F094         	movff	main@CoolError,___ftmul@f1
  2836  001652  C1C6  F095         	movff	main@CoolError+1,___ftmul@f1+1
  2837  001656  C1C7  F096         	movff	main@CoolError+2,___ftmul@f1+2
  2838  00165A  ECBC  F015         	call	___ftmul	;wreg free
  2839  00165E  C094  F0B9         	movff	?___ftmul,___fttol@f1
  2840  001662  C095  F0BA         	movff	?___ftmul+1,___fttol@f1+1
  2841  001666  C096  F0BB         	movff	?___ftmul+2,___fttol@f1+2
  2842  00166A  EC11  F017         	call	___fttol	;wreg free
  2843  00166E  C0B9  F10C         	movff	?___fttol,_C
  2844  001672  C0BA  F10D         	movff	?___fttol+1,_C+1
  2845                           
  2846                           ;main.c: 166: if (C < 25) C = 25;
  2847  001676  0101               	movlb	1	; () banked
  2848  001678  BF0D               	btfsc	(_C+1)& (0+255),7,b
  2849  00167A  D008               	goto	l6521
  2850  00167C  0101               	movlb	1	; () banked
  2851  00167E  510D               	movf	(_C+1)& (0+255),w,b
  2852  001680  E10A               	bnz	l6523
  2853  001682  0E19               	movlw	25
  2854  001684  0101               	movlb	1	; () banked
  2855  001686  5D0C               	subwf	_C& (0+255),w,b
  2856  001688  B0D8               	btfsc	status,0,c
  2857  00168A  D005               	goto	l6523
  2858  00168C                     l6521:
  2859                           
  2860                           ; BSR set to: 1
  2861  00168C  0E00               	movlw	0
  2862  00168E  0101               	movlb	1	; () banked
  2863  001690  6F0D               	movwf	(_C+1)& (0+255),b
  2864  001692  0E19               	movlw	25
  2865  001694  6F0C               	movwf	_C& (0+255),b
  2866  001696                     l6523:
  2867                           
  2868                           ; BSR set to: 1
  2869                           ;main.c: 167: set_pwm1_percent(C);
  2870  001696  C10C  F094         	movff	_C,___awtoft@c
  2871  00169A  C10D  F095         	movff	_C+1,___awtoft@c+1
  2872  00169E  ECC6  F01F         	call	___awtoft	;wreg free
  2873  0016A2  C094  F0C8         	movff	?___awtoft,set_pwm1_percent@value
  2874  0016A6  C095  F0C9         	movff	?___awtoft+1,set_pwm1_percent@value+1
  2875  0016AA  C096  F0CA         	movff	?___awtoft+2,set_pwm1_percent@value+2
  2876  0016AE  ECC1  F01A         	call	_set_pwm1_percent	;wreg free
  2877  0016B2                     l6525:
  2878                           
  2879                           ;main.c: 168: }
  2880                           ;main.c: 169: }
  2881                           ;main.c: 171: }
  2882                           ;main.c: 172: FanSpeed = RPS_C/7.0;
  2883  0016B2  C118  F088         	movff	_RPS_C,___lwtoft@c
  2884  0016B6  C119  F089         	movff	_RPS_C+1,___lwtoft@c+1
  2885  0016BA  ECB8  F020         	call	___lwtoft	;wreg free
  2886  0016BE  C088  F0A3         	movff	?___lwtoft,___ftdiv@f1
  2887  0016C2  C089  F0A4         	movff	?___lwtoft+1,___ftdiv@f1+1
  2888  0016C6  C08A  F0A5         	movff	?___lwtoft+2,___ftdiv@f1+2
  2889  0016CA  0E00               	movlw	0
  2890  0016CC  0100               	movlb	0	; () banked
  2891  0016CE  6FA6               	movwf	___ftdiv@f2& (0+255),b
  2892  0016D0  0EE0               	movlw	224
  2893  0016D2  0100               	movlb	0	; () banked
  2894  0016D4  6FA7               	movwf	(___ftdiv@f2+1)& (0+255),b
  2895  0016D6  0E40               	movlw	64
  2896  0016D8  0100               	movlb	0	; () banked
  2897  0016DA  6FA8               	movwf	(___ftdiv@f2+2)& (0+255),b
  2898  0016DC  EC6B  F016         	call	___ftdiv	;wreg free
  2899  0016E0  C0A3  F100         	movff	?___ftdiv,_FanSpeed
  2900  0016E4  C0A4  F101         	movff	?___ftdiv+1,_FanSpeed+1
  2901  0016E8  C0A5  F102         	movff	?___ftdiv+2,_FanSpeed+2
  2902                           
  2903                           ;main.c: 173: print_data();
  2904  0016EC  ECD0  F00D         	call	_print_data	;wreg free
  2905  0016F0  D411               	goto	l290
  2906  0016F2                     __end_of_main:
  2907                           	opt stack 0
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           postinc0	equ	0xFEE
  2913                           wreg	equ	0xFE8
  2914                           postdec1	equ	0xFE5
  2915                           fsr1l	equ	0xFE1
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function _setupTimers *****************
  2919 ;; Defined at:
  2920 ;;		line 225 in file "main.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    5
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_main
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text1
  2949  003D68                     __ptext1:
  2950                           	opt stack 0
  2951  003D68                     _setupTimers:
  2952                           	opt stack 25
  2953                           
  2954                           ;main.c: 227: T0CON = 0;
  2955                           
  2956                           ;incstack = 0
  2957  003D68  0E00               	movlw	0
  2958  003D6A  6ED5               	movwf	4053,c	;volatile
  2959                           
  2960                           ;main.c: 228: INTCONbits.T0IF = 0;
  2961  003D6C  94F2               	bcf	intcon,2,c	;volatile
  2962                           
  2963                           ;main.c: 229: T0CONbits.T0PS0 = 1;
  2964  003D6E  80D5               	bsf	4053,0,c	;volatile
  2965                           
  2966                           ;main.c: 230: T0CONbits.T0PS1 = 1;
  2967  003D70  82D5               	bsf	4053,1,c	;volatile
  2968                           
  2969                           ;main.c: 231: T0CONbits.T0PS2 = 0;
  2970  003D72  94D5               	bcf	4053,2,c	;volatile
  2971                           
  2972                           ;main.c: 232: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
  2973  003D74  0E0B               	movlw	11
  2974  003D76  6ED7               	movwf	4055,c	;volatile
  2975                           
  2976                           ;main.c: 233: TMR0L = (unsigned char) (3036 & 0x00FF);
  2977  003D78  0EDC               	movlw	220
  2978  003D7A  6ED6               	movwf	4054,c	;volatile
  2979                           
  2980                           ;main.c: 235: T1CONbits.TMR1CS = 1;
  2981  003D7C  82CD               	bsf	4045,1,c	;volatile
  2982                           
  2983                           ;main.c: 236: T1CONbits.T1CKPS1 = 0;
  2984  003D7E  9ACD               	bcf	4045,5,c	;volatile
  2985                           
  2986                           ;main.c: 237: T1CONbits.T1CKPS0 = 0;
  2987  003D80  98CD               	bcf	4045,4,c	;volatile
  2988                           
  2989                           ;main.c: 238: TMR1H = 0;
  2990  003D82  0E00               	movlw	0
  2991  003D84  6ECF               	movwf	4047,c	;volatile
  2992                           
  2993                           ;main.c: 239: TMR1L = 0;
  2994  003D86  0E00               	movlw	0
  2995  003D88  6ECE               	movwf	4046,c	;volatile
  2996                           
  2997                           ;main.c: 240: INTCONbits.GIE = 1;
  2998  003D8A  8EF2               	bsf	intcon,7,c	;volatile
  2999                           
  3000                           ;main.c: 241: INTCONbits.T0IE = 1;
  3001  003D8C  8AF2               	bsf	intcon,5,c	;volatile
  3002                           
  3003                           ;main.c: 242: T1CONbits.TMR1ON = 1;
  3004  003D8E  80CD               	bsf	4045,0,c	;volatile
  3005                           
  3006                           ;main.c: 243: T0CONbits.TMR0ON = 1;
  3007  003D90  8ED5               	bsf	4053,7,c	;volatile
  3008                           
  3009                           ;main.c: 245: T3CON=0;
  3010  003D92  0E00               	movlw	0
  3011  003D94  6EB1               	movwf	4017,c	;volatile
  3012                           
  3013                           ;main.c: 246: T3CONbits.RD16=1;
  3014  003D96  8EB1               	bsf	4017,7,c	;volatile
  3015                           
  3016                           ;main.c: 247: T3CONbits.T3CKPS=0b10;
  3017  003D98  50B1               	movf	4017,w,c	;volatile
  3018  003D9A  0BCF               	andlw	-49
  3019  003D9C  0920               	iorlw	32
  3020  003D9E  6EB1               	movwf	4017,c	;volatile
  3021                           
  3022                           ;main.c: 248: TMR3H = (unsigned char) ((60536 >> 8) & 0x00FF);
  3023  003DA0  0EEC               	movlw	236
  3024  003DA2  6EB3               	movwf	4019,c	;volatile
  3025                           
  3026                           ;main.c: 249: TMR3L = (unsigned char) (60536 & 0x00FF);
  3027  003DA4  0E78               	movlw	120
  3028  003DA6  6EB2               	movwf	4018,c	;volatile
  3029                           
  3030                           ;main.c: 250: PIE1=0;
  3031  003DA8  0E00               	movlw	0
  3032  003DAA  6E9D               	movwf	3997,c	;volatile
  3033                           
  3034                           ;main.c: 252: PIE1bits.RCIE=1;
  3035  003DAC  8A9D               	bsf	3997,5,c	;volatile
  3036                           
  3037                           ;main.c: 254: PIR1bits.RCIF=0;
  3038  003DAE  9A9E               	bcf	3998,5,c	;volatile
  3039                           
  3040                           ;main.c: 255: PIR1bits.TXIF=0;
  3041  003DB0  989E               	bcf	3998,4,c	;volatile
  3042                           
  3043                           ;main.c: 257: PIE2=0;
  3044  003DB2  0E00               	movlw	0
  3045  003DB4  6EA0               	movwf	4000,c	;volatile
  3046                           
  3047                           ;main.c: 258: PIE2bits.TMR3IE = 1;
  3048  003DB6  82A0               	bsf	4000,1,c	;volatile
  3049                           
  3050                           ;main.c: 259: PIR2bits.TMR3IF = 0;
  3051  003DB8  92A1               	bcf	4001,1,c	;volatile
  3052                           
  3053                           ;main.c: 260: T3CONbits.TMR3ON=1;
  3054  003DBA  80B1               	bsf	4017,0,c	;volatile
  3055  003DBC  0012               	return		;funcret
  3056  003DBE                     __end_of_setupTimers:
  3057                           	opt stack 0
  3058                           tblptru	equ	0xFF8
  3059                           tblptrh	equ	0xFF7
  3060                           tblptrl	equ	0xFF6
  3061                           tablat	equ	0xFF5
  3062                           intcon	equ	0xFF2
  3063                           postinc0	equ	0xFEE
  3064                           wreg	equ	0xFE8
  3065                           postdec1	equ	0xFE5
  3066                           fsr1l	equ	0xFE1
  3067                           status	equ	0xFD8
  3068                           
  3069 ;; *************** function _setupSerial *****************
  3070 ;; Defined at:
  3071 ;;		line 3 in file "my_ser.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  dummy           1    0[BANK0 ] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  2  131[None  ] int 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:        1 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    5
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text2
  3100  00420E                     __ptext2:
  3101                           	opt stack 0
  3102  00420E                     _setupSerial:
  3103                           	opt stack 25
  3104                           
  3105                           ;my_ser.c: 4: unsigned char dummy;
  3106                           ;my_ser.c: 5: BAUDCONbits.BRG16 = 0;
  3107                           
  3108                           ;incstack = 0
  3109  00420E  96B8               	bcf	4024,3,c	;volatile
  3110                           
  3111                           ;my_ser.c: 6: TXSTA = 0;
  3112  004210  0E00               	movlw	0
  3113  004212  6EAC               	movwf	4012,c	;volatile
  3114                           
  3115                           ;my_ser.c: 7: SPBRG = 25;
  3116  004214  0E19               	movlw	25
  3117  004216  6EAF               	movwf	4015,c	;volatile
  3118                           
  3119                           ;my_ser.c: 8: SPBRGH = 0;
  3120  004218  0E00               	movlw	0
  3121  00421A  6EB0               	movwf	4016,c	;volatile
  3122                           
  3123                           ;my_ser.c: 9: TXSTAbits.BRGH = 1;
  3124  00421C  84AC               	bsf	4012,2,c	;volatile
  3125                           
  3126                           ;my_ser.c: 10: TXSTAbits.TXEN = 1;
  3127  00421E  8AAC               	bsf	4012,5,c	;volatile
  3128                           
  3129                           ;my_ser.c: 12: RCSTA = 0;
  3130  004220  0E00               	movlw	0
  3131  004222  6EAB               	movwf	4011,c	;volatile
  3132                           
  3133                           ;my_ser.c: 13: RCSTAbits.CREN = 1;
  3134  004224  88AB               	bsf	4011,4,c	;volatile
  3135                           
  3136                           ;my_ser.c: 14: RCSTAbits.SPEN = 1;
  3137  004226  8EAB               	bsf	4011,7,c	;volatile
  3138                           
  3139                           ;my_ser.c: 15: dummy = RCREG;
  3140  004228  CFAE F080          	movff	4014,setupSerial@dummy	;volatile
  3141                           
  3142                           ;my_ser.c: 16: dummy = RCREG;
  3143  00422C  CFAE F080          	movff	4014,setupSerial@dummy	;volatile
  3144  004230  0012               	return	
  3145  004232                     __end_of_setupSerial:
  3146                           	opt stack 0
  3147                           tblptru	equ	0xFF8
  3148                           tblptrh	equ	0xFF7
  3149                           tblptrl	equ	0xFF6
  3150                           tablat	equ	0xFF5
  3151                           intcon	equ	0xFF2
  3152                           postinc0	equ	0xFEE
  3153                           wreg	equ	0xFE8
  3154                           postdec1	equ	0xFE5
  3155                           fsr1l	equ	0xFE1
  3156                           status	equ	0xFD8
  3157                           
  3158 ;; *************** function _setupPorts *****************
  3159 ;; Defined at:
  3160 ;;		line 199 in file "main.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    5
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text3
  3189  004254                     __ptext3:
  3190                           	opt stack 0
  3191  004254                     _setupPorts:
  3192                           	opt stack 25
  3193                           
  3194                           ;main.c: 200: ADCON0 = 0;
  3195                           
  3196                           ;incstack = 0
  3197  004254  0E00               	movlw	0
  3198  004256  6EC2               	movwf	4034,c	;volatile
  3199                           
  3200                           ;main.c: 201: ADCON1 = 0b00001100;
  3201  004258  0E0C               	movlw	12
  3202  00425A  6EC1               	movwf	4033,c	;volatile
  3203                           
  3204                           ;main.c: 202: TRISA = 0xFF;
  3205  00425C  6892               	setf	3986,c	;volatile
  3206                           
  3207                           ;main.c: 203: TRISB = 0xFF;
  3208  00425E  6893               	setf	3987,c	;volatile
  3209                           
  3210                           ;main.c: 204: TRISC = 0x80;
  3211  004260  0E80               	movlw	128
  3212  004262  6E94               	movwf	3988,c	;volatile
  3213                           
  3214                           ;main.c: 205: TRISD = 0x00;
  3215  004264  0E00               	movlw	0
  3216  004266  6E95               	movwf	3989,c	;volatile
  3217                           
  3218                           ;main.c: 206: TRISE = 0x00;
  3219  004268  0E00               	movlw	0
  3220  00426A  6E96               	movwf	3990,c	;volatile
  3221  00426C  0012               	return		;funcret
  3222  00426E                     __end_of_setupPorts:
  3223                           	opt stack 0
  3224                           tblptru	equ	0xFF8
  3225                           tblptrh	equ	0xFF7
  3226                           tblptrl	equ	0xFF6
  3227                           tablat	equ	0xFF5
  3228                           intcon	equ	0xFF2
  3229                           postinc0	equ	0xFEE
  3230                           wreg	equ	0xFE8
  3231                           postdec1	equ	0xFE5
  3232                           fsr1l	equ	0xFE1
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _setupInterupt *****************
  3236 ;; Defined at:
  3237 ;;		line 208 in file "main.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;Total ram usage:        0 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    5
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text4
  3266  0041C2                     __ptext4:
  3267                           	opt stack 0
  3268  0041C2                     _setupInterupt:
  3269                           	opt stack 25
  3270                           
  3271                           ;main.c: 209: RCONbits.IPEN = 0;
  3272                           
  3273                           ;incstack = 0
  3274  0041C2  9ED0               	bcf	4048,7,c	;volatile
  3275                           
  3276                           ;main.c: 210: INTCON = 0;
  3277  0041C4  0E00               	movlw	0
  3278  0041C6  6EF2               	movwf	intcon,c	;volatile
  3279                           
  3280                           ;main.c: 211: INTCON2 = 0;
  3281  0041C8  0E00               	movlw	0
  3282  0041CA  6EF1               	movwf	intcon2,c	;volatile
  3283                           
  3284                           ;main.c: 212: INTCON3 = 0;
  3285  0041CC  0E00               	movlw	0
  3286  0041CE  6EF0               	movwf	intcon3,c	;volatile
  3287                           
  3288                           ;main.c: 213: INTCONbits.INT0IE=1;
  3289  0041D0  88F2               	bsf	intcon,4,c	;volatile
  3290                           
  3291                           ;main.c: 214: INTCON2bits.INTEDG0=1;
  3292  0041D2  8CF1               	bsf	intcon2,6,c	;volatile
  3293                           
  3294                           ;main.c: 215: INTCON3bits.INT1E=1;
  3295  0041D4  86F0               	bsf	intcon3,3,c	;volatile
  3296                           
  3297                           ;main.c: 216: INTCON2bits.INTEDG1=1;
  3298  0041D6  8AF1               	bsf	intcon2,5,c	;volatile
  3299                           
  3300                           ;main.c: 217: INTCON3bits.INT2E=1;
  3301  0041D8  88F0               	bsf	intcon3,4,c	;volatile
  3302                           
  3303                           ;main.c: 218: INTCON2bits.INTEDG2=1;
  3304  0041DA  88F1               	bsf	intcon2,4,c	;volatile
  3305                           
  3306                           ;main.c: 219: INTCONbits.GIEH = 1;
  3307  0041DC  8EF2               	bsf	intcon,7,c	;volatile
  3308                           
  3309                           ;main.c: 220: INTCONbits.GIEL = 1;
  3310  0041DE  8CF2               	bsf	intcon,6,c	;volatile
  3311                           
  3312                           ;main.c: 221: INTCONbits.INT0IF=0;
  3313  0041E0  92F2               	bcf	intcon,1,c	;volatile
  3314                           
  3315                           ;main.c: 222: INTCON3bits.INT1F = 0;
  3316  0041E2  90F0               	bcf	intcon3,0,c	;volatile
  3317                           
  3318                           ;main.c: 223: INTCON3bits.INT2F = 0;
  3319  0041E4  92F0               	bcf	intcon3,1,c	;volatile
  3320  0041E6  0012               	return		;funcret
  3321  0041E8                     __end_of_setupInterupt:
  3322                           	opt stack 0
  3323                           tblptru	equ	0xFF8
  3324                           tblptrh	equ	0xFF7
  3325                           tblptrl	equ	0xFF6
  3326                           tablat	equ	0xFF5
  3327                           intcon	equ	0xFF2
  3328                           intcon2	equ	0xFF1
  3329                           intcon3	equ	0xFF0
  3330                           postinc0	equ	0xFEE
  3331                           wreg	equ	0xFE8
  3332                           postdec1	equ	0xFE5
  3333                           fsr1l	equ	0xFE1
  3334                           status	equ	0xFD8
  3335                           
  3336 ;; *************** function _set_pwm1_percent *****************
  3337 ;; Defined at:
  3338 ;;		line 24 in file "my_pwm.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  value           3   72[BANK0 ] float 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  tmp             3   75[BANK0 ] float 
  3343 ;;  raw_val         2   78[BANK0 ] int 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3353 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;Total ram usage:        8 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    7
  3360 ;; This function calls:
  3361 ;;		___ftadd
  3362 ;;		___ftdiv
  3363 ;;		___ftmul
  3364 ;;		___fttol
  3365 ;;		_set_pwm1_raw
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text5
  3372  003582                     __ptext5:
  3373                           	opt stack 0
  3374  003582                     _set_pwm1_percent:
  3375                           	opt stack 23
  3376                           
  3377                           ;my_pwm.c: 26: float tmp = value*1023.0/100.0;
  3378                           
  3379                           ;incstack = 0
  3380  003582  0EC0               	movlw	192
  3381  003584  0100               	movlb	0	; () banked
  3382  003586  6F97               	movwf	___ftmul@f2& (0+255),b
  3383  003588  0E7F               	movlw	127
  3384  00358A  0100               	movlb	0	; () banked
  3385  00358C  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  3386  00358E  0E44               	movlw	68
  3387  003590  0100               	movlb	0	; () banked
  3388  003592  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  3389  003594  C0C8  F094         	movff	set_pwm1_percent@value,___ftmul@f1
  3390  003598  C0C9  F095         	movff	set_pwm1_percent@value+1,___ftmul@f1+1
  3391  00359C  C0CA  F096         	movff	set_pwm1_percent@value+2,___ftmul@f1+2
  3392  0035A0  ECBC  F015         	call	___ftmul	;wreg free
  3393  0035A4  C094  F0A3         	movff	?___ftmul,___ftdiv@f1
  3394  0035A8  C095  F0A4         	movff	?___ftmul+1,___ftdiv@f1+1
  3395  0035AC  C096  F0A5         	movff	?___ftmul+2,___ftdiv@f1+2
  3396  0035B0  0E00               	movlw	0
  3397  0035B2  0100               	movlb	0	; () banked
  3398  0035B4  6FA6               	movwf	___ftdiv@f2& (0+255),b
  3399  0035B6  0EC8               	movlw	200
  3400  0035B8  0100               	movlb	0	; () banked
  3401  0035BA  6FA7               	movwf	(___ftdiv@f2+1)& (0+255),b
  3402  0035BC  0E42               	movlw	66
  3403  0035BE  0100               	movlb	0	; () banked
  3404  0035C0  6FA8               	movwf	(___ftdiv@f2+2)& (0+255),b
  3405  0035C2  EC6B  F016         	call	___ftdiv	;wreg free
  3406  0035C6  C0A3  F0CB         	movff	?___ftdiv,set_pwm1_percent@tmp
  3407  0035CA  C0A4  F0CC         	movff	?___ftdiv+1,set_pwm1_percent@tmp+1
  3408  0035CE  C0A5  F0CD         	movff	?___ftdiv+2,set_pwm1_percent@tmp+2
  3409                           
  3410                           ;my_pwm.c: 27: int raw_val = (int)(tmp +0.5);
  3411  0035D2  0E00               	movlw	0
  3412  0035D4  0100               	movlb	0	; () banked
  3413  0035D6  6FB0               	movwf	___ftadd@f2& (0+255),b
  3414  0035D8  0E00               	movlw	0
  3415  0035DA  0100               	movlb	0	; () banked
  3416  0035DC  6FB1               	movwf	(___ftadd@f2+1)& (0+255),b
  3417  0035DE  0E3F               	movlw	63
  3418  0035E0  0100               	movlb	0	; () banked
  3419  0035E2  6FB2               	movwf	(___ftadd@f2+2)& (0+255),b
  3420  0035E4  C0CB  F0AD         	movff	set_pwm1_percent@tmp,___ftadd@f1
  3421  0035E8  C0CC  F0AE         	movff	set_pwm1_percent@tmp+1,___ftadd@f1+1
  3422  0035EC  C0CD  F0AF         	movff	set_pwm1_percent@tmp+2,___ftadd@f1+2
  3423  0035F0  EC6C  F011         	call	___ftadd	;wreg free
  3424  0035F4  C0AD  F0B9         	movff	?___ftadd,___fttol@f1
  3425  0035F8  C0AE  F0BA         	movff	?___ftadd+1,___fttol@f1+1
  3426  0035FC  C0AF  F0BB         	movff	?___ftadd+2,___fttol@f1+2
  3427  003600  EC11  F017         	call	___fttol	;wreg free
  3428  003604  C0B9  F0CE         	movff	?___fttol,set_pwm1_percent@raw_val
  3429  003608  C0BA  F0CF         	movff	?___fttol+1,set_pwm1_percent@raw_val+1
  3430                           
  3431                           ;my_pwm.c: 28: if ( raw_val> 1023) raw_val = 1023;
  3432  00360C  0100               	movlb	0	; () banked
  3433  00360E  BFCF               	btfsc	(set_pwm1_percent@raw_val+1)& (0+255),7,b
  3434  003610  D009               	goto	l6129
  3435  003612  0E04               	movlw	4
  3436  003614  0100               	movlb	0	; () banked
  3437  003616  5DCF               	subwf	(set_pwm1_percent@raw_val+1)& (0+255),w,b
  3438  003618  A0D8               	btfss	status,0,c
  3439  00361A  D004               	goto	l6129
  3440                           
  3441                           ; BSR set to: 0
  3442  00361C  0E03               	movlw	3
  3443  00361E  0100               	movlb	0	; () banked
  3444  003620  6FCF               	movwf	(set_pwm1_percent@raw_val+1)& (0+255),b
  3445  003622  69CE               	setf	set_pwm1_percent@raw_val& (0+255),b
  3446  003624                     l6129:
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;my_pwm.c: 29: set_pwm1_raw(raw_val);
  3450  003624  C0CE  F080         	movff	set_pwm1_percent@raw_val,set_pwm1_raw@raw_value
  3451  003628  C0CF  F081         	movff	set_pwm1_percent@raw_val+1,set_pwm1_raw@raw_value+1
  3452  00362C  EC0A  F020         	call	_set_pwm1_raw	;wreg free
  3453  003630  0012               	return		;funcret
  3454  003632                     __end_of_set_pwm1_percent:
  3455                           	opt stack 0
  3456                           tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           intcon	equ	0xFF2
  3461                           intcon2	equ	0xFF1
  3462                           intcon3	equ	0xFF0
  3463                           postinc0	equ	0xFEE
  3464                           wreg	equ	0xFE8
  3465                           postdec1	equ	0xFE5
  3466                           fsr1l	equ	0xFE1
  3467                           status	equ	0xFD8
  3468                           
  3469 ;; *************** function _set_pwm1_raw *****************
  3470 ;; Defined at:
  3471 ;;		line 16 in file "my_pwm.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  raw_value       2    0[BANK0 ] unsigned int 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;Total ram usage:        4 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    5
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_set_pwm1_percent
  3496 ;;		_set_pwm1_voltage
  3497 ;;		_set_pwm1_general
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text6
  3502  004014                     __ptext6:
  3503                           	opt stack 0
  3504  004014                     _set_pwm1_raw:
  3505                           	opt stack 24
  3506                           
  3507                           ;my_pwm.c: 18: CCPR1L = (raw_value >> 2) & 0x00FF;
  3508                           
  3509                           ;incstack = 0
  3510  004014  C080  F082         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
  3511  004018  C081  F083         	movff	set_pwm1_raw@raw_value+1,??_set_pwm1_raw+1
  3512  00401C  0100               	movlb	0	; () banked
  3513  00401E  90D8               	bcf	status,0,c
  3514  004020  3383               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  3515  004022  3382               	rrcf	??_set_pwm1_raw& (0+255),f,b
  3516  004024  0100               	movlb	0	; () banked
  3517  004026  90D8               	bcf	status,0,c
  3518  004028  3383               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  3519  00402A  3382               	rrcf	??_set_pwm1_raw& (0+255),f,b
  3520  00402C  0100               	movlb	0	; () banked
  3521  00402E  5182               	movf	??_set_pwm1_raw& (0+255),w,b
  3522  004030  6EBE               	movwf	4030,c	;volatile
  3523                           
  3524                           ;my_pwm.c: 19: CCP1CONbits.DC1B = raw_value & 0x0003;
  3525  004032  C080  F082         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
  3526  004036  0E03               	movlw	3
  3527  004038  0100               	movlb	0	; () banked
  3528  00403A  1782               	andwf	??_set_pwm1_raw& (0+255),f,b
  3529  00403C  0100               	movlb	0	; () banked
  3530  00403E  3B82               	swapf	??_set_pwm1_raw& (0+255),f,b
  3531  004040  50BD               	movf	4029,w,c	;volatile
  3532  004042  0100               	movlb	0	; () banked
  3533  004044  1982               	xorwf	??_set_pwm1_raw& (0+255),w,b
  3534  004046  0BCF               	andlw	-49
  3535  004048  1982               	xorwf	??_set_pwm1_raw& (0+255),w,b
  3536  00404A  6EBD               	movwf	4029,c	;volatile
  3537                           
  3538                           ; BSR set to: 0
  3539  00404C  0012               	return		;funcret
  3540  00404E                     __end_of_set_pwm1_raw:
  3541                           	opt stack 0
  3542                           tblptru	equ	0xFF8
  3543                           tblptrh	equ	0xFF7
  3544                           tblptrl	equ	0xFF6
  3545                           tablat	equ	0xFF5
  3546                           intcon	equ	0xFF2
  3547                           intcon2	equ	0xFF1
  3548                           intcon3	equ	0xFF0
  3549                           postinc0	equ	0xFEE
  3550                           wreg	equ	0xFE8
  3551                           postdec1	equ	0xFE5
  3552                           fsr1l	equ	0xFE1
  3553                           status	equ	0xFD8
  3554                           
  3555 ;; *************** function _read_adc_voltage *****************
  3556 ;; Defined at:
  3557 ;;		line 48 in file "my_adc.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  channel         1    wreg     unsigned char 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  channel         1   56[BANK0 ] unsigned char 
  3562 ;;  voltage         3   53[BANK0 ] float 
  3563 ;;  raw_value       2   57[BANK0 ] int 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  3   50[BANK0 ] float 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:        9 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    7
  3580 ;; This function calls:
  3581 ;;		___awtoft
  3582 ;;		___ftdiv
  3583 ;;		___wmul
  3584 ;;		_read_adc_raw_no_lib
  3585 ;; This function is called by:
  3586 ;;		_main
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text7
  3591  003BD0                     __ptext7:
  3592                           	opt stack 0
  3593  003BD0                     _read_adc_voltage:
  3594                           	opt stack 23
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;incstack = 0
  3598                           ;read_adc_voltage@channel stored from wreg
  3599  003BD0  0100               	movlb	0	; () banked
  3600  003BD2  6FB8               	movwf	read_adc_voltage@channel& (0+255),b
  3601                           
  3602                           ;my_adc.c: 49: int raw_value;
  3603                           ;my_adc.c: 50: float voltage;
  3604                           ;my_adc.c: 51: raw_value = read_adc_raw_no_lib(channel);
  3605  003BD4  0100               	movlb	0	; () banked
  3606  003BD6  51B8               	movf	read_adc_voltage@channel& (0+255),w,b
  3607  003BD8  EC32  F01F         	call	_read_adc_raw_no_lib
  3608  003BDC  C080  F0B9         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  3609  003BE0  C081  F0BA         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  3610                           
  3611                           ;my_adc.c: 52: voltage = (raw_value * 5) / 1023.0;
  3612  003BE4  C0B9  F08E         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  3613  003BE8  C0BA  F08F         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  3614  003BEC  0E00               	movlw	0
  3615  003BEE  0100               	movlb	0	; () banked
  3616  003BF0  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3617  003BF2  0E05               	movlw	5
  3618  003BF4  6F90               	movwf	___wmul@multiplicand& (0+255),b
  3619  003BF6  EC27  F020         	call	___wmul	;wreg free
  3620  003BFA  C08E  F094         	movff	?___wmul,___awtoft@c
  3621  003BFE  C08F  F095         	movff	?___wmul+1,___awtoft@c+1
  3622  003C02  ECC6  F01F         	call	___awtoft	;wreg free
  3623  003C06  C094  F0A3         	movff	?___awtoft,___ftdiv@f1
  3624  003C0A  C095  F0A4         	movff	?___awtoft+1,___ftdiv@f1+1
  3625  003C0E  C096  F0A5         	movff	?___awtoft+2,___ftdiv@f1+2
  3626  003C12  0EC0               	movlw	192
  3627  003C14  0100               	movlb	0	; () banked
  3628  003C16  6FA6               	movwf	___ftdiv@f2& (0+255),b
  3629  003C18  0E7F               	movlw	127
  3630  003C1A  0100               	movlb	0	; () banked
  3631  003C1C  6FA7               	movwf	(___ftdiv@f2+1)& (0+255),b
  3632  003C1E  0E44               	movlw	68
  3633  003C20  0100               	movlb	0	; () banked
  3634  003C22  6FA8               	movwf	(___ftdiv@f2+2)& (0+255),b
  3635  003C24  EC6B  F016         	call	___ftdiv	;wreg free
  3636  003C28  C0A3  F0B5         	movff	?___ftdiv,read_adc_voltage@voltage
  3637  003C2C  C0A4  F0B6         	movff	?___ftdiv+1,read_adc_voltage@voltage+1
  3638  003C30  C0A5  F0B7         	movff	?___ftdiv+2,read_adc_voltage@voltage+2
  3639                           
  3640                           ;my_adc.c: 53: return voltage;
  3641  003C34  C0B5  F0B2         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  3642  003C38  C0B6  F0B3         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  3643  003C3C  C0B7  F0B4         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  3644  003C40  0012               	return	
  3645  003C42                     __end_of_read_adc_voltage:
  3646                           	opt stack 0
  3647                           tblptru	equ	0xFF8
  3648                           tblptrh	equ	0xFF7
  3649                           tblptrl	equ	0xFF6
  3650                           tablat	equ	0xFF5
  3651                           intcon	equ	0xFF2
  3652                           intcon2	equ	0xFF1
  3653                           intcon3	equ	0xFF0
  3654                           postinc0	equ	0xFEE
  3655                           wreg	equ	0xFE8
  3656                           postdec1	equ	0xFE5
  3657                           fsr1l	equ	0xFE1
  3658                           status	equ	0xFD8
  3659                           
  3660 ;; *************** function _read_adc_raw_no_lib *****************
  3661 ;; Defined at:
  3662 ;;		line 32 in file "my_adc.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  channel         1    wreg     unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  channel         1    4[BANK0 ] unsigned char 
  3667 ;;  raw_value       2    5[BANK0 ] int 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  2    0[BANK0 ] int 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;Total ram usage:        7 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    5
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_read_adc_voltage
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text8
  3692  003E64                     __ptext8:
  3693                           	opt stack 0
  3694  003E64                     _read_adc_raw_no_lib:
  3695                           	opt stack 24
  3696                           
  3697                           ;incstack = 0
  3698                           ;read_adc_raw_no_lib@channel stored from wreg
  3699  003E64  0100               	movlb	0	; () banked
  3700  003E66  6F84               	movwf	read_adc_raw_no_lib@channel& (0+255),b
  3701                           
  3702                           ;my_adc.c: 33: int raw_value;
  3703                           ;my_adc.c: 34: ADCON0bits.CHS = channel;
  3704  003E68  C084  F082         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  3705  003E6C  0100               	movlb	0	; () banked
  3706  003E6E  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  3707  003E70  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  3708  003E72  50C2               	movf	4034,w,c	;volatile
  3709  003E74  0100               	movlb	0	; () banked
  3710  003E76  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  3711  003E78  0BC3               	andlw	-61
  3712  003E7A  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  3713  003E7C  6EC2               	movwf	4034,c	;volatile
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;my_adc.c: 37: ADCON0bits.GO = 1;
  3717  003E7E  82C2               	bsf	4034,1,c	;volatile
  3718  003E80                     l81:
  3719  003E80  B2C2               	btfsc	4034,1,c	;volatile
  3720  003E82  D7FE               	goto	l81
  3721                           
  3722                           ;my_adc.c: 41: raw_value = ADRESH << 8 | ADRESL;
  3723  003E84  50C3               	movf	4035,w,c	;volatile
  3724  003E86  CFC4 F082          	movff	4036,??_read_adc_raw_no_lib	;volatile
  3725  003E8A  0100               	movlb	0	; () banked
  3726  003E8C  6B83               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),b
  3727  003E8E  C082  F083         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  3728  003E92  0100               	movlb	0	; () banked
  3729  003E94  6B82               	clrf	??_read_adc_raw_no_lib& (0+255),b
  3730  003E96  0100               	movlb	0	; () banked
  3731  003E98  1182               	iorwf	??_read_adc_raw_no_lib& (0+255),w,b
  3732  003E9A  0100               	movlb	0	; () banked
  3733  003E9C  6F85               	movwf	read_adc_raw_no_lib@raw_value& (0+255),b
  3734  003E9E  0100               	movlb	0	; () banked
  3735  003EA0  5183               	movf	(??_read_adc_raw_no_lib+1)& (0+255),w,b
  3736  003EA2  0100               	movlb	0	; () banked
  3737  003EA4  6F86               	movwf	(read_adc_raw_no_lib@raw_value+1)& (0+255),b
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;my_adc.c: 45: return raw_value;
  3741  003EA6  C085  F080         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  3742  003EAA  C086  F081         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  3743  003EAE  0012               	return	
  3744  003EB0                     __end_of_read_adc_raw_no_lib:
  3745                           	opt stack 0
  3746                           tblptru	equ	0xFF8
  3747                           tblptrh	equ	0xFF7
  3748                           tblptrl	equ	0xFF6
  3749                           tablat	equ	0xFF5
  3750                           intcon	equ	0xFF2
  3751                           intcon2	equ	0xFF1
  3752                           intcon3	equ	0xFF0
  3753                           postinc0	equ	0xFEE
  3754                           wreg	equ	0xFE8
  3755                           postdec1	equ	0xFE5
  3756                           fsr1l	equ	0xFE1
  3757                           status	equ	0xFD8
  3758                           
  3759 ;; *************** function ___ftdiv *****************
  3760 ;; Defined at:
  3761 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  f1              3   35[BANK0 ] float 
  3764 ;;  f2              3   38[BANK0 ] float 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  f3              3   45[BANK0 ] float 
  3767 ;;  sign            1   49[BANK0 ] unsigned char 
  3768 ;;  exp             1   48[BANK0 ] unsigned char 
  3769 ;;  cntr            1   44[BANK0 ] unsigned char 
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  3   35[BANK0 ] float 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3779 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;Total ram usage:       15 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    6
  3786 ;; This function calls:
  3787 ;;		___ftpack
  3788 ;; This function is called by:
  3789 ;;		_read_adc_voltage
  3790 ;;		_set_pwm1_percent
  3791 ;;		_main
  3792 ;;		_set_pwm1_voltage
  3793 ;;		_set_pwm1_general
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text9
  3798  002CD6                     __ptext9:
  3799                           	opt stack 0
  3800  002CD6                     ___ftdiv:
  3801                           	opt stack 23
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;incstack = 0
  3805  002CD6  C0A5  F0A9         	movff	___ftdiv@f1+2,??___ftdiv
  3806  002CDA  0100               	movlb	0	; () banked
  3807  002CDC  6BAA               	clrf	(??___ftdiv+1)& (0+255),b
  3808  002CDE  6BAB               	clrf	(??___ftdiv+2)& (0+255),b
  3809  002CE0  0100               	movlb	0	; () banked
  3810  002CE2  35A4               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3811  002CE4  0100               	movlb	0	; () banked
  3812  002CE6  37A9               	rlcf	??___ftdiv& (0+255),f,b
  3813  002CE8  E301               	bnc	u7251
  3814  002CEA  81AA               	bsf	(??___ftdiv+1)& (0+255),0,b
  3815  002CEC                     u7251:
  3816  002CEC  0100               	movlb	0	; () banked
  3817  002CEE  51A9               	movf	??___ftdiv& (0+255),w,b
  3818  002CF0  0100               	movlb	0	; () banked
  3819  002CF2  6FB0               	movwf	___ftdiv@exp& (0+255),b
  3820  002CF4  0100               	movlb	0	; () banked
  3821  002CF6  51B0               	movf	___ftdiv@exp& (0+255),w,b
  3822  002CF8  A4D8               	btfss	status,2,c
  3823  002CFA  D00A               	goto	l6021
  3824                           
  3825                           ; BSR set to: 0
  3826  002CFC  0E00               	movlw	0
  3827  002CFE  0100               	movlb	0	; () banked
  3828  002D00  6FA3               	movwf	?___ftdiv& (0+255),b
  3829  002D02  0E00               	movlw	0
  3830  002D04  0100               	movlb	0	; () banked
  3831  002D06  6FA4               	movwf	(?___ftdiv+1)& (0+255),b
  3832  002D08  0E00               	movlw	0
  3833  002D0A  0100               	movlb	0	; () banked
  3834  002D0C  6FA5               	movwf	(?___ftdiv+2)& (0+255),b
  3835                           
  3836                           ; BSR set to: 0
  3837  002D0E  0012               	return	
  3838  002D10                     l6021:
  3839                           
  3840                           ; BSR set to: 0
  3841  002D10  C0A8  F0A9         	movff	___ftdiv@f2+2,??___ftdiv
  3842  002D14  0100               	movlb	0	; () banked
  3843  002D16  6BAA               	clrf	(??___ftdiv+1)& (0+255),b
  3844  002D18  6BAB               	clrf	(??___ftdiv+2)& (0+255),b
  3845  002D1A  0100               	movlb	0	; () banked
  3846  002D1C  35A7               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3847  002D1E  0100               	movlb	0	; () banked
  3848  002D20  37A9               	rlcf	??___ftdiv& (0+255),f,b
  3849  002D22  E301               	bnc	u7271
  3850  002D24  81AA               	bsf	(??___ftdiv+1)& (0+255),0,b
  3851  002D26                     u7271:
  3852  002D26  0100               	movlb	0	; () banked
  3853  002D28  51A9               	movf	??___ftdiv& (0+255),w,b
  3854  002D2A  0100               	movlb	0	; () banked
  3855  002D2C  6FB1               	movwf	___ftdiv@sign& (0+255),b
  3856  002D2E  0100               	movlb	0	; () banked
  3857  002D30  51B1               	movf	___ftdiv@sign& (0+255),w,b
  3858  002D32  A4D8               	btfss	status,2,c
  3859  002D34  D00A               	goto	l6027
  3860                           
  3861                           ; BSR set to: 0
  3862  002D36  0E00               	movlw	0
  3863  002D38  0100               	movlb	0	; () banked
  3864  002D3A  6FA3               	movwf	?___ftdiv& (0+255),b
  3865  002D3C  0E00               	movlw	0
  3866  002D3E  0100               	movlb	0	; () banked
  3867  002D40  6FA4               	movwf	(?___ftdiv+1)& (0+255),b
  3868  002D42  0E00               	movlw	0
  3869  002D44  0100               	movlb	0	; () banked
  3870  002D46  6FA5               	movwf	(?___ftdiv+2)& (0+255),b
  3871                           
  3872                           ; BSR set to: 0
  3873  002D48  0012               	return	
  3874  002D4A                     l6027:
  3875                           
  3876                           ; BSR set to: 0
  3877  002D4A  0E00               	movlw	0
  3878  002D4C  0100               	movlb	0	; () banked
  3879  002D4E  6FAD               	movwf	___ftdiv@f3& (0+255),b
  3880  002D50  0E00               	movlw	0
  3881  002D52  0100               	movlb	0	; () banked
  3882  002D54  6FAE               	movwf	(___ftdiv@f3+1)& (0+255),b
  3883  002D56  0E00               	movlw	0
  3884  002D58  0100               	movlb	0	; () banked
  3885  002D5A  6FAF               	movwf	(___ftdiv@f3+2)& (0+255),b
  3886                           
  3887                           ; BSR set to: 0
  3888  002D5C  0100               	movlb	0	; () banked
  3889  002D5E  51B1               	movf	___ftdiv@sign& (0+255),w,b
  3890  002D60  0F89               	addlw	137
  3891  002D62  0100               	movlb	0	; () banked
  3892  002D64  5FB0               	subwf	___ftdiv@exp& (0+255),f,b
  3893                           
  3894                           ; BSR set to: 0
  3895  002D66  C0A5  F0B1         	movff	___ftdiv@f1+2,___ftdiv@sign
  3896                           
  3897                           ; BSR set to: 0
  3898  002D6A  0100               	movlb	0	; () banked
  3899  002D6C  51A8               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3900  002D6E  0100               	movlb	0	; () banked
  3901  002D70  1BB1               	xorwf	___ftdiv@sign& (0+255),f,b
  3902                           
  3903                           ; BSR set to: 0
  3904  002D72  0E80               	movlw	128
  3905  002D74  0100               	movlb	0	; () banked
  3906  002D76  17B1               	andwf	___ftdiv@sign& (0+255),f,b
  3907                           
  3908                           ; BSR set to: 0
  3909  002D78  0100               	movlb	0	; () banked
  3910  002D7A  8FA4               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3911                           
  3912                           ; BSR set to: 0
  3913  002D7C  0EFF               	movlw	255
  3914  002D7E  0100               	movlb	0	; () banked
  3915  002D80  17A3               	andwf	___ftdiv@f1& (0+255),f,b
  3916  002D82  0EFF               	movlw	255
  3917  002D84  0100               	movlb	0	; () banked
  3918  002D86  17A4               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3919  002D88  0E00               	movlw	0
  3920  002D8A  0100               	movlb	0	; () banked
  3921  002D8C  17A5               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3922                           
  3923                           ; BSR set to: 0
  3924  002D8E  0100               	movlb	0	; () banked
  3925  002D90  8FA7               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3926                           
  3927                           ; BSR set to: 0
  3928  002D92  0EFF               	movlw	255
  3929  002D94  0100               	movlb	0	; () banked
  3930  002D96  17A6               	andwf	___ftdiv@f2& (0+255),f,b
  3931  002D98  0EFF               	movlw	255
  3932  002D9A  0100               	movlb	0	; () banked
  3933  002D9C  17A7               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3934  002D9E  0E00               	movlw	0
  3935  002DA0  0100               	movlb	0	; () banked
  3936  002DA2  17A8               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3937                           
  3938                           ; BSR set to: 0
  3939  002DA4  0E18               	movlw	24
  3940  002DA6  0100               	movlb	0	; () banked
  3941  002DA8  6FAC               	movwf	___ftdiv@cntr& (0+255),b
  3942  002DAA                     l6047:
  3943                           
  3944                           ; BSR set to: 0
  3945  002DAA  0100               	movlb	0	; () banked
  3946  002DAC  90D8               	bcf	status,0,c
  3947  002DAE  37AD               	rlcf	___ftdiv@f3& (0+255),f,b
  3948  002DB0  37AE               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3949  002DB2  37AF               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3950                           
  3951                           ; BSR set to: 0
  3952  002DB4  0100               	movlb	0	; () banked
  3953  002DB6  51A6               	movf	___ftdiv@f2& (0+255),w,b
  3954  002DB8  0100               	movlb	0	; () banked
  3955  002DBA  5DA3               	subwf	___ftdiv@f1& (0+255),w,b
  3956  002DBC  0100               	movlb	0	; () banked
  3957  002DBE  51A7               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3958  002DC0  0100               	movlb	0	; () banked
  3959  002DC2  59A4               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3960  002DC4  0100               	movlb	0	; () banked
  3961  002DC6  51A8               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3962  002DC8  0100               	movlb	0	; () banked
  3963  002DCA  59A5               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3964  002DCC  A0D8               	btfss	status,0,c
  3965  002DCE  D00E               	goto	l894
  3966                           
  3967                           ; BSR set to: 0
  3968  002DD0  0100               	movlb	0	; () banked
  3969  002DD2  51A6               	movf	___ftdiv@f2& (0+255),w,b
  3970  002DD4  0100               	movlb	0	; () banked
  3971  002DD6  5FA3               	subwf	___ftdiv@f1& (0+255),f,b
  3972  002DD8  0100               	movlb	0	; () banked
  3973  002DDA  51A7               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3974  002DDC  0100               	movlb	0	; () banked
  3975  002DDE  5BA4               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3976  002DE0  0100               	movlb	0	; () banked
  3977  002DE2  51A8               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3978  002DE4  0100               	movlb	0	; () banked
  3979  002DE6  5BA5               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3980                           
  3981                           ; BSR set to: 0
  3982  002DE8  0100               	movlb	0	; () banked
  3983  002DEA  81AD               	bsf	___ftdiv@f3& (0+255),0,b
  3984  002DEC                     l894:
  3985                           
  3986                           ; BSR set to: 0
  3987  002DEC  0100               	movlb	0	; () banked
  3988  002DEE  90D8               	bcf	status,0,c
  3989  002DF0  37A3               	rlcf	___ftdiv@f1& (0+255),f,b
  3990  002DF2  37A4               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3991  002DF4  37A5               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3992                           
  3993                           ; BSR set to: 0
  3994  002DF6  0100               	movlb	0	; () banked
  3995  002DF8  2FAC               	decfsz	___ftdiv@cntr& (0+255),f,b
  3996  002DFA  D7D7               	goto	l6047
  3997                           
  3998                           ; BSR set to: 0
  3999                           
  4000                           ; BSR set to: 0
  4001  002DFC  C0AD  F080         	movff	___ftdiv@f3,___ftpack@arg
  4002  002E00  C0AE  F081         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4003  002E04  C0AF  F082         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4004  002E08  C0B0  F083         	movff	___ftdiv@exp,___ftpack@exp
  4005  002E0C  C0B1  F084         	movff	___ftdiv@sign,___ftpack@sign
  4006  002E10  ECB3  F017         	call	___ftpack	;wreg free
  4007  002E14  C080  F0A3         	movff	?___ftpack,?___ftdiv
  4008  002E18  C081  F0A4         	movff	?___ftpack+1,?___ftdiv+1
  4009  002E1C  C082  F0A5         	movff	?___ftpack+2,?___ftdiv+2
  4010  002E20  0012               	return	
  4011  002E22                     __end_of___ftdiv:
  4012                           	opt stack 0
  4013                           tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           intcon	equ	0xFF2
  4018                           intcon2	equ	0xFF1
  4019                           intcon3	equ	0xFF0
  4020                           postinc0	equ	0xFEE
  4021                           wreg	equ	0xFE8
  4022                           postdec1	equ	0xFE5
  4023                           fsr1l	equ	0xFE1
  4024                           status	equ	0xFD8
  4025                           
  4026 ;; *************** function ___awtoft *****************
  4027 ;; Defined at:
  4028 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  c               2   20[BANK0 ] int 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  sign            1   23[BANK0 ] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  3   20[BANK0 ] float 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;Total ram usage:        4 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    6
  4049 ;; This function calls:
  4050 ;;		___ftpack
  4051 ;; This function is called by:
  4052 ;;		_read_adc_voltage
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text10
  4058  003F8C                     __ptext10:
  4059                           	opt stack 0
  4060  003F8C                     ___awtoft:
  4061                           	opt stack 23
  4062                           
  4063                           ;incstack = 0
  4064  003F8C  0E00               	movlw	0
  4065  003F8E  0100               	movlb	0	; () banked
  4066  003F90  6F97               	movwf	___awtoft@sign& (0+255),b
  4067                           
  4068                           ; BSR set to: 0
  4069  003F92  0100               	movlb	0	; () banked
  4070  003F94  AF95               	btfss	(___awtoft@c+1)& (0+255),7,b
  4071  003F96  D008               	goto	l6069
  4072                           
  4073                           ; BSR set to: 0
  4074  003F98  0100               	movlb	0	; () banked
  4075  003F9A  6D94               	negf	___awtoft@c& (0+255),b
  4076  003F9C  1F95               	comf	(___awtoft@c+1)& (0+255),f,b
  4077  003F9E  B0D8               	btfsc	status,0,c
  4078  003FA0  2B95               	incf	(___awtoft@c+1)& (0+255),f,b
  4079                           
  4080                           ; BSR set to: 0
  4081  003FA2  0E01               	movlw	1
  4082  003FA4  0100               	movlb	0	; () banked
  4083  003FA6  6F97               	movwf	___awtoft@sign& (0+255),b
  4084  003FA8                     l6069:
  4085                           
  4086                           ; BSR set to: 0
  4087  003FA8  C094  F080         	movff	___awtoft@c,___ftpack@arg
  4088  003FAC  C095  F081         	movff	___awtoft@c+1,___ftpack@arg+1
  4089  003FB0  0100               	movlb	0	; () banked
  4090  003FB2  6B82               	clrf	(___ftpack@arg+2)& (0+255),b
  4091  003FB4  0E8E               	movlw	142
  4092  003FB6  0100               	movlb	0	; () banked
  4093  003FB8  6F83               	movwf	___ftpack@exp& (0+255),b
  4094  003FBA  C097  F084         	movff	___awtoft@sign,___ftpack@sign
  4095  003FBE  ECB3  F017         	call	___ftpack	;wreg free
  4096  003FC2  C080  F094         	movff	?___ftpack,?___awtoft
  4097  003FC6  C081  F095         	movff	?___ftpack+1,?___awtoft+1
  4098  003FCA  C082  F096         	movff	?___ftpack+2,?___awtoft+2
  4099  003FCE  0012               	return	
  4100  003FD0                     __end_of___awtoft:
  4101                           	opt stack 0
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           intcon	equ	0xFF2
  4107                           intcon2	equ	0xFF1
  4108                           intcon3	equ	0xFF0
  4109                           postinc0	equ	0xFEE
  4110                           wreg	equ	0xFE8
  4111                           postdec1	equ	0xFE5
  4112                           fsr1l	equ	0xFE1
  4113                           status	equ	0xFD8
  4114                           
  4115 ;; *************** function _print_data *****************
  4116 ;; Defined at:
  4117 ;;		line 333 in file "main.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  Buffer         64    0[BANK1 ] unsigned char [64]
  4122 ;;  MODE            8   64[BANK1 ] unsigned char [8]
  4123 ;;  CoolerState     6   78[BANK1 ] unsigned char [6]
  4124 ;;  HeaterState     6   72[BANK1 ] unsigned char [6]
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Locals:         0       0      84       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Totals:         0       0      84       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;Total ram usage:       84 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:   11
  4141 ;; This function calls:
  4142 ;;		_lcd_gotoxy
  4143 ;;		_lcd_puts
  4144 ;;		_send_string_no_lib
  4145 ;;		_sprintf
  4146 ;;		_strcpy
  4147 ;; This function is called by:
  4148 ;;		_main
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text11
  4153  001BA0                     __ptext11:
  4154                           	opt stack 0
  4155  001BA0                     _print_data:
  4156                           	opt stack 19
  4157                           
  4158                           ;main.c: 334: sprintf(Buffer1, "RT:%5.1fC    H C",RT);
  4159                           
  4160                           ;incstack = 0
  4161  001BA0  0E1C               	movlw	low _Buffer1
  4162  001BA2  0100               	movlb	0	; () banked
  4163  001BA4  6FC8               	movwf	sprintf@sp& (0+255),b
  4164  001BA6  0E01               	movlw	high _Buffer1
  4165  001BA8  0100               	movlb	0	; () banked
  4166  001BAA  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4167  001BAC  0E85               	movlw	low STR_5
  4168  001BAE  0100               	movlb	0	; () banked
  4169  001BB0  6FCA               	movwf	sprintf@f& (0+255),b
  4170  001BB2  0EFF               	movlw	high STR_5
  4171  001BB4  0100               	movlb	0	; () banked
  4172  001BB6  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4173  001BB8  C106  F0CC         	movff	_RT,?_sprintf+4
  4174  001BBC  C107  F0CD         	movff	_RT+1,?_sprintf+5
  4175  001BC0  C108  F0CE         	movff	_RT+2,?_sprintf+6
  4176  001BC4  EC0D  F000         	call	_sprintf	;wreg free
  4177                           
  4178                           ;main.c: 335: lcd_gotoxy(1, 1);
  4179  001BC8  0E01               	movlw	1
  4180  001BCA  0100               	movlb	0	; () banked
  4181  001BCC  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  4182  001BCE  0E01               	movlw	1
  4183  001BD0  EC0A  F01F         	call	_lcd_gotoxy
  4184                           
  4185                           ;main.c: 336: lcd_puts(Buffer1);
  4186  001BD4  0E1C               	movlw	low _Buffer1
  4187  001BD6  0100               	movlb	0	; () banked
  4188  001BD8  6F8E               	movwf	lcd_puts@s& (0+255),b
  4189  001BDA  0E01               	movlw	high _Buffer1
  4190  001BDC  0100               	movlb	0	; () banked
  4191  001BDE  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  4192  001BE0  ECF4  F020         	call	_lcd_puts	;wreg free
  4193                           
  4194                           ;main.c: 338: if (C>0)
  4195  001BE4  0101               	movlb	1	; () banked
  4196  001BE6  BF0D               	btfsc	(_C+1)& (0+255),7,b
  4197  001BE8  D009               	goto	l6229
  4198  001BEA  0101               	movlb	1	; () banked
  4199  001BEC  510D               	movf	(_C+1)& (0+255),w,b
  4200  001BEE  E104               	bnz	u7360
  4201  001BF0  0101               	movlb	1	; () banked
  4202  001BF2  050C               	decf	_C& (0+255),w,b
  4203  001BF4  A0D8               	btfss	status,0,c
  4204  001BF6  D002               	goto	l6229
  4205  001BF8                     u7360:
  4206                           
  4207                           ; BSR set to: 1
  4208                           ;main.c: 339: Cstate='Y';
  4209  001BF8  0E59               	movlw	89
  4210  001BFA  D001               	goto	L1
  4211  001BFC                     l6229:
  4212                           
  4213                           ; BSR set to: 1
  4214                           ;main.c: 340: else
  4215                           ;main.c: 341: Cstate='N';
  4216  001BFC  0E4E               	movlw	78
  4217  001BFE                     L1:
  4218  001BFE  0101               	movlb	1	; () banked
  4219  001C00  6FD1               	movwf	_Cstate& (0+255),b
  4220                           
  4221                           ; BSR set to: 1
  4222                           ;main.c: 342: if (H>0)
  4223                           
  4224                           ; BSR set to: 1
  4225  001C02  0101               	movlb	1	; () banked
  4226  001C04  BF11               	btfsc	(_H+1)& (0+255),7,b
  4227  001C06  D009               	goto	l6235
  4228  001C08  0101               	movlb	1	; () banked
  4229  001C0A  5111               	movf	(_H+1)& (0+255),w,b
  4230  001C0C  E104               	bnz	u7370
  4231  001C0E  0101               	movlb	1	; () banked
  4232  001C10  0510               	decf	_H& (0+255),w,b
  4233  001C12  A0D8               	btfss	status,0,c
  4234  001C14  D002               	goto	l6235
  4235  001C16                     u7370:
  4236                           
  4237                           ; BSR set to: 1
  4238                           ;main.c: 343: Hstate='Y';
  4239  001C16  0E59               	movlw	89
  4240  001C18  D001               	goto	L2
  4241  001C1A                     l6235:
  4242                           
  4243                           ; BSR set to: 1
  4244                           ;main.c: 344: else
  4245                           ;main.c: 345: Hstate='N';
  4246  001C1A  0E4E               	movlw	78
  4247  001C1C                     L2:
  4248  001C1C  0101               	movlb	1	; () banked
  4249  001C1E  6FD3               	movwf	_Hstate& (0+255),b
  4250                           
  4251                           ; BSR set to: 1
  4252                           ;main.c: 347: sprintf(Buffer2, "SP:%5.1fC    %c %c", SP, Hstate, Cstate);
  4253                           
  4254                           ; BSR set to: 1
  4255  001C20  0E2D               	movlw	low _Buffer2
  4256  001C22  0100               	movlb	0	; () banked
  4257  001C24  6FC8               	movwf	sprintf@sp& (0+255),b
  4258  001C26  0E01               	movlw	high _Buffer2
  4259  001C28  0100               	movlb	0	; () banked
  4260  001C2A  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4261  001C2C  0E3E               	movlw	low STR_6
  4262  001C2E  0100               	movlb	0	; () banked
  4263  001C30  6FCA               	movwf	sprintf@f& (0+255),b
  4264  001C32  0EFF               	movlw	high STR_6
  4265  001C34  0100               	movlb	0	; () banked
  4266  001C36  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4267  001C38  C109  F0CC         	movff	_SP,?_sprintf+4
  4268  001C3C  C10A  F0CD         	movff	_SP+1,?_sprintf+5
  4269  001C40  C10B  F0CE         	movff	_SP+2,?_sprintf+6
  4270  001C44  C1D3  F0CF         	movff	_Hstate,?_sprintf+7
  4271  001C48  0100               	movlb	0	; () banked
  4272  001C4A  6BD0               	clrf	(?_sprintf+8)& (0+255),b
  4273  001C4C  C1D1  F0D1         	movff	_Cstate,?_sprintf+9
  4274  001C50  0100               	movlb	0	; () banked
  4275  001C52  6BD2               	clrf	(?_sprintf+10)& (0+255),b
  4276  001C54  EC0D  F000         	call	_sprintf	;wreg free
  4277                           
  4278                           ;main.c: 348: lcd_gotoxy(1, 2);
  4279  001C58  0E02               	movlw	2
  4280  001C5A  0100               	movlb	0	; () banked
  4281  001C5C  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  4282  001C5E  0E01               	movlw	1
  4283  001C60  EC0A  F01F         	call	_lcd_gotoxy
  4284                           
  4285                           ;main.c: 349: lcd_puts(Buffer2);
  4286  001C64  0E2D               	movlw	low _Buffer2
  4287  001C66  0100               	movlb	0	; () banked
  4288  001C68  6F8E               	movwf	lcd_puts@s& (0+255),b
  4289  001C6A  0E01               	movlw	high _Buffer2
  4290  001C6C  0100               	movlb	0	; () banked
  4291  001C6E  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  4292  001C70  ECF4  F020         	call	_lcd_puts	;wreg free
  4293                           
  4294                           ;main.c: 351: if (HCstate!='R'){
  4295  001C74  0E52               	movlw	82
  4296  001C76  0101               	movlb	1	; () banked
  4297  001C78  19D2               	xorwf	_HCstate& (0+255),w,b
  4298  001C7A  B4D8               	btfsc	status,2,c
  4299  001C7C  D01D               	goto	l6247
  4300                           
  4301                           ; BSR set to: 1
  4302                           ;main.c: 352: sprintf(Buffer3, "OT:%5.1fC %c:%3d%%",OT,HCstate,HCP);
  4303  001C7E  0E3E               	movlw	low _Buffer3
  4304  001C80  0100               	movlb	0	; () banked
  4305  001C82  6FC8               	movwf	sprintf@sp& (0+255),b
  4306  001C84  0E01               	movlw	high _Buffer3
  4307  001C86  0100               	movlb	0	; () banked
  4308  001C88  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4309  001C8A  0E2B               	movlw	low STR_7
  4310  001C8C  0100               	movlb	0	; () banked
  4311  001C8E  6FCA               	movwf	sprintf@f& (0+255),b
  4312  001C90  0EFF               	movlw	high STR_7
  4313  001C92  0100               	movlb	0	; () banked
  4314  001C94  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4315  001C96  C103  F0CC         	movff	_OT,?_sprintf+4
  4316  001C9A  C104  F0CD         	movff	_OT+1,?_sprintf+5
  4317  001C9E  C105  F0CE         	movff	_OT+2,?_sprintf+6
  4318  001CA2  C1D2  F0CF         	movff	_HCstate,?_sprintf+7
  4319  001CA6  0100               	movlb	0	; () banked
  4320  001CA8  6BD0               	clrf	(?_sprintf+8)& (0+255),b
  4321  001CAA  C112  F0D1         	movff	_HCP,?_sprintf+9
  4322  001CAE  C113  F0D2         	movff	_HCP+1,?_sprintf+10
  4323  001CB2  EC0D  F000         	call	_sprintf	;wreg free
  4324                           
  4325                           ;main.c: 353: }else {
  4326  001CB6  D01A               	goto	l6249
  4327  001CB8                     l6247:
  4328                           
  4329                           ;main.c: 354: sprintf(Buffer3, "OT:%5.1fC R:%4.1f",OT,FanSpeed);
  4330  001CB8  0E3E               	movlw	low _Buffer3
  4331  001CBA  0100               	movlb	0	; () banked
  4332  001CBC  6FC8               	movwf	sprintf@sp& (0+255),b
  4333  001CBE  0E01               	movlw	high _Buffer3
  4334  001CC0  0100               	movlb	0	; () banked
  4335  001CC2  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4336  001CC4  0E51               	movlw	low STR_8
  4337  001CC6  0100               	movlb	0	; () banked
  4338  001CC8  6FCA               	movwf	sprintf@f& (0+255),b
  4339  001CCA  0EFF               	movlw	high STR_8
  4340  001CCC  0100               	movlb	0	; () banked
  4341  001CCE  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4342  001CD0  C103  F0CC         	movff	_OT,?_sprintf+4
  4343  001CD4  C104  F0CD         	movff	_OT+1,?_sprintf+5
  4344  001CD8  C105  F0CE         	movff	_OT+2,?_sprintf+6
  4345  001CDC  C100  F0CF         	movff	_FanSpeed,?_sprintf+7
  4346  001CE0  C101  F0D0         	movff	_FanSpeed+1,?_sprintf+8
  4347  001CE4  C102  F0D1         	movff	_FanSpeed+2,?_sprintf+9
  4348  001CE8  EC0D  F000         	call	_sprintf	;wreg free
  4349  001CEC                     l6249:
  4350                           
  4351                           ;main.c: 355: }
  4352                           ;main.c: 357: lcd_gotoxy(1, 3);
  4353  001CEC  0E03               	movlw	3
  4354  001CEE  0100               	movlb	0	; () banked
  4355  001CF0  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  4356  001CF2  0E01               	movlw	1
  4357  001CF4  EC0A  F01F         	call	_lcd_gotoxy
  4358                           
  4359                           ;main.c: 358: lcd_puts(Buffer3);
  4360  001CF8  0E3E               	movlw	low _Buffer3
  4361  001CFA  0100               	movlb	0	; () banked
  4362  001CFC  6F8E               	movwf	lcd_puts@s& (0+255),b
  4363  001CFE  0E01               	movlw	high _Buffer3
  4364  001D00  0100               	movlb	0	; () banked
  4365  001D02  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  4366  001D04  ECF4  F020         	call	_lcd_puts	;wreg free
  4367                           
  4368                           ;main.c: 360: if (MD!=3){
  4369  001D08  0E03               	movlw	3
  4370  001D0A  0101               	movlb	1	; () banked
  4371  001D0C  1916               	xorwf	_MD& (0+255),w,b
  4372  001D0E  0101               	movlb	1	; () banked
  4373  001D10  1117               	iorwf	(_MD+1)& (0+255),w,b
  4374  001D12  B4D8               	btfsc	status,2,c
  4375  001D14  D00F               	goto	l6257
  4376                           
  4377                           ; BSR set to: 1
  4378                           ;main.c: 361: sprintf(Buffer4,MDS);
  4379  001D16  0E4F               	movlw	low _Buffer4
  4380  001D18  0100               	movlb	0	; () banked
  4381  001D1A  6FC8               	movwf	sprintf@sp& (0+255),b
  4382  001D1C  0E01               	movlw	high _Buffer4
  4383  001D1E  0100               	movlb	0	; () banked
  4384  001D20  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4385  001D22  0E60               	movlw	low _MDS
  4386  001D24  0100               	movlb	0	; () banked
  4387  001D26  6FCA               	movwf	sprintf@f& (0+255),b
  4388  001D28  0E01               	movlw	high _MDS
  4389  001D2A  0100               	movlb	0	; () banked
  4390  001D2C  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4391  001D2E  EC0D  F000         	call	_sprintf	;wreg free
  4392                           
  4393                           ;main.c: 362: }else {
  4394  001D32  D012               	goto	l6259
  4395  001D34                     l6257:
  4396                           
  4397                           ;main.c: 363: sprintf(Buffer4,"MD:Auto HC HS:%d",HS);
  4398  001D34  0E4F               	movlw	low _Buffer4
  4399  001D36  0100               	movlb	0	; () banked
  4400  001D38  6FC8               	movwf	sprintf@sp& (0+255),b
  4401  001D3A  0E01               	movlw	high _Buffer4
  4402  001D3C  0100               	movlb	0	; () banked
  4403  001D3E  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4404  001D40  0EA7               	movlw	low STR_9
  4405  001D42  0100               	movlb	0	; () banked
  4406  001D44  6FCA               	movwf	sprintf@f& (0+255),b
  4407  001D46  0EFF               	movlw	high STR_9
  4408  001D48  0100               	movlb	0	; () banked
  4409  001D4A  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4410  001D4C  C114  F0CC         	movff	_HS,?_sprintf+4
  4411  001D50  C115  F0CD         	movff	_HS+1,?_sprintf+5
  4412  001D54  EC0D  F000         	call	_sprintf	;wreg free
  4413  001D58                     l6259:
  4414                           
  4415                           ;main.c: 364: }
  4416                           ;main.c: 365: lcd_gotoxy(1, 4);
  4417  001D58  0E04               	movlw	4
  4418  001D5A  0100               	movlb	0	; () banked
  4419  001D5C  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  4420  001D5E  0E01               	movlw	1
  4421  001D60  EC0A  F01F         	call	_lcd_gotoxy
  4422                           
  4423                           ;main.c: 366: lcd_puts(Buffer4);
  4424  001D64  0E4F               	movlw	low _Buffer4
  4425  001D66  0100               	movlb	0	; () banked
  4426  001D68  6F8E               	movwf	lcd_puts@s& (0+255),b
  4427  001D6A  0E01               	movlw	high _Buffer4
  4428  001D6C  0100               	movlb	0	; () banked
  4429  001D6E  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  4430  001D70  ECF4  F020         	call	_lcd_puts	;wreg free
  4431                           
  4432                           ;main.c: 368: if (Received=='M' && MD!=0) {
  4433  001D74  0E4D               	movlw	77
  4434  001D76  0101               	movlb	1	; () banked
  4435  001D78  19D4               	xorwf	_Received& (0+255),w,b
  4436  001D7A  A4D8               	btfss	status,2,c
  4437  001D7C  0012               	return	
  4438                           
  4439                           ; BSR set to: 1
  4440  001D7E  0101               	movlb	1	; () banked
  4441  001D80  5116               	movf	_MD& (0+255),w,b
  4442  001D82  0101               	movlb	1	; () banked
  4443  001D84  1117               	iorwf	(_MD+1)& (0+255),w,b
  4444  001D86  B4D8               	btfsc	status,2,c
  4445  001D88  0012               	return	
  4446                           
  4447                           ; BSR set to: 1
  4448                           ;main.c: 369: char Buffer[64];
  4449                           ;main.c: 370: char MODE[8];
  4450                           ;main.c: 371: char HeaterState[6];
  4451                           ;main.c: 372: char CoolerState[6];
  4452                           ;main.c: 373: if (MD==1){
  4453  001D8A  0101               	movlb	1	; () banked
  4454  001D8C  0516               	decf	_MD& (0+255),w,b
  4455  001D8E  0101               	movlb	1	; () banked
  4456  001D90  1117               	iorwf	(_MD+1)& (0+255),w,b
  4457  001D92  A4D8               	btfss	status,2,c
  4458  001D94  D00F               	goto	l6271
  4459                           
  4460                           ; BSR set to: 1
  4461                           ;main.c: 374: strcpy(MODE,"Heat");
  4462  001D96  0EB1               	movlw	low print_data@MODE
  4463  001D98  0100               	movlb	0	; () banked
  4464  001D9A  6F80               	movwf	strcpy@to& (0+255),b
  4465  001D9C  0E01               	movlw	high print_data@MODE
  4466  001D9E  0100               	movlb	0	; () banked
  4467  001DA0  6F81               	movwf	(strcpy@to+1)& (0+255),b
  4468  001DA2  0EF9               	movlw	low STR_10
  4469  001DA4  0100               	movlb	0	; () banked
  4470  001DA6  6F82               	movwf	strcpy@from& (0+255),b
  4471  001DA8  0EFF               	movlw	high STR_10
  4472  001DAA  0100               	movlb	0	; () banked
  4473  001DAC  6F83               	movwf	(strcpy@from+1)& (0+255),b
  4474  001DAE  EC7E  F01F         	call	_strcpy	;wreg free
  4475                           
  4476                           ;main.c: 375: }else if (MD==2){
  4477  001DB2  D02B               	goto	l6279
  4478  001DB4                     l6271:
  4479  001DB4  0E02               	movlw	2
  4480  001DB6  0101               	movlb	1	; () banked
  4481  001DB8  1916               	xorwf	_MD& (0+255),w,b
  4482  001DBA  0101               	movlb	1	; () banked
  4483  001DBC  1117               	iorwf	(_MD+1)& (0+255),w,b
  4484  001DBE  A4D8               	btfss	status,2,c
  4485  001DC0  D00F               	goto	l6275
  4486                           
  4487                           ; BSR set to: 1
  4488                           ;main.c: 376: strcpy(MODE,"Cool");
  4489  001DC2  0EB1               	movlw	low print_data@MODE
  4490  001DC4  0100               	movlb	0	; () banked
  4491  001DC6  6F80               	movwf	strcpy@to& (0+255),b
  4492  001DC8  0E01               	movlw	high print_data@MODE
  4493  001DCA  0100               	movlb	0	; () banked
  4494  001DCC  6F81               	movwf	(strcpy@to+1)& (0+255),b
  4495  001DCE  0EF4               	movlw	low STR_11
  4496  001DD0  0100               	movlb	0	; () banked
  4497  001DD2  6F82               	movwf	strcpy@from& (0+255),b
  4498  001DD4  0EFF               	movlw	high STR_11
  4499  001DD6  0100               	movlb	0	; () banked
  4500  001DD8  6F83               	movwf	(strcpy@from+1)& (0+255),b
  4501  001DDA  EC7E  F01F         	call	_strcpy	;wreg free
  4502                           
  4503                           ;main.c: 377: }else if (MD==3){
  4504  001DDE  D015               	goto	l6279
  4505  001DE0                     l6275:
  4506  001DE0  0E03               	movlw	3
  4507  001DE2  0101               	movlb	1	; () banked
  4508  001DE4  1916               	xorwf	_MD& (0+255),w,b
  4509  001DE6  0101               	movlb	1	; () banked
  4510  001DE8  1117               	iorwf	(_MD+1)& (0+255),w,b
  4511  001DEA  A4D8               	btfss	status,2,c
  4512  001DEC  D00E               	goto	l6279
  4513                           
  4514                           ; BSR set to: 1
  4515                           ;main.c: 378: strcpy(MODE,"Auto HC");
  4516  001DEE  0EB1               	movlw	low print_data@MODE
  4517  001DF0  0100               	movlb	0	; () banked
  4518  001DF2  6F80               	movwf	strcpy@to& (0+255),b
  4519  001DF4  0E01               	movlw	high print_data@MODE
  4520  001DF6  0100               	movlb	0	; () banked
  4521  001DF8  6F81               	movwf	(strcpy@to+1)& (0+255),b
  4522  001DFA  0ECD               	movlw	low STR_12
  4523  001DFC  0100               	movlb	0	; () banked
  4524  001DFE  6F82               	movwf	strcpy@from& (0+255),b
  4525  001E00  0EFF               	movlw	high STR_12
  4526  001E02  0100               	movlb	0	; () banked
  4527  001E04  6F83               	movwf	(strcpy@from+1)& (0+255),b
  4528  001E06  EC7E  F01F         	call	_strcpy	;wreg free
  4529  001E0A                     l6279:
  4530                           
  4531                           ;main.c: 379: }
  4532                           ;main.c: 380: if (H>0){
  4533  001E0A  0101               	movlb	1	; () banked
  4534  001E0C  BF11               	btfsc	(_H+1)& (0+255),7,b
  4535  001E0E  D016               	goto	l6283
  4536  001E10  0101               	movlb	1	; () banked
  4537  001E12  5111               	movf	(_H+1)& (0+255),w,b
  4538  001E14  E104               	bnz	u7450
  4539  001E16  0101               	movlb	1	; () banked
  4540  001E18  0510               	decf	_H& (0+255),w,b
  4541  001E1A  A0D8               	btfss	status,0,c
  4542  001E1C  D00F               	goto	l6283
  4543  001E1E                     u7450:
  4544                           
  4545                           ; BSR set to: 1
  4546                           ;main.c: 381: strcpy(HeaterState,"ON ,");
  4547  001E1E  0EB9               	movlw	low print_data@HeaterState
  4548  001E20  0100               	movlb	0	; () banked
  4549  001E22  6F80               	movwf	strcpy@to& (0+255),b
  4550  001E24  0E01               	movlw	high print_data@HeaterState
  4551  001E26  0100               	movlb	0	; () banked
  4552  001E28  6F81               	movwf	(strcpy@to+1)& (0+255),b
  4553  001E2A  0EEF               	movlw	low STR_13
  4554  001E2C  0100               	movlb	0	; () banked
  4555  001E2E  6F82               	movwf	strcpy@from& (0+255),b
  4556  001E30  0EFF               	movlw	high STR_13
  4557  001E32  0100               	movlb	0	; () banked
  4558  001E34  6F83               	movwf	(strcpy@from+1)& (0+255),b
  4559  001E36  EC7E  F01F         	call	_strcpy	;wreg free
  4560                           
  4561                           ;main.c: 382: }else{
  4562  001E3A  D00E               	goto	l6285
  4563  001E3C                     l6283:
  4564                           
  4565                           ;main.c: 383: strcpy(HeaterState,"OFF ,");
  4566  001E3C  0EB9               	movlw	low print_data@HeaterState
  4567  001E3E  0100               	movlb	0	; () banked
  4568  001E40  6F80               	movwf	strcpy@to& (0+255),b
  4569  001E42  0E01               	movlw	high print_data@HeaterState
  4570  001E44  0100               	movlb	0	; () banked
  4571  001E46  6F81               	movwf	(strcpy@to+1)& (0+255),b
  4572  001E48  0EE9               	movlw	low STR_14
  4573  001E4A  0100               	movlb	0	; () banked
  4574  001E4C  6F82               	movwf	strcpy@from& (0+255),b
  4575  001E4E  0EFF               	movlw	high STR_14
  4576  001E50  0100               	movlb	0	; () banked
  4577  001E52  6F83               	movwf	(strcpy@from+1)& (0+255),b
  4578  001E54  EC7E  F01F         	call	_strcpy	;wreg free
  4579  001E58                     l6285:
  4580                           
  4581                           ;main.c: 384: }
  4582                           ;main.c: 385: if (C>0){
  4583  001E58  0101               	movlb	1	; () banked
  4584  001E5A  BF0D               	btfsc	(_C+1)& (0+255),7,b
  4585  001E5C  D016               	goto	l6289
  4586  001E5E  0101               	movlb	1	; () banked
  4587  001E60  510D               	movf	(_C+1)& (0+255),w,b
  4588  001E62  E104               	bnz	u7460
  4589  001E64  0101               	movlb	1	; () banked
  4590  001E66  050C               	decf	_C& (0+255),w,b
  4591  001E68  A0D8               	btfss	status,0,c
  4592  001E6A  D00F               	goto	l6289
  4593  001E6C                     u7460:
  4594                           
  4595                           ; BSR set to: 1
  4596                           ;main.c: 386: strcpy(CoolerState,"ON \r\n");
  4597  001E6C  0EBF               	movlw	low print_data@CoolerState
  4598  001E6E  0100               	movlb	0	; () banked
  4599  001E70  6F80               	movwf	strcpy@to& (0+255),b
  4600  001E72  0E01               	movlw	high print_data@CoolerState
  4601  001E74  0100               	movlb	0	; () banked
  4602  001E76  6F81               	movwf	(strcpy@to+1)& (0+255),b
  4603  001E78  0EE3               	movlw	low STR_15
  4604  001E7A  0100               	movlb	0	; () banked
  4605  001E7C  6F82               	movwf	strcpy@from& (0+255),b
  4606  001E7E  0EFF               	movlw	high STR_15
  4607  001E80  0100               	movlb	0	; () banked
  4608  001E82  6F83               	movwf	(strcpy@from+1)& (0+255),b
  4609  001E84  EC7E  F01F         	call	_strcpy	;wreg free
  4610                           
  4611                           ;main.c: 387: }else {
  4612  001E88  D00E               	goto	l6291
  4613  001E8A                     l6289:
  4614                           
  4615                           ;main.c: 388: strcpy(CoolerState,"OFF \r\n");
  4616  001E8A  0EBF               	movlw	low print_data@CoolerState
  4617  001E8C  0100               	movlb	0	; () banked
  4618  001E8E  6F80               	movwf	strcpy@to& (0+255),b
  4619  001E90  0E01               	movlw	high print_data@CoolerState
  4620  001E92  0100               	movlb	0	; () banked
  4621  001E94  6F81               	movwf	(strcpy@to+1)& (0+255),b
  4622  001E96  0ED5               	movlw	low STR_16
  4623  001E98  0100               	movlb	0	; () banked
  4624  001E9A  6F82               	movwf	strcpy@from& (0+255),b
  4625  001E9C  0EFF               	movlw	high STR_16
  4626  001E9E  0100               	movlb	0	; () banked
  4627  001EA0  6F83               	movwf	(strcpy@from+1)& (0+255),b
  4628  001EA2  EC7E  F01F         	call	_strcpy	;wreg free
  4629  001EA6                     l6291:
  4630                           
  4631                           ;main.c: 389: }
  4632                           ;main.c: 390: sprintf(Buffer,"RT:%4.1fC , SP:%4.1fC , OT:%4.1f\r\n",RT,SP,OT);
  4633  001EA6  0E71               	movlw	low print_data@Buffer
  4634  001EA8  0100               	movlb	0	; () banked
  4635  001EAA  6FC8               	movwf	sprintf@sp& (0+255),b
  4636  001EAC  0E01               	movlw	high print_data@Buffer
  4637  001EAE  0100               	movlb	0	; () banked
  4638  001EB0  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4639  001EB2  0ED5               	movlw	low STR_17
  4640  001EB4  0100               	movlb	0	; () banked
  4641  001EB6  6FCA               	movwf	sprintf@f& (0+255),b
  4642  001EB8  0EFE               	movlw	high STR_17
  4643  001EBA  0100               	movlb	0	; () banked
  4644  001EBC  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4645  001EBE  C106  F0CC         	movff	_RT,?_sprintf+4
  4646  001EC2  C107  F0CD         	movff	_RT+1,?_sprintf+5
  4647  001EC6  C108  F0CE         	movff	_RT+2,?_sprintf+6
  4648  001ECA  C109  F0CF         	movff	_SP,?_sprintf+7
  4649  001ECE  C10A  F0D0         	movff	_SP+1,?_sprintf+8
  4650  001ED2  C10B  F0D1         	movff	_SP+2,?_sprintf+9
  4651  001ED6  C103  F0D2         	movff	_OT,?_sprintf+10
  4652  001EDA  C104  F0D3         	movff	_OT+1,?_sprintf+11
  4653  001EDE  C105  F0D4         	movff	_OT+2,?_sprintf+12
  4654  001EE2  EC0D  F000         	call	_sprintf	;wreg free
  4655                           
  4656                           ;main.c: 391: send_string_no_lib(Buffer);
  4657  001EE6  0E71               	movlw	low print_data@Buffer
  4658  001EE8  0100               	movlb	0	; () banked
  4659  001EEA  6F81               	movwf	send_string_no_lib@p& (0+255),b
  4660  001EEC  0E01               	movlw	high print_data@Buffer
  4661  001EEE  0100               	movlb	0	; () banked
  4662  001EF0  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  4663  001EF2  EC88  F01E         	call	_send_string_no_lib	;wreg free
  4664                           
  4665                           ;main.c: 392: strcpy(Buffer,"");
  4666  001EF6  0E71               	movlw	low print_data@Buffer
  4667  001EF8  0100               	movlb	0	; () banked
  4668  001EFA  6F80               	movwf	strcpy@to& (0+255),b
  4669  001EFC  0E01               	movlw	high print_data@Buffer
  4670  001EFE  0100               	movlb	0	; () banked
  4671  001F00  6F81               	movwf	(strcpy@to+1)& (0+255),b
  4672  001F02  0E17               	movlw	low (STR_22+31)
  4673  001F04  0100               	movlb	0	; () banked
  4674  001F06  6F82               	movwf	strcpy@from& (0+255),b
  4675  001F08  0EFF               	movlw	high (STR_22+31)
  4676  001F0A  0100               	movlb	0	; () banked
  4677  001F0C  6F83               	movwf	(strcpy@from+1)& (0+255),b
  4678  001F0E  EC7E  F01F         	call	_strcpy	;wreg free
  4679                           
  4680                           ;main.c: 393: sprintf(Buffer,"MODE: ");
  4681  001F12  0E71               	movlw	low print_data@Buffer
  4682  001F14  0100               	movlb	0	; () banked
  4683  001F16  6FC8               	movwf	sprintf@sp& (0+255),b
  4684  001F18  0E01               	movlw	high print_data@Buffer
  4685  001F1A  0100               	movlb	0	; () banked
  4686  001F1C  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4687  001F1E  0EDC               	movlw	low STR_19
  4688  001F20  0100               	movlb	0	; () banked
  4689  001F22  6FCA               	movwf	sprintf@f& (0+255),b
  4690  001F24  0EFF               	movlw	high STR_19
  4691  001F26  0100               	movlb	0	; () banked
  4692  001F28  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4693  001F2A  EC0D  F000         	call	_sprintf	;wreg free
  4694                           
  4695                           ;main.c: 394: send_string_no_lib(Buffer);
  4696  001F2E  0E71               	movlw	low print_data@Buffer
  4697  001F30  0100               	movlb	0	; () banked
  4698  001F32  6F81               	movwf	send_string_no_lib@p& (0+255),b
  4699  001F34  0E01               	movlw	high print_data@Buffer
  4700  001F36  0100               	movlb	0	; () banked
  4701  001F38  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  4702  001F3A  EC88  F01E         	call	_send_string_no_lib	;wreg free
  4703                           
  4704                           ;main.c: 395: sprintf(Buffer,MODE);
  4705  001F3E  0E71               	movlw	low print_data@Buffer
  4706  001F40  0100               	movlb	0	; () banked
  4707  001F42  6FC8               	movwf	sprintf@sp& (0+255),b
  4708  001F44  0E01               	movlw	high print_data@Buffer
  4709  001F46  0100               	movlb	0	; () banked
  4710  001F48  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4711  001F4A  0EB1               	movlw	low print_data@MODE
  4712  001F4C  0100               	movlb	0	; () banked
  4713  001F4E  6FCA               	movwf	sprintf@f& (0+255),b
  4714  001F50  0E01               	movlw	high print_data@MODE
  4715  001F52  0100               	movlb	0	; () banked
  4716  001F54  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4717  001F56  EC0D  F000         	call	_sprintf	;wreg free
  4718                           
  4719                           ;main.c: 396: send_string_no_lib(Buffer);
  4720  001F5A  0E71               	movlw	low print_data@Buffer
  4721  001F5C  0100               	movlb	0	; () banked
  4722  001F5E  6F81               	movwf	send_string_no_lib@p& (0+255),b
  4723  001F60  0E01               	movlw	high print_data@Buffer
  4724  001F62  0100               	movlb	0	; () banked
  4725  001F64  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  4726  001F66  EC88  F01E         	call	_send_string_no_lib	;wreg free
  4727                           
  4728                           ;main.c: 398: sprintf(Buffer," , Heater: ");
  4729  001F6A  0E71               	movlw	low print_data@Buffer
  4730  001F6C  0100               	movlb	0	; () banked
  4731  001F6E  6FC8               	movwf	sprintf@sp& (0+255),b
  4732  001F70  0E01               	movlw	high print_data@Buffer
  4733  001F72  0100               	movlb	0	; () banked
  4734  001F74  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4735  001F76  0EB8               	movlw	low STR_20
  4736  001F78  0100               	movlb	0	; () banked
  4737  001F7A  6FCA               	movwf	sprintf@f& (0+255),b
  4738  001F7C  0EFF               	movlw	high STR_20
  4739  001F7E  0100               	movlb	0	; () banked
  4740  001F80  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4741  001F82  EC0D  F000         	call	_sprintf	;wreg free
  4742                           
  4743                           ;main.c: 399: send_string_no_lib(Buffer);
  4744  001F86  0E71               	movlw	low print_data@Buffer
  4745  001F88  0100               	movlb	0	; () banked
  4746  001F8A  6F81               	movwf	send_string_no_lib@p& (0+255),b
  4747  001F8C  0E01               	movlw	high print_data@Buffer
  4748  001F8E  0100               	movlb	0	; () banked
  4749  001F90  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  4750  001F92  EC88  F01E         	call	_send_string_no_lib	;wreg free
  4751                           
  4752                           ;main.c: 400: sprintf(Buffer,HeaterState);
  4753  001F96  0E71               	movlw	low print_data@Buffer
  4754  001F98  0100               	movlb	0	; () banked
  4755  001F9A  6FC8               	movwf	sprintf@sp& (0+255),b
  4756  001F9C  0E01               	movlw	high print_data@Buffer
  4757  001F9E  0100               	movlb	0	; () banked
  4758  001FA0  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4759  001FA2  0EB9               	movlw	low print_data@HeaterState
  4760  001FA4  0100               	movlb	0	; () banked
  4761  001FA6  6FCA               	movwf	sprintf@f& (0+255),b
  4762  001FA8  0E01               	movlw	high print_data@HeaterState
  4763  001FAA  0100               	movlb	0	; () banked
  4764  001FAC  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4765  001FAE  EC0D  F000         	call	_sprintf	;wreg free
  4766                           
  4767                           ;main.c: 401: send_string_no_lib(Buffer);
  4768  001FB2  0E71               	movlw	low print_data@Buffer
  4769  001FB4  0100               	movlb	0	; () banked
  4770  001FB6  6F81               	movwf	send_string_no_lib@p& (0+255),b
  4771  001FB8  0E01               	movlw	high print_data@Buffer
  4772  001FBA  0100               	movlb	0	; () banked
  4773  001FBC  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  4774  001FBE  EC88  F01E         	call	_send_string_no_lib	;wreg free
  4775                           
  4776                           ;main.c: 403: sprintf(Buffer,"Cooler: ");
  4777  001FC2  0E71               	movlw	low print_data@Buffer
  4778  001FC4  0100               	movlb	0	; () banked
  4779  001FC6  6FC8               	movwf	sprintf@sp& (0+255),b
  4780  001FC8  0E01               	movlw	high print_data@Buffer
  4781  001FCA  0100               	movlb	0	; () banked
  4782  001FCC  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4783  001FCE  0EC4               	movlw	low STR_21
  4784  001FD0  0100               	movlb	0	; () banked
  4785  001FD2  6FCA               	movwf	sprintf@f& (0+255),b
  4786  001FD4  0EFF               	movlw	high STR_21
  4787  001FD6  0100               	movlb	0	; () banked
  4788  001FD8  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4789  001FDA  EC0D  F000         	call	_sprintf	;wreg free
  4790                           
  4791                           ;main.c: 404: send_string_no_lib(Buffer);
  4792  001FDE  0E71               	movlw	low print_data@Buffer
  4793  001FE0  0100               	movlb	0	; () banked
  4794  001FE2  6F81               	movwf	send_string_no_lib@p& (0+255),b
  4795  001FE4  0E01               	movlw	high print_data@Buffer
  4796  001FE6  0100               	movlb	0	; () banked
  4797  001FE8  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  4798  001FEA  EC88  F01E         	call	_send_string_no_lib	;wreg free
  4799                           
  4800                           ;main.c: 405: sprintf(Buffer,CoolerState);
  4801  001FEE  0E71               	movlw	low print_data@Buffer
  4802  001FF0  0100               	movlb	0	; () banked
  4803  001FF2  6FC8               	movwf	sprintf@sp& (0+255),b
  4804  001FF4  0E01               	movlw	high print_data@Buffer
  4805  001FF6  0100               	movlb	0	; () banked
  4806  001FF8  6FC9               	movwf	(sprintf@sp+1)& (0+255),b
  4807  001FFA  0EBF               	movlw	low print_data@CoolerState
  4808  001FFC  0100               	movlb	0	; () banked
  4809  001FFE  6FCA               	movwf	sprintf@f& (0+255),b
  4810  002000  0E01               	movlw	high print_data@CoolerState
  4811  002002  0100               	movlb	0	; () banked
  4812  002004  6FCB               	movwf	(sprintf@f+1)& (0+255),b
  4813  002006  EC0D  F000         	call	_sprintf	;wreg free
  4814                           
  4815                           ;main.c: 406: send_string_no_lib(Buffer);
  4816  00200A  0E71               	movlw	low print_data@Buffer
  4817  00200C  0100               	movlb	0	; () banked
  4818  00200E  6F81               	movwf	send_string_no_lib@p& (0+255),b
  4819  002010  0E01               	movlw	high print_data@Buffer
  4820  002012  0100               	movlb	0	; () banked
  4821  002014  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  4822  002016  EC88  F01E         	call	_send_string_no_lib	;wreg free
  4823                           
  4824                           ;main.c: 408: send_string_no_lib((unsigned char *)"----------------------------\r\r\n");
  4825  00201A  0EF8               	movlw	low STR_22
  4826  00201C  0100               	movlb	0	; () banked
  4827  00201E  6F81               	movwf	send_string_no_lib@p& (0+255),b
  4828  002020  0EFE               	movlw	high STR_22
  4829  002022  0100               	movlb	0	; () banked
  4830  002024  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  4831  002026  EC88  F01E         	call	_send_string_no_lib	;wreg free
  4832  00202A  0012               	return	
  4833  00202C                     __end_of_print_data:
  4834                           	opt stack 0
  4835                           tblptru	equ	0xFF8
  4836                           tblptrh	equ	0xFF7
  4837                           tblptrl	equ	0xFF6
  4838                           tablat	equ	0xFF5
  4839                           intcon	equ	0xFF2
  4840                           intcon2	equ	0xFF1
  4841                           intcon3	equ	0xFF0
  4842                           postinc0	equ	0xFEE
  4843                           wreg	equ	0xFE8
  4844                           postdec1	equ	0xFE5
  4845                           fsr1l	equ	0xFE1
  4846                           status	equ	0xFD8
  4847                           
  4848 ;; *************** function _strcpy *****************
  4849 ;; Defined at:
  4850 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\strcpy.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  to              2    0[BANK0 ] PTR unsigned char 
  4853 ;;		 -> print_data@Buffer(64), print_data@CoolerState(6), print_data@HeaterState(6), print_data@MODE(8), 
  4854 ;;		 -> MDS(17), 
  4855 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  4856 ;;		 -> STR_18(1), STR_16(7), STR_15(6), STR_14(6), 
  4857 ;;		 -> STR_13(5), STR_12(8), STR_11(5), STR_10(5), 
  4858 ;;		 -> MD3S(17), MD2S(17), MD1S(17), MD0S(17), 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  4861 ;;		 -> print_data@Buffer(64), print_data@CoolerState(6), print_data@HeaterState(6), print_data@MODE(8), 
  4862 ;;		 -> MDS(17), 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  2    0[BANK0 ] PTR unsigned char 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;Total ram usage:        6 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    5
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_main
  4883 ;;		_print_data
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text12
  4888  003EFC                     __ptext12:
  4889                           	opt stack 0
  4890  003EFC                     _strcpy:
  4891                           	opt stack 25
  4892                           
  4893                           ;incstack = 0
  4894  003EFC  C080  F084         	movff	strcpy@to,strcpy@cp
  4895  003F00  C081  F085         	movff	strcpy@to+1,strcpy@cp+1
  4896  003F04  D006               	goto	l6005
  4897  003F06                     l6003:
  4898  003F06  0100               	movlb	0	; () banked
  4899  003F08  4B84               	infsnz	strcpy@cp& (0+255),f,b
  4900  003F0A  2B85               	incf	(strcpy@cp+1)& (0+255),f,b
  4901  003F0C  0100               	movlb	0	; () banked
  4902  003F0E  4B82               	infsnz	strcpy@from& (0+255),f,b
  4903  003F10  2B83               	incf	(strcpy@from+1)& (0+255),f,b
  4904  003F12                     l6005:
  4905  003F12  C082  FFF6         	movff	strcpy@from,tblptrl
  4906  003F16  C083  FFF7         	movff	strcpy@from+1,tblptrh
  4907  003F1A  0E00               	movlw	low (__mediumconst shr (0+16))
  4908  003F1C  6EF8               	movwf	tblptru,c
  4909  003F1E  C084  FFD9         	movff	strcpy@cp,fsr2l
  4910  003F22  C085  FFDA         	movff	strcpy@cp+1,fsr2h
  4911  003F26  0E0F               	movlw	(high __ramtop+-1)
  4912  003F28  64F7               	cpfsgt	tblptrh,c
  4913  003F2A  D003               	bra	u7207
  4914  003F2C  0008               	tblrd		*
  4915  003F2E  50F5               	movf	tablat,w,c
  4916  003F30  D005               	bra	u7200
  4917  003F32                     u7207:
  4918  003F32  CFF6 FFE1          	movff	tblptrl,fsr1l
  4919  003F36  CFF7 FFE2          	movff	tblptrh,fsr1h
  4920  003F3A  50E7               	movf	indf1,w,c
  4921  003F3C                     u7200:
  4922  003F3C  6EDF               	movwf	indf2,c
  4923  003F3E  50DF               	movf	indf2,w,c
  4924  003F40  B4D8               	btfsc	status,2,c
  4925  003F42  0012               	return	
  4926  003F44  D7E0               	goto	l6003
  4927  003F46                     __end_of_strcpy:
  4928                           	opt stack 0
  4929                           tblptru	equ	0xFF8
  4930                           tblptrh	equ	0xFF7
  4931                           tblptrl	equ	0xFF6
  4932                           tablat	equ	0xFF5
  4933                           intcon	equ	0xFF2
  4934                           intcon2	equ	0xFF1
  4935                           intcon3	equ	0xFF0
  4936                           postinc0	equ	0xFEE
  4937                           wreg	equ	0xFE8
  4938                           indf1	equ	0xFE7
  4939                           postdec1	equ	0xFE5
  4940                           fsr1h	equ	0xFE2
  4941                           fsr1l	equ	0xFE1
  4942                           indf2	equ	0xFDF
  4943                           fsr2h	equ	0xFDA
  4944                           fsr2l	equ	0xFD9
  4945                           status	equ	0xFD8
  4946                           
  4947 ;; *************** function _sprintf *****************
  4948 ;; Defined at:
  4949 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  sp              2   72[BANK0 ] PTR unsigned char 
  4952 ;;		 -> print_data@Buffer(64), Buffer4(17), Buffer3(17), Buffer2(17), 
  4953 ;;		 -> Buffer1(17), 
  4954 ;;  f               2   74[BANK0 ] PTR const unsigned char 
  4955 ;;		 -> STR_21(9), STR_20(12), STR_19(7), STR_17(35), 
  4956 ;;		 -> print_data@CoolerState(6), print_data@HeaterState(6), print_data@MODE(8), STR_9(17), 
  4957 ;;		 -> STR_8(18), STR_7(19), STR_6(19), STR_5(17), 
  4958 ;;		 -> MDS(17), STR_4(17), STR_3(19), STR_2(17), 
  4959 ;;		 -> STR_1(17), 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  val             4  106[BANK0 ] unsigned long 
  4962 ;;  tmpval          4  102[BANK0 ] struct .
  4963 ;;  fval            3  114[BANK0 ] struct .
  4964 ;;  prec            2  117[BANK0 ] int 
  4965 ;;  width           2  112[BANK0 ] int 
  4966 ;;  exp             2  110[BANK0 ] int 
  4967 ;;  flag            2  100[BANK0 ] unsigned short 
  4968 ;;  len             2   98[BANK0 ] unsigned int 
  4969 ;;  ap              2   96[BANK0 ] PTR void [1]
  4970 ;;		 -> ?_sprintf(2), 
  4971 ;;  cp              2   94[BANK0 ] PTR const unsigned char 
  4972 ;;		 -> sprintf@c(1), 
  4973 ;;  c               1  119[BANK0 ] char 
  4974 ;;  d               1    0        unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  2   72[BANK0 ] int 
  4977 ;; Registers used:
  4978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4984 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;Total ram usage:       48 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    8
  4991 ;; This function calls:
  4992 ;;		___awdiv
  4993 ;;		___ftadd
  4994 ;;		___ftge
  4995 ;;		___ftmul
  4996 ;;		___ftneg
  4997 ;;		___ftsub
  4998 ;;		___fttol
  4999 ;;		___lldiv
  5000 ;;		___llmod
  5001 ;;		___lltoft
  5002 ;;		___wmul
  5003 ;;		__div_to_l_
  5004 ;;		__tdiv_to_l_
  5005 ;;		_fround
  5006 ;;		_isdigit
  5007 ;;		_scale
  5008 ;; This function is called by:
  5009 ;;		_main
  5010 ;;		_print_data
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text13
  5015  00001A                     __ptext13:
  5016                           	opt stack 0
  5017  00001A                     _sprintf:
  5018                           	opt stack 22
  5019                           
  5020                           ;doprnt.c: 494: va_list ap;
  5021                           ;doprnt.c: 499: signed char c;
  5022                           ;doprnt.c: 501: int width;
  5023                           ;doprnt.c: 504: int prec;
  5024                           ;doprnt.c: 508: unsigned short flag;
  5025                           ;doprnt.c: 515: char d;
  5026                           ;doprnt.c: 516: double fval;
  5027                           ;doprnt.c: 517: int exp;
  5028                           ;doprnt.c: 523: union {
  5029                           ;doprnt.c: 524: unsigned long vd;
  5030                           ;doprnt.c: 525: double integ;
  5031                           ;doprnt.c: 526: } tmpval;
  5032                           ;doprnt.c: 528: unsigned long val;
  5033                           ;doprnt.c: 529: unsigned len;
  5034                           ;doprnt.c: 530: const char * cp;
  5035                           ;doprnt.c: 533: *ap = __va_start();
  5036                           
  5037                           ;incstack = 0
  5038  00001A  0ECC               	movlw	low (?_sprintf+4)
  5039  00001C  0100               	movlb	0	; () banked
  5040  00001E  6FE0               	movwf	sprintf@ap& (0+255),b
  5041  000020  0E00               	movlw	high (?_sprintf+4)
  5042  000022  0100               	movlb	0	; () banked
  5043  000024  6FE1               	movwf	(sprintf@ap+1)& (0+255),b
  5044                           
  5045                           ;doprnt.c: 536: while(c = *f++) {
  5046  000026  EF99  F006         	goto	l5995
  5047  00002A                     l5675:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;doprnt.c: 538: if(c != '%')
  5051  00002A  0E25               	movlw	37
  5052  00002C  0100               	movlb	0	; () banked
  5053  00002E  19F7               	xorwf	sprintf@c& (0+255),w,b
  5054  000030  B4D8               	btfsc	status,2,c
  5055  000032  D00B               	goto	l5681
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;doprnt.c: 540: {
  5059                           ;doprnt.c: 541: ((*sp++ = (c)));
  5060  000034  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  5061  000038  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  5062  00003C  C0F7  FFDF         	movff	sprintf@c,indf2
  5063                           
  5064                           ; BSR set to: 0
  5065  000040  0100               	movlb	0	; () banked
  5066  000042  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  5067  000044  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  5068                           
  5069                           ;doprnt.c: 542: continue;
  5070  000046  EF99  F006         	goto	l5995
  5071  00004A                     l5681:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;doprnt.c: 543: }
  5075                           ;doprnt.c: 546: width = 0;
  5076  00004A  0E00               	movlw	0
  5077  00004C  0100               	movlb	0	; () banked
  5078  00004E  6FF1               	movwf	(sprintf@width+1)& (0+255),b
  5079  000050  0E00               	movlw	0
  5080  000052  6FF0               	movwf	sprintf@width& (0+255),b
  5081                           
  5082                           ;doprnt.c: 548: flag = 0;
  5083  000054  0E00               	movlw	0
  5084  000056  0100               	movlb	0	; () banked
  5085  000058  6FE5               	movwf	(sprintf@flag+1)& (0+255),b
  5086  00005A  0E00               	movlw	0
  5087  00005C  6FE4               	movwf	sprintf@flag& (0+255),b
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5091  00005E  C0CA  FFF6         	movff	sprintf@f,tblptrl
  5092  000062  C0CB  FFF7         	movff	sprintf@f+1,tblptrh
  5093  000066  0E00               	movlw	low (__mediumconst shr (0+16))
  5094  000068  6EF8               	movwf	tblptru,c
  5095  00006A  0E0F               	movlw	(high __ramtop+-1)
  5096  00006C  64F7               	cpfsgt	tblptrh,c
  5097  00006E  D003               	bra	u6587
  5098  000070  0008               	tblrd		*
  5099  000072  50F5               	movf	tablat,w,c
  5100  000074  D005               	bra	u6580
  5101  000076                     u6587:
  5102  000076  CFF6 FFE1          	movff	tblptrl,fsr1l
  5103  00007A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5104  00007E  50E7               	movf	indf1,w,c
  5105  000080                     u6580:
  5106  000080  ECA3  F020         	call	_isdigit
  5107  000084  A0D8               	btfss	status,0,c
  5108  000086  D056               	goto	l5695
  5109                           
  5110                           ;doprnt.c: 598: width = 0;
  5111  000088  0E00               	movlw	0
  5112  00008A  0100               	movlb	0	; () banked
  5113  00008C  6FF1               	movwf	(sprintf@width+1)& (0+255),b
  5114  00008E  0E00               	movlw	0
  5115  000090  6FF0               	movwf	sprintf@width& (0+255),b
  5116  000092                     l5687:
  5117                           
  5118                           ;doprnt.c: 600: width *= 10;
  5119  000092  C0F0  F08E         	movff	sprintf@width,___wmul@multiplier
  5120  000096  C0F1  F08F         	movff	sprintf@width+1,___wmul@multiplier+1
  5121  00009A  0E00               	movlw	0
  5122  00009C  0100               	movlb	0	; () banked
  5123  00009E  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5124  0000A0  0E0A               	movlw	10
  5125  0000A2  6F90               	movwf	___wmul@multiplicand& (0+255),b
  5126  0000A4  EC27  F020         	call	___wmul	;wreg free
  5127  0000A8  C08E  F0F0         	movff	?___wmul,sprintf@width
  5128  0000AC  C08F  F0F1         	movff	?___wmul+1,sprintf@width+1
  5129                           
  5130                           ;doprnt.c: 601: width += *f++ - '0';
  5131  0000B0  0ED0               	movlw	208
  5132  0000B2  0100               	movlb	0	; () banked
  5133  0000B4  6FD5               	movwf	??_sprintf& (0+255),b
  5134  0000B6  0EFF               	movlw	255
  5135  0000B8  0100               	movlb	0	; () banked
  5136  0000BA  6FD6               	movwf	(??_sprintf+1)& (0+255),b
  5137  0000BC  C0CA  FFF6         	movff	sprintf@f,tblptrl
  5138  0000C0  C0CB  FFF7         	movff	sprintf@f+1,tblptrh
  5139  0000C4  0E00               	movlw	low (__mediumconst shr (0+16))
  5140  0000C6  6EF8               	movwf	tblptru,c
  5141  0000C8  0E0F               	movlw	(high __ramtop+-1)
  5142  0000CA  64F7               	cpfsgt	tblptrh,c
  5143  0000CC  D003               	bra	u6607
  5144  0000CE  0008               	tblrd		*
  5145  0000D0  50F5               	movf	tablat,w,c
  5146  0000D2  D005               	bra	u6600
  5147  0000D4                     u6607:
  5148  0000D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  5149  0000D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  5150  0000DC  50E7               	movf	indf1,w,c
  5151  0000DE                     u6600:
  5152  0000DE  0100               	movlb	0	; () banked
  5153  0000E0  6FD7               	movwf	(??_sprintf+2)& (0+255),b
  5154  0000E2  6BD8               	clrf	(??_sprintf+3)& (0+255),b
  5155  0000E4  0100               	movlb	0	; () banked
  5156  0000E6  51D5               	movf	??_sprintf& (0+255),w,b
  5157  0000E8  0100               	movlb	0	; () banked
  5158  0000EA  27D7               	addwf	(??_sprintf+2)& (0+255),f,b
  5159  0000EC  0100               	movlb	0	; () banked
  5160  0000EE  51D6               	movf	(??_sprintf+1)& (0+255),w,b
  5161  0000F0  0100               	movlb	0	; () banked
  5162  0000F2  23D8               	addwfc	(??_sprintf+3)& (0+255),f,b
  5163  0000F4  0100               	movlb	0	; () banked
  5164  0000F6  51D7               	movf	(??_sprintf+2)& (0+255),w,b
  5165  0000F8  0100               	movlb	0	; () banked
  5166  0000FA  27F0               	addwf	sprintf@width& (0+255),f,b
  5167  0000FC  0100               	movlb	0	; () banked
  5168  0000FE  51D8               	movf	(??_sprintf+3)& (0+255),w,b
  5169  000100  0100               	movlb	0	; () banked
  5170  000102  23F1               	addwfc	(sprintf@width+1)& (0+255),f,b
  5171                           
  5172                           ; BSR set to: 0
  5173  000104  0100               	movlb	0	; () banked
  5174  000106  4BCA               	infsnz	sprintf@f& (0+255),f,b
  5175  000108  2BCB               	incf	(sprintf@f+1)& (0+255),f,b
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5179  00010A  C0CA  FFF6         	movff	sprintf@f,tblptrl
  5180  00010E  C0CB  FFF7         	movff	sprintf@f+1,tblptrh
  5181  000112  0E00               	movlw	low (__mediumconst shr (0+16))
  5182  000114  6EF8               	movwf	tblptru,c
  5183  000116  0E0F               	movlw	(high __ramtop+-1)
  5184  000118  64F7               	cpfsgt	tblptrh,c
  5185  00011A  D003               	bra	u6617
  5186  00011C  0008               	tblrd		*
  5187  00011E  50F5               	movf	tablat,w,c
  5188  000120  D005               	bra	u6610
  5189  000122                     u6617:
  5190  000122  CFF6 FFE1          	movff	tblptrl,fsr1l
  5191  000126  CFF7 FFE2          	movff	tblptrh,fsr1h
  5192  00012A  50E7               	movf	indf1,w,c
  5193  00012C                     u6610:
  5194  00012C  ECA3  F020         	call	_isdigit
  5195  000130  B0D8               	btfsc	status,0,c
  5196  000132  D7AF               	goto	l5687
  5197  000134                     l5695:
  5198                           
  5199                           ;doprnt.c: 608: }
  5200                           ;doprnt.c: 611: if(*f == '.') {
  5201  000134  C0CA  FFF6         	movff	sprintf@f,tblptrl
  5202  000138  C0CB  FFF7         	movff	sprintf@f+1,tblptrh
  5203  00013C  0E00               	movlw	low (__mediumconst shr (0+16))
  5204  00013E  6EF8               	movwf	tblptru,c
  5205  000140  0E0F               	movlw	(high __ramtop+-1)
  5206  000142  64F7               	cpfsgt	tblptrh,c
  5207  000144  D003               	bra	u6637
  5208  000146  0008               	tblrd		*
  5209  000148  50F5               	movf	tablat,w,c
  5210  00014A  D005               	bra	u6630
  5211  00014C                     u6637:
  5212  00014C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5213  000150  CFF7 FFE2          	movff	tblptrh,fsr1h
  5214  000154  50E7               	movf	indf1,w,c
  5215  000156                     u6630:
  5216  000156  0A2E               	xorlw	46
  5217  000158  A4D8               	btfss	status,2,c
  5218  00015A  D053               	goto	l5707
  5219                           
  5220                           ;doprnt.c: 612: flag |= 0x4000;
  5221  00015C  0100               	movlb	0	; () banked
  5222  00015E  8DE5               	bsf	(sprintf@flag+1)& (0+255),6,b
  5223                           
  5224                           ;doprnt.c: 613: f++;
  5225  000160  0100               	movlb	0	; () banked
  5226  000162  4BCA               	infsnz	sprintf@f& (0+255),f,b
  5227  000164  2BCB               	incf	(sprintf@f+1)& (0+255),f,b
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;doprnt.c: 620: {
  5231                           ;doprnt.c: 621: prec = 0;
  5232  000166  0E00               	movlw	0
  5233  000168  0100               	movlb	0	; () banked
  5234  00016A  6FF6               	movwf	(sprintf@prec+1)& (0+255),b
  5235  00016C  0E00               	movlw	0
  5236  00016E  6FF5               	movwf	sprintf@prec& (0+255),b
  5237                           
  5238                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  5239  000170  D032               	goto	l5705
  5240  000172                     l5701:
  5241                           
  5242                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  5243  000172  C0F5  F08E         	movff	sprintf@prec,___wmul@multiplier
  5244  000176  C0F6  F08F         	movff	sprintf@prec+1,___wmul@multiplier+1
  5245  00017A  0E00               	movlw	0
  5246  00017C  0100               	movlb	0	; () banked
  5247  00017E  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5248  000180  0E0A               	movlw	10
  5249  000182  6F90               	movwf	___wmul@multiplicand& (0+255),b
  5250  000184  EC27  F020         	call	___wmul	;wreg free
  5251  000188  C0CA  FFF6         	movff	sprintf@f,tblptrl
  5252  00018C  C0CB  FFF7         	movff	sprintf@f+1,tblptrh
  5253  000190  0E00               	movlw	low (__mediumconst shr (0+16))
  5254  000192  6EF8               	movwf	tblptru,c
  5255  000194  0E0F               	movlw	(high __ramtop+-1)
  5256  000196  64F7               	cpfsgt	tblptrh,c
  5257  000198  D003               	bra	u6657
  5258  00019A  0008               	tblrd		*
  5259  00019C  50F5               	movf	tablat,w,c
  5260  00019E  D005               	bra	u6650
  5261  0001A0                     u6657:
  5262  0001A0  CFF6 FFE1          	movff	tblptrl,fsr1l
  5263  0001A4  CFF7 FFE2          	movff	tblptrh,fsr1h
  5264  0001A8  50E7               	movf	indf1,w,c
  5265  0001AA                     u6650:
  5266  0001AA  0100               	movlb	0	; () banked
  5267  0001AC  6FD5               	movwf	??_sprintf& (0+255),b
  5268  0001AE  0100               	movlb	0	; () banked
  5269  0001B0  51D5               	movf	??_sprintf& (0+255),w,b
  5270  0001B2  0100               	movlb	0	; () banked
  5271  0001B4  278E               	addwf	?___wmul& (0+255),f,b
  5272  0001B6  0E00               	movlw	0
  5273  0001B8  0100               	movlb	0	; () banked
  5274  0001BA  238F               	addwfc	(?___wmul+1)& (0+255),f,b
  5275  0001BC  0ED0               	movlw	208
  5276  0001BE  0100               	movlb	0	; () banked
  5277  0001C0  258E               	addwf	?___wmul& (0+255),w,b
  5278  0001C2  0100               	movlb	0	; () banked
  5279  0001C4  6FF5               	movwf	sprintf@prec& (0+255),b
  5280  0001C6  0EFF               	movlw	255
  5281  0001C8  0100               	movlb	0	; () banked
  5282  0001CA  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  5283  0001CC  0100               	movlb	0	; () banked
  5284  0001CE  6FF6               	movwf	(sprintf@prec+1)& (0+255),b
  5285                           
  5286                           ; BSR set to: 0
  5287  0001D0  0100               	movlb	0	; () banked
  5288  0001D2  4BCA               	infsnz	sprintf@f& (0+255),f,b
  5289  0001D4  2BCB               	incf	(sprintf@f+1)& (0+255),f,b
  5290  0001D6                     l5705:
  5291                           
  5292                           ; BSR set to: 0
  5293  0001D6  C0CA  FFF6         	movff	sprintf@f,tblptrl
  5294  0001DA  C0CB  FFF7         	movff	sprintf@f+1,tblptrh
  5295  0001DE  0E00               	movlw	low (__mediumconst shr (0+16))
  5296  0001E0  6EF8               	movwf	tblptru,c
  5297  0001E2  0E0F               	movlw	(high __ramtop+-1)
  5298  0001E4  64F7               	cpfsgt	tblptrh,c
  5299  0001E6  D003               	bra	u6667
  5300  0001E8  0008               	tblrd		*
  5301  0001EA  50F5               	movf	tablat,w,c
  5302  0001EC  D005               	bra	u6660
  5303  0001EE                     u6667:
  5304  0001EE  CFF6 FFE1          	movff	tblptrl,fsr1l
  5305  0001F2  CFF7 FFE2          	movff	tblptrh,fsr1h
  5306  0001F6  50E7               	movf	indf1,w,c
  5307  0001F8                     u6660:
  5308  0001F8  ECA3  F020         	call	_isdigit
  5309  0001FC  A0D8               	btfss	status,0,c
  5310  0001FE  D083               	goto	l5749
  5311  000200  D7B8               	goto	l5701
  5312  000202                     l5707:
  5313                           
  5314                           ;doprnt.c: 626: prec = 0;
  5315  000202  0E00               	movlw	0
  5316  000204  0100               	movlb	0	; () banked
  5317  000206  6FF6               	movwf	(sprintf@prec+1)& (0+255),b
  5318  000208  0E00               	movlw	0
  5319  00020A  6FF5               	movwf	sprintf@prec& (0+255),b
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;doprnt.c: 628: flag |= 0x1000;
  5323  00020C  0100               	movlb	0	; () banked
  5324  00020E  89E5               	bsf	(sprintf@flag+1)& (0+255),4,b
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;doprnt.c: 630: }
  5328                           ;doprnt.c: 635: switch(c = *f++) {
  5329  000210  D07A               	goto	l5749
  5330  000212                     l5711:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;doprnt.c: 663: flag |= 0x400;
  5334  000212  0100               	movlb	0	; () banked
  5335  000214  85E5               	bsf	(sprintf@flag+1)& (0+255),2,b
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;doprnt.c: 698: case 'i':
  5339                           ;doprnt.c: 699: break;
  5340                           
  5341                           ; BSR set to: 0
  5342                           
  5343                           ;doprnt.c: 697: case 'd':
  5344                           
  5345                           ;doprnt.c: 664: break;
  5346  000216  D0A7               	goto	l5751
  5347  000218                     l5713:
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;doprnt.c: 753: if(prec && prec < len)
  5351  000218  0100               	movlb	0	; () banked
  5352  00021A  51F5               	movf	sprintf@prec& (0+255),w,b
  5353  00021C  0100               	movlb	0	; () banked
  5354  00021E  11F6               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5355  000220  B4D8               	btfsc	status,2,c
  5356  000222  D00E               	goto	l5719
  5357                           
  5358                           ; BSR set to: 0
  5359  000224  0100               	movlb	0	; () banked
  5360  000226  51E2               	movf	sprintf@len& (0+255),w,b
  5361  000228  0100               	movlb	0	; () banked
  5362  00022A  5DF5               	subwf	sprintf@prec& (0+255),w,b
  5363  00022C  0100               	movlb	0	; () banked
  5364  00022E  51E3               	movf	(sprintf@len+1)& (0+255),w,b
  5365  000230  0100               	movlb	0	; () banked
  5366  000232  59F6               	subwfb	(sprintf@prec+1)& (0+255),w,b
  5367  000234  B0D8               	btfsc	status,0,c
  5368  000236  D004               	goto	l5719
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;doprnt.c: 754: len = prec;
  5372  000238  C0F5  F0E2         	movff	sprintf@prec,sprintf@len
  5373  00023C  C0F6  F0E3         	movff	sprintf@prec+1,sprintf@len+1
  5374  000240                     l5719:
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;doprnt.c: 757: if(width > len)
  5378  000240  0100               	movlb	0	; () banked
  5379  000242  51F0               	movf	sprintf@width& (0+255),w,b
  5380  000244  0100               	movlb	0	; () banked
  5381  000246  5DE2               	subwf	sprintf@len& (0+255),w,b
  5382  000248  0100               	movlb	0	; () banked
  5383  00024A  51F1               	movf	(sprintf@width+1)& (0+255),w,b
  5384  00024C  0100               	movlb	0	; () banked
  5385  00024E  59E3               	subwfb	(sprintf@len+1)& (0+255),w,b
  5386  000250  B0D8               	btfsc	status,0,c
  5387  000252  D009               	goto	l5723
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;doprnt.c: 758: width -= len;
  5391  000254  0100               	movlb	0	; () banked
  5392  000256  51E2               	movf	sprintf@len& (0+255),w,b
  5393  000258  0100               	movlb	0	; () banked
  5394  00025A  5FF0               	subwf	sprintf@width& (0+255),f,b
  5395  00025C  0100               	movlb	0	; () banked
  5396  00025E  51E3               	movf	(sprintf@len+1)& (0+255),w,b
  5397  000260  0100               	movlb	0	; () banked
  5398  000262  5BF1               	subwfb	(sprintf@width+1)& (0+255),f,b
  5399  000264  D00F               	goto	l5729
  5400  000266                     l5723:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;doprnt.c: 759: else
  5404                           ;doprnt.c: 760: width = 0;
  5405  000266  0E00               	movlw	0
  5406  000268  0100               	movlb	0	; () banked
  5407  00026A  6FF1               	movwf	(sprintf@width+1)& (0+255),b
  5408  00026C  0E00               	movlw	0
  5409  00026E  6FF0               	movwf	sprintf@width& (0+255),b
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;doprnt.c: 764: while(width--)
  5413  000270  D009               	goto	l5729
  5414  000272                     l5725:
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;doprnt.c: 765: ((*sp++ = (' ')));
  5418  000272  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  5419  000276  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  5420  00027A  0E20               	movlw	32
  5421  00027C  6EDF               	movwf	indf2,c
  5422                           
  5423                           ; BSR set to: 0
  5424  00027E  0100               	movlb	0	; () banked
  5425  000280  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  5426  000282  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  5427  000284                     l5729:
  5428                           
  5429                           ; BSR set to: 0
  5430  000284  0100               	movlb	0	; () banked
  5431  000286  07F0               	decf	sprintf@width& (0+255),f,b
  5432  000288  A0D8               	btfss	status,0,c
  5433  00028A  07F1               	decf	(sprintf@width+1)& (0+255),f,b
  5434  00028C  0100               	movlb	0	; () banked
  5435  00028E  29F0               	incf	sprintf@width& (0+255),w,b
  5436  000290  E1F0               	bnz	l5725
  5437  000292  0100               	movlb	0	; () banked
  5438  000294  29F1               	incf	(sprintf@width+1)& (0+255),w,b
  5439  000296  B4D8               	btfsc	status,2,c
  5440  000298  D011               	goto	l5737
  5441  00029A  D7EB               	goto	l5725
  5442  00029C                     l5731:
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  5446  00029C  C0DE  FFD9         	movff	sprintf@cp,fsr2l
  5447  0002A0  C0DF  FFDA         	movff	sprintf@cp+1,fsr2h
  5448  0002A4  C0C8  FFE1         	movff	sprintf@sp,fsr1l
  5449  0002A8  C0C9  FFE2         	movff	sprintf@sp+1,fsr1h
  5450  0002AC  CFDF FFE7          	movff	indf2,indf1
  5451                           
  5452                           ; BSR set to: 0
  5453  0002B0  0100               	movlb	0	; () banked
  5454  0002B2  4BDE               	infsnz	sprintf@cp& (0+255),f,b
  5455  0002B4  2BDF               	incf	(sprintf@cp+1)& (0+255),f,b
  5456                           
  5457                           ; BSR set to: 0
  5458  0002B6  0100               	movlb	0	; () banked
  5459  0002B8  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  5460  0002BA  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  5461  0002BC                     l5737:
  5462                           
  5463                           ; BSR set to: 0
  5464  0002BC  0100               	movlb	0	; () banked
  5465  0002BE  07E2               	decf	sprintf@len& (0+255),f,b
  5466  0002C0  A0D8               	btfss	status,0,c
  5467  0002C2  07E3               	decf	(sprintf@len+1)& (0+255),f,b
  5468  0002C4  0100               	movlb	0	; () banked
  5469  0002C6  29E2               	incf	sprintf@len& (0+255),w,b
  5470  0002C8  E1E9               	bnz	l5731
  5471  0002CA  0100               	movlb	0	; () banked
  5472  0002CC  29E3               	incf	(sprintf@len+1)& (0+255),w,b
  5473  0002CE  B4D8               	btfsc	status,2,c
  5474  0002D0  EF99  F006         	goto	l5995
  5475  0002D4  D7E3               	goto	l5731
  5476  0002D6                     l5739:
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  5480  0002D6  C0E0  FFD9         	movff	sprintf@ap,fsr2l
  5481  0002DA  C0E1  FFDA         	movff	sprintf@ap+1,fsr2h
  5482  0002DE  50DF               	movf	indf2,w,c
  5483  0002E0  0100               	movlb	0	; () banked
  5484  0002E2  6FF7               	movwf	sprintf@c& (0+255),b
  5485                           
  5486                           ; BSR set to: 0
  5487  0002E4  0E02               	movlw	2
  5488  0002E6  0100               	movlb	0	; () banked
  5489  0002E8  27E0               	addwf	sprintf@ap& (0+255),f,b
  5490  0002EA  0E00               	movlw	0
  5491  0002EC  23E1               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5492  0002EE                     l5743:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;doprnt.c: 805: cp = (char *)&c;
  5496  0002EE  0EF7               	movlw	low sprintf@c
  5497  0002F0  0100               	movlb	0	; () banked
  5498  0002F2  6FDE               	movwf	sprintf@cp& (0+255),b
  5499  0002F4  0E00               	movlw	high sprintf@c
  5500  0002F6  0100               	movlb	0	; () banked
  5501  0002F8  6FDF               	movwf	(sprintf@cp+1)& (0+255),b
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;doprnt.c: 806: len = 1;
  5505  0002FA  0E00               	movlw	0
  5506  0002FC  0100               	movlb	0	; () banked
  5507  0002FE  6FE3               	movwf	(sprintf@len+1)& (0+255),b
  5508  000300  0E01               	movlw	1
  5509  000302  6FE2               	movwf	sprintf@len& (0+255),b
  5510                           
  5511                           ;doprnt.c: 807: goto dostring;
  5512  000304  D789               	goto	l5713
  5513  000306                     l5749:
  5514  000306  0100               	movlb	0	; () banked
  5515  000308  51CA               	movf	sprintf@f& (0+255),w,b
  5516  00030A  0100               	movlb	0	; () banked
  5517  00030C  6FD5               	movwf	??_sprintf& (0+255),b
  5518  00030E  0100               	movlb	0	; () banked
  5519  000310  51CB               	movf	(sprintf@f+1)& (0+255),w,b
  5520  000312  0100               	movlb	0	; () banked
  5521  000314  6FD6               	movwf	(??_sprintf+1)& (0+255),b
  5522  000316  0100               	movlb	0	; () banked
  5523  000318  4BCA               	infsnz	sprintf@f& (0+255),f,b
  5524  00031A  2BCB               	incf	(sprintf@f+1)& (0+255),f,b
  5525  00031C  C0D5  FFF6         	movff	??_sprintf,tblptrl
  5526  000320  C0D6  FFF7         	movff	??_sprintf+1,tblptrh
  5527  000324  0E00               	movlw	low (__mediumconst shr (0+16))
  5528  000326  6EF8               	movwf	tblptru,c
  5529  000328  0E0F               	movlw	(high __ramtop+-1)
  5530  00032A  64F7               	cpfsgt	tblptrh,c
  5531  00032C  D003               	bra	u6737
  5532  00032E  0008               	tblrd		*
  5533  000330  50F5               	movf	tablat,w,c
  5534  000332  D005               	bra	u6730
  5535  000334                     u6737:
  5536  000334  CFF6 FFE1          	movff	tblptrl,fsr1l
  5537  000338  CFF7 FFE2          	movff	tblptrh,fsr1h
  5538  00033C  50E7               	movf	indf1,w,c
  5539  00033E                     u6730:
  5540  00033E  0100               	movlb	0	; () banked
  5541  000340  6FF7               	movwf	sprintf@c& (0+255),b
  5542  000342  0100               	movlb	0	; () banked
  5543  000344  51F7               	movf	sprintf@c& (0+255),w,b
  5544                           
  5545                           ; Switch size 1, requested type "space"
  5546                           ; Number of cases is 5, Range of values is 0 to 105
  5547                           ; switch strategies available:
  5548                           ; Name         Instructions Cycles
  5549                           ; simple_byte           16     9 (average)
  5550                           ;	Chosen strategy is simple_byte
  5551  000346  0A00               	xorlw	0	; case 0
  5552  000348  B4D8               	btfsc	status,2,c
  5553  00034A  EFBC  F006         	goto	l5997
  5554  00034E  0A63               	xorlw	99	; case 99
  5555  000350  B4D8               	btfsc	status,2,c
  5556  000352  D7C1               	goto	l5739
  5557  000354  0A07               	xorlw	7	; case 100
  5558  000356  B4D8               	btfsc	status,2,c
  5559  000358  D006               	goto	l5751
  5560  00035A  0A02               	xorlw	2	; case 102
  5561  00035C  B4D8               	btfsc	status,2,c
  5562  00035E  D759               	goto	l5711
  5563  000360  0A0F               	xorlw	15	; case 105
  5564  000362  A4D8               	btfss	status,2,c
  5565  000364  D7C4               	goto	l5743
  5566  000366                     l5751:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;doprnt.c: 825: if(flag & (0x700)) {
  5570  000366  0E07               	movlw	7
  5571  000368  0100               	movlb	0	; () banked
  5572  00036A  15E5               	andwf	(sprintf@flag+1)& (0+255),w,b
  5573  00036C  B4D8               	btfsc	status,2,c
  5574  00036E  D379               	goto	l5915
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;doprnt.c: 827: if(flag & 0x1000)
  5578  000370  0100               	movlb	0	; () banked
  5579  000372  A9E5               	btfss	(sprintf@flag+1)& (0+255),4,b
  5580  000374  D005               	goto	l5757
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;doprnt.c: 829: prec = 6;
  5584  000376  0E00               	movlw	0
  5585  000378  0100               	movlb	0	; () banked
  5586  00037A  6FF6               	movwf	(sprintf@prec+1)& (0+255),b
  5587  00037C  0E06               	movlw	6
  5588  00037E  6FF5               	movwf	sprintf@prec& (0+255),b
  5589  000380                     l5757:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5593  000380  C0E0  FFD9         	movff	sprintf@ap,fsr2l
  5594  000384  C0E1  FFDA         	movff	sprintf@ap+1,fsr2h
  5595  000388  CFDE F0F2          	movff	postinc2,sprintf@fval
  5596  00038C  CFDE F0F3          	movff	postinc2,sprintf@fval+1
  5597  000390  CFDD F0F4          	movff	postdec2,sprintf@fval+2
  5598                           
  5599                           ; BSR set to: 0
  5600  000394  0E03               	movlw	3
  5601  000396  0100               	movlb	0	; () banked
  5602  000398  27E0               	addwf	sprintf@ap& (0+255),f,b
  5603  00039A  0E00               	movlw	0
  5604  00039C  23E1               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;doprnt.c: 831: if(fval < 0.0) {
  5608  00039E  0100               	movlb	0	; () banked
  5609  0003A0  AFF4               	btfss	(sprintf@fval+2)& (0+255),7,b
  5610  0003A2  D011               	goto	l5767
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;doprnt.c: 832: fval = -fval;
  5614  0003A4  C0F2  F098         	movff	sprintf@fval,___ftneg@f1
  5615  0003A8  C0F3  F099         	movff	sprintf@fval+1,___ftneg@f1+1
  5616  0003AC  C0F4  F09A         	movff	sprintf@fval+2,___ftneg@f1+2
  5617  0003B0  EC5C  F020         	call	___ftneg	;wreg free
  5618  0003B4  C098  F0F2         	movff	?___ftneg,sprintf@fval
  5619  0003B8  C099  F0F3         	movff	?___ftneg+1,sprintf@fval+1
  5620  0003BC  C09A  F0F4         	movff	?___ftneg+2,sprintf@fval+2
  5621                           
  5622                           ;doprnt.c: 833: flag |= 0x03;
  5623  0003C0  0E03               	movlw	3
  5624  0003C2  0100               	movlb	0	; () banked
  5625  0003C4  13E4               	iorwf	sprintf@flag& (0+255),f,b
  5626  0003C6                     l5767:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;doprnt.c: 834: }
  5630                           ;doprnt.c: 835: exp = 0;
  5631  0003C6  0E00               	movlw	0
  5632  0003C8  0100               	movlb	0	; () banked
  5633  0003CA  6FEF               	movwf	(sprintf@exp+1)& (0+255),b
  5634  0003CC  0E00               	movlw	0
  5635  0003CE  6FEE               	movwf	sprintf@exp& (0+255),b
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;doprnt.c: 836: if( fval!=0) {
  5639  0003D0  0100               	movlb	0	; () banked
  5640  0003D2  51F2               	movf	sprintf@fval& (0+255),w,b
  5641  0003D4  0100               	movlb	0	; () banked
  5642  0003D6  11F3               	iorwf	(sprintf@fval+1)& (0+255),w,b
  5643  0003D8  0100               	movlb	0	; () banked
  5644  0003DA  11F4               	iorwf	(sprintf@fval+2)& (0+255),w,b
  5645  0003DC  B4D8               	btfsc	status,2,c
  5646  0003DE  D09B               	goto	l5795
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  5650  0003E0  0E82               	movlw	130
  5651  0003E2  0100               	movlb	0	; () banked
  5652  0003E4  6FD5               	movwf	??_sprintf& (0+255),b
  5653  0003E6  0EFF               	movlw	255
  5654  0003E8  0100               	movlb	0	; () banked
  5655  0003EA  6FD6               	movwf	(??_sprintf+1)& (0+255),b
  5656  0003EC  C0F2  F0D7         	movff	sprintf@fval,??_sprintf+2
  5657  0003F0  C0F3  F0D8         	movff	sprintf@fval+1,??_sprintf+3
  5658  0003F4  C0F4  F0D9         	movff	sprintf@fval+2,??_sprintf+4
  5659  0003F8  C0F5  F0DA         	movff	sprintf@fval+3,??_sprintf+5
  5660  0003FC  0E10               	movlw	16
  5661  0003FE  D006               	goto	u6780
  5662  000400                     u6785:
  5663  000400  0100               	movlb	0	; () banked
  5664  000402  90D8               	bcf	status,0,c
  5665  000404  33DA               	rrcf	(??_sprintf+5)& (0+255),f,b
  5666  000406  33D9               	rrcf	(??_sprintf+4)& (0+255),f,b
  5667  000408  33D8               	rrcf	(??_sprintf+3)& (0+255),f,b
  5668  00040A  33D7               	rrcf	(??_sprintf+2)& (0+255),f,b
  5669  00040C                     u6780:
  5670  00040C  2EE8               	decfsz	wreg,f,c
  5671  00040E  D7F8               	goto	u6785
  5672  000410  0100               	movlb	0	; () banked
  5673  000412  51D7               	movf	(??_sprintf+2)& (0+255),w,b
  5674  000414  0100               	movlb	0	; () banked
  5675  000416  25D5               	addwf	??_sprintf& (0+255),w,b
  5676  000418  0100               	movlb	0	; () banked
  5677  00041A  6FEE               	movwf	sprintf@exp& (0+255),b
  5678  00041C  0E00               	movlw	0
  5679  00041E  0100               	movlb	0	; () banked
  5680  000420  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
  5681  000422  0100               	movlb	0	; () banked
  5682  000424  6FEF               	movwf	(sprintf@exp+1)& (0+255),b
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;doprnt.c: 838: exp--;
  5686  000426  0100               	movlb	0	; () banked
  5687  000428  07EE               	decf	sprintf@exp& (0+255),f,b
  5688  00042A  A0D8               	btfss	status,0,c
  5689  00042C  07EF               	decf	(sprintf@exp+1)& (0+255),f,b
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;doprnt.c: 839: exp *= 3;
  5693  00042E  C0EE  F08E         	movff	sprintf@exp,___wmul@multiplier
  5694  000432  C0EF  F08F         	movff	sprintf@exp+1,___wmul@multiplier+1
  5695  000436  0E00               	movlw	0
  5696  000438  0100               	movlb	0	; () banked
  5697  00043A  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5698  00043C  0E03               	movlw	3
  5699  00043E  6F90               	movwf	___wmul@multiplicand& (0+255),b
  5700  000440  EC27  F020         	call	___wmul	;wreg free
  5701  000444  C08E  F0EE         	movff	?___wmul,sprintf@exp
  5702  000448  C08F  F0EF         	movff	?___wmul+1,sprintf@exp+1
  5703                           
  5704                           ;doprnt.c: 840: exp /= 10;
  5705  00044C  C0EE  F086         	movff	sprintf@exp,___awdiv@dividend
  5706  000450  C0EF  F087         	movff	sprintf@exp+1,___awdiv@dividend+1
  5707  000454  0E00               	movlw	0
  5708  000456  0100               	movlb	0	; () banked
  5709  000458  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  5710  00045A  0E0A               	movlw	10
  5711  00045C  6F88               	movwf	___awdiv@divisor& (0+255),b
  5712  00045E  EC04  F01A         	call	___awdiv	;wreg free
  5713  000462  C086  F0EE         	movff	?___awdiv,sprintf@exp
  5714  000466  C087  F0EF         	movff	?___awdiv+1,sprintf@exp+1
  5715                           
  5716                           ;doprnt.c: 841: if(exp < 0)
  5717  00046A  0100               	movlb	0	; () banked
  5718  00046C  AFEF               	btfss	(sprintf@exp+1)& (0+255),7,b
  5719  00046E  D004               	goto	l5783
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;doprnt.c: 842: exp--;
  5723  000470  0100               	movlb	0	; () banked
  5724  000472  07EE               	decf	sprintf@exp& (0+255),f,b
  5725  000474  A0D8               	btfss	status,0,c
  5726  000476  07EF               	decf	(sprintf@exp+1)& (0+255),f,b
  5727  000478                     l5783:
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  5731  000478  0100               	movlb	0	; () banked
  5732  00047A  51EE               	movf	sprintf@exp& (0+255),w,b
  5733  00047C  0800               	sublw	0
  5734  00047E  EC79  F00B         	call	_scale
  5735  000482  C0A3  F0E6         	movff	?_scale,sprintf@tmpval
  5736  000486  C0A4  F0E7         	movff	?_scale+1,sprintf@tmpval+1
  5737  00048A  C0A5  F0E8         	movff	?_scale+2,sprintf@tmpval+2
  5738                           
  5739                           ;doprnt.c: 847: tmpval.integ *= fval;
  5740  00048E  C0E6  F094         	movff	sprintf@tmpval,___ftmul@f1
  5741  000492  C0E7  F095         	movff	sprintf@tmpval+1,___ftmul@f1+1
  5742  000496  C0E8  F096         	movff	sprintf@tmpval+2,___ftmul@f1+2
  5743  00049A  C0F2  F097         	movff	sprintf@fval,___ftmul@f2
  5744  00049E  C0F3  F098         	movff	sprintf@fval+1,___ftmul@f2+1
  5745  0004A2  C0F4  F099         	movff	sprintf@fval+2,___ftmul@f2+2
  5746  0004A6  ECBC  F015         	call	___ftmul	;wreg free
  5747  0004AA  C094  F0E6         	movff	?___ftmul,sprintf@tmpval
  5748  0004AE  C095  F0E7         	movff	?___ftmul+1,sprintf@tmpval+1
  5749  0004B2  C096  F0E8         	movff	?___ftmul+2,sprintf@tmpval+2
  5750                           
  5751                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  5752  0004B6  C0E6  F0B9         	movff	sprintf@tmpval,___ftge@ff1
  5753  0004BA  C0E7  F0BA         	movff	sprintf@tmpval+1,___ftge@ff1+1
  5754  0004BE  C0E8  F0BB         	movff	sprintf@tmpval+2,___ftge@ff1+2
  5755  0004C2  0E00               	movlw	0
  5756  0004C4  0100               	movlb	0	; () banked
  5757  0004C6  6FBC               	movwf	___ftge@ff2& (0+255),b
  5758  0004C8  0E80               	movlw	128
  5759  0004CA  0100               	movlb	0	; () banked
  5760  0004CC  6FBD               	movwf	(___ftge@ff2+1)& (0+255),b
  5761  0004CE  0E3F               	movlw	63
  5762  0004D0  0100               	movlb	0	; () banked
  5763  0004D2  6FBE               	movwf	(___ftge@ff2+2)& (0+255),b
  5764  0004D4  ECA0  F019         	call	___ftge	;wreg free
  5765  0004D8  0100               	movlb	0	; () banked
  5766  0004DA  B0D8               	btfsc	status,0,c
  5767  0004DC  D005               	goto	l5791
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;doprnt.c: 849: exp--;
  5771  0004DE  0100               	movlb	0	; () banked
  5772  0004E0  07EE               	decf	sprintf@exp& (0+255),f,b
  5773  0004E2  A0D8               	btfss	status,0,c
  5774  0004E4  07EF               	decf	(sprintf@exp+1)& (0+255),f,b
  5775  0004E6  D017               	goto	l5795
  5776  0004E8                     l5791:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  5780  0004E8  C0E6  F0B9         	movff	sprintf@tmpval,___ftge@ff1
  5781  0004EC  C0E7  F0BA         	movff	sprintf@tmpval+1,___ftge@ff1+1
  5782  0004F0  C0E8  F0BB         	movff	sprintf@tmpval+2,___ftge@ff1+2
  5783  0004F4  0E00               	movlw	0
  5784  0004F6  0100               	movlb	0	; () banked
  5785  0004F8  6FBC               	movwf	___ftge@ff2& (0+255),b
  5786  0004FA  0E20               	movlw	32
  5787  0004FC  0100               	movlb	0	; () banked
  5788  0004FE  6FBD               	movwf	(___ftge@ff2+1)& (0+255),b
  5789  000500  0E41               	movlw	65
  5790  000502  0100               	movlb	0	; () banked
  5791  000504  6FBE               	movwf	(___ftge@ff2+2)& (0+255),b
  5792  000506  ECA0  F019         	call	___ftge	;wreg free
  5793  00050A  0100               	movlb	0	; () banked
  5794  00050C  A0D8               	btfss	status,0,c
  5795  00050E  D003               	goto	l5795
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;doprnt.c: 851: exp++;
  5799  000510  0100               	movlb	0	; () banked
  5800  000512  4BEE               	infsnz	sprintf@exp& (0+255),f,b
  5801  000514  2BEF               	incf	(sprintf@exp+1)& (0+255),f,b
  5802  000516                     l5795:
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;doprnt.c: 852: }
  5806                           ;doprnt.c: 1112: if(prec <= 12)
  5807  000516  0100               	movlb	0	; () banked
  5808  000518  BFF6               	btfsc	(sprintf@prec+1)& (0+255),7,b
  5809  00051A  D008               	goto	l5797
  5810  00051C  0100               	movlb	0	; () banked
  5811  00051E  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  5812  000520  E11D               	bnz	l5799
  5813  000522  0E0D               	movlw	13
  5814  000524  0100               	movlb	0	; () banked
  5815  000526  5DF5               	subwf	sprintf@prec& (0+255),w,b
  5816  000528  B0D8               	btfsc	status,0,c
  5817  00052A  D018               	goto	l5799
  5818  00052C                     l5797:
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;doprnt.c: 1113: fval += fround(prec);
  5822  00052C  C0F2  F0AD         	movff	sprintf@fval,___ftadd@f1
  5823  000530  C0F3  F0AE         	movff	sprintf@fval+1,___ftadd@f1+1
  5824  000534  C0F4  F0AF         	movff	sprintf@fval+2,___ftadd@f1+2
  5825  000538  0100               	movlb	0	; () banked
  5826  00053A  51F5               	movf	sprintf@prec& (0+255),w,b
  5827  00053C  EC16  F010         	call	_fround
  5828  000540  C0A3  F0B0         	movff	?_fround,___ftadd@f2
  5829  000544  C0A4  F0B1         	movff	?_fround+1,___ftadd@f2+1
  5830  000548  C0A5  F0B2         	movff	?_fround+2,___ftadd@f2+2
  5831  00054C  EC6C  F011         	call	___ftadd	;wreg free
  5832  000550  C0AD  F0F2         	movff	?___ftadd,sprintf@fval
  5833  000554  C0AE  F0F3         	movff	?___ftadd+1,sprintf@fval+1
  5834  000558  C0AF  F0F4         	movff	?___ftadd+2,sprintf@fval+2
  5835  00055C                     l5799:
  5836                           
  5837                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5838  00055C  0100               	movlb	0	; () banked
  5839  00055E  BFEF               	btfsc	(sprintf@exp+1)& (0+255),7,b
  5840  000560  D008               	goto	l5801
  5841  000562  0100               	movlb	0	; () banked
  5842  000564  51EF               	movf	(sprintf@exp+1)& (0+255),w,b
  5843  000566  E12A               	bnz	l5807
  5844  000568  0E0A               	movlw	10
  5845  00056A  0100               	movlb	0	; () banked
  5846  00056C  5DEE               	subwf	sprintf@exp& (0+255),w,b
  5847  00056E  B0D8               	btfsc	status,0,c
  5848  000570  D025               	goto	l5807
  5849  000572                     l5801:
  5850                           
  5851                           ; BSR set to: 0
  5852  000572  0100               	movlb	0	; () banked
  5853  000574  51F2               	movf	sprintf@fval& (0+255),w,b
  5854  000576  0100               	movlb	0	; () banked
  5855  000578  11F3               	iorwf	(sprintf@fval+1)& (0+255),w,b
  5856  00057A  0100               	movlb	0	; () banked
  5857  00057C  11F4               	iorwf	(sprintf@fval+2)& (0+255),w,b
  5858  00057E  B4D8               	btfsc	status,2,c
  5859  000580  D063               	goto	l5821
  5860                           
  5861                           ; BSR set to: 0
  5862  000582  C0F2  F0B9         	movff	sprintf@fval,___fttol@f1
  5863  000586  C0F3  F0BA         	movff	sprintf@fval+1,___fttol@f1+1
  5864  00058A  C0F4  F0BB         	movff	sprintf@fval+2,___fttol@f1+2
  5865  00058E  EC11  F017         	call	___fttol	;wreg free
  5866  000592  0100               	movlb	0	; () banked
  5867  000594  51B9               	movf	?___fttol& (0+255),w,b
  5868  000596  0100               	movlb	0	; () banked
  5869  000598  11BA               	iorwf	(?___fttol+1)& (0+255),w,b
  5870  00059A  0100               	movlb	0	; () banked
  5871  00059C  11BB               	iorwf	(?___fttol+2)& (0+255),w,b
  5872  00059E  0100               	movlb	0	; () banked
  5873  0005A0  11BC               	iorwf	(?___fttol+3)& (0+255),w,b
  5874  0005A2  A4D8               	btfss	status,2,c
  5875  0005A4  D051               	goto	l5821
  5876                           
  5877                           ; BSR set to: 0
  5878  0005A6  0100               	movlb	0	; () banked
  5879  0005A8  BFEF               	btfsc	(sprintf@exp+1)& (0+255),7,b
  5880  0005AA  D04E               	goto	l5821
  5881  0005AC  0100               	movlb	0	; () banked
  5882  0005AE  51EF               	movf	(sprintf@exp+1)& (0+255),w,b
  5883  0005B0  E105               	bnz	l5807
  5884  0005B2  0E02               	movlw	2
  5885  0005B4  0100               	movlb	0	; () banked
  5886  0005B6  5DEE               	subwf	sprintf@exp& (0+255),w,b
  5887  0005B8  A0D8               	btfss	status,0,c
  5888  0005BA  D046               	goto	l5821
  5889  0005BC                     l5807:
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5893  0005BC  C0E6  F0B9         	movff	sprintf@tmpval,___ftge@ff1
  5894  0005C0  C0E7  F0BA         	movff	sprintf@tmpval+1,___ftge@ff1+1
  5895  0005C4  C0E8  F0BB         	movff	sprintf@tmpval+2,___ftge@ff1+2
  5896  0005C8  0E70               	movlw	112
  5897  0005CA  0100               	movlb	0	; () banked
  5898  0005CC  6FBC               	movwf	___ftge@ff2& (0+255),b
  5899  0005CE  0E89               	movlw	137
  5900  0005D0  0100               	movlb	0	; () banked
  5901  0005D2  6FBD               	movwf	(___ftge@ff2+1)& (0+255),b
  5902  0005D4  0E40               	movlw	64
  5903  0005D6  0100               	movlb	0	; () banked
  5904  0005D8  6FBE               	movwf	(___ftge@ff2+2)& (0+255),b
  5905  0005DA  ECA0  F019         	call	___ftge	;wreg free
  5906  0005DE  0100               	movlb	0	; () banked
  5907  0005E0  B0D8               	btfsc	status,0,c
  5908  0005E2  D003               	goto	l5811
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5912  0005E4  0100               	movlb	0	; () banked
  5913  0005E6  0EF7               	movlw	247
  5914  0005E8  D002               	goto	L3
  5915  0005EA                     l5811:
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5919  0005EA  0100               	movlb	0	; () banked
  5920  0005EC  0EF8               	movlw	248
  5921  0005EE                     L3:
  5922  0005EE  27EE               	addwf	sprintf@exp& (0+255),f,b
  5923  0005F0  0EFF               	movlw	255
  5924  0005F2  23EF               	addwfc	(sprintf@exp+1)& (0+255),f,b
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;doprnt.c: 1124: }
  5928                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  5929                           
  5930                           ; BSR set to: 0
  5931  0005F4  0100               	movlb	0	; () banked
  5932  0005F6  51EE               	movf	sprintf@exp& (0+255),w,b
  5933  0005F8  EC79  F00B         	call	_scale
  5934  0005FC  C0A3  F0E6         	movff	?_scale,sprintf@tmpval
  5935  000600  C0A4  F0E7         	movff	?_scale+1,sprintf@tmpval+1
  5936  000604  C0A5  F0E8         	movff	?_scale+2,sprintf@tmpval+2
  5937                           
  5938                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5939  000608  C0F2  F080         	movff	sprintf@fval,__tdiv_to_l_@f1
  5940  00060C  C0F3  F081         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  5941  000610  C0F4  F082         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  5942  000614  C0E6  F083         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  5943  000618  C0E7  F084         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  5944  00061C  C0E8  F085         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  5945  000620  EC76  F013         	call	__tdiv_to_l_	;wreg free
  5946  000624  C080  F0EA         	movff	?__tdiv_to_l_,sprintf@val
  5947  000628  C081  F0EB         	movff	?__tdiv_to_l_+1,sprintf@val+1
  5948  00062C  C082  F0EC         	movff	?__tdiv_to_l_+2,sprintf@val+2
  5949  000630  C083  F0ED         	movff	?__tdiv_to_l_+3,sprintf@val+3
  5950                           
  5951                           ;doprnt.c: 1129: fval = 0.0;
  5952  000634  0E00               	movlw	0
  5953  000636  0100               	movlb	0	; () banked
  5954  000638  6FF2               	movwf	sprintf@fval& (0+255),b
  5955  00063A  0E00               	movlw	0
  5956  00063C  0100               	movlb	0	; () banked
  5957  00063E  6FF3               	movwf	(sprintf@fval+1)& (0+255),b
  5958  000640  0E00               	movlw	0
  5959  000642  0100               	movlb	0	; () banked
  5960  000644  6FF4               	movwf	(sprintf@fval+2)& (0+255),b
  5961                           
  5962                           ;doprnt.c: 1130: } else {
  5963  000646  D033               	goto	l5825
  5964  000648                     l5821:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;doprnt.c: 1131: val = (unsigned long)fval;
  5968  000648  C0F2  F0B9         	movff	sprintf@fval,___fttol@f1
  5969  00064C  C0F3  F0BA         	movff	sprintf@fval+1,___fttol@f1+1
  5970  000650  C0F4  F0BB         	movff	sprintf@fval+2,___fttol@f1+2
  5971  000654  EC11  F017         	call	___fttol	;wreg free
  5972  000658  C0B9  F0EA         	movff	?___fttol,sprintf@val
  5973  00065C  C0BA  F0EB         	movff	?___fttol+1,sprintf@val+1
  5974  000660  C0BB  F0EC         	movff	?___fttol+2,sprintf@val+2
  5975  000664  C0BC  F0ED         	movff	?___fttol+3,sprintf@val+3
  5976                           
  5977                           ;doprnt.c: 1132: fval -= (double)val;
  5978  000668  C0F2  F0B9         	movff	sprintf@fval,___ftsub@f1
  5979  00066C  C0F3  F0BA         	movff	sprintf@fval+1,___ftsub@f1+1
  5980  000670  C0F4  F0BB         	movff	sprintf@fval+2,___ftsub@f1+2
  5981  000674  C0EA  F088         	movff	sprintf@val,___lltoft@c
  5982  000678  C0EB  F089         	movff	sprintf@val+1,___lltoft@c+1
  5983  00067C  C0EC  F08A         	movff	sprintf@val+2,___lltoft@c+2
  5984  000680  C0ED  F08B         	movff	sprintf@val+3,___lltoft@c+3
  5985  000684  EC32  F01D         	call	___lltoft	;wreg free
  5986  000688  C088  F0BC         	movff	?___lltoft,___ftsub@f2
  5987  00068C  C089  F0BD         	movff	?___lltoft+1,___ftsub@f2+1
  5988  000690  C08A  F0BE         	movff	?___lltoft+2,___ftsub@f2+2
  5989  000694  EC58  F01F         	call	___ftsub	;wreg free
  5990  000698  C0B9  F0F2         	movff	?___ftsub,sprintf@fval
  5991  00069C  C0BA  F0F3         	movff	?___ftsub+1,sprintf@fval+1
  5992  0006A0  C0BB  F0F4         	movff	?___ftsub+2,sprintf@fval+2
  5993                           
  5994                           ;doprnt.c: 1133: exp = 0;
  5995  0006A4  0E00               	movlw	0
  5996  0006A6  0100               	movlb	0	; () banked
  5997  0006A8  6FEF               	movwf	(sprintf@exp+1)& (0+255),b
  5998  0006AA  0E00               	movlw	0
  5999  0006AC  6FEE               	movwf	sprintf@exp& (0+255),b
  6000  0006AE                     l5825:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;doprnt.c: 1134: }
  6004                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6005  0006AE  0E01               	movlw	1
  6006  0006B0  0100               	movlb	0	; () banked
  6007  0006B2  6FF7               	movwf	sprintf@c& (0+255),b
  6008  0006B4                     l5827:
  6009                           
  6010                           ; BSR set to: 0
  6011  0006B4  0E0A               	movlw	10
  6012  0006B6  0100               	movlb	0	; () banked
  6013  0006B8  19F7               	xorwf	sprintf@c& (0+255),w,b
  6014  0006BA  B4D8               	btfsc	status,2,c
  6015  0006BC  D01E               	goto	l5839
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;doprnt.c: 1137: if(val < dpowers[c])
  6019                           
  6020                           ; BSR set to: 0
  6021                           
  6022                           ; BSR set to: 0
  6023  0006BE  0100               	movlb	0	; () banked
  6024  0006C0  51F7               	movf	sprintf@c& (0+255),w,b
  6025  0006C2  0D04               	mullw	4
  6026  0006C4  0E5F               	movlw	low _dpowers
  6027  0006C6  24F3               	addwf	prodl,w,c
  6028  0006C8  6EF6               	movwf	tblptrl,c
  6029  0006CA  0EFE               	movlw	high _dpowers
  6030  0006CC  20F4               	addwfc	prodh,w,c
  6031  0006CE  6EF7               	movwf	tblptrh,c
  6032  0006D0                     	if	0	;There are less than 3 active tblptr bytes
  6033  0006D0                     	endif
  6034  0006D0  0009               	tblrd		*+
  6035  0006D2  50F5               	movf	tablat,w,c
  6036  0006D4  0100               	movlb	0	; () banked
  6037  0006D6  5DEA               	subwf	sprintf@val& (0+255),w,b
  6038  0006D8  0009               	tblrd		*+
  6039  0006DA  50F5               	movf	tablat,w,c
  6040  0006DC  0100               	movlb	0	; () banked
  6041  0006DE  59EB               	subwfb	(sprintf@val+1)& (0+255),w,b
  6042  0006E0  0009               	tblrd		*+
  6043  0006E2  50F5               	movf	tablat,w,c
  6044  0006E4  0100               	movlb	0	; () banked
  6045  0006E6  59EC               	subwfb	(sprintf@val+2)& (0+255),w,b
  6046  0006E8  0009               	tblrd		*+
  6047  0006EA  50F5               	movf	tablat,w,c
  6048  0006EC  0100               	movlb	0	; () banked
  6049  0006EE  59ED               	subwfb	(sprintf@val+3)& (0+255),w,b
  6050  0006F0  A0D8               	btfss	status,0,c
  6051  0006F2  D003               	goto	l5839
  6052                           
  6053                           ; BSR set to: 0
  6054                           
  6055                           ; BSR set to: 0
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;doprnt.c: 1138: break;
  6059  0006F4  0100               	movlb	0	; () banked
  6060  0006F6  2BF7               	incf	sprintf@c& (0+255),f,b
  6061  0006F8  D7DD               	goto	l5827
  6062  0006FA                     l5839:
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;doprnt.c: 1142: width -= prec + c + exp;
  6066  0006FA  C0F7  F0D5         	movff	sprintf@c,??_sprintf
  6067  0006FE  0100               	movlb	0	; () banked
  6068  000700  6BD6               	clrf	(??_sprintf+1)& (0+255),b
  6069  000702  BFD5               	btfsc	??_sprintf& (0+255),7,b
  6070  000704  07D6               	decf	(??_sprintf+1)& (0+255),f,b
  6071  000706  0100               	movlb	0	; () banked
  6072  000708  51F5               	movf	sprintf@prec& (0+255),w,b
  6073  00070A  0100               	movlb	0	; () banked
  6074  00070C  27D5               	addwf	??_sprintf& (0+255),f,b
  6075  00070E  0100               	movlb	0	; () banked
  6076  000710  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  6077  000712  0100               	movlb	0	; () banked
  6078  000714  23D6               	addwfc	(??_sprintf+1)& (0+255),f,b
  6079  000716  0100               	movlb	0	; () banked
  6080  000718  51EE               	movf	sprintf@exp& (0+255),w,b
  6081  00071A  0100               	movlb	0	; () banked
  6082  00071C  27D5               	addwf	??_sprintf& (0+255),f,b
  6083  00071E  0100               	movlb	0	; () banked
  6084  000720  51EF               	movf	(sprintf@exp+1)& (0+255),w,b
  6085  000722  0100               	movlb	0	; () banked
  6086  000724  23D6               	addwfc	(??_sprintf+1)& (0+255),f,b
  6087  000726  0100               	movlb	0	; () banked
  6088  000728  51D5               	movf	??_sprintf& (0+255),w,b
  6089  00072A  0100               	movlb	0	; () banked
  6090  00072C  5FF0               	subwf	sprintf@width& (0+255),f,b
  6091  00072E  0100               	movlb	0	; () banked
  6092  000730  51D6               	movf	(??_sprintf+1)& (0+255),w,b
  6093  000732  0100               	movlb	0	; () banked
  6094  000734  5BF1               	subwfb	(sprintf@width+1)& (0+255),f,b
  6095                           
  6096                           ;doprnt.c: 1143: if(
  6097                           ;doprnt.c: 1147: prec)
  6098  000736  0100               	movlb	0	; () banked
  6099  000738  51F5               	movf	sprintf@prec& (0+255),w,b
  6100  00073A  0100               	movlb	0	; () banked
  6101  00073C  11F6               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6102  00073E  B4D8               	btfsc	status,2,c
  6103  000740  D004               	goto	l5843
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;doprnt.c: 1148: width--;
  6107  000742  0100               	movlb	0	; () banked
  6108  000744  07F0               	decf	sprintf@width& (0+255),f,b
  6109  000746  A0D8               	btfss	status,0,c
  6110  000748  07F1               	decf	(sprintf@width+1)& (0+255),f,b
  6111  00074A                     l5843:
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;doprnt.c: 1149: if(flag & 0x03)
  6115  00074A  0E03               	movlw	3
  6116  00074C  0100               	movlb	0	; () banked
  6117  00074E  15E4               	andwf	sprintf@flag& (0+255),w,b
  6118  000750  0100               	movlb	0	; () banked
  6119  000752  6FD5               	movwf	??_sprintf& (0+255),b
  6120  000754  0E00               	movlw	0
  6121  000756  0100               	movlb	0	; () banked
  6122  000758  15E5               	andwf	(sprintf@flag+1)& (0+255),w,b
  6123  00075A  0100               	movlb	0	; () banked
  6124  00075C  6FD6               	movwf	(??_sprintf+1)& (0+255),b
  6125  00075E  0100               	movlb	0	; () banked
  6126  000760  51D5               	movf	??_sprintf& (0+255),w,b
  6127  000762  0100               	movlb	0	; () banked
  6128  000764  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
  6129  000766  B4D8               	btfsc	status,2,c
  6130  000768  D00E               	goto	l5853
  6131  00076A  D009               	goto	l5851
  6132  00076C                     l5847:
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  6136  00076C  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6137  000770  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6138  000774  0E20               	movlw	32
  6139  000776  6EDF               	movwf	indf2,c
  6140                           
  6141                           ; BSR set to: 0
  6142  000778  0100               	movlb	0	; () banked
  6143  00077A  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  6144  00077C  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  6145  00077E                     l5851:
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;doprnt.c: 1182: width--;
  6149  00077E  0100               	movlb	0	; () banked
  6150  000780  07F0               	decf	sprintf@width& (0+255),f,b
  6151  000782  A0D8               	btfss	status,0,c
  6152  000784  07F1               	decf	(sprintf@width+1)& (0+255),f,b
  6153  000786                     l5853:
  6154                           
  6155                           ; BSR set to: 0
  6156  000786  0100               	movlb	0	; () banked
  6157  000788  BFF1               	btfsc	(sprintf@width+1)& (0+255),7,b
  6158  00078A  D007               	goto	l5855
  6159  00078C  0100               	movlb	0	; () banked
  6160  00078E  51F1               	movf	(sprintf@width+1)& (0+255),w,b
  6161  000790  E1ED               	bnz	l5847
  6162  000792  0100               	movlb	0	; () banked
  6163  000794  05F0               	decf	sprintf@width& (0+255),w,b
  6164  000796  B0D8               	btfsc	status,0,c
  6165  000798  D7E9               	goto	l5847
  6166  00079A                     l5855:
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;doprnt.c: 1183: }
  6170                           ;doprnt.c: 1188: if(flag & 0x03)
  6171  00079A  0E03               	movlw	3
  6172  00079C  0100               	movlb	0	; () banked
  6173  00079E  15E4               	andwf	sprintf@flag& (0+255),w,b
  6174  0007A0  0100               	movlb	0	; () banked
  6175  0007A2  6FD5               	movwf	??_sprintf& (0+255),b
  6176  0007A4  0E00               	movlw	0
  6177  0007A6  0100               	movlb	0	; () banked
  6178  0007A8  15E5               	andwf	(sprintf@flag+1)& (0+255),w,b
  6179  0007AA  0100               	movlb	0	; () banked
  6180  0007AC  6FD6               	movwf	(??_sprintf+1)& (0+255),b
  6181  0007AE  0100               	movlb	0	; () banked
  6182  0007B0  51D5               	movf	??_sprintf& (0+255),w,b
  6183  0007B2  0100               	movlb	0	; () banked
  6184  0007B4  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
  6185  0007B6  B4D8               	btfsc	status,2,c
  6186  0007B8  D055               	goto	l5869
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6190  0007BA  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6191  0007BE  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6192  0007C2  0E2D               	movlw	45
  6193  0007C4  D04D               	goto	L4
  6194  0007C6                     l5859:
  6195                           
  6196                           ; BSR set to: 0
  6197  0007C6  0100               	movlb	0	; () banked
  6198  0007C8  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  6199  0007CA  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;doprnt.c: 1195: }
  6203                           ;doprnt.c: 1196: while(c--) {
  6204  0007CC  D04B               	goto	l5869
  6205  0007CE                     l5861:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;doprnt.c: 1200: {
  6209                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6210  0007CE  C0EA  F080         	movff	sprintf@val,___lldiv@dividend
  6211  0007D2  C0EB  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  6212  0007D6  C0EC  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  6213  0007DA  C0ED  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  6214  0007DE  0100               	movlb	0	; () banked
  6215  0007E0  51F7               	movf	sprintf@c& (0+255),w,b
  6216  0007E2  0D04               	mullw	4
  6217  0007E4  0E5F               	movlw	low _dpowers
  6218  0007E6  24F3               	addwf	prodl,w,c
  6219  0007E8  6EF6               	movwf	tblptrl,c
  6220  0007EA  0EFE               	movlw	high _dpowers
  6221  0007EC  20F4               	addwfc	prodh,w,c
  6222  0007EE  6EF7               	movwf	tblptrh,c
  6223  0007F0                     	if	0	;There are less than 3 active tblptr bytes
  6224  0007F0                     	endif
  6225  0007F0  0009               	tblrd		*+
  6226  0007F2  CFF5 F084          	movff	tablat,___lldiv@divisor
  6227  0007F6  0009               	tblrd		*+
  6228  0007F8  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  6229  0007FC  0009               	tblrd		*+
  6230  0007FE  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  6231  000802  000A               	tblrd		*-
  6232  000804  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  6233  000808  EC63  F01A         	call	___lldiv	;wreg free
  6234  00080C  C080  F0E6         	movff	?___lldiv,sprintf@tmpval
  6235  000810  C081  F0E7         	movff	?___lldiv+1,sprintf@tmpval+1
  6236  000814  C082  F0E8         	movff	?___lldiv+2,sprintf@tmpval+2
  6237  000818  C083  F0E9         	movff	?___lldiv+3,sprintf@tmpval+3
  6238                           
  6239                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6240  00081C  C0E6  F08D         	movff	sprintf@tmpval,___llmod@dividend
  6241  000820  C0E7  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6242  000824  C0E8  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6243  000828  C0E9  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6244  00082C  0E0A               	movlw	10
  6245  00082E  0100               	movlb	0	; () banked
  6246  000830  6F91               	movwf	___llmod@divisor& (0+255),b
  6247  000832  0E00               	movlw	0
  6248  000834  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  6249  000836  0E00               	movlw	0
  6250  000838  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  6251  00083A  0E00               	movlw	0
  6252  00083C  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  6253  00083E  EC14  F01C         	call	___llmod	;wreg free
  6254  000842  C08D  F0E6         	movff	?___llmod,sprintf@tmpval
  6255  000846  C08E  F0E7         	movff	?___llmod+1,sprintf@tmpval+1
  6256  00084A  C08F  F0E8         	movff	?___llmod+2,sprintf@tmpval+2
  6257  00084E  C090  F0E9         	movff	?___llmod+3,sprintf@tmpval+3
  6258                           
  6259                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6260  000852  0100               	movlb	0	; () banked
  6261  000854  51E6               	movf	sprintf@tmpval& (0+255),w,b
  6262  000856  0F30               	addlw	48
  6263  000858  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6264  00085C  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6265  000860                     L4:
  6266  000860  6EDF               	movwf	indf2,c
  6267  000862  D7B1               	goto	l5859
  6268  000864                     l5869:
  6269                           
  6270                           ; BSR set to: 0
  6271  000864  0100               	movlb	0	; () banked
  6272  000866  07F7               	decf	sprintf@c& (0+255),f,b
  6273  000868  0100               	movlb	0	; () banked
  6274  00086A  29F7               	incf	sprintf@c& (0+255),w,b
  6275  00086C  B4D8               	btfsc	status,2,c
  6276  00086E  D00E               	goto	l5877
  6277  000870  D7AE               	goto	l5861
  6278  000872                     l5871:
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  6282  000872  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6283  000876  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6284  00087A  0E30               	movlw	48
  6285  00087C  6EDF               	movwf	indf2,c
  6286                           
  6287                           ; BSR set to: 0
  6288  00087E  0100               	movlb	0	; () banked
  6289  000880  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  6290  000882  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;doprnt.c: 1209: exp--;
  6294  000884  0100               	movlb	0	; () banked
  6295  000886  07EE               	decf	sprintf@exp& (0+255),f,b
  6296  000888  A0D8               	btfss	status,0,c
  6297  00088A  07EF               	decf	(sprintf@exp+1)& (0+255),f,b
  6298  00088C                     l5877:
  6299                           
  6300                           ; BSR set to: 0
  6301  00088C  0100               	movlb	0	; () banked
  6302  00088E  BFEF               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6303  000890  D007               	goto	l5879
  6304  000892  0100               	movlb	0	; () banked
  6305  000894  51EF               	movf	(sprintf@exp+1)& (0+255),w,b
  6306  000896  E1ED               	bnz	l5871
  6307  000898  0100               	movlb	0	; () banked
  6308  00089A  05EE               	decf	sprintf@exp& (0+255),w,b
  6309  00089C  B0D8               	btfsc	status,0,c
  6310  00089E  D7E9               	goto	l5871
  6311  0008A0                     l5879:
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;doprnt.c: 1210: }
  6315                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6316  0008A0  0100               	movlb	0	; () banked
  6317  0008A2  BFF6               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6318  0008A4  D00C               	goto	l563
  6319  0008A6  0100               	movlb	0	; () banked
  6320  0008A8  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  6321  0008AA  E105               	bnz	u6970
  6322  0008AC  0E09               	movlw	9
  6323  0008AE  0100               	movlb	0	; () banked
  6324  0008B0  5DF5               	subwf	sprintf@prec& (0+255),w,b
  6325  0008B2  A0D8               	btfss	status,0,c
  6326  0008B4  D004               	goto	l563
  6327  0008B6                     u6970:
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6331  0008B6  0E08               	movlw	8
  6332  0008B8  0100               	movlb	0	; () banked
  6333  0008BA  6FF7               	movwf	sprintf@c& (0+255),b
  6334  0008BC  D002               	goto	l5883
  6335  0008BE                     l563:
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;doprnt.c: 1213: else
  6339                           ;doprnt.c: 1214: c = prec;
  6340  0008BE  C0F5  F0F7         	movff	sprintf@prec,sprintf@c
  6341  0008C2                     l5883:
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;doprnt.c: 1215: prec -= c;
  6345  0008C2  0100               	movlb	0	; () banked
  6346  0008C4  51F7               	movf	sprintf@c& (0+255),w,b
  6347  0008C6  0100               	movlb	0	; () banked
  6348  0008C8  5FF5               	subwf	sprintf@prec& (0+255),f,b
  6349  0008CA  0E00               	movlw	0
  6350  0008CC  0100               	movlb	0	; () banked
  6351  0008CE  BFF7               	btfsc	sprintf@c& (0+255),7,b
  6352  0008D0  0EFF               	movlw	255
  6353  0008D2  0100               	movlb	0	; () banked
  6354  0008D4  5BF6               	subwfb	(sprintf@prec+1)& (0+255),f,b
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;doprnt.c: 1219: if(c)
  6358  0008D6  0100               	movlb	0	; () banked
  6359  0008D8  51F7               	movf	sprintf@c& (0+255),w,b
  6360  0008DA  0100               	movlb	0	; () banked
  6361  0008DC  B4D8               	btfsc	status,2,c
  6362  0008DE  D009               	goto	l5891
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  6366  0008E0  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6367  0008E4  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6368  0008E8  0E2E               	movlw	46
  6369  0008EA  6EDF               	movwf	indf2,c
  6370                           
  6371                           ; BSR set to: 0
  6372  0008EC  0100               	movlb	0	; () banked
  6373  0008EE  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  6374  0008F0  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  6375  0008F2                     l5891:
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6379  0008F2  0100               	movlb	0	; () banked
  6380  0008F4  51F7               	movf	sprintf@c& (0+255),w,b
  6381  0008F6  EC79  F00B         	call	_scale
  6382  0008FA  C0A3  F0DB         	movff	?_scale,_sprintf$2274
  6383  0008FE  C0A4  F0DC         	movff	?_scale+1,_sprintf$2274+1
  6384  000902  C0A5  F0DD         	movff	?_scale+2,_sprintf$2274+2
  6385                           
  6386                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6387  000906  C0F2  F097         	movff	sprintf@fval,___ftmul@f2
  6388  00090A  C0F3  F098         	movff	sprintf@fval+1,___ftmul@f2+1
  6389  00090E  C0F4  F099         	movff	sprintf@fval+2,___ftmul@f2+2
  6390  000912  C0DB  F094         	movff	_sprintf$2274,___ftmul@f1
  6391  000916  C0DC  F095         	movff	_sprintf$2274+1,___ftmul@f1+1
  6392  00091A  C0DD  F096         	movff	_sprintf$2274+2,___ftmul@f1+2
  6393  00091E  ECBC  F015         	call	___ftmul	;wreg free
  6394  000922  C094  F0B9         	movff	?___ftmul,___fttol@f1
  6395  000926  C095  F0BA         	movff	?___ftmul+1,___fttol@f1+1
  6396  00092A  C096  F0BB         	movff	?___ftmul+2,___fttol@f1+2
  6397  00092E  EC11  F017         	call	___fttol	;wreg free
  6398  000932  C0B9  F0EA         	movff	?___fttol,sprintf@val
  6399  000936  C0BA  F0EB         	movff	?___fttol+1,sprintf@val+1
  6400  00093A  C0BB  F0EC         	movff	?___fttol+2,sprintf@val+2
  6401  00093E  C0BC  F0ED         	movff	?___fttol+3,sprintf@val+3
  6402                           
  6403                           ;doprnt.c: 1228: while(c--) {
  6404  000942  D074               	goto	l5905
  6405  000944                     l5895:
  6406                           
  6407                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6408  000944  C0EA  F080         	movff	sprintf@val,___lldiv@dividend
  6409  000948  C0EB  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  6410  00094C  C0EC  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  6411  000950  C0ED  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  6412  000954  0100               	movlb	0	; () banked
  6413  000956  51F7               	movf	sprintf@c& (0+255),w,b
  6414  000958  0D04               	mullw	4
  6415  00095A  0E5F               	movlw	low _dpowers
  6416  00095C  24F3               	addwf	prodl,w,c
  6417  00095E  6EF6               	movwf	tblptrl,c
  6418  000960  0EFE               	movlw	high _dpowers
  6419  000962  20F4               	addwfc	prodh,w,c
  6420  000964  6EF7               	movwf	tblptrh,c
  6421  000966                     	if	0	;There are less than 3 active tblptr bytes
  6422  000966                     	endif
  6423  000966  0009               	tblrd		*+
  6424  000968  CFF5 F084          	movff	tablat,___lldiv@divisor
  6425  00096C  0009               	tblrd		*+
  6426  00096E  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  6427  000972  0009               	tblrd		*+
  6428  000974  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  6429  000978  000A               	tblrd		*-
  6430  00097A  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  6431  00097E  EC63  F01A         	call	___lldiv	;wreg free
  6432  000982  C080  F0E6         	movff	?___lldiv,sprintf@tmpval
  6433  000986  C081  F0E7         	movff	?___lldiv+1,sprintf@tmpval+1
  6434  00098A  C082  F0E8         	movff	?___lldiv+2,sprintf@tmpval+2
  6435  00098E  C083  F0E9         	movff	?___lldiv+3,sprintf@tmpval+3
  6436                           
  6437                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6438  000992  C0E6  F08D         	movff	sprintf@tmpval,___llmod@dividend
  6439  000996  C0E7  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6440  00099A  C0E8  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6441  00099E  C0E9  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6442  0009A2  0E0A               	movlw	10
  6443  0009A4  0100               	movlb	0	; () banked
  6444  0009A6  6F91               	movwf	___llmod@divisor& (0+255),b
  6445  0009A8  0E00               	movlw	0
  6446  0009AA  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  6447  0009AC  0E00               	movlw	0
  6448  0009AE  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  6449  0009B0  0E00               	movlw	0
  6450  0009B2  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  6451  0009B4  EC14  F01C         	call	___llmod	;wreg free
  6452  0009B8  C08D  F0E6         	movff	?___llmod,sprintf@tmpval
  6453  0009BC  C08E  F0E7         	movff	?___llmod+1,sprintf@tmpval+1
  6454  0009C0  C08F  F0E8         	movff	?___llmod+2,sprintf@tmpval+2
  6455  0009C4  C090  F0E9         	movff	?___llmod+3,sprintf@tmpval+3
  6456                           
  6457                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  6458  0009C8  0100               	movlb	0	; () banked
  6459  0009CA  51E6               	movf	sprintf@tmpval& (0+255),w,b
  6460  0009CC  0F30               	addlw	48
  6461  0009CE  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6462  0009D2  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6463  0009D6  6EDF               	movwf	indf2,c
  6464                           
  6465                           ; BSR set to: 0
  6466  0009D8  0100               	movlb	0	; () banked
  6467  0009DA  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  6468  0009DC  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;doprnt.c: 1232: val %= dpowers[c];
  6472  0009DE  C0EA  F08D         	movff	sprintf@val,___llmod@dividend
  6473  0009E2  C0EB  F08E         	movff	sprintf@val+1,___llmod@dividend+1
  6474  0009E6  C0EC  F08F         	movff	sprintf@val+2,___llmod@dividend+2
  6475  0009EA  C0ED  F090         	movff	sprintf@val+3,___llmod@dividend+3
  6476  0009EE  0100               	movlb	0	; () banked
  6477  0009F0  51F7               	movf	sprintf@c& (0+255),w,b
  6478  0009F2  0D04               	mullw	4
  6479  0009F4  0E5F               	movlw	low _dpowers
  6480  0009F6  24F3               	addwf	prodl,w,c
  6481  0009F8  6EF6               	movwf	tblptrl,c
  6482  0009FA  0EFE               	movlw	high _dpowers
  6483  0009FC  20F4               	addwfc	prodh,w,c
  6484  0009FE  6EF7               	movwf	tblptrh,c
  6485  000A00                     	if	0	;There are less than 3 active tblptr bytes
  6486  000A00                     	endif
  6487  000A00  0009               	tblrd		*+
  6488  000A02  CFF5 F091          	movff	tablat,___llmod@divisor
  6489  000A06  0009               	tblrd		*+
  6490  000A08  CFF5 F092          	movff	tablat,___llmod@divisor+1
  6491  000A0C  0009               	tblrd		*+
  6492  000A0E  CFF5 F093          	movff	tablat,___llmod@divisor+2
  6493  000A12  000A               	tblrd		*-
  6494  000A14  CFF5 F094          	movff	tablat,___llmod@divisor+3
  6495  000A18  EC14  F01C         	call	___llmod	;wreg free
  6496  000A1C  C08D  F0EA         	movff	?___llmod,sprintf@val
  6497  000A20  C08E  F0EB         	movff	?___llmod+1,sprintf@val+1
  6498  000A24  C08F  F0EC         	movff	?___llmod+2,sprintf@val+2
  6499  000A28  C090  F0ED         	movff	?___llmod+3,sprintf@val+3
  6500  000A2C                     l5905:
  6501  000A2C  0100               	movlb	0	; () banked
  6502  000A2E  07F7               	decf	sprintf@c& (0+255),f,b
  6503  000A30  0100               	movlb	0	; () banked
  6504  000A32  29F7               	incf	sprintf@c& (0+255),w,b
  6505  000A34  B4D8               	btfsc	status,2,c
  6506  000A36  D00E               	goto	l5913
  6507  000A38  D785               	goto	l5895
  6508  000A3A                     l5907:
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  6512  000A3A  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6513  000A3E  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6514  000A42  0E30               	movlw	48
  6515  000A44  6EDF               	movwf	indf2,c
  6516                           
  6517                           ; BSR set to: 0
  6518  000A46  0100               	movlb	0	; () banked
  6519  000A48  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  6520  000A4A  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;doprnt.c: 1237: prec--;
  6524  000A4C  0100               	movlb	0	; () banked
  6525  000A4E  07F5               	decf	sprintf@prec& (0+255),f,b
  6526  000A50  A0D8               	btfss	status,0,c
  6527  000A52  07F6               	decf	(sprintf@prec+1)& (0+255),f,b
  6528  000A54                     l5913:
  6529                           
  6530                           ; BSR set to: 0
  6531  000A54  0100               	movlb	0	; () banked
  6532  000A56  51F5               	movf	sprintf@prec& (0+255),w,b
  6533  000A58  0100               	movlb	0	; () banked
  6534  000A5A  11F6               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6535  000A5C  B4D8               	btfsc	status,2,c
  6536  000A5E  D169               	goto	l5995
  6537  000A60  D7EC               	goto	l5907
  6538  000A62                     l5915:
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;doprnt.c: 1246: }
  6542                           ;doprnt.c: 1253: {
  6543                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6544  000A62  C0E0  FFD9         	movff	sprintf@ap,fsr2l
  6545  000A66  C0E1  FFDA         	movff	sprintf@ap+1,fsr2h
  6546  000A6A  CFDE F0EA          	movff	postinc2,sprintf@val
  6547  000A6E  CFDD F0EB          	movff	postdec2,sprintf@val+1
  6548  000A72  0100               	movlb	0	; () banked
  6549  000A74  0E00               	movlw	0
  6550  000A76  BFEB               	btfsc	(sprintf@val+1)& (0+255),7,b
  6551  000A78  0EFF               	movlw	-1
  6552  000A7A  6FEC               	movwf	(sprintf@val+2)& (0+255),b
  6553  000A7C  6FED               	movwf	(sprintf@val+3)& (0+255),b
  6554                           
  6555                           ; BSR set to: 0
  6556  000A7E  0E02               	movlw	2
  6557  000A80  0100               	movlb	0	; () banked
  6558  000A82  27E0               	addwf	sprintf@ap& (0+255),f,b
  6559  000A84  0E00               	movlw	0
  6560  000A86  23E1               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;doprnt.c: 1261: if((long)val < 0) {
  6564  000A88  0100               	movlb	0	; () banked
  6565  000A8A  AFED               	btfss	(sprintf@val+3)& (0+255),7,b
  6566  000A8C  D00C               	goto	l5925
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;doprnt.c: 1262: flag |= 0x03;
  6570  000A8E  0E03               	movlw	3
  6571  000A90  0100               	movlb	0	; () banked
  6572  000A92  13E4               	iorwf	sprintf@flag& (0+255),f,b
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;doprnt.c: 1263: val = -val;
  6576  000A94  0100               	movlb	0	; () banked
  6577  000A96  1FED               	comf	(sprintf@val+3)& (0+255),f,b
  6578  000A98  1FEC               	comf	(sprintf@val+2)& (0+255),f,b
  6579  000A9A  1FEB               	comf	(sprintf@val+1)& (0+255),f,b
  6580  000A9C  6DEA               	negf	sprintf@val& (0+255),b
  6581  000A9E  0E00               	movlw	0
  6582  000AA0  23EB               	addwfc	(sprintf@val+1)& (0+255),f,b
  6583  000AA2  23EC               	addwfc	(sprintf@val+2)& (0+255),f,b
  6584  000AA4  23ED               	addwfc	(sprintf@val+3)& (0+255),f,b
  6585  000AA6                     l5925:
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;doprnt.c: 1264: }
  6589                           ;doprnt.c: 1266: }
  6590                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  6591  000AA6  0100               	movlb	0	; () banked
  6592  000AA8  51F5               	movf	sprintf@prec& (0+255),w,b
  6593  000AAA  0100               	movlb	0	; () banked
  6594  000AAC  11F6               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6595  000AAE  A4D8               	btfss	status,2,c
  6596  000AB0  D00D               	goto	l5931
  6597                           
  6598                           ; BSR set to: 0
  6599  000AB2  0100               	movlb	0	; () banked
  6600  000AB4  51EA               	movf	sprintf@val& (0+255),w,b
  6601  000AB6  0100               	movlb	0	; () banked
  6602  000AB8  11EB               	iorwf	(sprintf@val+1)& (0+255),w,b
  6603  000ABA  0100               	movlb	0	; () banked
  6604  000ABC  11EC               	iorwf	(sprintf@val+2)& (0+255),w,b
  6605  000ABE  0100               	movlb	0	; () banked
  6606  000AC0  11ED               	iorwf	(sprintf@val+3)& (0+255),w,b
  6607  000AC2  A4D8               	btfss	status,2,c
  6608  000AC4  D003               	goto	l5931
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;doprnt.c: 1291: prec++;
  6612  000AC6  0100               	movlb	0	; () banked
  6613  000AC8  4BF5               	infsnz	sprintf@prec& (0+255),f,b
  6614  000ACA  2BF6               	incf	(sprintf@prec+1)& (0+255),f,b
  6615  000ACC                     l5931:
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6619  000ACC  0E01               	movlw	1
  6620  000ACE  0100               	movlb	0	; () banked
  6621  000AD0  6FF7               	movwf	sprintf@c& (0+255),b
  6622  000AD2                     l5933:
  6623                           
  6624                           ; BSR set to: 0
  6625  000AD2  0E0A               	movlw	10
  6626  000AD4  0100               	movlb	0	; () banked
  6627  000AD6  19F7               	xorwf	sprintf@c& (0+255),w,b
  6628  000AD8  B4D8               	btfsc	status,2,c
  6629  000ADA  D01E               	goto	l5945
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;doprnt.c: 1306: if(val < dpowers[c])
  6633                           
  6634                           ; BSR set to: 0
  6635                           
  6636                           ; BSR set to: 0
  6637  000ADC  0100               	movlb	0	; () banked
  6638  000ADE  51F7               	movf	sprintf@c& (0+255),w,b
  6639  000AE0  0D04               	mullw	4
  6640  000AE2  0E5F               	movlw	low _dpowers
  6641  000AE4  24F3               	addwf	prodl,w,c
  6642  000AE6  6EF6               	movwf	tblptrl,c
  6643  000AE8  0EFE               	movlw	high _dpowers
  6644  000AEA  20F4               	addwfc	prodh,w,c
  6645  000AEC  6EF7               	movwf	tblptrh,c
  6646  000AEE                     	if	0	;There are less than 3 active tblptr bytes
  6647  000AEE                     	endif
  6648  000AEE  0009               	tblrd		*+
  6649  000AF0  50F5               	movf	tablat,w,c
  6650  000AF2  0100               	movlb	0	; () banked
  6651  000AF4  5DEA               	subwf	sprintf@val& (0+255),w,b
  6652  000AF6  0009               	tblrd		*+
  6653  000AF8  50F5               	movf	tablat,w,c
  6654  000AFA  0100               	movlb	0	; () banked
  6655  000AFC  59EB               	subwfb	(sprintf@val+1)& (0+255),w,b
  6656  000AFE  0009               	tblrd		*+
  6657  000B00  50F5               	movf	tablat,w,c
  6658  000B02  0100               	movlb	0	; () banked
  6659  000B04  59EC               	subwfb	(sprintf@val+2)& (0+255),w,b
  6660  000B06  0009               	tblrd		*+
  6661  000B08  50F5               	movf	tablat,w,c
  6662  000B0A  0100               	movlb	0	; () banked
  6663  000B0C  59ED               	subwfb	(sprintf@val+3)& (0+255),w,b
  6664  000B0E  A0D8               	btfss	status,0,c
  6665  000B10  D003               	goto	l5945
  6666                           
  6667                           ; BSR set to: 0
  6668                           
  6669                           ; BSR set to: 0
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;doprnt.c: 1307: break;
  6673  000B12  0100               	movlb	0	; () banked
  6674  000B14  2BF7               	incf	sprintf@c& (0+255),f,b
  6675  000B16  D7DD               	goto	l5933
  6676  000B18                     l5945:
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;doprnt.c: 1339: if(c < prec)
  6680  000B18  0E80               	movlw	128
  6681  000B1A  0100               	movlb	0	; () banked
  6682  000B1C  BFF7               	btfsc	sprintf@c& (0+255),7,b
  6683  000B1E  0E7F               	movlw	127
  6684  000B20  0100               	movlb	0	; () banked
  6685  000B22  6FD5               	movwf	??_sprintf& (0+255),b
  6686  000B24  0100               	movlb	0	; () banked
  6687  000B26  51F5               	movf	sprintf@prec& (0+255),w,b
  6688  000B28  0100               	movlb	0	; () banked
  6689  000B2A  5DF7               	subwf	sprintf@c& (0+255),w,b
  6690  000B2C  0100               	movlb	0	; () banked
  6691  000B2E  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  6692  000B30  0A80               	xorlw	128
  6693  000B32  0100               	movlb	0	; () banked
  6694  000B34  59D5               	subwfb	??_sprintf& (0+255),w,b
  6695  000B36  B0D8               	btfsc	status,0,c
  6696  000B38  D003               	goto	l5949
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;doprnt.c: 1340: c = prec;
  6700  000B3A  C0F5  F0F7         	movff	sprintf@prec,sprintf@c
  6701  000B3E  D018               	goto	l5953
  6702  000B40                     l5949:
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;doprnt.c: 1341: else if(prec < c)
  6706  000B40  0100               	movlb	0	; () banked
  6707  000B42  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  6708  000B44  0A80               	xorlw	128
  6709  000B46  0100               	movlb	0	; () banked
  6710  000B48  6FD5               	movwf	??_sprintf& (0+255),b
  6711  000B4A  0100               	movlb	0	; () banked
  6712  000B4C  51F7               	movf	sprintf@c& (0+255),w,b
  6713  000B4E  0100               	movlb	0	; () banked
  6714  000B50  5DF5               	subwf	sprintf@prec& (0+255),w,b
  6715  000B52  0E80               	movlw	128
  6716  000B54  0100               	movlb	0	; () banked
  6717  000B56  BFF7               	btfsc	sprintf@c& (0+255),7,b
  6718  000B58  0E7F               	movlw	127
  6719  000B5A  0100               	movlb	0	; () banked
  6720  000B5C  59D5               	subwfb	??_sprintf& (0+255),w,b
  6721  000B5E  B0D8               	btfsc	status,0,c
  6722  000B60  D007               	goto	l5953
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;doprnt.c: 1342: prec = c;
  6726  000B62  0100               	movlb	0	; () banked
  6727  000B64  51F7               	movf	sprintf@c& (0+255),w,b
  6728  000B66  0100               	movlb	0	; () banked
  6729  000B68  6FF5               	movwf	sprintf@prec& (0+255),b
  6730  000B6A  6BF6               	clrf	(sprintf@prec+1)& (0+255),b
  6731  000B6C  BFF5               	btfsc	sprintf@prec& (0+255),7,b
  6732  000B6E  07F6               	decf	(sprintf@prec+1)& (0+255),f,b
  6733  000B70                     l5953:
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6737  000B70  0100               	movlb	0	; () banked
  6738  000B72  51F0               	movf	sprintf@width& (0+255),w,b
  6739  000B74  0100               	movlb	0	; () banked
  6740  000B76  11F1               	iorwf	(sprintf@width+1)& (0+255),w,b
  6741  000B78  B4D8               	btfsc	status,2,c
  6742  000B7A  D014               	goto	l5959
  6743                           
  6744                           ; BSR set to: 0
  6745  000B7C  0E03               	movlw	3
  6746  000B7E  0100               	movlb	0	; () banked
  6747  000B80  15E4               	andwf	sprintf@flag& (0+255),w,b
  6748  000B82  0100               	movlb	0	; () banked
  6749  000B84  6FD5               	movwf	??_sprintf& (0+255),b
  6750  000B86  0E00               	movlw	0
  6751  000B88  0100               	movlb	0	; () banked
  6752  000B8A  15E5               	andwf	(sprintf@flag+1)& (0+255),w,b
  6753  000B8C  0100               	movlb	0	; () banked
  6754  000B8E  6FD6               	movwf	(??_sprintf+1)& (0+255),b
  6755  000B90  0100               	movlb	0	; () banked
  6756  000B92  51D5               	movf	??_sprintf& (0+255),w,b
  6757  000B94  0100               	movlb	0	; () banked
  6758  000B96  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
  6759  000B98  B4D8               	btfsc	status,2,c
  6760  000B9A  D004               	goto	l5959
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;doprnt.c: 1346: width--;
  6764  000B9C  0100               	movlb	0	; () banked
  6765  000B9E  07F0               	decf	sprintf@width& (0+255),f,b
  6766  000BA0  A0D8               	btfss	status,0,c
  6767  000BA2  07F1               	decf	(sprintf@width+1)& (0+255),f,b
  6768  000BA4                     l5959:
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;doprnt.c: 1348: if(flag & 0x4000) {
  6772  000BA4  0100               	movlb	0	; () banked
  6773  000BA6  ADE5               	btfss	(sprintf@flag+1)& (0+255),6,b
  6774  000BA8  D01E               	goto	l5967
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;doprnt.c: 1349: if(width > prec)
  6778  000BAA  0100               	movlb	0	; () banked
  6779  000BAC  51F0               	movf	sprintf@width& (0+255),w,b
  6780  000BAE  0100               	movlb	0	; () banked
  6781  000BB0  5DF5               	subwf	sprintf@prec& (0+255),w,b
  6782  000BB2  0100               	movlb	0	; () banked
  6783  000BB4  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  6784  000BB6  0A80               	xorlw	128
  6785  000BB8  0100               	movlb	0	; () banked
  6786  000BBA  6FD5               	movwf	??_sprintf& (0+255),b
  6787  000BBC  0100               	movlb	0	; () banked
  6788  000BBE  51F1               	movf	(sprintf@width+1)& (0+255),w,b
  6789  000BC0  0A80               	xorlw	128
  6790  000BC2  0100               	movlb	0	; () banked
  6791  000BC4  59D5               	subwfb	??_sprintf& (0+255),w,b
  6792  000BC6  B0D8               	btfsc	status,0,c
  6793  000BC8  D009               	goto	l5965
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;doprnt.c: 1350: width -= prec;
  6797  000BCA  0100               	movlb	0	; () banked
  6798  000BCC  51F5               	movf	sprintf@prec& (0+255),w,b
  6799  000BCE  0100               	movlb	0	; () banked
  6800  000BD0  5FF0               	subwf	sprintf@width& (0+255),f,b
  6801  000BD2  0100               	movlb	0	; () banked
  6802  000BD4  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  6803  000BD6  0100               	movlb	0	; () banked
  6804  000BD8  5BF1               	subwfb	(sprintf@width+1)& (0+255),f,b
  6805  000BDA  D005               	goto	l5967
  6806  000BDC                     l5965:
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;doprnt.c: 1351: else
  6810                           ;doprnt.c: 1352: width = 0;
  6811  000BDC  0E00               	movlw	0
  6812  000BDE  0100               	movlb	0	; () banked
  6813  000BE0  6FF1               	movwf	(sprintf@width+1)& (0+255),b
  6814  000BE2  0E00               	movlw	0
  6815  000BE4  6FF0               	movwf	sprintf@width& (0+255),b
  6816  000BE6                     l5967:
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;doprnt.c: 1353: }
  6820                           ;doprnt.c: 1381: if(width > c)
  6821  000BE6  0E80               	movlw	128
  6822  000BE8  0100               	movlb	0	; () banked
  6823  000BEA  BFF7               	btfsc	sprintf@c& (0+255),7,b
  6824  000BEC  0E7F               	movlw	127
  6825  000BEE  0100               	movlb	0	; () banked
  6826  000BF0  6FD5               	movwf	??_sprintf& (0+255),b
  6827  000BF2  0100               	movlb	0	; () banked
  6828  000BF4  51F0               	movf	sprintf@width& (0+255),w,b
  6829  000BF6  0100               	movlb	0	; () banked
  6830  000BF8  5DF7               	subwf	sprintf@c& (0+255),w,b
  6831  000BFA  0100               	movlb	0	; () banked
  6832  000BFC  51F1               	movf	(sprintf@width+1)& (0+255),w,b
  6833  000BFE  0A80               	xorlw	128
  6834  000C00  0100               	movlb	0	; () banked
  6835  000C02  59D5               	subwfb	??_sprintf& (0+255),w,b
  6836  000C04  B0D8               	btfsc	status,0,c
  6837  000C06  D00B               	goto	l5971
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;doprnt.c: 1382: width -= c;
  6841  000C08  0100               	movlb	0	; () banked
  6842  000C0A  51F7               	movf	sprintf@c& (0+255),w,b
  6843  000C0C  0100               	movlb	0	; () banked
  6844  000C0E  5FF0               	subwf	sprintf@width& (0+255),f,b
  6845  000C10  0E00               	movlw	0
  6846  000C12  0100               	movlb	0	; () banked
  6847  000C14  BFF7               	btfsc	sprintf@c& (0+255),7,b
  6848  000C16  0EFF               	movlw	255
  6849  000C18  0100               	movlb	0	; () banked
  6850  000C1A  5BF1               	subwfb	(sprintf@width+1)& (0+255),f,b
  6851  000C1C  D005               	goto	l5973
  6852  000C1E                     l5971:
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;doprnt.c: 1383: else
  6856                           ;doprnt.c: 1384: width = 0;
  6857  000C1E  0E00               	movlw	0
  6858  000C20  0100               	movlb	0	; () banked
  6859  000C22  6FF1               	movwf	(sprintf@width+1)& (0+255),b
  6860  000C24  0E00               	movlw	0
  6861  000C26  6FF0               	movwf	sprintf@width& (0+255),b
  6862  000C28                     l5973:
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;doprnt.c: 1422: {
  6866                           ;doprnt.c: 1424: if(width
  6867                           ;doprnt.c: 1428: )
  6868  000C28  0100               	movlb	0	; () banked
  6869  000C2A  51F0               	movf	sprintf@width& (0+255),w,b
  6870  000C2C  0100               	movlb	0	; () banked
  6871  000C2E  11F1               	iorwf	(sprintf@width+1)& (0+255),w,b
  6872  000C30  B4D8               	btfsc	status,2,c
  6873  000C32  D013               	goto	l5981
  6874  000C34                     l5975:
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  6878  000C34  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6879  000C38  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6880  000C3C  0E20               	movlw	32
  6881  000C3E  6EDF               	movwf	indf2,c
  6882                           
  6883                           ; BSR set to: 0
  6884  000C40  0100               	movlb	0	; () banked
  6885  000C42  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  6886  000C44  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;doprnt.c: 1431: while(--width);
  6890  000C46  0100               	movlb	0	; () banked
  6891  000C48  07F0               	decf	sprintf@width& (0+255),f,b
  6892  000C4A  A0D8               	btfss	status,0,c
  6893  000C4C  07F1               	decf	(sprintf@width+1)& (0+255),f,b
  6894  000C4E  0100               	movlb	0	; () banked
  6895  000C50  51F0               	movf	sprintf@width& (0+255),w,b
  6896  000C52  0100               	movlb	0	; () banked
  6897  000C54  11F1               	iorwf	(sprintf@width+1)& (0+255),w,b
  6898  000C56  A4D8               	btfss	status,2,c
  6899  000C58  D7ED               	goto	l5975
  6900  000C5A                     l5981:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;doprnt.c: 1438: if(flag & 0x03)
  6904  000C5A  0E03               	movlw	3
  6905  000C5C  0100               	movlb	0	; () banked
  6906  000C5E  15E4               	andwf	sprintf@flag& (0+255),w,b
  6907  000C60  0100               	movlb	0	; () banked
  6908  000C62  6FD5               	movwf	??_sprintf& (0+255),b
  6909  000C64  0E00               	movlw	0
  6910  000C66  0100               	movlb	0	; () banked
  6911  000C68  15E5               	andwf	(sprintf@flag+1)& (0+255),w,b
  6912  000C6A  0100               	movlb	0	; () banked
  6913  000C6C  6FD6               	movwf	(??_sprintf+1)& (0+255),b
  6914  000C6E  0100               	movlb	0	; () banked
  6915  000C70  51D5               	movf	??_sprintf& (0+255),w,b
  6916  000C72  0100               	movlb	0	; () banked
  6917  000C74  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
  6918  000C76  B4D8               	btfsc	status,2,c
  6919  000C78  D051               	goto	l5993
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6923  000C7A  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6924  000C7E  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6925  000C82  0E2D               	movlw	45
  6926  000C84  6EDF               	movwf	indf2,c
  6927  000C86  D047               	goto	l5991
  6928  000C88                     l5987:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;doprnt.c: 1478: {
  6932                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6933  000C88  C0F5  F0D5         	movff	sprintf@prec,??_sprintf
  6934  000C8C  C0F6  F0D6         	movff	sprintf@prec+1,??_sprintf+1
  6935  000C90  0100               	movlb	0	; () banked
  6936  000C92  90D8               	bcf	status,0,c
  6937  000C94  37D5               	rlcf	??_sprintf& (0+255),f,b
  6938  000C96  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
  6939  000C98  0100               	movlb	0	; () banked
  6940  000C9A  90D8               	bcf	status,0,c
  6941  000C9C  37D5               	rlcf	??_sprintf& (0+255),f,b
  6942  000C9E  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
  6943  000CA0  0E5F               	movlw	low _dpowers
  6944  000CA2  0100               	movlb	0	; () banked
  6945  000CA4  25D5               	addwf	??_sprintf& (0+255),w,b
  6946  000CA6  6EF6               	movwf	tblptrl,c
  6947  000CA8  0EFE               	movlw	high _dpowers
  6948  000CAA  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
  6949  000CAC  6EF7               	movwf	tblptrh,c
  6950  000CAE                     	if	0	;There are less than 3 active tblptr bytes
  6951  000CAE                     	endif
  6952  000CAE  0009               	tblrd		*+
  6953  000CB0  CFF5 F084          	movff	tablat,___lldiv@divisor
  6954  000CB4  0009               	tblrd		*+
  6955  000CB6  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  6956  000CBA  0009               	tblrd		*+
  6957  000CBC  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  6958  000CC0  000A               	tblrd		*-
  6959  000CC2  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  6960  000CC6  C0EA  F080         	movff	sprintf@val,___lldiv@dividend
  6961  000CCA  C0EB  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  6962  000CCE  C0EC  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  6963  000CD2  C0ED  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  6964  000CD6  EC63  F01A         	call	___lldiv	;wreg free
  6965  000CDA  C080  F08D         	movff	?___lldiv,___llmod@dividend
  6966  000CDE  C081  F08E         	movff	?___lldiv+1,___llmod@dividend+1
  6967  000CE2  C082  F08F         	movff	?___lldiv+2,___llmod@dividend+2
  6968  000CE6  C083  F090         	movff	?___lldiv+3,___llmod@dividend+3
  6969  000CEA  0E0A               	movlw	10
  6970  000CEC  0100               	movlb	0	; () banked
  6971  000CEE  6F91               	movwf	___llmod@divisor& (0+255),b
  6972  000CF0  0E00               	movlw	0
  6973  000CF2  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  6974  000CF4  0E00               	movlw	0
  6975  000CF6  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  6976  000CF8  0E00               	movlw	0
  6977  000CFA  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  6978  000CFC  EC14  F01C         	call	___llmod	;wreg free
  6979  000D00  0100               	movlb	0	; () banked
  6980  000D02  518D               	movf	?___llmod& (0+255),w,b
  6981  000D04  0F30               	addlw	48
  6982  000D06  0100               	movlb	0	; () banked
  6983  000D08  6FF7               	movwf	sprintf@c& (0+255),b
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;doprnt.c: 1523: }
  6987                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6988  000D0A  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  6989  000D0E  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  6990  000D12  C0F7  FFDF         	movff	sprintf@c,indf2
  6991  000D16                     l5991:
  6992                           
  6993                           ; BSR set to: 0
  6994  000D16  0100               	movlb	0	; () banked
  6995  000D18  4BC8               	infsnz	sprintf@sp& (0+255),f,b
  6996  000D1A  2BC9               	incf	(sprintf@sp+1)& (0+255),f,b
  6997  000D1C                     l5993:
  6998                           
  6999                           ; BSR set to: 0
  7000  000D1C  0100               	movlb	0	; () banked
  7001  000D1E  07F5               	decf	sprintf@prec& (0+255),f,b
  7002  000D20  A0D8               	btfss	status,0,c
  7003  000D22  07F6               	decf	(sprintf@prec+1)& (0+255),f,b
  7004  000D24  0100               	movlb	0	; () banked
  7005  000D26  29F5               	incf	sprintf@prec& (0+255),w,b
  7006  000D28  E1AF               	bnz	l5987
  7007  000D2A  0100               	movlb	0	; () banked
  7008  000D2C  29F6               	incf	(sprintf@prec+1)& (0+255),w,b
  7009  000D2E  A4D8               	btfss	status,2,c
  7010  000D30  D7AB               	goto	l5987
  7011  000D32                     l5995:
  7012                           
  7013                           ; BSR set to: 0
  7014  000D32  0100               	movlb	0	; () banked
  7015  000D34  51CA               	movf	sprintf@f& (0+255),w,b
  7016  000D36  0100               	movlb	0	; () banked
  7017  000D38  6FD5               	movwf	??_sprintf& (0+255),b
  7018  000D3A  0100               	movlb	0	; () banked
  7019  000D3C  51CB               	movf	(sprintf@f+1)& (0+255),w,b
  7020  000D3E  0100               	movlb	0	; () banked
  7021  000D40  6FD6               	movwf	(??_sprintf+1)& (0+255),b
  7022  000D42  0100               	movlb	0	; () banked
  7023  000D44  4BCA               	infsnz	sprintf@f& (0+255),f,b
  7024  000D46  2BCB               	incf	(sprintf@f+1)& (0+255),f,b
  7025  000D48  C0D5  FFF6         	movff	??_sprintf,tblptrl
  7026  000D4C  C0D6  FFF7         	movff	??_sprintf+1,tblptrh
  7027  000D50  0E00               	movlw	low (__mediumconst shr (0+16))
  7028  000D52  6EF8               	movwf	tblptru,c
  7029  000D54  0E0F               	movlw	(high __ramtop+-1)
  7030  000D56  64F7               	cpfsgt	tblptrh,c
  7031  000D58  D003               	bra	u7187
  7032  000D5A  0008               	tblrd		*
  7033  000D5C  50F5               	movf	tablat,w,c
  7034  000D5E  D005               	bra	u7180
  7035  000D60                     u7187:
  7036  000D60  CFF6 FFE1          	movff	tblptrl,fsr1l
  7037  000D64  CFF7 FFE2          	movff	tblptrh,fsr1h
  7038  000D68  50E7               	movf	indf1,w,c
  7039  000D6A                     u7180:
  7040  000D6A  0100               	movlb	0	; () banked
  7041  000D6C  6FF7               	movwf	sprintf@c& (0+255),b
  7042  000D6E  0100               	movlb	0	; () banked
  7043  000D70  51F7               	movf	sprintf@c& (0+255),w,b
  7044  000D72  A4D8               	btfss	status,2,c
  7045  000D74  EF15  F000         	goto	l5675
  7046  000D78                     l5997:
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;doprnt.c: 1538: *sp = 0;
  7050  000D78  C0C8  FFD9         	movff	sprintf@sp,fsr2l
  7051  000D7C  C0C9  FFDA         	movff	sprintf@sp+1,fsr2h
  7052  000D80  0E00               	movlw	0
  7053  000D82  6EDF               	movwf	indf2,c
  7054  000D84  0012               	return	
  7055  000D86                     __end_of_sprintf:
  7056                           	opt stack 0
  7057                           tblptru	equ	0xFF8
  7058                           tblptrh	equ	0xFF7
  7059                           tblptrl	equ	0xFF6
  7060                           tablat	equ	0xFF5
  7061                           prodh	equ	0xFF4
  7062                           prodl	equ	0xFF3
  7063                           intcon	equ	0xFF2
  7064                           intcon2	equ	0xFF1
  7065                           intcon3	equ	0xFF0
  7066                           postinc0	equ	0xFEE
  7067                           wreg	equ	0xFE8
  7068                           indf1	equ	0xFE7
  7069                           postdec1	equ	0xFE5
  7070                           fsr1h	equ	0xFE2
  7071                           fsr1l	equ	0xFE1
  7072                           indf2	equ	0xFDF
  7073                           postinc2	equ	0xFDE
  7074                           postdec2	equ	0xFDD
  7075                           fsr2h	equ	0xFDA
  7076                           fsr2l	equ	0xFD9
  7077                           status	equ	0xFD8
  7078                           
  7079 ;; *************** function _scale *****************
  7080 ;; Defined at:
  7081 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  scl             1    wreg     char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  scl             1   41[BANK0 ] char 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  3   35[BANK0 ] char 
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7095 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;Total ram usage:        7 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:    7
  7102 ;; This function calls:
  7103 ;;		___awdiv
  7104 ;;		___awmod
  7105 ;;		___ftmul
  7106 ;;		___wmul
  7107 ;; This function is called by:
  7108 ;;		_sprintf
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text14
  7113  0016F2                     __ptext14:
  7114                           	opt stack 0
  7115  0016F2                     _scale:
  7116                           	opt stack 22
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;incstack = 0
  7120                           ;scale@scl stored from wreg
  7121  0016F2  0100               	movlb	0	; () banked
  7122  0016F4  6FA9               	movwf	scale@scl& (0+255),b
  7123                           
  7124                           ;doprnt.c: 428: if(scl < 0) {
  7125  0016F6  0100               	movlb	0	; () banked
  7126  0016F8  AFA9               	btfss	scale@scl& (0+255),7,b
  7127  0016FA  D12A               	goto	l5503
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;doprnt.c: 429: scl = -scl;
  7131  0016FC  0100               	movlb	0	; () banked
  7132  0016FE  6DA9               	negf	scale@scl& (0+255),b
  7133                           
  7134                           ;doprnt.c: 430: if(scl>=110)
  7135  001700  0100               	movlb	0	; () banked
  7136  001702  51A9               	movf	scale@scl& (0+255),w,b
  7137  001704  0A80               	xorlw	128
  7138  001706  0F12               	addlw	-238
  7139  001708  A0D8               	btfss	status,0,c
  7140  00170A  D0AC               	goto	l5493
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7144  00170C  0E00               	movlw	0
  7145  00170E  0100               	movlb	0	; () banked
  7146  001710  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7147  001712  0E03               	movlw	3
  7148  001714  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7149  001716  0E00               	movlw	0
  7150  001718  0100               	movlb	0	; () banked
  7151  00171A  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7152  00171C  0E0A               	movlw	10
  7153  00171E  6F88               	movwf	___awdiv@divisor& (0+255),b
  7154  001720  0E00               	movlw	0
  7155  001722  0100               	movlb	0	; () banked
  7156  001724  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7157  001726  0E64               	movlw	100
  7158  001728  6F82               	movwf	___awmod@divisor& (0+255),b
  7159  00172A  0100               	movlb	0	; () banked
  7160  00172C  51A9               	movf	scale@scl& (0+255),w,b
  7161  00172E  0100               	movlb	0	; () banked
  7162  001730  6F80               	movwf	___awmod@dividend& (0+255),b
  7163  001732  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7164  001734  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7165  001736  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7166  001738  ECC3  F01B         	call	___awmod	;wreg free
  7167  00173C  C080  F086         	movff	?___awmod,___awdiv@dividend
  7168  001740  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  7169  001744  EC04  F01A         	call	___awdiv	;wreg free
  7170  001748  0E09               	movlw	9
  7171  00174A  0100               	movlb	0	; () banked
  7172  00174C  2586               	addwf	?___awdiv& (0+255),w,b
  7173  00174E  0100               	movlb	0	; () banked
  7174  001750  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7175  001752  0E00               	movlw	0
  7176  001754  0100               	movlb	0	; () banked
  7177  001756  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7178  001758  0100               	movlb	0	; () banked
  7179  00175A  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7180  00175C  EC27  F020         	call	___wmul	;wreg free
  7181  001760  0E87               	movlw	low __npowers_
  7182  001762  0100               	movlb	0	; () banked
  7183  001764  258E               	addwf	?___wmul& (0+255),w,b
  7184  001766  6EF6               	movwf	tblptrl,c
  7185  001768  0EFE               	movlw	high __npowers_
  7186  00176A  0100               	movlb	0	; () banked
  7187  00176C  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7188  00176E  6EF7               	movwf	tblptrh,c
  7189  001770                     	if	0	;There are less than 3 active tblptr bytes
  7190  001770                     	endif
  7191  001770  0009               	tblrd		*+
  7192  001772  CFF5 F097          	movff	tablat,___ftmul@f2
  7193  001776  0009               	tblrd		*+
  7194  001778  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7195  00177C  000A               	tblrd		*-
  7196  00177E  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7197  001782  0E00               	movlw	0
  7198  001784  0100               	movlb	0	; () banked
  7199  001786  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7200  001788  0E64               	movlw	100
  7201  00178A  6F88               	movwf	___awdiv@divisor& (0+255),b
  7202  00178C  0100               	movlb	0	; () banked
  7203  00178E  51A9               	movf	scale@scl& (0+255),w,b
  7204  001790  0100               	movlb	0	; () banked
  7205  001792  6F86               	movwf	___awdiv@dividend& (0+255),b
  7206  001794  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  7207  001796  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  7208  001798  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7209  00179A  EC04  F01A         	call	___awdiv	;wreg free
  7210  00179E  0E12               	movlw	18
  7211  0017A0  0100               	movlb	0	; () banked
  7212  0017A2  2586               	addwf	?___awdiv& (0+255),w,b
  7213  0017A4  0100               	movlb	0	; () banked
  7214  0017A6  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7215  0017A8  0E00               	movlw	0
  7216  0017AA  0100               	movlb	0	; () banked
  7217  0017AC  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7218  0017AE  0100               	movlb	0	; () banked
  7219  0017B0  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7220  0017B2  0E00               	movlw	0
  7221  0017B4  0100               	movlb	0	; () banked
  7222  0017B6  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7223  0017B8  0E03               	movlw	3
  7224  0017BA  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7225  0017BC  EC27  F020         	call	___wmul	;wreg free
  7226  0017C0  0E87               	movlw	low __npowers_
  7227  0017C2  0100               	movlb	0	; () banked
  7228  0017C4  258E               	addwf	?___wmul& (0+255),w,b
  7229  0017C6  6EF6               	movwf	tblptrl,c
  7230  0017C8  0EFE               	movlw	high __npowers_
  7231  0017CA  0100               	movlb	0	; () banked
  7232  0017CC  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7233  0017CE  6EF7               	movwf	tblptrh,c
  7234  0017D0                     	if	0	;There are less than 3 active tblptr bytes
  7235  0017D0                     	endif
  7236  0017D0  0009               	tblrd		*+
  7237  0017D2  CFF5 F094          	movff	tablat,___ftmul@f1
  7238  0017D6  0009               	tblrd		*+
  7239  0017D8  CFF5 F095          	movff	tablat,___ftmul@f1+1
  7240  0017DC  000A               	tblrd		*-
  7241  0017DE  CFF5 F096          	movff	tablat,___ftmul@f1+2
  7242  0017E2  ECBC  F015         	call	___ftmul	;wreg free
  7243  0017E6  C094  F0A6         	movff	?___ftmul,_scale$2273
  7244  0017EA  C095  F0A7         	movff	?___ftmul+1,_scale$2273+1
  7245  0017EE  C096  F0A8         	movff	?___ftmul+2,_scale$2273+2
  7246                           
  7247                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7248  0017F2  C0A6  F094         	movff	_scale$2273,___ftmul@f1
  7249  0017F6  C0A7  F095         	movff	_scale$2273+1,___ftmul@f1+1
  7250  0017FA  C0A8  F096         	movff	_scale$2273+2,___ftmul@f1+2
  7251  0017FE  0E00               	movlw	0
  7252  001800  0100               	movlb	0	; () banked
  7253  001802  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7254  001804  0E03               	movlw	3
  7255  001806  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7256  001808  0E00               	movlw	0
  7257  00180A  0100               	movlb	0	; () banked
  7258  00180C  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7259  00180E  0E0A               	movlw	10
  7260  001810  6F82               	movwf	___awmod@divisor& (0+255),b
  7261  001812  0100               	movlb	0	; () banked
  7262  001814  51A9               	movf	scale@scl& (0+255),w,b
  7263  001816  0100               	movlb	0	; () banked
  7264  001818  6F80               	movwf	___awmod@dividend& (0+255),b
  7265  00181A  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7266  00181C  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7267  00181E  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7268  001820  ECC3  F01B         	call	___awmod	;wreg free
  7269  001824  C080  F08E         	movff	?___awmod,___wmul@multiplier
  7270  001828  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  7271  00182C  EC27  F020         	call	___wmul	;wreg free
  7272  001830  0E87               	movlw	low __npowers_
  7273  001832  0100               	movlb	0	; () banked
  7274  001834  258E               	addwf	?___wmul& (0+255),w,b
  7275  001836  6EF6               	movwf	tblptrl,c
  7276  001838  0EFE               	movlw	high __npowers_
  7277  00183A  0100               	movlb	0	; () banked
  7278  00183C  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7279  00183E  6EF7               	movwf	tblptrh,c
  7280  001840                     	if	0	;There are less than 3 active tblptr bytes
  7281  001840                     	endif
  7282  001840  0009               	tblrd		*+
  7283  001842  CFF5 F097          	movff	tablat,___ftmul@f2
  7284  001846  0009               	tblrd		*+
  7285  001848  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7286  00184C  000A               	tblrd		*-
  7287  00184E  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7288  001852  ECBC  F015         	call	___ftmul	;wreg free
  7289  001856  C094  F0A3         	movff	?___ftmul,?_scale
  7290  00185A  C095  F0A4         	movff	?___ftmul+1,?_scale+1
  7291  00185E  C096  F0A5         	movff	?___ftmul+2,?_scale+2
  7292  001862  0012               	return	
  7293  001864                     l5493:
  7294                           
  7295                           ;doprnt.c: 432: else if(scl > 10)
  7296  001864  0100               	movlb	0	; () banked
  7297  001866  51A9               	movf	scale@scl& (0+255),w,b
  7298  001868  0A80               	xorlw	128
  7299  00186A  0F75               	addlw	-139
  7300  00186C  A0D8               	btfss	status,0,c
  7301  00186E  D05D               	goto	l5499
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7305  001870  0E00               	movlw	0
  7306  001872  0100               	movlb	0	; () banked
  7307  001874  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7308  001876  0E0A               	movlw	10
  7309  001878  6F88               	movwf	___awdiv@divisor& (0+255),b
  7310  00187A  0100               	movlb	0	; () banked
  7311  00187C  51A9               	movf	scale@scl& (0+255),w,b
  7312  00187E  0100               	movlb	0	; () banked
  7313  001880  6F86               	movwf	___awdiv@dividend& (0+255),b
  7314  001882  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  7315  001884  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  7316  001886  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7317  001888  EC04  F01A         	call	___awdiv	;wreg free
  7318  00188C  0E09               	movlw	9
  7319  00188E  0100               	movlb	0	; () banked
  7320  001890  2586               	addwf	?___awdiv& (0+255),w,b
  7321  001892  0100               	movlb	0	; () banked
  7322  001894  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7323  001896  0E00               	movlw	0
  7324  001898  0100               	movlb	0	; () banked
  7325  00189A  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7326  00189C  0100               	movlb	0	; () banked
  7327  00189E  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7328  0018A0  0E00               	movlw	0
  7329  0018A2  0100               	movlb	0	; () banked
  7330  0018A4  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7331  0018A6  0E03               	movlw	3
  7332  0018A8  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7333  0018AA  EC27  F020         	call	___wmul	;wreg free
  7334  0018AE  0E87               	movlw	low __npowers_
  7335  0018B0  0100               	movlb	0	; () banked
  7336  0018B2  258E               	addwf	?___wmul& (0+255),w,b
  7337  0018B4  6EF6               	movwf	tblptrl,c
  7338  0018B6  0EFE               	movlw	high __npowers_
  7339  0018B8  0100               	movlb	0	; () banked
  7340  0018BA  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7341  0018BC  6EF7               	movwf	tblptrh,c
  7342  0018BE                     	if	0	;There are less than 3 active tblptr bytes
  7343  0018BE                     	endif
  7344  0018BE  0009               	tblrd		*+
  7345  0018C0  CFF5 F094          	movff	tablat,___ftmul@f1
  7346  0018C4  0009               	tblrd		*+
  7347  0018C6  CFF5 F095          	movff	tablat,___ftmul@f1+1
  7348  0018CA  000A               	tblrd		*-
  7349  0018CC  CFF5 F096          	movff	tablat,___ftmul@f1+2
  7350  0018D0  0E00               	movlw	0
  7351  0018D2  0100               	movlb	0	; () banked
  7352  0018D4  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7353  0018D6  0E03               	movlw	3
  7354  0018D8  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7355  0018DA  0E00               	movlw	0
  7356  0018DC  0100               	movlb	0	; () banked
  7357  0018DE  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7358  0018E0  0E0A               	movlw	10
  7359  0018E2  6F82               	movwf	___awmod@divisor& (0+255),b
  7360  0018E4  0100               	movlb	0	; () banked
  7361  0018E6  51A9               	movf	scale@scl& (0+255),w,b
  7362  0018E8  0100               	movlb	0	; () banked
  7363  0018EA  6F80               	movwf	___awmod@dividend& (0+255),b
  7364  0018EC  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7365  0018EE  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7366  0018F0  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7367  0018F2  ECC3  F01B         	call	___awmod	;wreg free
  7368  0018F6  C080  F08E         	movff	?___awmod,___wmul@multiplier
  7369  0018FA  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  7370  0018FE  EC27  F020         	call	___wmul	;wreg free
  7371  001902  0E87               	movlw	low __npowers_
  7372  001904  0100               	movlb	0	; () banked
  7373  001906  258E               	addwf	?___wmul& (0+255),w,b
  7374  001908  6EF6               	movwf	tblptrl,c
  7375  00190A  0EFE               	movlw	high __npowers_
  7376  00190C  0100               	movlb	0	; () banked
  7377  00190E  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7378  001910  6EF7               	movwf	tblptrh,c
  7379  001912                     	if	0	;There are less than 3 active tblptr bytes
  7380  001912                     	endif
  7381  001912  0009               	tblrd		*+
  7382  001914  CFF5 F097          	movff	tablat,___ftmul@f2
  7383  001918  0009               	tblrd		*+
  7384  00191A  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7385  00191E  000A               	tblrd		*-
  7386  001920  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7387  001924  ECBC  F015         	call	___ftmul	;wreg free
  7388  001928  D796               	goto	L5
  7389  00192A                     l5499:
  7390                           
  7391                           ;doprnt.c: 434: return _npowers_[scl];
  7392  00192A  0100               	movlb	0	; () banked
  7393  00192C  51A9               	movf	scale@scl& (0+255),w,b
  7394  00192E  0D03               	mullw	3
  7395  001930  0E87               	movlw	low __npowers_
  7396  001932  24F3               	addwf	prodl,w,c
  7397  001934  6EF6               	movwf	tblptrl,c
  7398  001936  0EFE               	movlw	high __npowers_
  7399  001938  20F4               	addwfc	prodh,w,c
  7400  00193A  6EF7               	movwf	tblptrh,c
  7401  00193C                     	if	0	;There are less than 3 active tblptr bytes
  7402  00193C                     	endif
  7403  00193C  0009               	tblrd		*+
  7404  00193E  CFF5 F0A3          	movff	tablat,?_scale
  7405  001942  0009               	tblrd		*+
  7406  001944  CFF5 F0A4          	movff	tablat,?_scale+1
  7407  001948  000A               	tblrd		*-
  7408  00194A  CFF5 F0A5          	movff	tablat,?_scale+2
  7409                           
  7410                           ; BSR set to: 0
  7411  00194E  0012               	return	
  7412  001950                     l5503:
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;doprnt.c: 435: }
  7416                           ;doprnt.c: 436: if(scl>=110)
  7417  001950  0100               	movlb	0	; () banked
  7418  001952  51A9               	movf	scale@scl& (0+255),w,b
  7419  001954  0A80               	xorlw	128
  7420  001956  0F12               	addlw	-238
  7421  001958  A0D8               	btfss	status,0,c
  7422  00195A  D0AC               	goto	l5511
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7426  00195C  0E00               	movlw	0
  7427  00195E  0100               	movlb	0	; () banked
  7428  001960  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7429  001962  0E03               	movlw	3
  7430  001964  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7431  001966  0E00               	movlw	0
  7432  001968  0100               	movlb	0	; () banked
  7433  00196A  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7434  00196C  0E0A               	movlw	10
  7435  00196E  6F88               	movwf	___awdiv@divisor& (0+255),b
  7436  001970  0E00               	movlw	0
  7437  001972  0100               	movlb	0	; () banked
  7438  001974  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7439  001976  0E64               	movlw	100
  7440  001978  6F82               	movwf	___awmod@divisor& (0+255),b
  7441  00197A  0100               	movlb	0	; () banked
  7442  00197C  51A9               	movf	scale@scl& (0+255),w,b
  7443  00197E  0100               	movlb	0	; () banked
  7444  001980  6F80               	movwf	___awmod@dividend& (0+255),b
  7445  001982  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7446  001984  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7447  001986  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7448  001988  ECC3  F01B         	call	___awmod	;wreg free
  7449  00198C  C080  F086         	movff	?___awmod,___awdiv@dividend
  7450  001990  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  7451  001994  EC04  F01A         	call	___awdiv	;wreg free
  7452  001998  0E09               	movlw	9
  7453  00199A  0100               	movlb	0	; () banked
  7454  00199C  2586               	addwf	?___awdiv& (0+255),w,b
  7455  00199E  0100               	movlb	0	; () banked
  7456  0019A0  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7457  0019A2  0E00               	movlw	0
  7458  0019A4  0100               	movlb	0	; () banked
  7459  0019A6  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7460  0019A8  0100               	movlb	0	; () banked
  7461  0019AA  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7462  0019AC  EC27  F020         	call	___wmul	;wreg free
  7463  0019B0  0EAE               	movlw	low __powers_
  7464  0019B2  0100               	movlb	0	; () banked
  7465  0019B4  258E               	addwf	?___wmul& (0+255),w,b
  7466  0019B6  6EF6               	movwf	tblptrl,c
  7467  0019B8  0EFE               	movlw	high __powers_
  7468  0019BA  0100               	movlb	0	; () banked
  7469  0019BC  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7470  0019BE  6EF7               	movwf	tblptrh,c
  7471  0019C0                     	if	0	;There are less than 3 active tblptr bytes
  7472  0019C0                     	endif
  7473  0019C0  0009               	tblrd		*+
  7474  0019C2  CFF5 F097          	movff	tablat,___ftmul@f2
  7475  0019C6  0009               	tblrd		*+
  7476  0019C8  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7477  0019CC  000A               	tblrd		*-
  7478  0019CE  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7479  0019D2  0E00               	movlw	0
  7480  0019D4  0100               	movlb	0	; () banked
  7481  0019D6  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7482  0019D8  0E64               	movlw	100
  7483  0019DA  6F88               	movwf	___awdiv@divisor& (0+255),b
  7484  0019DC  0100               	movlb	0	; () banked
  7485  0019DE  51A9               	movf	scale@scl& (0+255),w,b
  7486  0019E0  0100               	movlb	0	; () banked
  7487  0019E2  6F86               	movwf	___awdiv@dividend& (0+255),b
  7488  0019E4  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  7489  0019E6  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  7490  0019E8  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7491  0019EA  EC04  F01A         	call	___awdiv	;wreg free
  7492  0019EE  0E12               	movlw	18
  7493  0019F0  0100               	movlb	0	; () banked
  7494  0019F2  2586               	addwf	?___awdiv& (0+255),w,b
  7495  0019F4  0100               	movlb	0	; () banked
  7496  0019F6  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7497  0019F8  0E00               	movlw	0
  7498  0019FA  0100               	movlb	0	; () banked
  7499  0019FC  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7500  0019FE  0100               	movlb	0	; () banked
  7501  001A00  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7502  001A02  0E00               	movlw	0
  7503  001A04  0100               	movlb	0	; () banked
  7504  001A06  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7505  001A08  0E03               	movlw	3
  7506  001A0A  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7507  001A0C  EC27  F020         	call	___wmul	;wreg free
  7508  001A10  0EAE               	movlw	low __powers_
  7509  001A12  0100               	movlb	0	; () banked
  7510  001A14  258E               	addwf	?___wmul& (0+255),w,b
  7511  001A16  6EF6               	movwf	tblptrl,c
  7512  001A18  0EFE               	movlw	high __powers_
  7513  001A1A  0100               	movlb	0	; () banked
  7514  001A1C  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7515  001A1E  6EF7               	movwf	tblptrh,c
  7516  001A20                     	if	0	;There are less than 3 active tblptr bytes
  7517  001A20                     	endif
  7518  001A20  0009               	tblrd		*+
  7519  001A22  CFF5 F094          	movff	tablat,___ftmul@f1
  7520  001A26  0009               	tblrd		*+
  7521  001A28  CFF5 F095          	movff	tablat,___ftmul@f1+1
  7522  001A2C  000A               	tblrd		*-
  7523  001A2E  CFF5 F096          	movff	tablat,___ftmul@f1+2
  7524  001A32  ECBC  F015         	call	___ftmul	;wreg free
  7525  001A36  C094  F0A6         	movff	?___ftmul,_scale$2273
  7526  001A3A  C095  F0A7         	movff	?___ftmul+1,_scale$2273+1
  7527  001A3E  C096  F0A8         	movff	?___ftmul+2,_scale$2273+2
  7528                           
  7529                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7530  001A42  C0A6  F094         	movff	_scale$2273,___ftmul@f1
  7531  001A46  C0A7  F095         	movff	_scale$2273+1,___ftmul@f1+1
  7532  001A4A  C0A8  F096         	movff	_scale$2273+2,___ftmul@f1+2
  7533  001A4E  0E00               	movlw	0
  7534  001A50  0100               	movlb	0	; () banked
  7535  001A52  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7536  001A54  0E03               	movlw	3
  7537  001A56  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7538  001A58  0E00               	movlw	0
  7539  001A5A  0100               	movlb	0	; () banked
  7540  001A5C  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7541  001A5E  0E0A               	movlw	10
  7542  001A60  6F82               	movwf	___awmod@divisor& (0+255),b
  7543  001A62  0100               	movlb	0	; () banked
  7544  001A64  51A9               	movf	scale@scl& (0+255),w,b
  7545  001A66  0100               	movlb	0	; () banked
  7546  001A68  6F80               	movwf	___awmod@dividend& (0+255),b
  7547  001A6A  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7548  001A6C  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7549  001A6E  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7550  001A70  ECC3  F01B         	call	___awmod	;wreg free
  7551  001A74  C080  F08E         	movff	?___awmod,___wmul@multiplier
  7552  001A78  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  7553  001A7C  EC27  F020         	call	___wmul	;wreg free
  7554  001A80  0EAE               	movlw	low __powers_
  7555  001A82  0100               	movlb	0	; () banked
  7556  001A84  258E               	addwf	?___wmul& (0+255),w,b
  7557  001A86  6EF6               	movwf	tblptrl,c
  7558  001A88  0EFE               	movlw	high __powers_
  7559  001A8A  0100               	movlb	0	; () banked
  7560  001A8C  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7561  001A8E  6EF7               	movwf	tblptrh,c
  7562  001A90                     	if	0	;There are less than 3 active tblptr bytes
  7563  001A90                     	endif
  7564  001A90  0009               	tblrd		*+
  7565  001A92  CFF5 F097          	movff	tablat,___ftmul@f2
  7566  001A96  0009               	tblrd		*+
  7567  001A98  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7568  001A9C  000A               	tblrd		*-
  7569  001A9E  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7570  001AA2  ECBC  F015         	call	___ftmul	;wreg free
  7571  001AA6  C094  F0A3         	movff	?___ftmul,?_scale
  7572  001AAA  C095  F0A4         	movff	?___ftmul+1,?_scale+1
  7573  001AAE  C096  F0A5         	movff	?___ftmul+2,?_scale+2
  7574  001AB2  0012               	return	
  7575  001AB4                     l5511:
  7576                           
  7577                           ;doprnt.c: 438: else if(scl > 10)
  7578  001AB4  0100               	movlb	0	; () banked
  7579  001AB6  51A9               	movf	scale@scl& (0+255),w,b
  7580  001AB8  0A80               	xorlw	128
  7581  001ABA  0F75               	addlw	-139
  7582  001ABC  A0D8               	btfss	status,0,c
  7583  001ABE  D05D               	goto	l5517
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7587  001AC0  0E00               	movlw	0
  7588  001AC2  0100               	movlb	0	; () banked
  7589  001AC4  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7590  001AC6  0E0A               	movlw	10
  7591  001AC8  6F88               	movwf	___awdiv@divisor& (0+255),b
  7592  001ACA  0100               	movlb	0	; () banked
  7593  001ACC  51A9               	movf	scale@scl& (0+255),w,b
  7594  001ACE  0100               	movlb	0	; () banked
  7595  001AD0  6F86               	movwf	___awdiv@dividend& (0+255),b
  7596  001AD2  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  7597  001AD4  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  7598  001AD6  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7599  001AD8  EC04  F01A         	call	___awdiv	;wreg free
  7600  001ADC  0E09               	movlw	9
  7601  001ADE  0100               	movlb	0	; () banked
  7602  001AE0  2586               	addwf	?___awdiv& (0+255),w,b
  7603  001AE2  0100               	movlb	0	; () banked
  7604  001AE4  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7605  001AE6  0E00               	movlw	0
  7606  001AE8  0100               	movlb	0	; () banked
  7607  001AEA  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7608  001AEC  0100               	movlb	0	; () banked
  7609  001AEE  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7610  001AF0  0E00               	movlw	0
  7611  001AF2  0100               	movlb	0	; () banked
  7612  001AF4  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7613  001AF6  0E03               	movlw	3
  7614  001AF8  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7615  001AFA  EC27  F020         	call	___wmul	;wreg free
  7616  001AFE  0EAE               	movlw	low __powers_
  7617  001B00  0100               	movlb	0	; () banked
  7618  001B02  258E               	addwf	?___wmul& (0+255),w,b
  7619  001B04  6EF6               	movwf	tblptrl,c
  7620  001B06  0EFE               	movlw	high __powers_
  7621  001B08  0100               	movlb	0	; () banked
  7622  001B0A  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7623  001B0C  6EF7               	movwf	tblptrh,c
  7624  001B0E                     	if	0	;There are less than 3 active tblptr bytes
  7625  001B0E                     	endif
  7626  001B0E  0009               	tblrd		*+
  7627  001B10  CFF5 F094          	movff	tablat,___ftmul@f1
  7628  001B14  0009               	tblrd		*+
  7629  001B16  CFF5 F095          	movff	tablat,___ftmul@f1+1
  7630  001B1A  000A               	tblrd		*-
  7631  001B1C  CFF5 F096          	movff	tablat,___ftmul@f1+2
  7632  001B20  0E00               	movlw	0
  7633  001B22  0100               	movlb	0	; () banked
  7634  001B24  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7635  001B26  0E03               	movlw	3
  7636  001B28  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7637  001B2A  0E00               	movlw	0
  7638  001B2C  0100               	movlb	0	; () banked
  7639  001B2E  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7640  001B30  0E0A               	movlw	10
  7641  001B32  6F82               	movwf	___awmod@divisor& (0+255),b
  7642  001B34  0100               	movlb	0	; () banked
  7643  001B36  51A9               	movf	scale@scl& (0+255),w,b
  7644  001B38  0100               	movlb	0	; () banked
  7645  001B3A  6F80               	movwf	___awmod@dividend& (0+255),b
  7646  001B3C  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7647  001B3E  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7648  001B40  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7649  001B42  ECC3  F01B         	call	___awmod	;wreg free
  7650  001B46  C080  F08E         	movff	?___awmod,___wmul@multiplier
  7651  001B4A  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  7652  001B4E  EC27  F020         	call	___wmul	;wreg free
  7653  001B52  0EAE               	movlw	low __powers_
  7654  001B54  0100               	movlb	0	; () banked
  7655  001B56  258E               	addwf	?___wmul& (0+255),w,b
  7656  001B58  6EF6               	movwf	tblptrl,c
  7657  001B5A  0EFE               	movlw	high __powers_
  7658  001B5C  0100               	movlb	0	; () banked
  7659  001B5E  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7660  001B60  6EF7               	movwf	tblptrh,c
  7661  001B62                     	if	0	;There are less than 3 active tblptr bytes
  7662  001B62                     	endif
  7663  001B62  0009               	tblrd		*+
  7664  001B64  CFF5 F097          	movff	tablat,___ftmul@f2
  7665  001B68  0009               	tblrd		*+
  7666  001B6A  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7667  001B6E  000A               	tblrd		*-
  7668  001B70  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7669  001B74  ECBC  F015         	call	___ftmul	;wreg free
  7670  001B78  D796               	goto	L6
  7671  001B7A                     l5517:
  7672                           
  7673                           ;doprnt.c: 440: return _powers_[scl];
  7674  001B7A  0100               	movlb	0	; () banked
  7675  001B7C  51A9               	movf	scale@scl& (0+255),w,b
  7676  001B7E  0D03               	mullw	3
  7677  001B80  0EAE               	movlw	low __powers_
  7678  001B82  24F3               	addwf	prodl,w,c
  7679  001B84  6EF6               	movwf	tblptrl,c
  7680  001B86  0EFE               	movlw	high __powers_
  7681  001B88  20F4               	addwfc	prodh,w,c
  7682  001B8A  6EF7               	movwf	tblptrh,c
  7683  001B8C                     	if	0	;There are less than 3 active tblptr bytes
  7684  001B8C                     	endif
  7685  001B8C  0009               	tblrd		*+
  7686  001B8E  CFF5 F0A3          	movff	tablat,?_scale
  7687  001B92  0009               	tblrd		*+
  7688  001B94  CFF5 F0A4          	movff	tablat,?_scale+1
  7689  001B98  000A               	tblrd		*-
  7690  001B9A  CFF5 F0A5          	movff	tablat,?_scale+2
  7691  001B9E  0012               	return	
  7692  001BA0                     __end_of_scale:
  7693                           	opt stack 0
  7694                           tblptru	equ	0xFF8
  7695                           tblptrh	equ	0xFF7
  7696                           tblptrl	equ	0xFF6
  7697                           tablat	equ	0xFF5
  7698                           prodh	equ	0xFF4
  7699                           prodl	equ	0xFF3
  7700                           intcon	equ	0xFF2
  7701                           intcon2	equ	0xFF1
  7702                           intcon3	equ	0xFF0
  7703                           postinc0	equ	0xFEE
  7704                           wreg	equ	0xFE8
  7705                           indf1	equ	0xFE7
  7706                           postdec1	equ	0xFE5
  7707                           fsr1h	equ	0xFE2
  7708                           fsr1l	equ	0xFE1
  7709                           indf2	equ	0xFDF
  7710                           postinc2	equ	0xFDE
  7711                           postdec2	equ	0xFDD
  7712                           fsr2h	equ	0xFDA
  7713                           fsr2l	equ	0xFD9
  7714                           status	equ	0xFD8
  7715                           
  7716 ;; *************** function _isdigit *****************
  7717 ;; Defined at:
  7718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  c               1    wreg     unsigned char 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  c               1    2[BANK0 ] unsigned char 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;		None               void
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7733 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7736 ;;Total ram usage:        3 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    5
  7739 ;; This function calls:
  7740 ;;		Nothing
  7741 ;; This function is called by:
  7742 ;;		_sprintf
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text15
  7747  004146                     __ptext15:
  7748                           	opt stack 0
  7749  004146                     _isdigit:
  7750                           	opt stack 24
  7751                           
  7752                           ;incstack = 0
  7753                           ;isdigit@c stored from wreg
  7754  004146  0100               	movlb	0	; () banked
  7755  004148  6F82               	movwf	isdigit@c& (0+255),b
  7756  00414A  0E00               	movlw	0
  7757  00414C  0100               	movlb	0	; () banked
  7758  00414E  6F81               	movwf	_isdigit$1900& (0+255),b
  7759                           
  7760                           ; BSR set to: 0
  7761  004150  0E3A               	movlw	58
  7762  004152  0100               	movlb	0	; () banked
  7763  004154  6182               	cpfslt	isdigit@c& (0+255),b
  7764  004156  D007               	goto	l5529
  7765                           
  7766                           ; BSR set to: 0
  7767  004158  0E2F               	movlw	47
  7768  00415A  0100               	movlb	0	; () banked
  7769  00415C  6582               	cpfsgt	isdigit@c& (0+255),b
  7770  00415E  D003               	goto	l5529
  7771                           
  7772                           ; BSR set to: 0
  7773  004160  0E01               	movlw	1
  7774  004162  0100               	movlb	0	; () banked
  7775  004164  6F81               	movwf	_isdigit$1900& (0+255),b
  7776  004166                     l5529:
  7777                           
  7778                           ; BSR set to: 0
  7779  004166  C081  F080         	movff	_isdigit$1900,??_isdigit
  7780  00416A  0100               	movlb	0	; () banked
  7781  00416C  3180               	rrcf	??_isdigit& (0+255),w,b
  7782  00416E  0012               	return	
  7783  004170                     __end_of_isdigit:
  7784                           	opt stack 0
  7785                           tblptru	equ	0xFF8
  7786                           tblptrh	equ	0xFF7
  7787                           tblptrl	equ	0xFF6
  7788                           tablat	equ	0xFF5
  7789                           prodh	equ	0xFF4
  7790                           prodl	equ	0xFF3
  7791                           intcon	equ	0xFF2
  7792                           intcon2	equ	0xFF1
  7793                           intcon3	equ	0xFF0
  7794                           postinc0	equ	0xFEE
  7795                           wreg	equ	0xFE8
  7796                           indf1	equ	0xFE7
  7797                           postdec1	equ	0xFE5
  7798                           fsr1h	equ	0xFE2
  7799                           fsr1l	equ	0xFE1
  7800                           indf2	equ	0xFDF
  7801                           postinc2	equ	0xFDE
  7802                           postdec2	equ	0xFDD
  7803                           fsr2h	equ	0xFDA
  7804                           fsr2l	equ	0xFD9
  7805                           status	equ	0xFD8
  7806                           
  7807 ;; *************** function _fround *****************
  7808 ;; Defined at:
  7809 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  prec            1    wreg     unsigned char 
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  prec            1   44[BANK0 ] unsigned char 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  3   35[BANK0 ] unsigned char 
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7823 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7824 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7826 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;Total ram usage:       10 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    7
  7830 ;; This function calls:
  7831 ;;		___awdiv
  7832 ;;		___awmod
  7833 ;;		___ftmul
  7834 ;;		___wmul
  7835 ;; This function is called by:
  7836 ;;		_sprintf
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text16
  7841  00202C                     __ptext16:
  7842                           	opt stack 0
  7843  00202C                     _fround:
  7844                           	opt stack 22
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;incstack = 0
  7848                           ;fround@prec stored from wreg
  7849  00202C  0100               	movlb	0	; () banked
  7850  00202E  6FAC               	movwf	fround@prec& (0+255),b
  7851                           
  7852                           ;doprnt.c: 413: if(prec>=110)
  7853  002030  0E6D               	movlw	109
  7854  002032  0100               	movlb	0	; () banked
  7855  002034  65AC               	cpfsgt	fround@prec& (0+255),b
  7856  002036  D0BA               	goto	l5471
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7860  002038  0E00               	movlw	0
  7861  00203A  0100               	movlb	0	; () banked
  7862  00203C  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7863  00203E  0E03               	movlw	3
  7864  002040  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7865  002042  0E00               	movlw	0
  7866  002044  0100               	movlb	0	; () banked
  7867  002046  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7868  002048  0E0A               	movlw	10
  7869  00204A  6F88               	movwf	___awdiv@divisor& (0+255),b
  7870  00204C  0E00               	movlw	0
  7871  00204E  0100               	movlb	0	; () banked
  7872  002050  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7873  002052  0E64               	movlw	100
  7874  002054  6F82               	movwf	___awmod@divisor& (0+255),b
  7875  002056  C0AC  F080         	movff	fround@prec,___awmod@dividend
  7876  00205A  0100               	movlb	0	; () banked
  7877  00205C  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7878  00205E  ECC3  F01B         	call	___awmod	;wreg free
  7879  002062  C080  F086         	movff	?___awmod,___awdiv@dividend
  7880  002066  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  7881  00206A  EC04  F01A         	call	___awdiv	;wreg free
  7882  00206E  0E09               	movlw	9
  7883  002070  0100               	movlb	0	; () banked
  7884  002072  2586               	addwf	?___awdiv& (0+255),w,b
  7885  002074  0100               	movlb	0	; () banked
  7886  002076  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7887  002078  0E00               	movlw	0
  7888  00207A  0100               	movlb	0	; () banked
  7889  00207C  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7890  00207E  0100               	movlb	0	; () banked
  7891  002080  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7892  002082  EC27  F020         	call	___wmul	;wreg free
  7893  002086  0E87               	movlw	low __npowers_
  7894  002088  0100               	movlb	0	; () banked
  7895  00208A  258E               	addwf	?___wmul& (0+255),w,b
  7896  00208C  6EF6               	movwf	tblptrl,c
  7897  00208E  0EFE               	movlw	high __npowers_
  7898  002090  0100               	movlb	0	; () banked
  7899  002092  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7900  002094  6EF7               	movwf	tblptrh,c
  7901  002096                     	if	0	;There are less than 3 active tblptr bytes
  7902  002096                     	endif
  7903  002096  0009               	tblrd		*+
  7904  002098  CFF5 F097          	movff	tablat,___ftmul@f2
  7905  00209C  0009               	tblrd		*+
  7906  00209E  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7907  0020A2  000A               	tblrd		*-
  7908  0020A4  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7909  0020A8  0E00               	movlw	0
  7910  0020AA  0100               	movlb	0	; () banked
  7911  0020AC  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7912  0020AE  0E64               	movlw	100
  7913  0020B0  6F88               	movwf	___awdiv@divisor& (0+255),b
  7914  0020B2  C0AC  F086         	movff	fround@prec,___awdiv@dividend
  7915  0020B6  0100               	movlb	0	; () banked
  7916  0020B8  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  7917  0020BA  EC04  F01A         	call	___awdiv	;wreg free
  7918  0020BE  0E12               	movlw	18
  7919  0020C0  0100               	movlb	0	; () banked
  7920  0020C2  2586               	addwf	?___awdiv& (0+255),w,b
  7921  0020C4  0100               	movlb	0	; () banked
  7922  0020C6  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7923  0020C8  0E00               	movlw	0
  7924  0020CA  0100               	movlb	0	; () banked
  7925  0020CC  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7926  0020CE  0100               	movlb	0	; () banked
  7927  0020D0  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7928  0020D2  0E00               	movlw	0
  7929  0020D4  0100               	movlb	0	; () banked
  7930  0020D6  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7931  0020D8  0E03               	movlw	3
  7932  0020DA  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7933  0020DC  EC27  F020         	call	___wmul	;wreg free
  7934  0020E0  0E87               	movlw	low __npowers_
  7935  0020E2  0100               	movlb	0	; () banked
  7936  0020E4  258E               	addwf	?___wmul& (0+255),w,b
  7937  0020E6  6EF6               	movwf	tblptrl,c
  7938  0020E8  0EFE               	movlw	high __npowers_
  7939  0020EA  0100               	movlb	0	; () banked
  7940  0020EC  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7941  0020EE  6EF7               	movwf	tblptrh,c
  7942  0020F0                     	if	0	;There are less than 3 active tblptr bytes
  7943  0020F0                     	endif
  7944  0020F0  0009               	tblrd		*+
  7945  0020F2  CFF5 F094          	movff	tablat,___ftmul@f1
  7946  0020F6  0009               	tblrd		*+
  7947  0020F8  CFF5 F095          	movff	tablat,___ftmul@f1+1
  7948  0020FC  000A               	tblrd		*-
  7949  0020FE  CFF5 F096          	movff	tablat,___ftmul@f1+2
  7950  002102  ECBC  F015         	call	___ftmul	;wreg free
  7951  002106  C094  F0A9         	movff	?___ftmul,_fround$2271
  7952  00210A  C095  F0AA         	movff	?___ftmul+1,_fround$2271+1
  7953  00210E  C096  F0AB         	movff	?___ftmul+2,_fround$2271+2
  7954                           
  7955                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7956  002112  0E00               	movlw	0
  7957  002114  0100               	movlb	0	; () banked
  7958  002116  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7959  002118  0E03               	movlw	3
  7960  00211A  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7961  00211C  0E00               	movlw	0
  7962  00211E  0100               	movlb	0	; () banked
  7963  002120  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7964  002122  0E0A               	movlw	10
  7965  002124  6F82               	movwf	___awmod@divisor& (0+255),b
  7966  002126  C0AC  F080         	movff	fround@prec,___awmod@dividend
  7967  00212A  0100               	movlb	0	; () banked
  7968  00212C  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7969  00212E  ECC3  F01B         	call	___awmod	;wreg free
  7970  002132  C080  F08E         	movff	?___awmod,___wmul@multiplier
  7971  002136  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  7972  00213A  EC27  F020         	call	___wmul	;wreg free
  7973  00213E  0E87               	movlw	low __npowers_
  7974  002140  0100               	movlb	0	; () banked
  7975  002142  258E               	addwf	?___wmul& (0+255),w,b
  7976  002144  6EF6               	movwf	tblptrl,c
  7977  002146  0EFE               	movlw	high __npowers_
  7978  002148  0100               	movlb	0	; () banked
  7979  00214A  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7980  00214C  6EF7               	movwf	tblptrh,c
  7981  00214E                     	if	0	;There are less than 3 active tblptr bytes
  7982  00214E                     	endif
  7983  00214E  0009               	tblrd		*+
  7984  002150  CFF5 F097          	movff	tablat,___ftmul@f2
  7985  002154  0009               	tblrd		*+
  7986  002156  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7987  00215A  000A               	tblrd		*-
  7988  00215C  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7989  002160  C0A9  F094         	movff	_fround$2271,___ftmul@f1
  7990  002164  C0AA  F095         	movff	_fround$2271+1,___ftmul@f1+1
  7991  002168  C0AB  F096         	movff	_fround$2271+2,___ftmul@f1+2
  7992  00216C  ECBC  F015         	call	___ftmul	;wreg free
  7993  002170  C094  F0A6         	movff	?___ftmul,_fround$2272
  7994  002174  C095  F0A7         	movff	?___ftmul+1,_fround$2272+1
  7995  002178  C096  F0A8         	movff	?___ftmul+2,_fround$2272+2
  7996                           
  7997                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7998  00217C  C0A6  F094         	movff	_fround$2272,___ftmul@f1
  7999  002180  C0A7  F095         	movff	_fround$2272+1,___ftmul@f1+1
  8000  002184  C0A8  F096         	movff	_fround$2272+2,___ftmul@f1+2
  8001  002188  0E00               	movlw	0
  8002  00218A  0100               	movlb	0	; () banked
  8003  00218C  6F97               	movwf	___ftmul@f2& (0+255),b
  8004  00218E  0E00               	movlw	0
  8005  002190  0100               	movlb	0	; () banked
  8006  002192  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  8007  002194  0E3F               	movlw	63
  8008  002196  0100               	movlb	0	; () banked
  8009  002198  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  8010  00219A  ECBC  F015         	call	___ftmul	;wreg free
  8011  00219E  C094  F0A3         	movff	?___ftmul,?_fround
  8012  0021A2  C095  F0A4         	movff	?___ftmul+1,?_fround+1
  8013  0021A6  C096  F0A5         	movff	?___ftmul+2,?_fround+2
  8014  0021AA  0012               	return	
  8015  0021AC                     l5471:
  8016                           
  8017                           ;doprnt.c: 415: else if(prec > 10)
  8018  0021AC  0E0A               	movlw	10
  8019  0021AE  0100               	movlb	0	; () banked
  8020  0021B0  65AC               	cpfsgt	fround@prec& (0+255),b
  8021  0021B2  D06E               	goto	l5479
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8025  0021B4  0E00               	movlw	0
  8026  0021B6  0100               	movlb	0	; () banked
  8027  0021B8  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8028  0021BA  0E03               	movlw	3
  8029  0021BC  6F90               	movwf	___wmul@multiplicand& (0+255),b
  8030  0021BE  0E00               	movlw	0
  8031  0021C0  0100               	movlb	0	; () banked
  8032  0021C2  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8033  0021C4  0E0A               	movlw	10
  8034  0021C6  6F82               	movwf	___awmod@divisor& (0+255),b
  8035  0021C8  C0AC  F080         	movff	fround@prec,___awmod@dividend
  8036  0021CC  0100               	movlb	0	; () banked
  8037  0021CE  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8038  0021D0  ECC3  F01B         	call	___awmod	;wreg free
  8039  0021D4  C080  F08E         	movff	?___awmod,___wmul@multiplier
  8040  0021D8  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  8041  0021DC  EC27  F020         	call	___wmul	;wreg free
  8042  0021E0  0E87               	movlw	low __npowers_
  8043  0021E2  0100               	movlb	0	; () banked
  8044  0021E4  258E               	addwf	?___wmul& (0+255),w,b
  8045  0021E6  6EF6               	movwf	tblptrl,c
  8046  0021E8  0EFE               	movlw	high __npowers_
  8047  0021EA  0100               	movlb	0	; () banked
  8048  0021EC  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  8049  0021EE  6EF7               	movwf	tblptrh,c
  8050  0021F0                     	if	0	;There are less than 3 active tblptr bytes
  8051  0021F0                     	endif
  8052  0021F0  0009               	tblrd		*+
  8053  0021F2  CFF5 F097          	movff	tablat,___ftmul@f2
  8054  0021F6  0009               	tblrd		*+
  8055  0021F8  CFF5 F098          	movff	tablat,___ftmul@f2+1
  8056  0021FC  000A               	tblrd		*-
  8057  0021FE  CFF5 F099          	movff	tablat,___ftmul@f2+2
  8058  002202  0E00               	movlw	0
  8059  002204  0100               	movlb	0	; () banked
  8060  002206  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8061  002208  0E0A               	movlw	10
  8062  00220A  6F88               	movwf	___awdiv@divisor& (0+255),b
  8063  00220C  C0AC  F086         	movff	fround@prec,___awdiv@dividend
  8064  002210  0100               	movlb	0	; () banked
  8065  002212  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  8066  002214  EC04  F01A         	call	___awdiv	;wreg free
  8067  002218  0E09               	movlw	9
  8068  00221A  0100               	movlb	0	; () banked
  8069  00221C  2586               	addwf	?___awdiv& (0+255),w,b
  8070  00221E  0100               	movlb	0	; () banked
  8071  002220  6F8E               	movwf	___wmul@multiplier& (0+255),b
  8072  002222  0E00               	movlw	0
  8073  002224  0100               	movlb	0	; () banked
  8074  002226  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  8075  002228  0100               	movlb	0	; () banked
  8076  00222A  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8077  00222C  0E00               	movlw	0
  8078  00222E  0100               	movlb	0	; () banked
  8079  002230  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8080  002232  0E03               	movlw	3
  8081  002234  6F90               	movwf	___wmul@multiplicand& (0+255),b
  8082  002236  EC27  F020         	call	___wmul	;wreg free
  8083  00223A  0E87               	movlw	low __npowers_
  8084  00223C  0100               	movlb	0	; () banked
  8085  00223E  258E               	addwf	?___wmul& (0+255),w,b
  8086  002240  6EF6               	movwf	tblptrl,c
  8087  002242  0EFE               	movlw	high __npowers_
  8088  002244  0100               	movlb	0	; () banked
  8089  002246  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  8090  002248  6EF7               	movwf	tblptrh,c
  8091  00224A                     	if	0	;There are less than 3 active tblptr bytes
  8092  00224A                     	endif
  8093  00224A  0009               	tblrd		*+
  8094  00224C  CFF5 F094          	movff	tablat,___ftmul@f1
  8095  002250  0009               	tblrd		*+
  8096  002252  CFF5 F095          	movff	tablat,___ftmul@f1+1
  8097  002256  000A               	tblrd		*-
  8098  002258  CFF5 F096          	movff	tablat,___ftmul@f1+2
  8099  00225C  ECBC  F015         	call	___ftmul	;wreg free
  8100  002260  C094  F0A9         	movff	?___ftmul,_fround$2271
  8101  002264  C095  F0AA         	movff	?___ftmul+1,_fround$2271+1
  8102  002268  C096  F0AB         	movff	?___ftmul+2,_fround$2271+2
  8103                           
  8104                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8105  00226C  C0A9  F094         	movff	_fround$2271,___ftmul@f1
  8106  002270  C0AA  F095         	movff	_fround$2271+1,___ftmul@f1+1
  8107  002274  C0AB  F096         	movff	_fround$2271+2,___ftmul@f1+2
  8108  002278  0E00               	movlw	0
  8109  00227A  0100               	movlb	0	; () banked
  8110  00227C  6F97               	movwf	___ftmul@f2& (0+255),b
  8111  00227E  0E00               	movlw	0
  8112  002280  0100               	movlb	0	; () banked
  8113  002282  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  8114  002284  0E3F               	movlw	63
  8115  002286  0100               	movlb	0	; () banked
  8116  002288  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  8117  00228A  ECBC  F015         	call	___ftmul	;wreg free
  8118  00228E  D787               	goto	L7
  8119  002290                     l5479:
  8120                           
  8121                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8122  002290  0100               	movlb	0	; () banked
  8123  002292  51AC               	movf	fround@prec& (0+255),w,b
  8124  002294  0D03               	mullw	3
  8125  002296  0E87               	movlw	low __npowers_
  8126  002298  24F3               	addwf	prodl,w,c
  8127  00229A  6EF6               	movwf	tblptrl,c
  8128  00229C  0EFE               	movlw	high __npowers_
  8129  00229E  20F4               	addwfc	prodh,w,c
  8130  0022A0  6EF7               	movwf	tblptrh,c
  8131  0022A2                     	if	0	;There are less than 3 active tblptr bytes
  8132  0022A2                     	endif
  8133  0022A2  0009               	tblrd		*+
  8134  0022A4  CFF5 F094          	movff	tablat,___ftmul@f1
  8135  0022A8  0009               	tblrd		*+
  8136  0022AA  CFF5 F095          	movff	tablat,___ftmul@f1+1
  8137  0022AE  000A               	tblrd		*-
  8138  0022B0  CFF5 F096          	movff	tablat,___ftmul@f1+2
  8139  0022B4  0E00               	movlw	0
  8140  0022B6  0100               	movlb	0	; () banked
  8141  0022B8  6F97               	movwf	___ftmul@f2& (0+255),b
  8142  0022BA  0E00               	movlw	0
  8143  0022BC  0100               	movlb	0	; () banked
  8144  0022BE  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  8145  0022C0  0E3F               	movlw	63
  8146  0022C2  0100               	movlb	0	; () banked
  8147  0022C4  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  8148  0022C6  ECBC  F015         	call	___ftmul	;wreg free
  8149  0022CA  C094  F0A3         	movff	?___ftmul,?_fround
  8150  0022CE  C095  F0A4         	movff	?___ftmul+1,?_fround+1
  8151  0022D2  C096  F0A5         	movff	?___ftmul+2,?_fround+2
  8152  0022D6  0012               	return	
  8153  0022D8                     __end_of_fround:
  8154                           	opt stack 0
  8155                           tblptru	equ	0xFF8
  8156                           tblptrh	equ	0xFF7
  8157                           tblptrl	equ	0xFF6
  8158                           tablat	equ	0xFF5
  8159                           prodh	equ	0xFF4
  8160                           prodl	equ	0xFF3
  8161                           intcon	equ	0xFF2
  8162                           intcon2	equ	0xFF1
  8163                           intcon3	equ	0xFF0
  8164                           postinc0	equ	0xFEE
  8165                           wreg	equ	0xFE8
  8166                           indf1	equ	0xFE7
  8167                           postdec1	equ	0xFE5
  8168                           fsr1h	equ	0xFE2
  8169                           fsr1l	equ	0xFE1
  8170                           indf2	equ	0xFDF
  8171                           postinc2	equ	0xFDE
  8172                           postdec2	equ	0xFDD
  8173                           fsr2h	equ	0xFDA
  8174                           fsr2l	equ	0xFD9
  8175                           status	equ	0xFD8
  8176                           
  8177 ;; *************** function ___wmul *****************
  8178 ;; Defined at:
  8179 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  multiplier      2   14[BANK0 ] unsigned int 
  8182 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  product         2   18[BANK0 ] unsigned int 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  2   14[BANK0 ] unsigned int 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0, prodl, prodh
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8194 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;Total ram usage:        6 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    5
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_read_adc_voltage
  8205 ;;		_main
  8206 ;;		_fround
  8207 ;;		_scale
  8208 ;;		_sprintf
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	text17
  8213  00404E                     __ptext17:
  8214                           	opt stack 0
  8215  00404E                     ___wmul:
  8216                           	opt stack 23
  8217                           
  8218                           ;incstack = 0
  8219  00404E  0100               	movlb	0	; () banked
  8220  004050  518E               	movf	___wmul@multiplier& (0+255),w,b
  8221  004052  0100               	movlb	0	; () banked
  8222  004054  0390               	mulwf	___wmul@multiplicand& (0+255),b
  8223  004056  CFF3 F092          	movff	prodl,___wmul@product
  8224  00405A  CFF4 F093          	movff	prodh,___wmul@product+1
  8225  00405E  0100               	movlb	0	; () banked
  8226  004060  518E               	movf	___wmul@multiplier& (0+255),w,b
  8227  004062  0100               	movlb	0	; () banked
  8228  004064  0391               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8229  004066  50F3               	movf	prodl,w,c
  8230  004068  0100               	movlb	0	; () banked
  8231  00406A  2793               	addwf	(___wmul@product+1)& (0+255),f,b
  8232  00406C  0100               	movlb	0	; () banked
  8233  00406E  518F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8234  004070  0100               	movlb	0	; () banked
  8235  004072  0390               	mulwf	___wmul@multiplicand& (0+255),b
  8236  004074  50F3               	movf	prodl,w,c
  8237  004076  0100               	movlb	0	; () banked
  8238  004078  2793               	addwf	(___wmul@product+1)& (0+255),f,b
  8239                           
  8240                           ; BSR set to: 0
  8241  00407A  C092  F08E         	movff	___wmul@product,?___wmul
  8242  00407E  C093  F08F         	movff	___wmul@product+1,?___wmul+1
  8243  004082  0012               	return	
  8244  004084                     __end_of___wmul:
  8245                           	opt stack 0
  8246                           tblptru	equ	0xFF8
  8247                           tblptrh	equ	0xFF7
  8248                           tblptrl	equ	0xFF6
  8249                           tablat	equ	0xFF5
  8250                           prodh	equ	0xFF4
  8251                           prodl	equ	0xFF3
  8252                           intcon	equ	0xFF2
  8253                           intcon2	equ	0xFF1
  8254                           intcon3	equ	0xFF0
  8255                           postinc0	equ	0xFEE
  8256                           wreg	equ	0xFE8
  8257                           indf1	equ	0xFE7
  8258                           postdec1	equ	0xFE5
  8259                           fsr1h	equ	0xFE2
  8260                           fsr1l	equ	0xFE1
  8261                           indf2	equ	0xFDF
  8262                           postinc2	equ	0xFDE
  8263                           postdec2	equ	0xFDD
  8264                           fsr2h	equ	0xFDA
  8265                           fsr2l	equ	0xFD9
  8266                           status	equ	0xFD8
  8267                           
  8268 ;; *************** function ___ftmul *****************
  8269 ;; Defined at:
  8270 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  f1              3   20[BANK0 ] float 
  8273 ;;  f2              3   23[BANK0 ] float 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
  8276 ;;  sign            1   34[BANK0 ] unsigned char 
  8277 ;;  cntr            1   33[BANK0 ] unsigned char 
  8278 ;;  exp             1   29[BANK0 ] unsigned char 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  3   20[BANK0 ] float 
  8281 ;; Registers used:
  8282 ;;		wreg, status,2, status,0, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8288 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;Total ram usage:       15 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    6
  8295 ;; This function calls:
  8296 ;;		___ftpack
  8297 ;; This function is called by:
  8298 ;;		_set_pwm1_percent
  8299 ;;		_main
  8300 ;;		_fround
  8301 ;;		_scale
  8302 ;;		_sprintf
  8303 ;;		_set_pwm1_voltage
  8304 ;;		_set_pwm1_general
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text18
  8309  002B78                     __ptext18:
  8310                           	opt stack 0
  8311  002B78                     ___ftmul:
  8312                           	opt stack 22
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;incstack = 0
  8316  002B78  C096  F09A         	movff	___ftmul@f1+2,??___ftmul
  8317  002B7C  0100               	movlb	0	; () banked
  8318  002B7E  6B9B               	clrf	(??___ftmul+1)& (0+255),b
  8319  002B80  6B9C               	clrf	(??___ftmul+2)& (0+255),b
  8320  002B82  0100               	movlb	0	; () banked
  8321  002B84  3595               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  8322  002B86  0100               	movlb	0	; () banked
  8323  002B88  379A               	rlcf	??___ftmul& (0+255),f,b
  8324  002B8A  E301               	bnc	u6111
  8325  002B8C  819B               	bsf	(??___ftmul+1)& (0+255),0,b
  8326  002B8E                     u6111:
  8327  002B8E  0100               	movlb	0	; () banked
  8328  002B90  519A               	movf	??___ftmul& (0+255),w,b
  8329  002B92  0100               	movlb	0	; () banked
  8330  002B94  6F9D               	movwf	___ftmul@exp& (0+255),b
  8331  002B96  0100               	movlb	0	; () banked
  8332  002B98  519D               	movf	___ftmul@exp& (0+255),w,b
  8333  002B9A  A4D8               	btfss	status,2,c
  8334  002B9C  D00A               	goto	l5321
  8335                           
  8336                           ; BSR set to: 0
  8337  002B9E  0E00               	movlw	0
  8338  002BA0  0100               	movlb	0	; () banked
  8339  002BA2  6F94               	movwf	?___ftmul& (0+255),b
  8340  002BA4  0E00               	movlw	0
  8341  002BA6  0100               	movlb	0	; () banked
  8342  002BA8  6F95               	movwf	(?___ftmul+1)& (0+255),b
  8343  002BAA  0E00               	movlw	0
  8344  002BAC  0100               	movlb	0	; () banked
  8345  002BAE  6F96               	movwf	(?___ftmul+2)& (0+255),b
  8346                           
  8347                           ; BSR set to: 0
  8348  002BB0  0012               	return	
  8349  002BB2                     l5321:
  8350                           
  8351                           ; BSR set to: 0
  8352  002BB2  C099  F09A         	movff	___ftmul@f2+2,??___ftmul
  8353  002BB6  0100               	movlb	0	; () banked
  8354  002BB8  6B9B               	clrf	(??___ftmul+1)& (0+255),b
  8355  002BBA  6B9C               	clrf	(??___ftmul+2)& (0+255),b
  8356  002BBC  0100               	movlb	0	; () banked
  8357  002BBE  3598               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  8358  002BC0  0100               	movlb	0	; () banked
  8359  002BC2  379A               	rlcf	??___ftmul& (0+255),f,b
  8360  002BC4  E301               	bnc	u6131
  8361  002BC6  819B               	bsf	(??___ftmul+1)& (0+255),0,b
  8362  002BC8                     u6131:
  8363  002BC8  0100               	movlb	0	; () banked
  8364  002BCA  519A               	movf	??___ftmul& (0+255),w,b
  8365  002BCC  0100               	movlb	0	; () banked
  8366  002BCE  6FA2               	movwf	___ftmul@sign& (0+255),b
  8367  002BD0  0100               	movlb	0	; () banked
  8368  002BD2  51A2               	movf	___ftmul@sign& (0+255),w,b
  8369  002BD4  A4D8               	btfss	status,2,c
  8370  002BD6  D00A               	goto	l5327
  8371                           
  8372                           ; BSR set to: 0
  8373  002BD8  0E00               	movlw	0
  8374  002BDA  0100               	movlb	0	; () banked
  8375  002BDC  6F94               	movwf	?___ftmul& (0+255),b
  8376  002BDE  0E00               	movlw	0
  8377  002BE0  0100               	movlb	0	; () banked
  8378  002BE2  6F95               	movwf	(?___ftmul+1)& (0+255),b
  8379  002BE4  0E00               	movlw	0
  8380  002BE6  0100               	movlb	0	; () banked
  8381  002BE8  6F96               	movwf	(?___ftmul+2)& (0+255),b
  8382                           
  8383                           ; BSR set to: 0
  8384  002BEA  0012               	return	
  8385  002BEC                     l5327:
  8386                           
  8387                           ; BSR set to: 0
  8388  002BEC  0100               	movlb	0	; () banked
  8389  002BEE  51A2               	movf	___ftmul@sign& (0+255),w,b
  8390  002BF0  0F7B               	addlw	123
  8391  002BF2  0100               	movlb	0	; () banked
  8392  002BF4  279D               	addwf	___ftmul@exp& (0+255),f,b
  8393                           
  8394                           ; BSR set to: 0
  8395  002BF6  C096  F0A2         	movff	___ftmul@f1+2,___ftmul@sign
  8396  002BFA  0100               	movlb	0	; () banked
  8397  002BFC  5199               	movf	(___ftmul@f2+2)& (0+255),w,b
  8398  002BFE  0100               	movlb	0	; () banked
  8399  002C00  1BA2               	xorwf	___ftmul@sign& (0+255),f,b
  8400  002C02  0E80               	movlw	128
  8401  002C04  0100               	movlb	0	; () banked
  8402  002C06  17A2               	andwf	___ftmul@sign& (0+255),f,b
  8403                           
  8404                           ; BSR set to: 0
  8405  002C08  0100               	movlb	0	; () banked
  8406  002C0A  8F95               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8407                           
  8408                           ; BSR set to: 0
  8409  002C0C  0100               	movlb	0	; () banked
  8410  002C0E  8F98               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8411                           
  8412                           ; BSR set to: 0
  8413  002C10  0EFF               	movlw	255
  8414  002C12  0100               	movlb	0	; () banked
  8415  002C14  1797               	andwf	___ftmul@f2& (0+255),f,b
  8416  002C16  0EFF               	movlw	255
  8417  002C18  0100               	movlb	0	; () banked
  8418  002C1A  1798               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8419  002C1C  0E00               	movlw	0
  8420  002C1E  0100               	movlb	0	; () banked
  8421  002C20  1799               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8422                           
  8423                           ; BSR set to: 0
  8424  002C22  0E00               	movlw	0
  8425  002C24  0100               	movlb	0	; () banked
  8426  002C26  6F9E               	movwf	___ftmul@f3_as_product& (0+255),b
  8427  002C28  0E00               	movlw	0
  8428  002C2A  0100               	movlb	0	; () banked
  8429  002C2C  6F9F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8430  002C2E  0E00               	movlw	0
  8431  002C30  0100               	movlb	0	; () banked
  8432  002C32  6FA0               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8433                           
  8434                           ; BSR set to: 0
  8435  002C34  0E07               	movlw	7
  8436  002C36  0100               	movlb	0	; () banked
  8437  002C38  6FA1               	movwf	___ftmul@cntr& (0+255),b
  8438  002C3A                     l5341:
  8439                           
  8440                           ; BSR set to: 0
  8441  002C3A  0100               	movlb	0	; () banked
  8442  002C3C  A194               	btfss	___ftmul@f1& (0+255),0,b
  8443  002C3E  D00C               	goto	l5345
  8444                           
  8445                           ; BSR set to: 0
  8446  002C40  0100               	movlb	0	; () banked
  8447  002C42  5197               	movf	___ftmul@f2& (0+255),w,b
  8448  002C44  0100               	movlb	0	; () banked
  8449  002C46  279E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8450  002C48  0100               	movlb	0	; () banked
  8451  002C4A  5198               	movf	(___ftmul@f2+1)& (0+255),w,b
  8452  002C4C  0100               	movlb	0	; () banked
  8453  002C4E  239F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8454  002C50  0100               	movlb	0	; () banked
  8455  002C52  5199               	movf	(___ftmul@f2+2)& (0+255),w,b
  8456  002C54  0100               	movlb	0	; () banked
  8457  002C56  23A0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8458  002C58                     l5345:
  8459                           
  8460                           ; BSR set to: 0
  8461  002C58  0100               	movlb	0	; () banked
  8462  002C5A  90D8               	bcf	status,0,c
  8463  002C5C  3396               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8464  002C5E  3395               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8465  002C60  3394               	rrcf	___ftmul@f1& (0+255),f,b
  8466  002C62  0100               	movlb	0	; () banked
  8467  002C64  90D8               	bcf	status,0,c
  8468  002C66  3797               	rlcf	___ftmul@f2& (0+255),f,b
  8469  002C68  3798               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8470  002C6A  3799               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8471                           
  8472                           ; BSR set to: 0
  8473  002C6C  0100               	movlb	0	; () banked
  8474  002C6E  2FA1               	decfsz	___ftmul@cntr& (0+255),f,b
  8475  002C70  D7E4               	goto	l5341
  8476                           
  8477                           ; BSR set to: 0
  8478                           
  8479                           ; BSR set to: 0
  8480  002C72  0E09               	movlw	9
  8481  002C74  0100               	movlb	0	; () banked
  8482  002C76  6FA1               	movwf	___ftmul@cntr& (0+255),b
  8483  002C78                     l5351:
  8484                           
  8485                           ; BSR set to: 0
  8486  002C78  0100               	movlb	0	; () banked
  8487  002C7A  A194               	btfss	___ftmul@f1& (0+255),0,b
  8488  002C7C  D00C               	goto	l5355
  8489                           
  8490                           ; BSR set to: 0
  8491  002C7E  0100               	movlb	0	; () banked
  8492  002C80  5197               	movf	___ftmul@f2& (0+255),w,b
  8493  002C82  0100               	movlb	0	; () banked
  8494  002C84  279E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8495  002C86  0100               	movlb	0	; () banked
  8496  002C88  5198               	movf	(___ftmul@f2+1)& (0+255),w,b
  8497  002C8A  0100               	movlb	0	; () banked
  8498  002C8C  239F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8499  002C8E  0100               	movlb	0	; () banked
  8500  002C90  5199               	movf	(___ftmul@f2+2)& (0+255),w,b
  8501  002C92  0100               	movlb	0	; () banked
  8502  002C94  23A0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8503  002C96                     l5355:
  8504                           
  8505                           ; BSR set to: 0
  8506  002C96  0100               	movlb	0	; () banked
  8507  002C98  90D8               	bcf	status,0,c
  8508  002C9A  3396               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8509  002C9C  3395               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8510  002C9E  3394               	rrcf	___ftmul@f1& (0+255),f,b
  8511  002CA0  0100               	movlb	0	; () banked
  8512  002CA2  90D8               	bcf	status,0,c
  8513  002CA4  33A0               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8514  002CA6  339F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8515  002CA8  339E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8516                           
  8517                           ; BSR set to: 0
  8518  002CAA  0100               	movlb	0	; () banked
  8519  002CAC  2FA1               	decfsz	___ftmul@cntr& (0+255),f,b
  8520  002CAE  D7E4               	goto	l5351
  8521                           
  8522                           ; BSR set to: 0
  8523                           
  8524                           ; BSR set to: 0
  8525  002CB0  C09E  F080         	movff	___ftmul@f3_as_product,___ftpack@arg
  8526  002CB4  C09F  F081         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8527  002CB8  C0A0  F082         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8528  002CBC  C09D  F083         	movff	___ftmul@exp,___ftpack@exp
  8529  002CC0  C0A2  F084         	movff	___ftmul@sign,___ftpack@sign
  8530  002CC4  ECB3  F017         	call	___ftpack	;wreg free
  8531  002CC8  C080  F094         	movff	?___ftpack,?___ftmul
  8532  002CCC  C081  F095         	movff	?___ftpack+1,?___ftmul+1
  8533  002CD0  C082  F096         	movff	?___ftpack+2,?___ftmul+2
  8534  002CD4  0012               	return	
  8535  002CD6                     __end_of___ftmul:
  8536                           	opt stack 0
  8537                           tblptru	equ	0xFF8
  8538                           tblptrh	equ	0xFF7
  8539                           tblptrl	equ	0xFF6
  8540                           tablat	equ	0xFF5
  8541                           prodh	equ	0xFF4
  8542                           prodl	equ	0xFF3
  8543                           intcon	equ	0xFF2
  8544                           intcon2	equ	0xFF1
  8545                           intcon3	equ	0xFF0
  8546                           postinc0	equ	0xFEE
  8547                           wreg	equ	0xFE8
  8548                           indf1	equ	0xFE7
  8549                           postdec1	equ	0xFE5
  8550                           fsr1h	equ	0xFE2
  8551                           fsr1l	equ	0xFE1
  8552                           indf2	equ	0xFDF
  8553                           postinc2	equ	0xFDE
  8554                           postdec2	equ	0xFDD
  8555                           fsr2h	equ	0xFDA
  8556                           fsr2l	equ	0xFD9
  8557                           status	equ	0xFD8
  8558                           
  8559 ;; *************** function ___awmod *****************
  8560 ;; Defined at:
  8561 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  dividend        2    0[BANK0 ] int 
  8564 ;;  divisor         2    2[BANK0 ] int 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  sign            1    5[BANK0 ] unsigned char 
  8567 ;;  counter         1    4[BANK0 ] unsigned char 
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  2    0[BANK0 ] int 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8577 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;Total ram usage:        6 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    5
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_fround
  8588 ;;		_scale
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text19
  8593  003786                     __ptext19:
  8594                           	opt stack 0
  8595  003786                     ___awmod:
  8596                           	opt stack 23
  8597                           
  8598                           ;incstack = 0
  8599  003786  0E00               	movlw	0
  8600  003788  0100               	movlb	0	; () banked
  8601  00378A  6F85               	movwf	___awmod@sign& (0+255),b
  8602                           
  8603                           ; BSR set to: 0
  8604  00378C  0100               	movlb	0	; () banked
  8605  00378E  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8606  003790  D008               	goto	l5415
  8607                           
  8608                           ; BSR set to: 0
  8609  003792  0100               	movlb	0	; () banked
  8610  003794  6D80               	negf	___awmod@dividend& (0+255),b
  8611  003796  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  8612  003798  B0D8               	btfsc	status,0,c
  8613  00379A  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  8614                           
  8615                           ; BSR set to: 0
  8616  00379C  0E01               	movlw	1
  8617  00379E  0100               	movlb	0	; () banked
  8618  0037A0  6F85               	movwf	___awmod@sign& (0+255),b
  8619  0037A2                     l5415:
  8620                           
  8621                           ; BSR set to: 0
  8622  0037A2  0100               	movlb	0	; () banked
  8623  0037A4  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8624  0037A6  D005               	goto	l5419
  8625                           
  8626                           ; BSR set to: 0
  8627  0037A8  0100               	movlb	0	; () banked
  8628  0037AA  6D82               	negf	___awmod@divisor& (0+255),b
  8629  0037AC  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  8630  0037AE  B0D8               	btfsc	status,0,c
  8631  0037B0  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  8632  0037B2                     l5419:
  8633                           
  8634                           ; BSR set to: 0
  8635  0037B2  0100               	movlb	0	; () banked
  8636  0037B4  5182               	movf	___awmod@divisor& (0+255),w,b
  8637  0037B6  0100               	movlb	0	; () banked
  8638  0037B8  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8639  0037BA  B4D8               	btfsc	status,2,c
  8640  0037BC  D026               	goto	l5435
  8641                           
  8642                           ; BSR set to: 0
  8643  0037BE  0E01               	movlw	1
  8644  0037C0  0100               	movlb	0	; () banked
  8645  0037C2  6F84               	movwf	___awmod@counter& (0+255),b
  8646  0037C4  D006               	goto	l5425
  8647  0037C6                     l5423:
  8648                           
  8649                           ; BSR set to: 0
  8650  0037C6  0100               	movlb	0	; () banked
  8651  0037C8  90D8               	bcf	status,0,c
  8652  0037CA  3782               	rlcf	___awmod@divisor& (0+255),f,b
  8653  0037CC  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8654  0037CE  0100               	movlb	0	; () banked
  8655  0037D0  2B84               	incf	___awmod@counter& (0+255),f,b
  8656  0037D2                     l5425:
  8657                           
  8658                           ; BSR set to: 0
  8659  0037D2  0100               	movlb	0	; () banked
  8660  0037D4  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8661  0037D6  D7F7               	goto	l5423
  8662  0037D8                     l5427:
  8663                           
  8664                           ; BSR set to: 0
  8665  0037D8  0100               	movlb	0	; () banked
  8666  0037DA  5182               	movf	___awmod@divisor& (0+255),w,b
  8667  0037DC  0100               	movlb	0	; () banked
  8668  0037DE  5D80               	subwf	___awmod@dividend& (0+255),w,b
  8669  0037E0  0100               	movlb	0	; () banked
  8670  0037E2  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  8671  0037E4  0100               	movlb	0	; () banked
  8672  0037E6  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8673  0037E8  A0D8               	btfss	status,0,c
  8674  0037EA  D008               	goto	l5431
  8675                           
  8676                           ; BSR set to: 0
  8677  0037EC  0100               	movlb	0	; () banked
  8678  0037EE  5182               	movf	___awmod@divisor& (0+255),w,b
  8679  0037F0  0100               	movlb	0	; () banked
  8680  0037F2  5F80               	subwf	___awmod@dividend& (0+255),f,b
  8681  0037F4  0100               	movlb	0	; () banked
  8682  0037F6  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  8683  0037F8  0100               	movlb	0	; () banked
  8684  0037FA  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8685  0037FC                     l5431:
  8686                           
  8687                           ; BSR set to: 0
  8688  0037FC  0100               	movlb	0	; () banked
  8689  0037FE  90D8               	bcf	status,0,c
  8690  003800  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8691  003802  3382               	rrcf	___awmod@divisor& (0+255),f,b
  8692                           
  8693                           ; BSR set to: 0
  8694  003804  0100               	movlb	0	; () banked
  8695  003806  2F84               	decfsz	___awmod@counter& (0+255),f,b
  8696  003808  D7E7               	goto	l5427
  8697  00380A                     l5435:
  8698                           
  8699                           ; BSR set to: 0
  8700  00380A  0100               	movlb	0	; () banked
  8701  00380C  5185               	movf	___awmod@sign& (0+255),w,b
  8702  00380E  0100               	movlb	0	; () banked
  8703  003810  B4D8               	btfsc	status,2,c
  8704  003812  D005               	goto	l5439
  8705                           
  8706                           ; BSR set to: 0
  8707  003814  0100               	movlb	0	; () banked
  8708  003816  6D80               	negf	___awmod@dividend& (0+255),b
  8709  003818  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  8710  00381A  B0D8               	btfsc	status,0,c
  8711  00381C  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  8712  00381E                     l5439:
  8713                           
  8714                           ; BSR set to: 0
  8715  00381E  C080  F080         	movff	___awmod@dividend,?___awmod
  8716  003822  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  8717  003826  0012               	return	
  8718  003828                     __end_of___awmod:
  8719                           	opt stack 0
  8720                           tblptru	equ	0xFF8
  8721                           tblptrh	equ	0xFF7
  8722                           tblptrl	equ	0xFF6
  8723                           tablat	equ	0xFF5
  8724                           prodh	equ	0xFF4
  8725                           prodl	equ	0xFF3
  8726                           intcon	equ	0xFF2
  8727                           intcon2	equ	0xFF1
  8728                           intcon3	equ	0xFF0
  8729                           postinc0	equ	0xFEE
  8730                           wreg	equ	0xFE8
  8731                           indf1	equ	0xFE7
  8732                           postdec1	equ	0xFE5
  8733                           fsr1h	equ	0xFE2
  8734                           fsr1l	equ	0xFE1
  8735                           indf2	equ	0xFDF
  8736                           postinc2	equ	0xFDE
  8737                           postdec2	equ	0xFDD
  8738                           fsr2h	equ	0xFDA
  8739                           fsr2l	equ	0xFD9
  8740                           status	equ	0xFD8
  8741                           
  8742 ;; *************** function ___awdiv *****************
  8743 ;; Defined at:
  8744 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  dividend        2    6[BANK0 ] int 
  8747 ;;  divisor         2    8[BANK0 ] int 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;  quotient        2   12[BANK0 ] int 
  8750 ;;  sign            1   11[BANK0 ] unsigned char 
  8751 ;;  counter         1   10[BANK0 ] unsigned char 
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  2    6[BANK0 ] int 
  8754 ;; Registers used:
  8755 ;;		wreg, status,2, status,0
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8761 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8762 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8764 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8765 ;;Total ram usage:        8 bytes
  8766 ;; Hardware stack levels used:    1
  8767 ;; Hardware stack levels required when called:    5
  8768 ;; This function calls:
  8769 ;;		Nothing
  8770 ;; This function is called by:
  8771 ;;		_fround
  8772 ;;		_scale
  8773 ;;		_sprintf
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text20
  8778  003408                     __ptext20:
  8779                           	opt stack 0
  8780  003408                     ___awdiv:
  8781                           	opt stack 23
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;incstack = 0
  8785  003408  0E00               	movlw	0
  8786  00340A  0100               	movlb	0	; () banked
  8787  00340C  6F8B               	movwf	___awdiv@sign& (0+255),b
  8788                           
  8789                           ; BSR set to: 0
  8790  00340E  0100               	movlb	0	; () banked
  8791  003410  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8792  003412  D008               	goto	l5371
  8793                           
  8794                           ; BSR set to: 0
  8795  003414  0100               	movlb	0	; () banked
  8796  003416  6D88               	negf	___awdiv@divisor& (0+255),b
  8797  003418  1F89               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8798  00341A  B0D8               	btfsc	status,0,c
  8799  00341C  2B89               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8800                           
  8801                           ; BSR set to: 0
  8802  00341E  0E01               	movlw	1
  8803  003420  0100               	movlb	0	; () banked
  8804  003422  6F8B               	movwf	___awdiv@sign& (0+255),b
  8805  003424                     l5371:
  8806                           
  8807                           ; BSR set to: 0
  8808  003424  0100               	movlb	0	; () banked
  8809  003426  AF87               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8810  003428  D008               	goto	l5377
  8811                           
  8812                           ; BSR set to: 0
  8813  00342A  0100               	movlb	0	; () banked
  8814  00342C  6D86               	negf	___awdiv@dividend& (0+255),b
  8815  00342E  1F87               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8816  003430  B0D8               	btfsc	status,0,c
  8817  003432  2B87               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8818                           
  8819                           ; BSR set to: 0
  8820  003434  0E01               	movlw	1
  8821  003436  0100               	movlb	0	; () banked
  8822  003438  1B8B               	xorwf	___awdiv@sign& (0+255),f,b
  8823  00343A                     l5377:
  8824                           
  8825                           ; BSR set to: 0
  8826  00343A  0E00               	movlw	0
  8827  00343C  0100               	movlb	0	; () banked
  8828  00343E  6F8D               	movwf	(___awdiv@quotient+1)& (0+255),b
  8829  003440  0E00               	movlw	0
  8830  003442  6F8C               	movwf	___awdiv@quotient& (0+255),b
  8831                           
  8832                           ; BSR set to: 0
  8833  003444  0100               	movlb	0	; () banked
  8834  003446  5188               	movf	___awdiv@divisor& (0+255),w,b
  8835  003448  0100               	movlb	0	; () banked
  8836  00344A  1189               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8837  00344C  B4D8               	btfsc	status,2,c
  8838  00344E  D02C               	goto	l5399
  8839                           
  8840                           ; BSR set to: 0
  8841  003450  0E01               	movlw	1
  8842  003452  0100               	movlb	0	; () banked
  8843  003454  6F8A               	movwf	___awdiv@counter& (0+255),b
  8844  003456  D006               	goto	l5385
  8845  003458                     l5383:
  8846                           
  8847                           ; BSR set to: 0
  8848  003458  0100               	movlb	0	; () banked
  8849  00345A  90D8               	bcf	status,0,c
  8850  00345C  3788               	rlcf	___awdiv@divisor& (0+255),f,b
  8851  00345E  3789               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8852  003460  0100               	movlb	0	; () banked
  8853  003462  2B8A               	incf	___awdiv@counter& (0+255),f,b
  8854  003464                     l5385:
  8855                           
  8856                           ; BSR set to: 0
  8857  003464  0100               	movlb	0	; () banked
  8858  003466  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8859  003468  D7F7               	goto	l5383
  8860  00346A                     l5387:
  8861                           
  8862                           ; BSR set to: 0
  8863  00346A  0100               	movlb	0	; () banked
  8864  00346C  90D8               	bcf	status,0,c
  8865  00346E  378C               	rlcf	___awdiv@quotient& (0+255),f,b
  8866  003470  378D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8867                           
  8868                           ; BSR set to: 0
  8869  003472  0100               	movlb	0	; () banked
  8870  003474  5188               	movf	___awdiv@divisor& (0+255),w,b
  8871  003476  0100               	movlb	0	; () banked
  8872  003478  5D86               	subwf	___awdiv@dividend& (0+255),w,b
  8873  00347A  0100               	movlb	0	; () banked
  8874  00347C  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8875  00347E  0100               	movlb	0	; () banked
  8876  003480  5987               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8877  003482  A0D8               	btfss	status,0,c
  8878  003484  D00A               	goto	l5395
  8879                           
  8880                           ; BSR set to: 0
  8881  003486  0100               	movlb	0	; () banked
  8882  003488  5188               	movf	___awdiv@divisor& (0+255),w,b
  8883  00348A  0100               	movlb	0	; () banked
  8884  00348C  5F86               	subwf	___awdiv@dividend& (0+255),f,b
  8885  00348E  0100               	movlb	0	; () banked
  8886  003490  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8887  003492  0100               	movlb	0	; () banked
  8888  003494  5B87               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8889                           
  8890                           ; BSR set to: 0
  8891  003496  0100               	movlb	0	; () banked
  8892  003498  818C               	bsf	___awdiv@quotient& (0+255),0,b
  8893  00349A                     l5395:
  8894                           
  8895                           ; BSR set to: 0
  8896  00349A  0100               	movlb	0	; () banked
  8897  00349C  90D8               	bcf	status,0,c
  8898  00349E  3389               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8899  0034A0  3388               	rrcf	___awdiv@divisor& (0+255),f,b
  8900                           
  8901                           ; BSR set to: 0
  8902  0034A2  0100               	movlb	0	; () banked
  8903  0034A4  2F8A               	decfsz	___awdiv@counter& (0+255),f,b
  8904  0034A6  D7E1               	goto	l5387
  8905  0034A8                     l5399:
  8906                           
  8907                           ; BSR set to: 0
  8908  0034A8  0100               	movlb	0	; () banked
  8909  0034AA  518B               	movf	___awdiv@sign& (0+255),w,b
  8910  0034AC  0100               	movlb	0	; () banked
  8911  0034AE  B4D8               	btfsc	status,2,c
  8912  0034B0  D005               	goto	l5403
  8913                           
  8914                           ; BSR set to: 0
  8915  0034B2  0100               	movlb	0	; () banked
  8916  0034B4  6D8C               	negf	___awdiv@quotient& (0+255),b
  8917  0034B6  1F8D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8918  0034B8  B0D8               	btfsc	status,0,c
  8919  0034BA  2B8D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8920  0034BC                     l5403:
  8921                           
  8922                           ; BSR set to: 0
  8923  0034BC  C08C  F086         	movff	___awdiv@quotient,?___awdiv
  8924  0034C0  C08D  F087         	movff	___awdiv@quotient+1,?___awdiv+1
  8925  0034C4  0012               	return	
  8926  0034C6                     __end_of___awdiv:
  8927                           	opt stack 0
  8928                           tblptru	equ	0xFF8
  8929                           tblptrh	equ	0xFF7
  8930                           tblptrl	equ	0xFF6
  8931                           tablat	equ	0xFF5
  8932                           prodh	equ	0xFF4
  8933                           prodl	equ	0xFF3
  8934                           intcon	equ	0xFF2
  8935                           intcon2	equ	0xFF1
  8936                           intcon3	equ	0xFF0
  8937                           postinc0	equ	0xFEE
  8938                           wreg	equ	0xFE8
  8939                           indf1	equ	0xFE7
  8940                           postdec1	equ	0xFE5
  8941                           fsr1h	equ	0xFE2
  8942                           fsr1l	equ	0xFE1
  8943                           indf2	equ	0xFDF
  8944                           postinc2	equ	0xFDE
  8945                           postdec2	equ	0xFDD
  8946                           fsr2h	equ	0xFDA
  8947                           fsr2l	equ	0xFD9
  8948                           status	equ	0xFD8
  8949                           
  8950 ;; *************** function __tdiv_to_l_ *****************
  8951 ;; Defined at:
  8952 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  f1              3    0[BANK0 ] float 
  8955 ;;  f2              3    3[BANK0 ] float 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;  quot            4    9[BANK0 ] unsigned long 
  8958 ;;  exp1            1   14[BANK0 ] unsigned char 
  8959 ;;  cntr            1   13[BANK0 ] unsigned char 
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  4    0[BANK0 ] unsigned long 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8969 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8970 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8971 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8972 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8973 ;;Total ram usage:       15 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    5
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_sprintf
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           	psect	text21
  8984  0026EC                     __ptext21:
  8985                           	opt stack 0
  8986  0026EC                     __tdiv_to_l_:
  8987                           	opt stack 24
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;incstack = 0
  8991  0026EC  C082  F086         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  8992  0026F0  0100               	movlb	0	; () banked
  8993  0026F2  6B87               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  8994  0026F4  6B88               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  8995  0026F6  0100               	movlb	0	; () banked
  8996  0026F8  3581               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  8997  0026FA  0100               	movlb	0	; () banked
  8998  0026FC  3786               	rlcf	??__tdiv_to_l_& (0+255),f,b
  8999  0026FE  E301               	bnc	u3601
  9000  002700  8187               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9001  002702                     u3601:
  9002  002702  0100               	movlb	0	; () banked
  9003  002704  5186               	movf	??__tdiv_to_l_& (0+255),w,b
  9004  002706  0100               	movlb	0	; () banked
  9005  002708  6F8E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9006  00270A  0100               	movlb	0	; () banked
  9007  00270C  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9008  00270E  A4D8               	btfss	status,2,c
  9009  002710  D00A               	goto	l3641
  9010                           
  9011                           ; BSR set to: 0
  9012  002712  0E00               	movlw	0
  9013  002714  0100               	movlb	0	; () banked
  9014  002716  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  9015  002718  0E00               	movlw	0
  9016  00271A  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9017  00271C  0E00               	movlw	0
  9018  00271E  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9019  002720  0E00               	movlw	0
  9020  002722  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9021                           
  9022                           ; BSR set to: 0
  9023  002724  0012               	return	
  9024  002726                     l3641:
  9025                           
  9026                           ; BSR set to: 0
  9027  002726  C085  F086         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9028  00272A  0100               	movlb	0	; () banked
  9029  00272C  6B87               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9030  00272E  6B88               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9031  002730  0100               	movlb	0	; () banked
  9032  002732  3584               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9033  002734  0100               	movlb	0	; () banked
  9034  002736  3786               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9035  002738  E301               	bnc	u3621
  9036  00273A  8187               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9037  00273C                     u3621:
  9038  00273C  0100               	movlb	0	; () banked
  9039  00273E  5186               	movf	??__tdiv_to_l_& (0+255),w,b
  9040  002740  0100               	movlb	0	; () banked
  9041  002742  6F8D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9042  002744  0100               	movlb	0	; () banked
  9043  002746  518D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9044  002748  A4D8               	btfss	status,2,c
  9045  00274A  D00A               	goto	l3647
  9046                           
  9047                           ; BSR set to: 0
  9048  00274C  0E00               	movlw	0
  9049  00274E  0100               	movlb	0	; () banked
  9050  002750  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  9051  002752  0E00               	movlw	0
  9052  002754  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9053  002756  0E00               	movlw	0
  9054  002758  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9055  00275A  0E00               	movlw	0
  9056  00275C  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9057                           
  9058                           ; BSR set to: 0
  9059  00275E  0012               	return	
  9060  002760                     l3647:
  9061                           
  9062                           ; BSR set to: 0
  9063  002760  0100               	movlb	0	; () banked
  9064  002762  8F81               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9065                           
  9066                           ; BSR set to: 0
  9067  002764  0EFF               	movlw	255
  9068  002766  0100               	movlb	0	; () banked
  9069  002768  1780               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9070  00276A  0EFF               	movlw	255
  9071  00276C  0100               	movlb	0	; () banked
  9072  00276E  1781               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9073  002770  0E00               	movlw	0
  9074  002772  0100               	movlb	0	; () banked
  9075  002774  1782               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9076  002776  0100               	movlb	0	; () banked
  9077  002778  8F84               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9078                           
  9079                           ; BSR set to: 0
  9080  00277A  0EFF               	movlw	255
  9081  00277C  0100               	movlb	0	; () banked
  9082  00277E  1783               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9083  002780  0EFF               	movlw	255
  9084  002782  0100               	movlb	0	; () banked
  9085  002784  1784               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9086  002786  0E00               	movlw	0
  9087  002788  0100               	movlb	0	; () banked
  9088  00278A  1785               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9089                           
  9090                           ; BSR set to: 0
  9091  00278C  0E00               	movlw	0
  9092  00278E  0100               	movlb	0	; () banked
  9093  002790  6F89               	movwf	__tdiv_to_l_@quot& (0+255),b
  9094  002792  0E00               	movlw	0
  9095  002794  6F8A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9096  002796  0E00               	movlw	0
  9097  002798  6F8B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9098  00279A  0E00               	movlw	0
  9099  00279C  6F8C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9100                           
  9101                           ; BSR set to: 0
  9102  00279E  0E7F               	movlw	127
  9103  0027A0  0100               	movlb	0	; () banked
  9104  0027A2  5F8E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9105                           
  9106                           ; BSR set to: 0
  9107  0027A4  0100               	movlb	0	; () banked
  9108  0027A6  518D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9109  0027A8  0F98               	addlw	152
  9110  0027AA  0100               	movlb	0	; () banked
  9111  0027AC  5F8E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9112                           
  9113                           ; BSR set to: 0
  9114  0027AE  0E18               	movlw	24
  9115  0027B0  0100               	movlb	0	; () banked
  9116  0027B2  6F8D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9117  0027B4                     l901:
  9118                           
  9119                           ; BSR set to: 0
  9120  0027B4  0100               	movlb	0	; () banked
  9121  0027B6  90D8               	bcf	status,0,c
  9122  0027B8  3789               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9123  0027BA  378A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9124  0027BC  378B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9125  0027BE  378C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9126                           
  9127                           ; BSR set to: 0
  9128  0027C0  0100               	movlb	0	; () banked
  9129  0027C2  5183               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9130  0027C4  0100               	movlb	0	; () banked
  9131  0027C6  5D80               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9132  0027C8  0100               	movlb	0	; () banked
  9133  0027CA  5184               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9134  0027CC  0100               	movlb	0	; () banked
  9135  0027CE  5981               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9136  0027D0  0100               	movlb	0	; () banked
  9137  0027D2  5185               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9138  0027D4  0100               	movlb	0	; () banked
  9139  0027D6  5982               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9140  0027D8  A0D8               	btfss	status,0,c
  9141  0027DA  D00E               	goto	l902
  9142                           
  9143                           ; BSR set to: 0
  9144  0027DC  0100               	movlb	0	; () banked
  9145  0027DE  5183               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9146  0027E0  0100               	movlb	0	; () banked
  9147  0027E2  5F80               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9148  0027E4  0100               	movlb	0	; () banked
  9149  0027E6  5184               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9150  0027E8  0100               	movlb	0	; () banked
  9151  0027EA  5B81               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9152  0027EC  0100               	movlb	0	; () banked
  9153  0027EE  5185               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9154  0027F0  0100               	movlb	0	; () banked
  9155  0027F2  5B82               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9156                           
  9157                           ; BSR set to: 0
  9158  0027F4  0100               	movlb	0	; () banked
  9159  0027F6  8189               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9160  0027F8                     l902:
  9161                           
  9162                           ; BSR set to: 0
  9163  0027F8  0100               	movlb	0	; () banked
  9164  0027FA  90D8               	bcf	status,0,c
  9165  0027FC  3780               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9166  0027FE  3781               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9167  002800  3782               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9168                           
  9169                           ; BSR set to: 0
  9170  002802  0100               	movlb	0	; () banked
  9171  002804  2F8D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9172  002806  D7D6               	goto	l901
  9173                           
  9174                           ; BSR set to: 0
  9175                           
  9176                           ; BSR set to: 0
  9177  002808  0100               	movlb	0	; () banked
  9178  00280A  AF8E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9179  00280C  D01A               	goto	l3681
  9180                           
  9181                           ; BSR set to: 0
  9182  00280E  0100               	movlb	0	; () banked
  9183  002810  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9184  002812  0A80               	xorlw	128
  9185  002814  0F97               	addlw	151
  9186  002816  B0D8               	btfsc	status,0,c
  9187  002818  D00A               	goto	l3677
  9188                           
  9189                           ; BSR set to: 0
  9190  00281A  0E00               	movlw	0
  9191  00281C  0100               	movlb	0	; () banked
  9192  00281E  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  9193  002820  0E00               	movlw	0
  9194  002822  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9195  002824  0E00               	movlw	0
  9196  002826  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9197  002828  0E00               	movlw	0
  9198  00282A  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9199                           
  9200                           ; BSR set to: 0
  9201  00282C  0012               	return	
  9202  00282E                     l3677:
  9203                           
  9204                           ; BSR set to: 0
  9205  00282E  0100               	movlb	0	; () banked
  9206  002830  90D8               	bcf	status,0,c
  9207  002832  338C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9208  002834  338B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9209  002836  338A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9210  002838  3389               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9211                           
  9212                           ; BSR set to: 0
  9213  00283A  0100               	movlb	0	; () banked
  9214  00283C  3F8E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9215  00283E  D7F7               	goto	l3677
  9216                           
  9217                           ; BSR set to: 0
  9218  002840  D01B               	goto	l908
  9219  002842                     l3681:
  9220                           
  9221                           ; BSR set to: 0
  9222  002842  0E17               	movlw	23
  9223  002844  0100               	movlb	0	; () banked
  9224  002846  658E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9225  002848  D012               	goto	l3689
  9226                           
  9227                           ; BSR set to: 0
  9228  00284A  0E00               	movlw	0
  9229  00284C  0100               	movlb	0	; () banked
  9230  00284E  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  9231  002850  0E00               	movlw	0
  9232  002852  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9233  002854  0E00               	movlw	0
  9234  002856  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9235  002858  0E00               	movlw	0
  9236  00285A  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9237                           
  9238                           ; BSR set to: 0
  9239  00285C  0012               	return	
  9240  00285E                     l3687:
  9241                           
  9242                           ; BSR set to: 0
  9243  00285E  0100               	movlb	0	; () banked
  9244  002860  90D8               	bcf	status,0,c
  9245  002862  3789               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9246  002864  378A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9247  002866  378B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9248  002868  378C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9249  00286A  0100               	movlb	0	; () banked
  9250  00286C  078E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9251  00286E                     l3689:
  9252                           
  9253                           ; BSR set to: 0
  9254  00286E  0100               	movlb	0	; () banked
  9255  002870  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9256  002872  0100               	movlb	0	; () banked
  9257  002874  A4D8               	btfss	status,2,c
  9258  002876  D7F3               	goto	l3687
  9259  002878                     l908:
  9260                           
  9261                           ; BSR set to: 0
  9262  002878  C089  F080         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9263  00287C  C08A  F081         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9264  002880  C08B  F082         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9265  002884  C08C  F083         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9266                           
  9267                           ; BSR set to: 0
  9268  002888  0012               	return		;funcret
  9269  00288A                     __end_of__tdiv_to_l_:
  9270                           	opt stack 0
  9271                           tblptru	equ	0xFF8
  9272                           tblptrh	equ	0xFF7
  9273                           tblptrl	equ	0xFF6
  9274                           tablat	equ	0xFF5
  9275                           prodh	equ	0xFF4
  9276                           prodl	equ	0xFF3
  9277                           intcon	equ	0xFF2
  9278                           intcon2	equ	0xFF1
  9279                           intcon3	equ	0xFF0
  9280                           postinc0	equ	0xFEE
  9281                           wreg	equ	0xFE8
  9282                           indf1	equ	0xFE7
  9283                           postdec1	equ	0xFE5
  9284                           fsr1h	equ	0xFE2
  9285                           fsr1l	equ	0xFE1
  9286                           indf2	equ	0xFDF
  9287                           postinc2	equ	0xFDE
  9288                           postdec2	equ	0xFDD
  9289                           fsr2h	equ	0xFDA
  9290                           fsr2l	equ	0xFD9
  9291                           status	equ	0xFD8
  9292                           
  9293 ;; *************** function __div_to_l_ *****************
  9294 ;; Defined at:
  9295 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  f1              3    0[BANK0 ] unsigned long 
  9298 ;;  f2              3    3[BANK0 ] unsigned long 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;  quot            4    6[BANK0 ] unsigned long 
  9301 ;;  exp1            1   11[BANK0 ] unsigned char 
  9302 ;;  cntr            1   10[BANK0 ] unsigned char 
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  4    0[BANK0 ] unsigned long 
  9305 ;; Registers used:
  9306 ;;		wreg, status,2, status,0
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9312 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;Total ram usage:       12 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; Hardware stack levels required when called:    5
  9319 ;; This function calls:
  9320 ;;		Nothing
  9321 ;; This function is called by:
  9322 ;;		_sprintf
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326                           	psect	text22
  9327  00288A                     __ptext22:
  9328                           	opt stack 0
  9329  00288A                     __div_to_l_:
  9330                           	opt stack 24
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;incstack = 0
  9334  00288A  0100               	movlb	0	; () banked
  9335  00288C  3582               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9336  00288E  3583               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9337  002890  0100               	movlb	0	; () banked
  9338  002892  6F8B               	movwf	__div_to_l_@exp1& (0+255),b
  9339  002894  0100               	movlb	0	; () banked
  9340  002896  518B               	movf	__div_to_l_@exp1& (0+255),w,b
  9341  002898  A4D8               	btfss	status,2,c
  9342  00289A  D00A               	goto	l5539
  9343                           
  9344                           ; BSR set to: 0
  9345  00289C  0E00               	movlw	0
  9346  00289E  0100               	movlb	0	; () banked
  9347  0028A0  6F80               	movwf	?__div_to_l_& (0+255),b
  9348  0028A2  0E00               	movlw	0
  9349  0028A4  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  9350  0028A6  0E00               	movlw	0
  9351  0028A8  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  9352  0028AA  0E00               	movlw	0
  9353  0028AC  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  9354                           
  9355                           ; BSR set to: 0
  9356  0028AE  0012               	return	
  9357  0028B0                     l5539:
  9358                           
  9359                           ; BSR set to: 0
  9360  0028B0  0100               	movlb	0	; () banked
  9361  0028B2  3585               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9362  0028B4  3586               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9363  0028B6  0100               	movlb	0	; () banked
  9364  0028B8  6F8A               	movwf	__div_to_l_@cntr& (0+255),b
  9365  0028BA  0100               	movlb	0	; () banked
  9366  0028BC  518A               	movf	__div_to_l_@cntr& (0+255),w,b
  9367  0028BE  A4D8               	btfss	status,2,c
  9368  0028C0  D00A               	goto	l5545
  9369                           
  9370                           ; BSR set to: 0
  9371  0028C2  0E00               	movlw	0
  9372  0028C4  0100               	movlb	0	; () banked
  9373  0028C6  6F80               	movwf	?__div_to_l_& (0+255),b
  9374  0028C8  0E00               	movlw	0
  9375  0028CA  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  9376  0028CC  0E00               	movlw	0
  9377  0028CE  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  9378  0028D0  0E00               	movlw	0
  9379  0028D2  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  9380                           
  9381                           ; BSR set to: 0
  9382  0028D4  0012               	return	
  9383  0028D6                     l5545:
  9384                           
  9385                           ; BSR set to: 0
  9386  0028D6  0100               	movlb	0	; () banked
  9387  0028D8  8F82               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9388                           
  9389                           ; BSR set to: 0
  9390  0028DA  0EFF               	movlw	255
  9391  0028DC  0100               	movlb	0	; () banked
  9392  0028DE  1780               	andwf	__div_to_l_@f1& (0+255),f,b
  9393  0028E0  0EFF               	movlw	255
  9394  0028E2  1781               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9395  0028E4  0EFF               	movlw	255
  9396  0028E6  1782               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9397  0028E8  0E00               	movlw	0
  9398  0028EA  1783               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9399                           
  9400                           ; BSR set to: 0
  9401  0028EC  0100               	movlb	0	; () banked
  9402  0028EE  8F85               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9403  0028F0  0EFF               	movlw	255
  9404  0028F2  0100               	movlb	0	; () banked
  9405  0028F4  1783               	andwf	__div_to_l_@f2& (0+255),f,b
  9406  0028F6  0EFF               	movlw	255
  9407  0028F8  1784               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9408  0028FA  0EFF               	movlw	255
  9409  0028FC  1785               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9410  0028FE  0E00               	movlw	0
  9411  002900  1786               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9412                           
  9413                           ; BSR set to: 0
  9414  002902  0E00               	movlw	0
  9415  002904  0100               	movlb	0	; () banked
  9416  002906  6F86               	movwf	__div_to_l_@quot& (0+255),b
  9417  002908  0E00               	movlw	0
  9418  00290A  6F87               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9419  00290C  0E00               	movlw	0
  9420  00290E  6F88               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9421  002910  0E00               	movlw	0
  9422  002912  6F89               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9423                           
  9424                           ; BSR set to: 0
  9425  002914  0E7F               	movlw	127
  9426  002916  0100               	movlb	0	; () banked
  9427  002918  5F8B               	subwf	__div_to_l_@exp1& (0+255),f,b
  9428                           
  9429                           ; BSR set to: 0
  9430  00291A  0100               	movlb	0	; () banked
  9431  00291C  518A               	movf	__div_to_l_@cntr& (0+255),w,b
  9432  00291E  0FA0               	addlw	160
  9433  002920  0100               	movlb	0	; () banked
  9434  002922  5F8B               	subwf	__div_to_l_@exp1& (0+255),f,b
  9435                           
  9436                           ; BSR set to: 0
  9437  002924  0E20               	movlw	32
  9438  002926  0100               	movlb	0	; () banked
  9439  002928  6F8A               	movwf	__div_to_l_@cntr& (0+255),b
  9440  00292A                     l5559:
  9441                           
  9442                           ; BSR set to: 0
  9443  00292A  0100               	movlb	0	; () banked
  9444  00292C  90D8               	bcf	status,0,c
  9445  00292E  3786               	rlcf	__div_to_l_@quot& (0+255),f,b
  9446  002930  3787               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9447  002932  3788               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9448  002934  3789               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9449                           
  9450                           ; BSR set to: 0
  9451  002936  0100               	movlb	0	; () banked
  9452  002938  5183               	movf	__div_to_l_@f2& (0+255),w,b
  9453  00293A  0100               	movlb	0	; () banked
  9454  00293C  5D80               	subwf	__div_to_l_@f1& (0+255),w,b
  9455  00293E  0100               	movlb	0	; () banked
  9456  002940  5184               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9457  002942  0100               	movlb	0	; () banked
  9458  002944  5981               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9459  002946  0100               	movlb	0	; () banked
  9460  002948  5185               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9461  00294A  0100               	movlb	0	; () banked
  9462  00294C  5982               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9463  00294E  0100               	movlb	0	; () banked
  9464  002950  5186               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9465  002952  0100               	movlb	0	; () banked
  9466  002954  5983               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9467  002956  A0D8               	btfss	status,0,c
  9468  002958  D012               	goto	l5567
  9469                           
  9470                           ; BSR set to: 0
  9471  00295A  0100               	movlb	0	; () banked
  9472  00295C  5183               	movf	__div_to_l_@f2& (0+255),w,b
  9473  00295E  0100               	movlb	0	; () banked
  9474  002960  5F80               	subwf	__div_to_l_@f1& (0+255),f,b
  9475  002962  0100               	movlb	0	; () banked
  9476  002964  5184               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9477  002966  0100               	movlb	0	; () banked
  9478  002968  5B81               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9479  00296A  0100               	movlb	0	; () banked
  9480  00296C  5185               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9481  00296E  0100               	movlb	0	; () banked
  9482  002970  5B82               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9483  002972  0100               	movlb	0	; () banked
  9484  002974  5186               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9485  002976  0100               	movlb	0	; () banked
  9486  002978  5B83               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9487                           
  9488                           ; BSR set to: 0
  9489  00297A  0100               	movlb	0	; () banked
  9490  00297C  8186               	bsf	__div_to_l_@quot& (0+255),0,b
  9491  00297E                     l5567:
  9492                           
  9493                           ; BSR set to: 0
  9494  00297E  0100               	movlb	0	; () banked
  9495  002980  90D8               	bcf	status,0,c
  9496  002982  3780               	rlcf	__div_to_l_@f1& (0+255),f,b
  9497  002984  3781               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9498  002986  3782               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9499  002988  3783               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9500                           
  9501                           ; BSR set to: 0
  9502  00298A  0100               	movlb	0	; () banked
  9503  00298C  2F8A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9504  00298E  D7CD               	goto	l5559
  9505                           
  9506                           ; BSR set to: 0
  9507                           
  9508                           ; BSR set to: 0
  9509  002990  0100               	movlb	0	; () banked
  9510  002992  AF8B               	btfss	__div_to_l_@exp1& (0+255),7,b
  9511  002994  D01A               	goto	l5583
  9512                           
  9513                           ; BSR set to: 0
  9514  002996  0100               	movlb	0	; () banked
  9515  002998  518B               	movf	__div_to_l_@exp1& (0+255),w,b
  9516  00299A  0A80               	xorlw	128
  9517  00299C  0F9F               	addlw	159
  9518  00299E  B0D8               	btfsc	status,0,c
  9519  0029A0  D00A               	goto	l5579
  9520                           
  9521                           ; BSR set to: 0
  9522  0029A2  0E00               	movlw	0
  9523  0029A4  0100               	movlb	0	; () banked
  9524  0029A6  6F80               	movwf	?__div_to_l_& (0+255),b
  9525  0029A8  0E00               	movlw	0
  9526  0029AA  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  9527  0029AC  0E00               	movlw	0
  9528  0029AE  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  9529  0029B0  0E00               	movlw	0
  9530  0029B2  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  9531                           
  9532                           ; BSR set to: 0
  9533  0029B4  0012               	return	
  9534  0029B6                     l5579:
  9535                           
  9536                           ; BSR set to: 0
  9537  0029B6  0100               	movlb	0	; () banked
  9538  0029B8  90D8               	bcf	status,0,c
  9539  0029BA  3389               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9540  0029BC  3388               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9541  0029BE  3387               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9542  0029C0  3386               	rrcf	__div_to_l_@quot& (0+255),f,b
  9543                           
  9544                           ; BSR set to: 0
  9545  0029C2  0100               	movlb	0	; () banked
  9546  0029C4  3F8B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9547  0029C6  D7F7               	goto	l5579
  9548                           
  9549                           ; BSR set to: 0
  9550  0029C8  D01B               	goto	l804
  9551  0029CA                     l5583:
  9552                           
  9553                           ; BSR set to: 0
  9554  0029CA  0E1F               	movlw	31
  9555  0029CC  0100               	movlb	0	; () banked
  9556  0029CE  658B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9557  0029D0  D012               	goto	l5591
  9558                           
  9559                           ; BSR set to: 0
  9560  0029D2  0E00               	movlw	0
  9561  0029D4  0100               	movlb	0	; () banked
  9562  0029D6  6F80               	movwf	?__div_to_l_& (0+255),b
  9563  0029D8  0E00               	movlw	0
  9564  0029DA  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  9565  0029DC  0E00               	movlw	0
  9566  0029DE  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  9567  0029E0  0E00               	movlw	0
  9568  0029E2  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  9569                           
  9570                           ; BSR set to: 0
  9571  0029E4  0012               	return	
  9572  0029E6                     l5589:
  9573                           
  9574                           ; BSR set to: 0
  9575  0029E6  0100               	movlb	0	; () banked
  9576  0029E8  90D8               	bcf	status,0,c
  9577  0029EA  3786               	rlcf	__div_to_l_@quot& (0+255),f,b
  9578  0029EC  3787               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9579  0029EE  3788               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9580  0029F0  3789               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9581  0029F2  0100               	movlb	0	; () banked
  9582  0029F4  078B               	decf	__div_to_l_@exp1& (0+255),f,b
  9583  0029F6                     l5591:
  9584                           
  9585                           ; BSR set to: 0
  9586  0029F6  0100               	movlb	0	; () banked
  9587  0029F8  518B               	movf	__div_to_l_@exp1& (0+255),w,b
  9588  0029FA  0100               	movlb	0	; () banked
  9589  0029FC  A4D8               	btfss	status,2,c
  9590  0029FE  D7F3               	goto	l5589
  9591  002A00                     l804:
  9592                           
  9593                           ; BSR set to: 0
  9594  002A00  C086  F080         	movff	__div_to_l_@quot,?__div_to_l_
  9595  002A04  C087  F081         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9596  002A08  C088  F082         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9597  002A0C  C089  F083         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9598                           
  9599                           ; BSR set to: 0
  9600  002A10  0012               	return		;funcret
  9601  002A12                     __end_of__div_to_l_:
  9602                           	opt stack 0
  9603                           tblptru	equ	0xFF8
  9604                           tblptrh	equ	0xFF7
  9605                           tblptrl	equ	0xFF6
  9606                           tablat	equ	0xFF5
  9607                           prodh	equ	0xFF4
  9608                           prodl	equ	0xFF3
  9609                           intcon	equ	0xFF2
  9610                           intcon2	equ	0xFF1
  9611                           intcon3	equ	0xFF0
  9612                           postinc0	equ	0xFEE
  9613                           wreg	equ	0xFE8
  9614                           indf1	equ	0xFE7
  9615                           postdec1	equ	0xFE5
  9616                           fsr1h	equ	0xFE2
  9617                           fsr1l	equ	0xFE1
  9618                           indf2	equ	0xFDF
  9619                           postinc2	equ	0xFDE
  9620                           postdec2	equ	0xFDD
  9621                           fsr2h	equ	0xFDA
  9622                           fsr2l	equ	0xFD9
  9623                           status	equ	0xFD8
  9624                           
  9625 ;; *************** function ___lltoft *****************
  9626 ;; Defined at:
  9627 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lltoft.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  c               4    8[BANK0 ] unsigned long 
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;  exp             1   16[BANK0 ] unsigned char 
  9632 ;; Return value:  Size  Location     Type
  9633 ;;                  3    8[BANK0 ] float 
  9634 ;; Registers used:
  9635 ;;		wreg, status,2, status,0, cstack
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9641 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9643 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;Total ram usage:        9 bytes
  9646 ;; Hardware stack levels used:    1
  9647 ;; Hardware stack levels required when called:    6
  9648 ;; This function calls:
  9649 ;;		___ftpack
  9650 ;; This function is called by:
  9651 ;;		_sprintf
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text23
  9656  003A64                     __ptext23:
  9657                           	opt stack 0
  9658  003A64                     ___lltoft:
  9659                           	opt stack 23
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;incstack = 0
  9663  003A64  0E8E               	movlw	142
  9664  003A66  0100               	movlb	0	; () banked
  9665  003A68  6F90               	movwf	___lltoft@exp& (0+255),b
  9666  003A6A  D008               	goto	l5647
  9667  003A6C                     l5645:
  9668                           
  9669                           ; BSR set to: 0
  9670  003A6C  0100               	movlb	0	; () banked
  9671  003A6E  90D8               	bcf	status,0,c
  9672  003A70  338B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  9673  003A72  338A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  9674  003A74  3389               	rrcf	(___lltoft@c+1)& (0+255),f,b
  9675  003A76  3388               	rrcf	___lltoft@c& (0+255),f,b
  9676  003A78  0100               	movlb	0	; () banked
  9677  003A7A  2B90               	incf	___lltoft@exp& (0+255),f,b
  9678  003A7C                     l5647:
  9679                           
  9680                           ; BSR set to: 0
  9681  003A7C  0E00               	movlw	0
  9682  003A7E  0100               	movlb	0	; () banked
  9683  003A80  1588               	andwf	___lltoft@c& (0+255),w,b
  9684  003A82  0100               	movlb	0	; () banked
  9685  003A84  6F8C               	movwf	??___lltoft& (0+255),b
  9686  003A86  0E00               	movlw	0
  9687  003A88  0100               	movlb	0	; () banked
  9688  003A8A  1589               	andwf	(___lltoft@c+1)& (0+255),w,b
  9689  003A8C  0100               	movlb	0	; () banked
  9690  003A8E  6F8D               	movwf	(??___lltoft+1)& (0+255),b
  9691  003A90  0E00               	movlw	0
  9692  003A92  0100               	movlb	0	; () banked
  9693  003A94  158A               	andwf	(___lltoft@c+2)& (0+255),w,b
  9694  003A96  0100               	movlb	0	; () banked
  9695  003A98  6F8E               	movwf	(??___lltoft+2)& (0+255),b
  9696  003A9A  0EFF               	movlw	255
  9697  003A9C  0100               	movlb	0	; () banked
  9698  003A9E  158B               	andwf	(___lltoft@c+3)& (0+255),w,b
  9699  003AA0  0100               	movlb	0	; () banked
  9700  003AA2  6F8F               	movwf	(??___lltoft+3)& (0+255),b
  9701  003AA4  0100               	movlb	0	; () banked
  9702  003AA6  518C               	movf	??___lltoft& (0+255),w,b
  9703  003AA8  0100               	movlb	0	; () banked
  9704  003AAA  118D               	iorwf	(??___lltoft+1)& (0+255),w,b
  9705  003AAC  0100               	movlb	0	; () banked
  9706  003AAE  118E               	iorwf	(??___lltoft+2)& (0+255),w,b
  9707  003AB0  0100               	movlb	0	; () banked
  9708  003AB2  118F               	iorwf	(??___lltoft+3)& (0+255),w,b
  9709  003AB4  A4D8               	btfss	status,2,c
  9710  003AB6  D7DA               	goto	l5645
  9711                           
  9712                           ; BSR set to: 0
  9713                           
  9714                           ; BSR set to: 0
  9715  003AB8  C088  F080         	movff	___lltoft@c,___ftpack@arg
  9716  003ABC  C089  F081         	movff	___lltoft@c+1,___ftpack@arg+1
  9717  003AC0  C08A  F082         	movff	___lltoft@c+2,___ftpack@arg+2
  9718  003AC4  C090  F083         	movff	___lltoft@exp,___ftpack@exp
  9719  003AC8  0E00               	movlw	0
  9720  003ACA  0100               	movlb	0	; () banked
  9721  003ACC  6F84               	movwf	___ftpack@sign& (0+255),b
  9722  003ACE  ECB3  F017         	call	___ftpack	;wreg free
  9723  003AD2  C080  F088         	movff	?___ftpack,?___lltoft
  9724  003AD6  C081  F089         	movff	?___ftpack+1,?___lltoft+1
  9725  003ADA  C082  F08A         	movff	?___ftpack+2,?___lltoft+2
  9726  003ADE  0012               	return	
  9727  003AE0                     __end_of___lltoft:
  9728                           	opt stack 0
  9729                           tblptru	equ	0xFF8
  9730                           tblptrh	equ	0xFF7
  9731                           tblptrl	equ	0xFF6
  9732                           tablat	equ	0xFF5
  9733                           prodh	equ	0xFF4
  9734                           prodl	equ	0xFF3
  9735                           intcon	equ	0xFF2
  9736                           intcon2	equ	0xFF1
  9737                           intcon3	equ	0xFF0
  9738                           postinc0	equ	0xFEE
  9739                           wreg	equ	0xFE8
  9740                           indf1	equ	0xFE7
  9741                           postdec1	equ	0xFE5
  9742                           fsr1h	equ	0xFE2
  9743                           fsr1l	equ	0xFE1
  9744                           indf2	equ	0xFDF
  9745                           postinc2	equ	0xFDE
  9746                           postdec2	equ	0xFDD
  9747                           fsr2h	equ	0xFDA
  9748                           fsr2l	equ	0xFD9
  9749                           status	equ	0xFD8
  9750                           
  9751 ;; *************** function ___llmod *****************
  9752 ;; Defined at:
  9753 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  dividend        4   13[BANK0 ] unsigned long 
  9756 ;;  divisor         4   17[BANK0 ] unsigned long 
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;  counter         1   21[BANK0 ] unsigned char 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  4   13[BANK0 ] unsigned long 
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9768 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;Total ram usage:        9 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; Hardware stack levels required when called:    5
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		_sprintf
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           	psect	text24
  9783  003828                     __ptext24:
  9784                           	opt stack 0
  9785  003828                     ___llmod:
  9786                           	opt stack 24
  9787                           
  9788                           ;incstack = 0
  9789  003828  0100               	movlb	0	; () banked
  9790  00382A  5191               	movf	___llmod@divisor& (0+255),w,b
  9791  00382C  0100               	movlb	0	; () banked
  9792  00382E  1192               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9793  003830  0100               	movlb	0	; () banked
  9794  003832  1193               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9795  003834  0100               	movlb	0	; () banked
  9796  003836  1194               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9797  003838  B4D8               	btfsc	status,2,c
  9798  00383A  D03A               	goto	l993
  9799                           
  9800                           ; BSR set to: 0
  9801  00383C  0E01               	movlw	1
  9802  00383E  0100               	movlb	0	; () banked
  9803  003840  6F95               	movwf	___llmod@counter& (0+255),b
  9804  003842  D008               	goto	l5633
  9805  003844                     l5631:
  9806                           
  9807                           ; BSR set to: 0
  9808  003844  0100               	movlb	0	; () banked
  9809  003846  90D8               	bcf	status,0,c
  9810  003848  3791               	rlcf	___llmod@divisor& (0+255),f,b
  9811  00384A  3792               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9812  00384C  3793               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9813  00384E  3794               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9814  003850  0100               	movlb	0	; () banked
  9815  003852  2B95               	incf	___llmod@counter& (0+255),f,b
  9816  003854                     l5633:
  9817                           
  9818                           ; BSR set to: 0
  9819  003854  0100               	movlb	0	; () banked
  9820  003856  AF94               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9821  003858  D7F5               	goto	l5631
  9822  00385A                     l5635:
  9823                           
  9824                           ; BSR set to: 0
  9825  00385A  0100               	movlb	0	; () banked
  9826  00385C  5191               	movf	___llmod@divisor& (0+255),w,b
  9827  00385E  0100               	movlb	0	; () banked
  9828  003860  5D8D               	subwf	___llmod@dividend& (0+255),w,b
  9829  003862  0100               	movlb	0	; () banked
  9830  003864  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  9831  003866  0100               	movlb	0	; () banked
  9832  003868  598E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9833  00386A  0100               	movlb	0	; () banked
  9834  00386C  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  9835  00386E  0100               	movlb	0	; () banked
  9836  003870  598F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9837  003872  0100               	movlb	0	; () banked
  9838  003874  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  9839  003876  0100               	movlb	0	; () banked
  9840  003878  5990               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9841  00387A  A0D8               	btfss	status,0,c
  9842  00387C  D010               	goto	l5639
  9843                           
  9844                           ; BSR set to: 0
  9845  00387E  0100               	movlb	0	; () banked
  9846  003880  5191               	movf	___llmod@divisor& (0+255),w,b
  9847  003882  0100               	movlb	0	; () banked
  9848  003884  5F8D               	subwf	___llmod@dividend& (0+255),f,b
  9849  003886  0100               	movlb	0	; () banked
  9850  003888  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  9851  00388A  0100               	movlb	0	; () banked
  9852  00388C  5B8E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9853  00388E  0100               	movlb	0	; () banked
  9854  003890  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  9855  003892  0100               	movlb	0	; () banked
  9856  003894  5B8F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9857  003896  0100               	movlb	0	; () banked
  9858  003898  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  9859  00389A  0100               	movlb	0	; () banked
  9860  00389C  5B90               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9861  00389E                     l5639:
  9862                           
  9863                           ; BSR set to: 0
  9864  00389E  0100               	movlb	0	; () banked
  9865  0038A0  90D8               	bcf	status,0,c
  9866  0038A2  3394               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9867  0038A4  3393               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9868  0038A6  3392               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9869  0038A8  3391               	rrcf	___llmod@divisor& (0+255),f,b
  9870                           
  9871                           ; BSR set to: 0
  9872  0038AA  0100               	movlb	0	; () banked
  9873  0038AC  2F95               	decfsz	___llmod@counter& (0+255),f,b
  9874  0038AE  D7D5               	goto	l5635
  9875  0038B0                     l993:
  9876                           
  9877                           ; BSR set to: 0
  9878  0038B0  C08D  F08D         	movff	___llmod@dividend,?___llmod
  9879  0038B4  C08E  F08E         	movff	___llmod@dividend+1,?___llmod+1
  9880  0038B8  C08F  F08F         	movff	___llmod@dividend+2,?___llmod+2
  9881  0038BC  C090  F090         	movff	___llmod@dividend+3,?___llmod+3
  9882                           
  9883                           ; BSR set to: 0
  9884  0038C0  0012               	return		;funcret
  9885  0038C2                     __end_of___llmod:
  9886                           	opt stack 0
  9887                           tblptru	equ	0xFF8
  9888                           tblptrh	equ	0xFF7
  9889                           tblptrl	equ	0xFF6
  9890                           tablat	equ	0xFF5
  9891                           prodh	equ	0xFF4
  9892                           prodl	equ	0xFF3
  9893                           intcon	equ	0xFF2
  9894                           intcon2	equ	0xFF1
  9895                           intcon3	equ	0xFF0
  9896                           postinc0	equ	0xFEE
  9897                           wreg	equ	0xFE8
  9898                           indf1	equ	0xFE7
  9899                           postdec1	equ	0xFE5
  9900                           fsr1h	equ	0xFE2
  9901                           fsr1l	equ	0xFE1
  9902                           indf2	equ	0xFDF
  9903                           postinc2	equ	0xFDE
  9904                           postdec2	equ	0xFDD
  9905                           fsr2h	equ	0xFDA
  9906                           fsr2l	equ	0xFD9
  9907                           status	equ	0xFD8
  9908                           
  9909 ;; *************** function ___lldiv *****************
  9910 ;; Defined at:
  9911 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  dividend        4    0[BANK0 ] unsigned long 
  9914 ;;  divisor         4    4[BANK0 ] unsigned long 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;  quotient        4    8[BANK0 ] unsigned long 
  9917 ;;  counter         1   12[BANK0 ] unsigned char 
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  4    0[BANK0 ] unsigned long 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9927 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9930 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9931 ;;Total ram usage:       13 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    5
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_sprintf
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text25
  9942  0034C6                     __ptext25:
  9943                           	opt stack 0
  9944  0034C6                     ___lldiv:
  9945                           	opt stack 24
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;incstack = 0
  9949  0034C6  0E00               	movlw	0
  9950  0034C8  0100               	movlb	0	; () banked
  9951  0034CA  6F88               	movwf	___lldiv@quotient& (0+255),b
  9952  0034CC  0E00               	movlw	0
  9953  0034CE  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
  9954  0034D0  0E00               	movlw	0
  9955  0034D2  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
  9956  0034D4  0E00               	movlw	0
  9957  0034D6  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
  9958                           
  9959                           ; BSR set to: 0
  9960  0034D8  0100               	movlb	0	; () banked
  9961  0034DA  5184               	movf	___lldiv@divisor& (0+255),w,b
  9962  0034DC  0100               	movlb	0	; () banked
  9963  0034DE  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9964  0034E0  0100               	movlb	0	; () banked
  9965  0034E2  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9966  0034E4  0100               	movlb	0	; () banked
  9967  0034E6  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9968  0034E8  B4D8               	btfsc	status,2,c
  9969  0034EA  D042               	goto	l983
  9970                           
  9971                           ; BSR set to: 0
  9972  0034EC  0E01               	movlw	1
  9973  0034EE  0100               	movlb	0	; () banked
  9974  0034F0  6F8C               	movwf	___lldiv@counter& (0+255),b
  9975  0034F2  D008               	goto	l5613
  9976  0034F4                     l5611:
  9977                           
  9978                           ; BSR set to: 0
  9979  0034F4  0100               	movlb	0	; () banked
  9980  0034F6  90D8               	bcf	status,0,c
  9981  0034F8  3784               	rlcf	___lldiv@divisor& (0+255),f,b
  9982  0034FA  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9983  0034FC  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9984  0034FE  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9985  003500  0100               	movlb	0	; () banked
  9986  003502  2B8C               	incf	___lldiv@counter& (0+255),f,b
  9987  003504                     l5613:
  9988                           
  9989                           ; BSR set to: 0
  9990  003504  0100               	movlb	0	; () banked
  9991  003506  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9992  003508  D7F5               	goto	l5611
  9993  00350A                     l5615:
  9994                           
  9995                           ; BSR set to: 0
  9996  00350A  0100               	movlb	0	; () banked
  9997  00350C  90D8               	bcf	status,0,c
  9998  00350E  3788               	rlcf	___lldiv@quotient& (0+255),f,b
  9999  003510  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10000  003512  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10001  003514  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10002                           
 10003                           ; BSR set to: 0
 10004  003516  0100               	movlb	0	; () banked
 10005  003518  5184               	movf	___lldiv@divisor& (0+255),w,b
 10006  00351A  0100               	movlb	0	; () banked
 10007  00351C  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 10008  00351E  0100               	movlb	0	; () banked
 10009  003520  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10010  003522  0100               	movlb	0	; () banked
 10011  003524  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10012  003526  0100               	movlb	0	; () banked
 10013  003528  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10014  00352A  0100               	movlb	0	; () banked
 10015  00352C  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10016  00352E  0100               	movlb	0	; () banked
 10017  003530  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10018  003532  0100               	movlb	0	; () banked
 10019  003534  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10020  003536  A0D8               	btfss	status,0,c
 10021  003538  D012               	goto	l5623
 10022                           
 10023                           ; BSR set to: 0
 10024  00353A  0100               	movlb	0	; () banked
 10025  00353C  5184               	movf	___lldiv@divisor& (0+255),w,b
 10026  00353E  0100               	movlb	0	; () banked
 10027  003540  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 10028  003542  0100               	movlb	0	; () banked
 10029  003544  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10030  003546  0100               	movlb	0	; () banked
 10031  003548  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10032  00354A  0100               	movlb	0	; () banked
 10033  00354C  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10034  00354E  0100               	movlb	0	; () banked
 10035  003550  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10036  003552  0100               	movlb	0	; () banked
 10037  003554  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10038  003556  0100               	movlb	0	; () banked
 10039  003558  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10040                           
 10041                           ; BSR set to: 0
 10042  00355A  0100               	movlb	0	; () banked
 10043  00355C  8188               	bsf	___lldiv@quotient& (0+255),0,b
 10044  00355E                     l5623:
 10045                           
 10046                           ; BSR set to: 0
 10047  00355E  0100               	movlb	0	; () banked
 10048  003560  90D8               	bcf	status,0,c
 10049  003562  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10050  003564  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10051  003566  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10052  003568  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 10053                           
 10054                           ; BSR set to: 0
 10055  00356A  0100               	movlb	0	; () banked
 10056  00356C  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 10057  00356E  D7CD               	goto	l5615
 10058  003570                     l983:
 10059                           
 10060                           ; BSR set to: 0
 10061  003570  C088  F080         	movff	___lldiv@quotient,?___lldiv
 10062  003574  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 10063  003578  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 10064  00357C  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 10065                           
 10066                           ; BSR set to: 0
 10067  003580  0012               	return		;funcret
 10068  003582                     __end_of___lldiv:
 10069                           	opt stack 0
 10070                           tblptru	equ	0xFF8
 10071                           tblptrh	equ	0xFF7
 10072                           tblptrl	equ	0xFF6
 10073                           tablat	equ	0xFF5
 10074                           prodh	equ	0xFF4
 10075                           prodl	equ	0xFF3
 10076                           intcon	equ	0xFF2
 10077                           intcon2	equ	0xFF1
 10078                           intcon3	equ	0xFF0
 10079                           postinc0	equ	0xFEE
 10080                           wreg	equ	0xFE8
 10081                           indf1	equ	0xFE7
 10082                           postdec1	equ	0xFE5
 10083                           fsr1h	equ	0xFE2
 10084                           fsr1l	equ	0xFE1
 10085                           indf2	equ	0xFDF
 10086                           postinc2	equ	0xFDE
 10087                           postdec2	equ	0xFDD
 10088                           fsr2h	equ	0xFDA
 10089                           fsr2l	equ	0xFD9
 10090                           status	equ	0xFD8
 10091                           
 10092 ;; *************** function ___fttol *****************
 10093 ;; Defined at:
 10094 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  f1              3   57[BANK0 ] float 
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;  lval            4   67[BANK0 ] unsigned long 
 10099 ;;  exp1            1   71[BANK0 ] unsigned char 
 10100 ;;  sign1           1   66[BANK0 ] unsigned char 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  4   57[BANK0 ] long 
 10103 ;; Registers used:
 10104 ;;		wreg, status,2, status,0
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10110 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10111 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;Total ram usage:       15 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    5
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_set_pwm1_percent
 10121 ;;		_main
 10122 ;;		_sprintf
 10123 ;;		_set_pwm1_voltage
 10124 ;;		_set_pwm1_general
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           	psect	text26
 10129  002E22                     __ptext26:
 10130                           	opt stack 0
 10131  002E22                     ___fttol:
 10132                           	opt stack 24
 10133                           
 10134                           ; BSR set to: 0
 10135                           ;incstack = 0
 10136  002E22  C0BB  F0BD         	movff	___fttol@f1+2,??___fttol
 10137  002E26  0100               	movlb	0	; () banked
 10138  002E28  6BBE               	clrf	(??___fttol+1)& (0+255),b
 10139  002E2A  6BBF               	clrf	(??___fttol+2)& (0+255),b
 10140  002E2C  0100               	movlb	0	; () banked
 10141  002E2E  35BA               	rlcf	(___fttol@f1+1)& (0+255),w,b
 10142  002E30  0100               	movlb	0	; () banked
 10143  002E32  37BD               	rlcf	??___fttol& (0+255),f,b
 10144  002E34  E301               	bnc	u3811
 10145  002E36  81BE               	bsf	(??___fttol+1)& (0+255),0,b
 10146  002E38                     u3811:
 10147  002E38  0100               	movlb	0	; () banked
 10148  002E3A  51BD               	movf	??___fttol& (0+255),w,b
 10149  002E3C  0100               	movlb	0	; () banked
 10150  002E3E  6FC7               	movwf	___fttol@exp1& (0+255),b
 10151  002E40  0100               	movlb	0	; () banked
 10152  002E42  51C7               	movf	___fttol@exp1& (0+255),w,b
 10153  002E44  A4D8               	btfss	status,2,c
 10154  002E46  D00A               	goto	l3787
 10155                           
 10156                           ; BSR set to: 0
 10157  002E48  0E00               	movlw	0
 10158  002E4A  0100               	movlb	0	; () banked
 10159  002E4C  6FB9               	movwf	?___fttol& (0+255),b
 10160  002E4E  0E00               	movlw	0
 10161  002E50  6FBA               	movwf	(?___fttol+1)& (0+255),b
 10162  002E52  0E00               	movlw	0
 10163  002E54  6FBB               	movwf	(?___fttol+2)& (0+255),b
 10164  002E56  0E00               	movlw	0
 10165  002E58  6FBC               	movwf	(?___fttol+3)& (0+255),b
 10166                           
 10167                           ; BSR set to: 0
 10168  002E5A  0012               	return	
 10169  002E5C                     l3787:
 10170                           
 10171                           ; BSR set to: 0
 10172  002E5C  0E17               	movlw	23
 10173  002E5E  0100               	movlb	0	; () banked
 10174  002E60  6FBD               	movwf	??___fttol& (0+255),b
 10175  002E62  C0B9  F0BE         	movff	___fttol@f1,??___fttol+1
 10176  002E66  C0BA  F0BF         	movff	___fttol@f1+1,??___fttol+2
 10177  002E6A  C0BB  F0C0         	movff	___fttol@f1+2,??___fttol+3
 10178  002E6E  0100               	movlb	0	; () banked
 10179  002E70  29BD               	incf	??___fttol& (0+255),w,b
 10180  002E72  0100               	movlb	0	; () banked
 10181  002E74  6FC1               	movwf	(??___fttol+4)& (0+255),b
 10182  002E76  D005               	goto	u3830
 10183  002E78                     u3835:
 10184  002E78  0100               	movlb	0	; () banked
 10185  002E7A  90D8               	bcf	status,0,c
 10186  002E7C  33C0               	rrcf	(??___fttol+3)& (0+255),f,b
 10187  002E7E  33BF               	rrcf	(??___fttol+2)& (0+255),f,b
 10188  002E80  33BE               	rrcf	(??___fttol+1)& (0+255),f,b
 10189  002E82                     u3830:
 10190  002E82  0100               	movlb	0	; () banked
 10191  002E84  2FC1               	decfsz	(??___fttol+4)& (0+255),f,b
 10192  002E86  D7F8               	goto	u3835
 10193  002E88  0100               	movlb	0	; () banked
 10194  002E8A  51BE               	movf	(??___fttol+1)& (0+255),w,b
 10195  002E8C  0100               	movlb	0	; () banked
 10196  002E8E  6FC2               	movwf	___fttol@sign1& (0+255),b
 10197                           
 10198                           ; BSR set to: 0
 10199  002E90  0100               	movlb	0	; () banked
 10200  002E92  8FBA               	bsf	(___fttol@f1+1)& (0+255),7,b
 10201                           
 10202                           ; BSR set to: 0
 10203  002E94  0EFF               	movlw	255
 10204  002E96  0100               	movlb	0	; () banked
 10205  002E98  17B9               	andwf	___fttol@f1& (0+255),f,b
 10206  002E9A  0EFF               	movlw	255
 10207  002E9C  0100               	movlb	0	; () banked
 10208  002E9E  17BA               	andwf	(___fttol@f1+1)& (0+255),f,b
 10209  002EA0  0E00               	movlw	0
 10210  002EA2  0100               	movlb	0	; () banked
 10211  002EA4  17BB               	andwf	(___fttol@f1+2)& (0+255),f,b
 10212                           
 10213                           ; BSR set to: 0
 10214  002EA6  0100               	movlb	0	; () banked
 10215  002EA8  51B9               	movf	___fttol@f1& (0+255),w,b
 10216  002EAA  0100               	movlb	0	; () banked
 10217  002EAC  6FC3               	movwf	___fttol@lval& (0+255),b
 10218  002EAE  0100               	movlb	0	; () banked
 10219  002EB0  51BA               	movf	(___fttol@f1+1)& (0+255),w,b
 10220  002EB2  0100               	movlb	0	; () banked
 10221  002EB4  6FC4               	movwf	(___fttol@lval+1)& (0+255),b
 10222  002EB6  0100               	movlb	0	; () banked
 10223  002EB8  51BB               	movf	(___fttol@f1+2)& (0+255),w,b
 10224  002EBA  0100               	movlb	0	; () banked
 10225  002EBC  6FC5               	movwf	(___fttol@lval+2)& (0+255),b
 10226  002EBE  0100               	movlb	0	; () banked
 10227  002EC0  6BC6               	clrf	(___fttol@lval+3)& (0+255),b
 10228                           
 10229                           ; BSR set to: 0
 10230  002EC2  0E8E               	movlw	142
 10231  002EC4  0100               	movlb	0	; () banked
 10232  002EC6  5FC7               	subwf	___fttol@exp1& (0+255),f,b
 10233                           
 10234                           ; BSR set to: 0
 10235  002EC8  0100               	movlb	0	; () banked
 10236  002ECA  AFC7               	btfss	___fttol@exp1& (0+255),7,b
 10237  002ECC  D01A               	goto	l3809
 10238                           
 10239                           ; BSR set to: 0
 10240  002ECE  0100               	movlb	0	; () banked
 10241  002ED0  51C7               	movf	___fttol@exp1& (0+255),w,b
 10242  002ED2  0A80               	xorlw	128
 10243  002ED4  0F8F               	addlw	143
 10244  002ED6  B0D8               	btfsc	status,0,c
 10245  002ED8  D00A               	goto	l3805
 10246                           
 10247                           ; BSR set to: 0
 10248  002EDA  0E00               	movlw	0
 10249  002EDC  0100               	movlb	0	; () banked
 10250  002EDE  6FB9               	movwf	?___fttol& (0+255),b
 10251  002EE0  0E00               	movlw	0
 10252  002EE2  6FBA               	movwf	(?___fttol+1)& (0+255),b
 10253  002EE4  0E00               	movlw	0
 10254  002EE6  6FBB               	movwf	(?___fttol+2)& (0+255),b
 10255  002EE8  0E00               	movlw	0
 10256  002EEA  6FBC               	movwf	(?___fttol+3)& (0+255),b
 10257                           
 10258                           ; BSR set to: 0
 10259  002EEC  0012               	return	
 10260  002EEE                     l3805:
 10261                           
 10262                           ; BSR set to: 0
 10263  002EEE  0100               	movlb	0	; () banked
 10264  002EF0  90D8               	bcf	status,0,c
 10265  002EF2  33C6               	rrcf	(___fttol@lval+3)& (0+255),f,b
 10266  002EF4  33C5               	rrcf	(___fttol@lval+2)& (0+255),f,b
 10267  002EF6  33C4               	rrcf	(___fttol@lval+1)& (0+255),f,b
 10268  002EF8  33C3               	rrcf	___fttol@lval& (0+255),f,b
 10269                           
 10270                           ; BSR set to: 0
 10271  002EFA  0100               	movlb	0	; () banked
 10272  002EFC  3FC7               	incfsz	___fttol@exp1& (0+255),f,b
 10273  002EFE  D7F7               	goto	l3805
 10274                           
 10275                           ; BSR set to: 0
 10276  002F00  D01B               	goto	l3819
 10277  002F02                     l3809:
 10278                           
 10279                           ; BSR set to: 0
 10280  002F02  0E17               	movlw	23
 10281  002F04  0100               	movlb	0	; () banked
 10282  002F06  65C7               	cpfsgt	___fttol@exp1& (0+255),b
 10283  002F08  D012               	goto	l3817
 10284                           
 10285                           ; BSR set to: 0
 10286  002F0A  0E00               	movlw	0
 10287  002F0C  0100               	movlb	0	; () banked
 10288  002F0E  6FB9               	movwf	?___fttol& (0+255),b
 10289  002F10  0E00               	movlw	0
 10290  002F12  6FBA               	movwf	(?___fttol+1)& (0+255),b
 10291  002F14  0E00               	movlw	0
 10292  002F16  6FBB               	movwf	(?___fttol+2)& (0+255),b
 10293  002F18  0E00               	movlw	0
 10294  002F1A  6FBC               	movwf	(?___fttol+3)& (0+255),b
 10295                           
 10296                           ; BSR set to: 0
 10297  002F1C  0012               	return	
 10298  002F1E                     l3815:
 10299                           
 10300                           ; BSR set to: 0
 10301  002F1E  0100               	movlb	0	; () banked
 10302  002F20  90D8               	bcf	status,0,c
 10303  002F22  37C3               	rlcf	___fttol@lval& (0+255),f,b
 10304  002F24  37C4               	rlcf	(___fttol@lval+1)& (0+255),f,b
 10305  002F26  37C5               	rlcf	(___fttol@lval+2)& (0+255),f,b
 10306  002F28  37C6               	rlcf	(___fttol@lval+3)& (0+255),f,b
 10307  002F2A  0100               	movlb	0	; () banked
 10308  002F2C  07C7               	decf	___fttol@exp1& (0+255),f,b
 10309  002F2E                     l3817:
 10310                           
 10311                           ; BSR set to: 0
 10312  002F2E  0100               	movlb	0	; () banked
 10313  002F30  51C7               	movf	___fttol@exp1& (0+255),w,b
 10314  002F32  0100               	movlb	0	; () banked
 10315  002F34  A4D8               	btfss	status,2,c
 10316  002F36  D7F3               	goto	l3815
 10317  002F38                     l3819:
 10318                           
 10319                           ; BSR set to: 0
 10320  002F38  0100               	movlb	0	; () banked
 10321  002F3A  51C2               	movf	___fttol@sign1& (0+255),w,b
 10322  002F3C  0100               	movlb	0	; () banked
 10323  002F3E  B4D8               	btfsc	status,2,c
 10324  002F40  D009               	goto	l3823
 10325                           
 10326                           ; BSR set to: 0
 10327  002F42  0100               	movlb	0	; () banked
 10328  002F44  1FC6               	comf	(___fttol@lval+3)& (0+255),f,b
 10329  002F46  1FC5               	comf	(___fttol@lval+2)& (0+255),f,b
 10330  002F48  1FC4               	comf	(___fttol@lval+1)& (0+255),f,b
 10331  002F4A  6DC3               	negf	___fttol@lval& (0+255),b
 10332  002F4C  0E00               	movlw	0
 10333  002F4E  23C4               	addwfc	(___fttol@lval+1)& (0+255),f,b
 10334  002F50  23C5               	addwfc	(___fttol@lval+2)& (0+255),f,b
 10335  002F52  23C6               	addwfc	(___fttol@lval+3)& (0+255),f,b
 10336  002F54                     l3823:
 10337                           
 10338                           ; BSR set to: 0
 10339  002F54  C0C3  F0B9         	movff	___fttol@lval,?___fttol
 10340  002F58  C0C4  F0BA         	movff	___fttol@lval+1,?___fttol+1
 10341  002F5C  C0C5  F0BB         	movff	___fttol@lval+2,?___fttol+2
 10342  002F60  C0C6  F0BC         	movff	___fttol@lval+3,?___fttol+3
 10343  002F64  0012               	return	
 10344  002F66                     __end_of___fttol:
 10345                           	opt stack 0
 10346                           tblptru	equ	0xFF8
 10347                           tblptrh	equ	0xFF7
 10348                           tblptrl	equ	0xFF6
 10349                           tablat	equ	0xFF5
 10350                           prodh	equ	0xFF4
 10351                           prodl	equ	0xFF3
 10352                           intcon	equ	0xFF2
 10353                           intcon2	equ	0xFF1
 10354                           intcon3	equ	0xFF0
 10355                           postinc0	equ	0xFEE
 10356                           wreg	equ	0xFE8
 10357                           indf1	equ	0xFE7
 10358                           postdec1	equ	0xFE5
 10359                           fsr1h	equ	0xFE2
 10360                           fsr1l	equ	0xFE1
 10361                           indf2	equ	0xFDF
 10362                           postinc2	equ	0xFDE
 10363                           postdec2	equ	0xFDD
 10364                           fsr2h	equ	0xFDA
 10365                           fsr2l	equ	0xFD9
 10366                           status	equ	0xFD8
 10367                           
 10368 ;; *************** function ___ftsub *****************
 10369 ;; Defined at:
 10370 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftsub.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;  f1              3   57[BANK0 ] float 
 10373 ;;  f2              3   60[BANK0 ] float 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;		None
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  3   57[BANK0 ] float 
 10378 ;; Registers used:
 10379 ;;		wreg, status,2, status,0, cstack
 10380 ;; Tracked objects:
 10381 ;;		On entry : 0/0
 10382 ;;		On exit  : 0/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10385 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10388 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10389 ;;Total ram usage:        6 bytes
 10390 ;; Hardware stack levels used:    1
 10391 ;; Hardware stack levels required when called:    7
 10392 ;; This function calls:
 10393 ;;		___ftadd
 10394 ;; This function is called by:
 10395 ;;		_sprintf
 10396 ;; This function uses a non-reentrant model
 10397 ;;
 10398                           
 10399                           	psect	text27
 10400  003EB0                     __ptext27:
 10401                           	opt stack 0
 10402  003EB0                     ___ftsub:
 10403                           	opt stack 22
 10404                           
 10405                           ; BSR set to: 0
 10406                           ;incstack = 0
 10407  003EB0  0100               	movlb	0	; () banked
 10408  003EB2  51BC               	movf	___ftsub@f2& (0+255),w,b
 10409  003EB4  0100               	movlb	0	; () banked
 10410  003EB6  11BD               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 10411  003EB8  0100               	movlb	0	; () banked
 10412  003EBA  11BE               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 10413  003EBC  B4D8               	btfsc	status,2,c
 10414  003EBE  D009               	goto	l5597
 10415                           
 10416                           ; BSR set to: 0
 10417  003EC0  0E00               	movlw	0
 10418  003EC2  0100               	movlb	0	; () banked
 10419  003EC4  1BBC               	xorwf	___ftsub@f2& (0+255),f,b
 10420  003EC6  0E00               	movlw	0
 10421  003EC8  0100               	movlb	0	; () banked
 10422  003ECA  1BBD               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 10423  003ECC  0E80               	movlw	128
 10424  003ECE  0100               	movlb	0	; () banked
 10425  003ED0  1BBE               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 10426  003ED2                     l5597:
 10427                           
 10428                           ; BSR set to: 0
 10429  003ED2  C0B9  F0AD         	movff	___ftsub@f1,___ftadd@f1
 10430  003ED6  C0BA  F0AE         	movff	___ftsub@f1+1,___ftadd@f1+1
 10431  003EDA  C0BB  F0AF         	movff	___ftsub@f1+2,___ftadd@f1+2
 10432  003EDE  C0BC  F0B0         	movff	___ftsub@f2,___ftadd@f2
 10433  003EE2  C0BD  F0B1         	movff	___ftsub@f2+1,___ftadd@f2+1
 10434  003EE6  C0BE  F0B2         	movff	___ftsub@f2+2,___ftadd@f2+2
 10435  003EEA  EC6C  F011         	call	___ftadd	;wreg free
 10436  003EEE  C0AD  F0B9         	movff	?___ftadd,?___ftsub
 10437  003EF2  C0AE  F0BA         	movff	?___ftadd+1,?___ftsub+1
 10438  003EF6  C0AF  F0BB         	movff	?___ftadd+2,?___ftsub+2
 10439  003EFA  0012               	return	
 10440  003EFC                     __end_of___ftsub:
 10441                           	opt stack 0
 10442                           tblptru	equ	0xFF8
 10443                           tblptrh	equ	0xFF7
 10444                           tblptrl	equ	0xFF6
 10445                           tablat	equ	0xFF5
 10446                           prodh	equ	0xFF4
 10447                           prodl	equ	0xFF3
 10448                           intcon	equ	0xFF2
 10449                           intcon2	equ	0xFF1
 10450                           intcon3	equ	0xFF0
 10451                           postinc0	equ	0xFEE
 10452                           wreg	equ	0xFE8
 10453                           indf1	equ	0xFE7
 10454                           postdec1	equ	0xFE5
 10455                           fsr1h	equ	0xFE2
 10456                           fsr1l	equ	0xFE1
 10457                           indf2	equ	0xFDF
 10458                           postinc2	equ	0xFDE
 10459                           postdec2	equ	0xFDD
 10460                           fsr2h	equ	0xFDA
 10461                           fsr2l	equ	0xFD9
 10462                           status	equ	0xFD8
 10463                           
 10464 ;; *************** function ___ftadd *****************
 10465 ;; Defined at:
 10466 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;  f1              3   45[BANK0 ] float 
 10469 ;;  f2              3   48[BANK0 ] float 
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;  exp1            1   56[BANK0 ] unsigned char 
 10472 ;;  exp2            1   55[BANK0 ] unsigned char 
 10473 ;;  sign            1   54[BANK0 ] unsigned char 
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  3   45[BANK0 ] float 
 10476 ;; Registers used:
 10477 ;;		wreg, status,2, status,0, cstack
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10483 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10486 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10487 ;;Total ram usage:       12 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:    6
 10490 ;; This function calls:
 10491 ;;		___ftpack
 10492 ;; This function is called by:
 10493 ;;		_set_pwm1_percent
 10494 ;;		_main
 10495 ;;		_sprintf
 10496 ;;		___ftsub
 10497 ;;		_set_pwm1_voltage
 10498 ;;		_set_pwm1_general
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text28
 10503  0022D8                     __ptext28:
 10504                           	opt stack 0
 10505  0022D8                     ___ftadd:
 10506                           	opt stack 22
 10507                           
 10508                           ;incstack = 0
 10509  0022D8  C0AF  F0B3         	movff	___ftadd@f1+2,??___ftadd
 10510  0022DC  0100               	movlb	0	; () banked
 10511  0022DE  6BB4               	clrf	(??___ftadd+1)& (0+255),b
 10512  0022E0  6BB5               	clrf	(??___ftadd+2)& (0+255),b
 10513  0022E2  0100               	movlb	0	; () banked
 10514  0022E4  35AE               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 10515  0022E6  0100               	movlb	0	; () banked
 10516  0022E8  37B3               	rlcf	??___ftadd& (0+255),f,b
 10517  0022EA  E301               	bnc	u5901
 10518  0022EC  81B4               	bsf	(??___ftadd+1)& (0+255),0,b
 10519  0022EE                     u5901:
 10520  0022EE  0100               	movlb	0	; () banked
 10521  0022F0  51B3               	movf	??___ftadd& (0+255),w,b
 10522  0022F2  0100               	movlb	0	; () banked
 10523  0022F4  6FB8               	movwf	___ftadd@exp1& (0+255),b
 10524  0022F6  C0B2  F0B3         	movff	___ftadd@f2+2,??___ftadd
 10525  0022FA  0100               	movlb	0	; () banked
 10526  0022FC  6BB4               	clrf	(??___ftadd+1)& (0+255),b
 10527  0022FE  6BB5               	clrf	(??___ftadd+2)& (0+255),b
 10528  002300  0100               	movlb	0	; () banked
 10529  002302  35B1               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 10530  002304  0100               	movlb	0	; () banked
 10531  002306  37B3               	rlcf	??___ftadd& (0+255),f,b
 10532  002308  E301               	bnc	u5911
 10533  00230A  81B4               	bsf	(??___ftadd+1)& (0+255),0,b
 10534  00230C                     u5911:
 10535  00230C  0100               	movlb	0	; () banked
 10536  00230E  51B3               	movf	??___ftadd& (0+255),w,b
 10537  002310  0100               	movlb	0	; () banked
 10538  002312  6FB7               	movwf	___ftadd@exp2& (0+255),b
 10539                           
 10540                           ; BSR set to: 0
 10541  002314  0100               	movlb	0	; () banked
 10542  002316  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10543  002318  0100               	movlb	0	; () banked
 10544  00231A  B4D8               	btfsc	status,2,c
 10545  00231C  D011               	goto	l859
 10546                           
 10547                           ; BSR set to: 0
 10548  00231E  0100               	movlb	0	; () banked
 10549  002320  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10550  002322  0100               	movlb	0	; () banked
 10551  002324  5DB8               	subwf	___ftadd@exp1& (0+255),w,b
 10552  002326  B0D8               	btfsc	status,0,c
 10553  002328  D012               	goto	l5253
 10554                           
 10555                           ; BSR set to: 0
 10556  00232A  0100               	movlb	0	; () banked
 10557  00232C  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10558  00232E  0800               	sublw	0
 10559  002330  0100               	movlb	0	; () banked
 10560  002332  25B7               	addwf	___ftadd@exp2& (0+255),w,b
 10561  002334  0100               	movlb	0	; () banked
 10562  002336  6FB3               	movwf	??___ftadd& (0+255),b
 10563  002338  0E18               	movlw	24
 10564  00233A  0100               	movlb	0	; () banked
 10565  00233C  65B3               	cpfsgt	??___ftadd& (0+255),b
 10566  00233E  D007               	goto	l5253
 10567  002340                     l859:
 10568                           
 10569                           ; BSR set to: 0
 10570  002340  C0B0  F0AD         	movff	___ftadd@f2,?___ftadd
 10571  002344  C0B1  F0AE         	movff	___ftadd@f2+1,?___ftadd+1
 10572  002348  C0B2  F0AF         	movff	___ftadd@f2+2,?___ftadd+2
 10573  00234C  0012               	return	
 10574  00234E                     l5253:
 10575                           
 10576                           ; BSR set to: 0
 10577  00234E  0100               	movlb	0	; () banked
 10578  002350  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10579  002352  0100               	movlb	0	; () banked
 10580  002354  B4D8               	btfsc	status,2,c
 10581  002356  D011               	goto	l863
 10582                           
 10583                           ; BSR set to: 0
 10584  002358  0100               	movlb	0	; () banked
 10585  00235A  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10586  00235C  0100               	movlb	0	; () banked
 10587  00235E  5DB7               	subwf	___ftadd@exp2& (0+255),w,b
 10588  002360  B0D8               	btfsc	status,0,c
 10589  002362  D012               	goto	l5259
 10590                           
 10591                           ; BSR set to: 0
 10592  002364  0100               	movlb	0	; () banked
 10593  002366  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10594  002368  0800               	sublw	0
 10595  00236A  0100               	movlb	0	; () banked
 10596  00236C  25B8               	addwf	___ftadd@exp1& (0+255),w,b
 10597  00236E  0100               	movlb	0	; () banked
 10598  002370  6FB3               	movwf	??___ftadd& (0+255),b
 10599  002372  0E18               	movlw	24
 10600  002374  0100               	movlb	0	; () banked
 10601  002376  65B3               	cpfsgt	??___ftadd& (0+255),b
 10602  002378  D007               	goto	l5259
 10603  00237A                     l863:
 10604                           
 10605                           ; BSR set to: 0
 10606  00237A  C0AD  F0AD         	movff	___ftadd@f1,?___ftadd
 10607  00237E  C0AE  F0AE         	movff	___ftadd@f1+1,?___ftadd+1
 10608  002382  C0AF  F0AF         	movff	___ftadd@f1+2,?___ftadd+2
 10609  002386  0012               	return	
 10610  002388                     l5259:
 10611                           
 10612                           ; BSR set to: 0
 10613  002388  0E06               	movlw	6
 10614  00238A  0100               	movlb	0	; () banked
 10615  00238C  6FB6               	movwf	___ftadd@sign& (0+255),b
 10616                           
 10617                           ; BSR set to: 0
 10618  00238E  0100               	movlb	0	; () banked
 10619  002390  AFAF               	btfss	(___ftadd@f1+2)& (0+255),7,b
 10620  002392  D002               	goto	l5265
 10621                           
 10622                           ; BSR set to: 0
 10623  002394  0100               	movlb	0	; () banked
 10624  002396  8FB6               	bsf	___ftadd@sign& (0+255),7,b
 10625  002398                     l5265:
 10626                           
 10627                           ; BSR set to: 0
 10628  002398  0100               	movlb	0	; () banked
 10629  00239A  AFB2               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10630  00239C  D002               	goto	l865
 10631                           
 10632                           ; BSR set to: 0
 10633  00239E  0100               	movlb	0	; () banked
 10634  0023A0  8DB6               	bsf	___ftadd@sign& (0+255),6,b
 10635  0023A2                     l865:
 10636                           
 10637                           ; BSR set to: 0
 10638  0023A2  0100               	movlb	0	; () banked
 10639  0023A4  8FAE               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10640                           
 10641                           ; BSR set to: 0
 10642  0023A6  0EFF               	movlw	255
 10643  0023A8  0100               	movlb	0	; () banked
 10644  0023AA  17AD               	andwf	___ftadd@f1& (0+255),f,b
 10645  0023AC  0EFF               	movlw	255
 10646  0023AE  0100               	movlb	0	; () banked
 10647  0023B0  17AE               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10648  0023B2  0E00               	movlw	0
 10649  0023B4  0100               	movlb	0	; () banked
 10650  0023B6  17AF               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10651  0023B8  0100               	movlb	0	; () banked
 10652  0023BA  8FB1               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10653                           
 10654                           ; BSR set to: 0
 10655  0023BC  0EFF               	movlw	255
 10656  0023BE  0100               	movlb	0	; () banked
 10657  0023C0  17B0               	andwf	___ftadd@f2& (0+255),f,b
 10658  0023C2  0EFF               	movlw	255
 10659  0023C4  0100               	movlb	0	; () banked
 10660  0023C6  17B1               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10661  0023C8  0E00               	movlw	0
 10662  0023CA  0100               	movlb	0	; () banked
 10663  0023CC  17B2               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10664                           
 10665                           ; BSR set to: 0
 10666  0023CE  0100               	movlb	0	; () banked
 10667  0023D0  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10668  0023D2  0100               	movlb	0	; () banked
 10669  0023D4  5DB8               	subwf	___ftadd@exp1& (0+255),w,b
 10670  0023D6  B0D8               	btfsc	status,0,c
 10671  0023D8  D025               	goto	l5285
 10672  0023DA                     l5275:
 10673                           
 10674                           ; BSR set to: 0
 10675  0023DA  0100               	movlb	0	; () banked
 10676  0023DC  90D8               	bcf	status,0,c
 10677  0023DE  37B0               	rlcf	___ftadd@f2& (0+255),f,b
 10678  0023E0  37B1               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10679  0023E2  37B2               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10680  0023E4  0100               	movlb	0	; () banked
 10681  0023E6  07B7               	decf	___ftadd@exp2& (0+255),f,b
 10682                           
 10683                           ; BSR set to: 0
 10684  0023E8  0100               	movlb	0	; () banked
 10685  0023EA  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10686  0023EC  0100               	movlb	0	; () banked
 10687  0023EE  19B7               	xorwf	___ftadd@exp2& (0+255),w,b
 10688  0023F0  B4D8               	btfsc	status,2,c
 10689  0023F2  D011               	goto	l5283
 10690                           
 10691                           ; BSR set to: 0
 10692  0023F4  0100               	movlb	0	; () banked
 10693  0023F6  07B6               	decf	___ftadd@sign& (0+255),f,b
 10694  0023F8  C0B6  F0B3         	movff	___ftadd@sign,??___ftadd
 10695  0023FC  0E07               	movlw	7
 10696  0023FE  0100               	movlb	0	; () banked
 10697  002400  17B3               	andwf	??___ftadd& (0+255),f,b
 10698  002402  B4D8               	btfsc	status,2,c
 10699  002404  D008               	goto	l5283
 10700  002406  D7E9               	goto	l5275
 10701  002408                     l5281:
 10702                           
 10703                           ; BSR set to: 0
 10704  002408  0100               	movlb	0	; () banked
 10705  00240A  90D8               	bcf	status,0,c
 10706  00240C  33AF               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10707  00240E  33AE               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10708  002410  33AD               	rrcf	___ftadd@f1& (0+255),f,b
 10709  002412  0100               	movlb	0	; () banked
 10710  002414  2BB8               	incf	___ftadd@exp1& (0+255),f,b
 10711  002416                     l5283:
 10712                           
 10713                           ; BSR set to: 0
 10714  002416  0100               	movlb	0	; () banked
 10715  002418  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10716  00241A  0100               	movlb	0	; () banked
 10717  00241C  19B8               	xorwf	___ftadd@exp1& (0+255),w,b
 10718  00241E  B4D8               	btfsc	status,2,c
 10719  002420  D02B               	goto	l874
 10720  002422  D7F2               	goto	l5281
 10721  002424                     l5285:
 10722                           
 10723                           ; BSR set to: 0
 10724  002424  0100               	movlb	0	; () banked
 10725  002426  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10726  002428  0100               	movlb	0	; () banked
 10727  00242A  5DB7               	subwf	___ftadd@exp2& (0+255),w,b
 10728  00242C  B0D8               	btfsc	status,0,c
 10729  00242E  D024               	goto	l874
 10730  002430                     l5287:
 10731                           
 10732                           ; BSR set to: 0
 10733  002430  0100               	movlb	0	; () banked
 10734  002432  90D8               	bcf	status,0,c
 10735  002434  37AD               	rlcf	___ftadd@f1& (0+255),f,b
 10736  002436  37AE               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10737  002438  37AF               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10738  00243A  0100               	movlb	0	; () banked
 10739  00243C  07B8               	decf	___ftadd@exp1& (0+255),f,b
 10740                           
 10741                           ; BSR set to: 0
 10742  00243E  0100               	movlb	0	; () banked
 10743  002440  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10744  002442  0100               	movlb	0	; () banked
 10745  002444  19B7               	xorwf	___ftadd@exp2& (0+255),w,b
 10746  002446  B4D8               	btfsc	status,2,c
 10747  002448  D011               	goto	l5295
 10748                           
 10749                           ; BSR set to: 0
 10750  00244A  0100               	movlb	0	; () banked
 10751  00244C  07B6               	decf	___ftadd@sign& (0+255),f,b
 10752  00244E  C0B6  F0B3         	movff	___ftadd@sign,??___ftadd
 10753  002452  0E07               	movlw	7
 10754  002454  0100               	movlb	0	; () banked
 10755  002456  17B3               	andwf	??___ftadd& (0+255),f,b
 10756  002458  B4D8               	btfsc	status,2,c
 10757  00245A  D008               	goto	l5295
 10758  00245C  D7E9               	goto	l5287
 10759  00245E                     l5293:
 10760                           
 10761                           ; BSR set to: 0
 10762  00245E  0100               	movlb	0	; () banked
 10763  002460  90D8               	bcf	status,0,c
 10764  002462  33B2               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10765  002464  33B1               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10766  002466  33B0               	rrcf	___ftadd@f2& (0+255),f,b
 10767  002468  0100               	movlb	0	; () banked
 10768  00246A  2BB7               	incf	___ftadd@exp2& (0+255),f,b
 10769  00246C                     l5295:
 10770                           
 10771                           ; BSR set to: 0
 10772  00246C  0100               	movlb	0	; () banked
 10773  00246E  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10774  002470  0100               	movlb	0	; () banked
 10775  002472  19B8               	xorwf	___ftadd@exp1& (0+255),w,b
 10776  002474  A4D8               	btfss	status,2,c
 10777  002476  D7F3               	goto	l5293
 10778  002478                     l874:
 10779                           
 10780                           ; BSR set to: 0
 10781  002478  0100               	movlb	0	; () banked
 10782  00247A  AFB6               	btfss	___ftadd@sign& (0+255),7,b
 10783  00247C  D012               	goto	l883
 10784                           
 10785                           ; BSR set to: 0
 10786  00247E  0EFF               	movlw	255
 10787  002480  0100               	movlb	0	; () banked
 10788  002482  1BAD               	xorwf	___ftadd@f1& (0+255),f,b
 10789  002484  0EFF               	movlw	255
 10790  002486  0100               	movlb	0	; () banked
 10791  002488  1BAE               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10792  00248A  0EFF               	movlw	255
 10793  00248C  0100               	movlb	0	; () banked
 10794  00248E  1BAF               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10795  002490  0E01               	movlw	1
 10796  002492  0100               	movlb	0	; () banked
 10797  002494  27AD               	addwf	___ftadd@f1& (0+255),f,b
 10798  002496  0E00               	movlw	0
 10799  002498  0100               	movlb	0	; () banked
 10800  00249A  23AE               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10801  00249C  0E00               	movlw	0
 10802  00249E  0100               	movlb	0	; () banked
 10803  0024A0  23AF               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10804  0024A2                     l883:
 10805                           
 10806                           ; BSR set to: 0
 10807  0024A2  0100               	movlb	0	; () banked
 10808  0024A4  ADB6               	btfss	___ftadd@sign& (0+255),6,b
 10809  0024A6  D012               	goto	l5301
 10810                           
 10811                           ; BSR set to: 0
 10812  0024A8  0EFF               	movlw	255
 10813  0024AA  0100               	movlb	0	; () banked
 10814  0024AC  1BB0               	xorwf	___ftadd@f2& (0+255),f,b
 10815  0024AE  0EFF               	movlw	255
 10816  0024B0  0100               	movlb	0	; () banked
 10817  0024B2  1BB1               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10818  0024B4  0EFF               	movlw	255
 10819  0024B6  0100               	movlb	0	; () banked
 10820  0024B8  1BB2               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10821  0024BA  0E01               	movlw	1
 10822  0024BC  0100               	movlb	0	; () banked
 10823  0024BE  27B0               	addwf	___ftadd@f2& (0+255),f,b
 10824  0024C0  0E00               	movlw	0
 10825  0024C2  0100               	movlb	0	; () banked
 10826  0024C4  23B1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10827  0024C6  0E00               	movlw	0
 10828  0024C8  0100               	movlb	0	; () banked
 10829  0024CA  23B2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10830  0024CC                     l5301:
 10831                           
 10832                           ; BSR set to: 0
 10833  0024CC  0E00               	movlw	0
 10834  0024CE  0100               	movlb	0	; () banked
 10835  0024D0  6FB6               	movwf	___ftadd@sign& (0+255),b
 10836                           
 10837                           ; BSR set to: 0
 10838  0024D2  0100               	movlb	0	; () banked
 10839  0024D4  51AD               	movf	___ftadd@f1& (0+255),w,b
 10840  0024D6  0100               	movlb	0	; () banked
 10841  0024D8  27B0               	addwf	___ftadd@f2& (0+255),f,b
 10842  0024DA  0100               	movlb	0	; () banked
 10843  0024DC  51AE               	movf	(___ftadd@f1+1)& (0+255),w,b
 10844  0024DE  0100               	movlb	0	; () banked
 10845  0024E0  23B1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10846  0024E2  0100               	movlb	0	; () banked
 10847  0024E4  51AF               	movf	(___ftadd@f1+2)& (0+255),w,b
 10848  0024E6  0100               	movlb	0	; () banked
 10849  0024E8  23B2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10850                           
 10851                           ; BSR set to: 0
 10852  0024EA  0100               	movlb	0	; () banked
 10853  0024EC  AFB2               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10854  0024EE  D015               	goto	l5311
 10855                           
 10856                           ; BSR set to: 0
 10857  0024F0  0EFF               	movlw	255
 10858  0024F2  0100               	movlb	0	; () banked
 10859  0024F4  1BB0               	xorwf	___ftadd@f2& (0+255),f,b
 10860  0024F6  0EFF               	movlw	255
 10861  0024F8  0100               	movlb	0	; () banked
 10862  0024FA  1BB1               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10863  0024FC  0EFF               	movlw	255
 10864  0024FE  0100               	movlb	0	; () banked
 10865  002500  1BB2               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10866  002502  0E01               	movlw	1
 10867  002504  0100               	movlb	0	; () banked
 10868  002506  27B0               	addwf	___ftadd@f2& (0+255),f,b
 10869  002508  0E00               	movlw	0
 10870  00250A  0100               	movlb	0	; () banked
 10871  00250C  23B1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10872  00250E  0E00               	movlw	0
 10873  002510  0100               	movlb	0	; () banked
 10874  002512  23B2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10875                           
 10876                           ; BSR set to: 0
 10877  002514  0E01               	movlw	1
 10878  002516  0100               	movlb	0	; () banked
 10879  002518  6FB6               	movwf	___ftadd@sign& (0+255),b
 10880  00251A                     l5311:
 10881                           
 10882                           ; BSR set to: 0
 10883  00251A  C0B0  F080         	movff	___ftadd@f2,___ftpack@arg
 10884  00251E  C0B1  F081         	movff	___ftadd@f2+1,___ftpack@arg+1
 10885  002522  C0B2  F082         	movff	___ftadd@f2+2,___ftpack@arg+2
 10886  002526  C0B8  F083         	movff	___ftadd@exp1,___ftpack@exp
 10887  00252A  C0B6  F084         	movff	___ftadd@sign,___ftpack@sign
 10888  00252E  ECB3  F017         	call	___ftpack	;wreg free
 10889  002532  C080  F0AD         	movff	?___ftpack,?___ftadd
 10890  002536  C081  F0AE         	movff	?___ftpack+1,?___ftadd+1
 10891  00253A  C082  F0AF         	movff	?___ftpack+2,?___ftadd+2
 10892  00253E  0012               	return	
 10893  002540                     __end_of___ftadd:
 10894                           	opt stack 0
 10895                           tblptru	equ	0xFF8
 10896                           tblptrh	equ	0xFF7
 10897                           tblptrl	equ	0xFF6
 10898                           tablat	equ	0xFF5
 10899                           prodh	equ	0xFF4
 10900                           prodl	equ	0xFF3
 10901                           intcon	equ	0xFF2
 10902                           intcon2	equ	0xFF1
 10903                           intcon3	equ	0xFF0
 10904                           postinc0	equ	0xFEE
 10905                           wreg	equ	0xFE8
 10906                           indf1	equ	0xFE7
 10907                           postdec1	equ	0xFE5
 10908                           fsr1h	equ	0xFE2
 10909                           fsr1l	equ	0xFE1
 10910                           indf2	equ	0xFDF
 10911                           postinc2	equ	0xFDE
 10912                           postdec2	equ	0xFDD
 10913                           fsr2h	equ	0xFDA
 10914                           fsr2l	equ	0xFD9
 10915                           status	equ	0xFD8
 10916                           
 10917 ;; *************** function ___ftneg *****************
 10918 ;; Defined at:
 10919 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  f1              3   24[BANK0 ] float 
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;		None
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  3   24[BANK0 ] float 
 10926 ;; Registers used:
 10927 ;;		wreg, status,2, status,0
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10933 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10936 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10937 ;;Total ram usage:        3 bytes
 10938 ;; Hardware stack levels used:    1
 10939 ;; Hardware stack levels required when called:    5
 10940 ;; This function calls:
 10941 ;;		Nothing
 10942 ;; This function is called by:
 10943 ;;		_main
 10944 ;;		_sprintf
 10945 ;;		_set_pwm1_general
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           	psect	text29
 10950  0040B8                     __ptext29:
 10951                           	opt stack 0
 10952  0040B8                     ___ftneg:
 10953                           	opt stack 24
 10954                           
 10955                           ;incstack = 0
 10956  0040B8  0100               	movlb	0	; () banked
 10957  0040BA  5198               	movf	___ftneg@f1& (0+255),w,b
 10958  0040BC  0100               	movlb	0	; () banked
 10959  0040BE  1199               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 10960  0040C0  0100               	movlb	0	; () banked
 10961  0040C2  119A               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 10962  0040C4  B4D8               	btfsc	status,2,c
 10963  0040C6  D009               	goto	l933
 10964                           
 10965                           ; BSR set to: 0
 10966  0040C8  0E00               	movlw	0
 10967  0040CA  0100               	movlb	0	; () banked
 10968  0040CC  1B98               	xorwf	___ftneg@f1& (0+255),f,b
 10969  0040CE  0E00               	movlw	0
 10970  0040D0  0100               	movlb	0	; () banked
 10971  0040D2  1B99               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 10972  0040D4  0E80               	movlw	128
 10973  0040D6  0100               	movlb	0	; () banked
 10974  0040D8  1B9A               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 10975  0040DA                     l933:
 10976                           
 10977                           ; BSR set to: 0
 10978  0040DA  C098  F098         	movff	___ftneg@f1,?___ftneg
 10979  0040DE  C099  F099         	movff	___ftneg@f1+1,?___ftneg+1
 10980  0040E2  C09A  F09A         	movff	___ftneg@f1+2,?___ftneg+2
 10981                           
 10982                           ; BSR set to: 0
 10983  0040E6  0012               	return		;funcret
 10984  0040E8                     __end_of___ftneg:
 10985                           	opt stack 0
 10986                           tblptru	equ	0xFF8
 10987                           tblptrh	equ	0xFF7
 10988                           tblptrl	equ	0xFF6
 10989                           tablat	equ	0xFF5
 10990                           prodh	equ	0xFF4
 10991                           prodl	equ	0xFF3
 10992                           intcon	equ	0xFF2
 10993                           intcon2	equ	0xFF1
 10994                           intcon3	equ	0xFF0
 10995                           postinc0	equ	0xFEE
 10996                           wreg	equ	0xFE8
 10997                           indf1	equ	0xFE7
 10998                           postdec1	equ	0xFE5
 10999                           fsr1h	equ	0xFE2
 11000                           fsr1l	equ	0xFE1
 11001                           indf2	equ	0xFDF
 11002                           postinc2	equ	0xFDE
 11003                           postdec2	equ	0xFDD
 11004                           fsr2h	equ	0xFDA
 11005                           fsr2l	equ	0xFD9
 11006                           status	equ	0xFD8
 11007                           
 11008 ;; *************** function ___ftge *****************
 11009 ;; Defined at:
 11010 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;  ff1             3   57[BANK0 ] float 
 11013 ;;  ff2             3   60[BANK0 ] float 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;		None
 11016 ;; Return value:  Size  Location     Type
 11017 ;;		None               void
 11018 ;; Registers used:
 11019 ;;		wreg, status,2, status,0
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/0
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11025 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11027 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11028 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11029 ;;Total ram usage:        9 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; Hardware stack levels required when called:    5
 11032 ;; This function calls:
 11033 ;;		Nothing
 11034 ;; This function is called by:
 11035 ;;		_main
 11036 ;;		_sprintf
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040                           	psect	text30
 11041  003340                     __ptext30:
 11042                           	opt stack 0
 11043  003340                     ___ftge:
 11044                           	opt stack 24
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;incstack = 0
 11048  003340  0100               	movlb	0	; () banked
 11049  003342  AFBB               	btfss	(___ftge@ff1+2)& (0+255),7,b
 11050  003344  D01D               	goto	l3763
 11051                           
 11052                           ; BSR set to: 0
 11053  003346  C0B9  F0BF         	movff	___ftge@ff1,??___ftge
 11054  00334A  C0BA  F0C0         	movff	___ftge@ff1+1,??___ftge+1
 11055  00334E  C0BB  F0C1         	movff	___ftge@ff1+2,??___ftge+2
 11056  003352  0100               	movlb	0	; () banked
 11057  003354  1FBF               	comf	??___ftge& (0+255),f,b
 11058  003356  1FC0               	comf	(??___ftge+1)& (0+255),f,b
 11059  003358  1FC1               	comf	(??___ftge+2)& (0+255),f,b
 11060  00335A  2BBF               	incf	??___ftge& (0+255),f,b
 11061  00335C  0E00               	movlw	0
 11062  00335E  23C0               	addwfc	(??___ftge+1)& (0+255),f,b
 11063  003360  23C1               	addwfc	(??___ftge+2)& (0+255),f,b
 11064  003362  0E00               	movlw	0
 11065  003364  0100               	movlb	0	; () banked
 11066  003366  25BF               	addwf	??___ftge& (0+255),w,b
 11067  003368  0100               	movlb	0	; () banked
 11068  00336A  6FB9               	movwf	___ftge@ff1& (0+255),b
 11069  00336C  0E00               	movlw	0
 11070  00336E  0100               	movlb	0	; () banked
 11071  003370  21C0               	addwfc	(??___ftge+1)& (0+255),w,b
 11072  003372  0100               	movlb	0	; () banked
 11073  003374  6FBA               	movwf	(___ftge@ff1+1)& (0+255),b
 11074  003376  0E80               	movlw	128
 11075  003378  0100               	movlb	0	; () banked
 11076  00337A  21C1               	addwfc	(??___ftge+2)& (0+255),w,b
 11077  00337C  0100               	movlb	0	; () banked
 11078  00337E  6FBB               	movwf	(___ftge@ff1+2)& (0+255),b
 11079  003380                     l3763:
 11080                           
 11081                           ; BSR set to: 0
 11082  003380  0100               	movlb	0	; () banked
 11083  003382  AFBE               	btfss	(___ftge@ff2+2)& (0+255),7,b
 11084  003384  D01D               	goto	l3767
 11085                           
 11086                           ; BSR set to: 0
 11087  003386  C0BC  F0BF         	movff	___ftge@ff2,??___ftge
 11088  00338A  C0BD  F0C0         	movff	___ftge@ff2+1,??___ftge+1
 11089  00338E  C0BE  F0C1         	movff	___ftge@ff2+2,??___ftge+2
 11090  003392  0100               	movlb	0	; () banked
 11091  003394  1FBF               	comf	??___ftge& (0+255),f,b
 11092  003396  1FC0               	comf	(??___ftge+1)& (0+255),f,b
 11093  003398  1FC1               	comf	(??___ftge+2)& (0+255),f,b
 11094  00339A  2BBF               	incf	??___ftge& (0+255),f,b
 11095  00339C  0E00               	movlw	0
 11096  00339E  23C0               	addwfc	(??___ftge+1)& (0+255),f,b
 11097  0033A0  23C1               	addwfc	(??___ftge+2)& (0+255),f,b
 11098  0033A2  0E00               	movlw	0
 11099  0033A4  0100               	movlb	0	; () banked
 11100  0033A6  25BF               	addwf	??___ftge& (0+255),w,b
 11101  0033A8  0100               	movlb	0	; () banked
 11102  0033AA  6FBC               	movwf	___ftge@ff2& (0+255),b
 11103  0033AC  0E00               	movlw	0
 11104  0033AE  0100               	movlb	0	; () banked
 11105  0033B0  21C0               	addwfc	(??___ftge+1)& (0+255),w,b
 11106  0033B2  0100               	movlb	0	; () banked
 11107  0033B4  6FBD               	movwf	(___ftge@ff2+1)& (0+255),b
 11108  0033B6  0E80               	movlw	128
 11109  0033B8  0100               	movlb	0	; () banked
 11110  0033BA  21C1               	addwfc	(??___ftge+2)& (0+255),w,b
 11111  0033BC  0100               	movlb	0	; () banked
 11112  0033BE  6FBE               	movwf	(___ftge@ff2+2)& (0+255),b
 11113  0033C0                     l3767:
 11114                           
 11115                           ; BSR set to: 0
 11116  0033C0  0E00               	movlw	0
 11117  0033C2  0100               	movlb	0	; () banked
 11118  0033C4  1BB9               	xorwf	___ftge@ff1& (0+255),f,b
 11119  0033C6  0E00               	movlw	0
 11120  0033C8  0100               	movlb	0	; () banked
 11121  0033CA  1BBA               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 11122  0033CC  0E80               	movlw	128
 11123  0033CE  0100               	movlb	0	; () banked
 11124  0033D0  1BBB               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 11125                           
 11126                           ; BSR set to: 0
 11127  0033D2  0E00               	movlw	0
 11128  0033D4  0100               	movlb	0	; () banked
 11129  0033D6  1BBC               	xorwf	___ftge@ff2& (0+255),f,b
 11130  0033D8  0E00               	movlw	0
 11131  0033DA  0100               	movlb	0	; () banked
 11132  0033DC  1BBD               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 11133  0033DE  0E80               	movlw	128
 11134  0033E0  0100               	movlb	0	; () banked
 11135  0033E2  1BBE               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 11136  0033E4  0100               	movlb	0	; () banked
 11137  0033E6  51BC               	movf	___ftge@ff2& (0+255),w,b
 11138  0033E8  0100               	movlb	0	; () banked
 11139  0033EA  5DB9               	subwf	___ftge@ff1& (0+255),w,b
 11140  0033EC  0100               	movlb	0	; () banked
 11141  0033EE  51BD               	movf	(___ftge@ff2+1)& (0+255),w,b
 11142  0033F0  0100               	movlb	0	; () banked
 11143  0033F2  59BA               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 11144  0033F4  0100               	movlb	0	; () banked
 11145  0033F6  51BE               	movf	(___ftge@ff2+2)& (0+255),w,b
 11146  0033F8  0100               	movlb	0	; () banked
 11147  0033FA  59BB               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 11148  0033FC  B0D8               	btfsc	status,0,c
 11149  0033FE  D002               	goto	l3773
 11150                           
 11151                           ; BSR set to: 0
 11152  003400  90D8               	bcf	status,0,c
 11153  003402  0012               	return	
 11154  003404                     l3773:
 11155                           
 11156                           ; BSR set to: 0
 11157  003404  80D8               	bsf	status,0,c
 11158                           
 11159                           ; BSR set to: 0
 11160  003406  0012               	return	
 11161  003408                     __end_of___ftge:
 11162                           	opt stack 0
 11163                           tblptru	equ	0xFF8
 11164                           tblptrh	equ	0xFF7
 11165                           tblptrl	equ	0xFF6
 11166                           tablat	equ	0xFF5
 11167                           prodh	equ	0xFF4
 11168                           prodl	equ	0xFF3
 11169                           intcon	equ	0xFF2
 11170                           intcon2	equ	0xFF1
 11171                           intcon3	equ	0xFF0
 11172                           postinc0	equ	0xFEE
 11173                           wreg	equ	0xFE8
 11174                           indf1	equ	0xFE7
 11175                           postdec1	equ	0xFE5
 11176                           fsr1h	equ	0xFE2
 11177                           fsr1l	equ	0xFE1
 11178                           indf2	equ	0xFDF
 11179                           postinc2	equ	0xFDE
 11180                           postdec2	equ	0xFDD
 11181                           fsr2h	equ	0xFDA
 11182                           fsr2l	equ	0xFD9
 11183                           status	equ	0xFD8
 11184                           
 11185 ;; *************** function _send_string_no_lib *****************
 11186 ;; Defined at:
 11187 ;;		line 44 in file "my_ser.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  p               2    1[BANK0 ] PTR unsigned char 
 11190 ;;		 -> STR_22(32), print_data@Buffer(64), 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;		None
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  1    wreg      void 
 11195 ;; Registers used:
 11196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11205 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11206 ;;Total ram usage:        2 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:    6
 11209 ;; This function calls:
 11210 ;;		_send_byte_no_lib
 11211 ;; This function is called by:
 11212 ;;		_print_data
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text31
 11217  003D10                     __ptext31:
 11218                           	opt stack 0
 11219  003D10                     _send_string_no_lib:
 11220                           	opt stack 23
 11221                           
 11222                           ;my_ser.c: 45: while (*p) {
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;incstack = 0
 11226  003D10  D016               	goto	l6013
 11227  003D12                     l6009:
 11228                           
 11229                           ;my_ser.c: 46: send_byte_no_lib(*p);
 11230  003D12  C081  FFF6         	movff	send_string_no_lib@p,tblptrl
 11231  003D16  C082  FFF7         	movff	send_string_no_lib@p+1,tblptrh
 11232  003D1A  0E00               	movlw	low (__mediumconst shr (0+16))
 11233  003D1C  6EF8               	movwf	tblptru,c
 11234  003D1E  0E0F               	movlw	(high __ramtop+-1)
 11235  003D20  64F7               	cpfsgt	tblptrh,c
 11236  003D22  D003               	bra	u7227
 11237  003D24  0008               	tblrd		*
 11238  003D26  50F5               	movf	tablat,w,c
 11239  003D28  D005               	bra	u7220
 11240  003D2A                     u7227:
 11241  003D2A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11242  003D2E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11243  003D32  50E7               	movf	indf1,w,c
 11244  003D34                     u7220:
 11245  003D34  EC56  F021         	call	_send_byte_no_lib
 11246                           
 11247                           ;my_ser.c: 47: p++;
 11248  003D38  0100               	movlb	0	; () banked
 11249  003D3A  4B81               	infsnz	send_string_no_lib@p& (0+255),f,b
 11250  003D3C  2B82               	incf	(send_string_no_lib@p+1)& (0+255),f,b
 11251  003D3E                     l6013:
 11252  003D3E  C081  FFF6         	movff	send_string_no_lib@p,tblptrl
 11253  003D42  C082  FFF7         	movff	send_string_no_lib@p+1,tblptrh
 11254  003D46  0E00               	movlw	low (__mediumconst shr (0+16))
 11255  003D48  6EF8               	movwf	tblptru,c
 11256  003D4A  0E0F               	movlw	(high __ramtop+-1)
 11257  003D4C  64F7               	cpfsgt	tblptrh,c
 11258  003D4E  D003               	bra	u7237
 11259  003D50  0008               	tblrd		*
 11260  003D52  50F5               	movf	tablat,w,c
 11261  003D54  D005               	bra	u7230
 11262  003D56                     u7237:
 11263  003D56  CFF6 FFE1          	movff	tblptrl,fsr1l
 11264  003D5A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11265  003D5E  50E7               	movf	indf1,w,c
 11266  003D60                     u7230:
 11267  003D60  0900               	iorlw	0
 11268  003D62  B4D8               	btfsc	status,2,c
 11269  003D64  0012               	return	
 11270  003D66  D7D5               	goto	l6009
 11271  003D68                     __end_of_send_string_no_lib:
 11272                           	opt stack 0
 11273                           tblptru	equ	0xFF8
 11274                           tblptrh	equ	0xFF7
 11275                           tblptrl	equ	0xFF6
 11276                           tablat	equ	0xFF5
 11277                           prodh	equ	0xFF4
 11278                           prodl	equ	0xFF3
 11279                           intcon	equ	0xFF2
 11280                           intcon2	equ	0xFF1
 11281                           intcon3	equ	0xFF0
 11282                           postinc0	equ	0xFEE
 11283                           wreg	equ	0xFE8
 11284                           indf1	equ	0xFE7
 11285                           postdec1	equ	0xFE5
 11286                           fsr1h	equ	0xFE2
 11287                           fsr1l	equ	0xFE1
 11288                           indf2	equ	0xFDF
 11289                           postinc2	equ	0xFDE
 11290                           postdec2	equ	0xFDD
 11291                           fsr2h	equ	0xFDA
 11292                           fsr2l	equ	0xFD9
 11293                           status	equ	0xFD8
 11294                           
 11295 ;; *************** function _send_byte_no_lib *****************
 11296 ;; Defined at:
 11297 ;;		line 36 in file "my_ser.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;  c               1    wreg     unsigned char 
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;  c               1    0[BANK0 ] unsigned char 
 11302 ;; Return value:  Size  Location     Type
 11303 ;;                  1    wreg      void 
 11304 ;; Registers used:
 11305 ;;		wreg
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : 0/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11315 ;;Total ram usage:        1 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; Hardware stack levels required when called:    5
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		_send_string_no_lib
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text32
 11326  0042AC                     __ptext32:
 11327                           	opt stack 0
 11328  0042AC                     _send_byte_no_lib:
 11329                           	opt stack 23
 11330                           
 11331                           ;incstack = 0
 11332                           ;send_byte_no_lib@c stored from wreg
 11333  0042AC  0100               	movlb	0	; () banked
 11334  0042AE  6F80               	movwf	send_byte_no_lib@c& (0+255),b
 11335                           
 11336                           ;my_ser.c: 37: while (!TXSTAbits.TRMT)
 11337  0042B0  D001               	goto	l455
 11338  0042B2                     l456:
 11339  0042B2  0004               	clrwdt		;# 
 11340  0042B4                     l455:
 11341  0042B4  A2AC               	btfss	4012,1,c	;volatile
 11342  0042B6  D7FD               	goto	l456
 11343                           
 11344                           ;my_ser.c: 40: }
 11345                           ;my_ser.c: 41: TXREG = c;
 11346  0042B8  C080  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
 11347  0042BC  0012               	return		;funcret
 11348  0042BE                     __end_of_send_byte_no_lib:
 11349                           	opt stack 0
 11350                           tblptru	equ	0xFF8
 11351                           tblptrh	equ	0xFF7
 11352                           tblptrl	equ	0xFF6
 11353                           tablat	equ	0xFF5
 11354                           prodh	equ	0xFF4
 11355                           prodl	equ	0xFF3
 11356                           intcon	equ	0xFF2
 11357                           intcon2	equ	0xFF1
 11358                           intcon3	equ	0xFF0
 11359                           postinc0	equ	0xFEE
 11360                           wreg	equ	0xFE8
 11361                           indf1	equ	0xFE7
 11362                           postdec1	equ	0xFE5
 11363                           fsr1h	equ	0xFE2
 11364                           fsr1l	equ	0xFE1
 11365                           indf2	equ	0xFDF
 11366                           postinc2	equ	0xFDE
 11367                           postdec2	equ	0xFDD
 11368                           fsr2h	equ	0xFDA
 11369                           fsr2l	equ	0xFD9
 11370                           status	equ	0xFD8
 11371                           
 11372 ;; *************** function _lcd_puts *****************
 11373 ;; Defined at:
 11374 ;;		line 120 in file "lcd_x8.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  s               2   14[BANK0 ] PTR unsigned char 
 11377 ;;		 -> Buffer4(17), Buffer3(17), Buffer2(17), Buffer1(17), 
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;		None
 11380 ;; Return value:  Size  Location     Type
 11381 ;;                  1    wreg      void 
 11382 ;; Registers used:
 11383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;Total ram usage:        2 bytes
 11394 ;; Hardware stack levels used:    1
 11395 ;; Hardware stack levels required when called:   10
 11396 ;; This function calls:
 11397 ;;		_lcd_putc
 11398 ;; This function is called by:
 11399 ;;		_main
 11400 ;;		_print_data
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404                           	psect	text33
 11405  0041E8                     __ptext33:
 11406                           	opt stack 0
 11407  0041E8                     _lcd_puts:
 11408                           	opt stack 19
 11409                           
 11410                           ;lcd_x8.c: 121: while (*s) {
 11411                           
 11412                           ;incstack = 0
 11413  0041E8  D00A               	goto	l5659
 11414  0041EA                     l5655:
 11415                           
 11416                           ;lcd_x8.c: 122: lcd_putc(*s);
 11417  0041EA  C08E  FFD9         	movff	lcd_puts@s,fsr2l
 11418  0041EE  C08F  FFDA         	movff	lcd_puts@s+1,fsr2h
 11419  0041F2  50DF               	movf	indf2,w,c
 11420  0041F4  EC57  F01E         	call	_lcd_putc
 11421                           
 11422                           ;lcd_x8.c: 123: s++;
 11423  0041F8  0100               	movlb	0	; () banked
 11424  0041FA  4B8E               	infsnz	lcd_puts@s& (0+255),f,b
 11425  0041FC  2B8F               	incf	(lcd_puts@s+1)& (0+255),f,b
 11426  0041FE                     l5659:
 11427  0041FE  C08E  FFD9         	movff	lcd_puts@s,fsr2l
 11428  004202  C08F  FFDA         	movff	lcd_puts@s+1,fsr2h
 11429  004206  50DF               	movf	indf2,w,c
 11430  004208  B4D8               	btfsc	status,2,c
 11431  00420A  0012               	return	
 11432  00420C  D7EE               	goto	l5655
 11433  00420E                     __end_of_lcd_puts:
 11434                           	opt stack 0
 11435                           tblptru	equ	0xFF8
 11436                           tblptrh	equ	0xFF7
 11437                           tblptrl	equ	0xFF6
 11438                           tablat	equ	0xFF5
 11439                           prodh	equ	0xFF4
 11440                           prodl	equ	0xFF3
 11441                           intcon	equ	0xFF2
 11442                           intcon2	equ	0xFF1
 11443                           intcon3	equ	0xFF0
 11444                           postinc0	equ	0xFEE
 11445                           wreg	equ	0xFE8
 11446                           indf1	equ	0xFE7
 11447                           postdec1	equ	0xFE5
 11448                           fsr1h	equ	0xFE2
 11449                           fsr1l	equ	0xFE1
 11450                           indf2	equ	0xFDF
 11451                           postinc2	equ	0xFDE
 11452                           postdec2	equ	0xFDD
 11453                           fsr2h	equ	0xFDA
 11454                           fsr2l	equ	0xFD9
 11455                           status	equ	0xFD8
 11456                           
 11457 ;; *************** function _lcd_putc *****************
 11458 ;; Defined at:
 11459 ;;		line 106 in file "lcd_x8.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;  c               1    wreg     unsigned char 
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;  c               1   13[BANK0 ] unsigned char 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      void 
 11466 ;; Registers used:
 11467 ;;		wreg, status,2, status,0, cstack
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11476 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11477 ;;Total ram usage:        1 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; Hardware stack levels required when called:    9
 11480 ;; This function calls:
 11481 ;;		_delay_ms
 11482 ;;		_lcd_gotoxy
 11483 ;;		_lcd_send_byte
 11484 ;; This function is called by:
 11485 ;;		_lcd_puts
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           	psect	text34
 11490  003CAE                     __ptext34:
 11491                           	opt stack 0
 11492  003CAE                     _lcd_putc:
 11493                           	opt stack 19
 11494                           
 11495                           ;incstack = 0
 11496                           ;lcd_putc@c stored from wreg
 11497  003CAE  0100               	movlb	0	; () banked
 11498  003CB0  6F8D               	movwf	lcd_putc@c& (0+255),b
 11499                           
 11500                           ;lcd_x8.c: 107: switch (c) {
 11501  003CB2  D022               	goto	l5455
 11502  003CB4                     l5445:
 11503  003CB4  0E01               	movlw	1
 11504  003CB6  0100               	movlb	0	; () banked
 11505  003CB8  6F88               	movwf	lcd_send_byte@n& (0+255),b
 11506  003CBA  0E00               	movlw	0
 11507  003CBC  ECDF  F01E         	call	_lcd_send_byte
 11508                           
 11509                           ;lcd_x8.c: 109: delay_ms(2);
 11510  003CC0  0E00               	movlw	0
 11511  003CC2  0100               	movlb	0	; () banked
 11512  003CC4  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 11513  003CC6  0E02               	movlw	2
 11514  003CC8  6F80               	movwf	delay_ms@n& (0+255),b
 11515  003CCA  EC74  F020         	call	_delay_ms	;wreg free
 11516                           
 11517                           ;lcd_x8.c: 110: break;
 11518  003CCE  0012               	return	
 11519  003CD0                     l5447:
 11520  003CD0  0E02               	movlw	2
 11521  003CD2  0100               	movlb	0	; () banked
 11522  003CD4  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
 11523  003CD6  0E01               	movlw	1
 11524  003CD8  EC0A  F01F         	call	_lcd_gotoxy
 11525                           
 11526                           ;lcd_x8.c: 112: break;
 11527  003CDC  0012               	return	
 11528  003CDE                     l5449:
 11529  003CDE  0E10               	movlw	16
 11530  003CE0  0100               	movlb	0	; () banked
 11531  003CE2  6F88               	movwf	lcd_send_byte@n& (0+255),b
 11532  003CE4  0E00               	movlw	0
 11533  003CE6  ECDF  F01E         	call	_lcd_send_byte
 11534                           
 11535                           ;lcd_x8.c: 114: break;
 11536  003CEA  0012               	return	
 11537  003CEC                     l5451:
 11538  003CEC  C08D  F088         	movff	lcd_putc@c,lcd_send_byte@n
 11539  003CF0  0E01               	movlw	1
 11540  003CF2  ECDF  F01E         	call	_lcd_send_byte
 11541                           
 11542                           ;lcd_x8.c: 117: }
 11543                           
 11544                           ;lcd_x8.c: 116: break;
 11545  003CF6  0012               	return	
 11546  003CF8                     l5455:
 11547  003CF8  0100               	movlb	0	; () banked
 11548  003CFA  518D               	movf	lcd_putc@c& (0+255),w,b
 11549                           
 11550                           ; Switch size 1, requested type "space"
 11551                           ; Number of cases is 3, Range of values is 8 to 12
 11552                           ; switch strategies available:
 11553                           ; Name         Instructions Cycles
 11554                           ; simple_byte           10     6 (average)
 11555                           ;	Chosen strategy is simple_byte
 11556  003CFC  0A08               	xorlw	8	; case 8
 11557  003CFE  B4D8               	btfsc	status,2,c
 11558  003D00  D7EE               	goto	l5449
 11559  003D02  0A02               	xorlw	2	; case 10
 11560  003D04  B4D8               	btfsc	status,2,c
 11561  003D06  D7E4               	goto	l5447
 11562  003D08  0A06               	xorlw	6	; case 12
 11563  003D0A  B4D8               	btfsc	status,2,c
 11564  003D0C  D7D3               	goto	l5445
 11565  003D0E  D7EE               	goto	l5451
 11566  003D10                     __end_of_lcd_putc:
 11567                           	opt stack 0
 11568                           tblptru	equ	0xFF8
 11569                           tblptrh	equ	0xFF7
 11570                           tblptrl	equ	0xFF6
 11571                           tablat	equ	0xFF5
 11572                           prodh	equ	0xFF4
 11573                           prodl	equ	0xFF3
 11574                           intcon	equ	0xFF2
 11575                           intcon2	equ	0xFF1
 11576                           intcon3	equ	0xFF0
 11577                           postinc0	equ	0xFEE
 11578                           wreg	equ	0xFE8
 11579                           indf1	equ	0xFE7
 11580                           postdec1	equ	0xFE5
 11581                           fsr1h	equ	0xFE2
 11582                           fsr1l	equ	0xFE1
 11583                           indf2	equ	0xFDF
 11584                           postinc2	equ	0xFDE
 11585                           postdec2	equ	0xFDD
 11586                           fsr2h	equ	0xFDA
 11587                           fsr2l	equ	0xFD9
 11588                           status	equ	0xFD8
 11589                           
 11590 ;; *************** function _lcd_gotoxy *****************
 11591 ;; Defined at:
 11592 ;;		line 89 in file "lcd_x8.c"
 11593 ;; Parameters:    Size  Location     Type
 11594 ;;  x               1    wreg     unsigned char 
 11595 ;;  y               1   10[BANK0 ] unsigned char 
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;  x               1   11[BANK0 ] unsigned char 
 11598 ;;  address         1   12[BANK0 ] unsigned char 
 11599 ;; Return value:  Size  Location     Type
 11600 ;;                  1    wreg      void 
 11601 ;; Registers used:
 11602 ;;		wreg, status,2, status,0, cstack
 11603 ;; Tracked objects:
 11604 ;;		On entry : 0/0
 11605 ;;		On exit  : 0/0
 11606 ;;		Unchanged: 0/0
 11607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11608 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11611 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11612 ;;Total ram usage:        3 bytes
 11613 ;; Hardware stack levels used:    1
 11614 ;; Hardware stack levels required when called:    8
 11615 ;; This function calls:
 11616 ;;		_lcd_send_byte
 11617 ;; This function is called by:
 11618 ;;		_lcd_putc
 11619 ;;		_main
 11620 ;;		_print_data
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text35
 11625  003E14                     __ptext35:
 11626                           	opt stack 0
 11627  003E14                     _lcd_gotoxy:
 11628                           	opt stack 19
 11629                           
 11630                           ;incstack = 0
 11631                           ;lcd_gotoxy@x stored from wreg
 11632  003E14  0100               	movlb	0	; () banked
 11633  003E16  6F8B               	movwf	lcd_gotoxy@x& (0+255),b
 11634                           
 11635                           ;lcd_x8.c: 90: unsigned char address;
 11636                           ;lcd_x8.c: 92: switch (y) {
 11637  003E18  D00A               	goto	l5233
 11638  003E1A                     l5223:
 11639  003E1A  0E80               	movlw	128
 11640  003E1C  D005               	goto	L10
 11641  003E1E                     l5225:
 11642                           
 11643                           ; BSR set to: 0
 11644  003E1E  0EC0               	movlw	192
 11645  003E20  D003               	goto	L10
 11646  003E22                     l5227:
 11647                           
 11648                           ; BSR set to: 0
 11649  003E22  0E90               	movlw	144
 11650  003E24  D001               	goto	L10
 11651  003E26                     l5229:
 11652                           
 11653                           ; BSR set to: 0
 11654  003E26  0ED0               	movlw	208
 11655  003E28                     L10:
 11656  003E28  0100               	movlb	0	; () banked
 11657  003E2A  6F8C               	movwf	lcd_gotoxy@address& (0+255),b
 11658                           
 11659                           ; BSR set to: 0
 11660                           ;lcd_x8.c: 101: }
 11661                           
 11662                           ;lcd_x8.c: 100: break;
 11663  003E2C  D00E               	goto	l5235
 11664  003E2E                     l5233:
 11665  003E2E  0100               	movlb	0	; () banked
 11666  003E30  518A               	movf	lcd_gotoxy@y& (0+255),w,b
 11667                           
 11668                           ; Switch size 1, requested type "space"
 11669                           ; Number of cases is 4, Range of values is 1 to 4
 11670                           ; switch strategies available:
 11671                           ; Name         Instructions Cycles
 11672                           ; simple_byte           13     7 (average)
 11673                           ;	Chosen strategy is simple_byte
 11674  003E32  0A01               	xorlw	1	; case 1
 11675  003E34  B4D8               	btfsc	status,2,c
 11676  003E36  D7F1               	goto	l5223
 11677  003E38  0A03               	xorlw	3	; case 2
 11678  003E3A  B4D8               	btfsc	status,2,c
 11679  003E3C  D7F0               	goto	l5225
 11680  003E3E  0A01               	xorlw	1	; case 3
 11681  003E40  B4D8               	btfsc	status,2,c
 11682  003E42  D7EF               	goto	l5227
 11683  003E44  0A07               	xorlw	7	; case 4
 11684  003E46  B4D8               	btfsc	status,2,c
 11685  003E48  D7EE               	goto	l5229
 11686  003E4A                     l5235:
 11687                           
 11688                           ; BSR set to: 0
 11689                           ;lcd_x8.c: 102: address += x - 1;
 11690  003E4A  0100               	movlb	0	; () banked
 11691  003E4C  058B               	decf	lcd_gotoxy@x& (0+255),w,b
 11692  003E4E  0100               	movlb	0	; () banked
 11693  003E50  278C               	addwf	lcd_gotoxy@address& (0+255),f,b
 11694                           
 11695                           ; BSR set to: 0
 11696                           ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
 11697  003E52  0100               	movlb	0	; () banked
 11698  003E54  518C               	movf	lcd_gotoxy@address& (0+255),w,b
 11699  003E56  0980               	iorlw	128
 11700  003E58  0100               	movlb	0	; () banked
 11701  003E5A  6F88               	movwf	lcd_send_byte@n& (0+255),b
 11702  003E5C  0E00               	movlw	0
 11703  003E5E  ECDF  F01E         	call	_lcd_send_byte
 11704  003E62  0012               	return		;funcret
 11705  003E64                     __end_of_lcd_gotoxy:
 11706                           	opt stack 0
 11707                           tblptru	equ	0xFF8
 11708                           tblptrh	equ	0xFF7
 11709                           tblptrl	equ	0xFF6
 11710                           tablat	equ	0xFF5
 11711                           prodh	equ	0xFF4
 11712                           prodl	equ	0xFF3
 11713                           intcon	equ	0xFF2
 11714                           intcon2	equ	0xFF1
 11715                           intcon3	equ	0xFF0
 11716                           postinc0	equ	0xFEE
 11717                           wreg	equ	0xFE8
 11718                           indf1	equ	0xFE7
 11719                           postdec1	equ	0xFE5
 11720                           fsr1h	equ	0xFE2
 11721                           fsr1l	equ	0xFE1
 11722                           indf2	equ	0xFDF
 11723                           postinc2	equ	0xFDE
 11724                           postdec2	equ	0xFDD
 11725                           fsr2h	equ	0xFDA
 11726                           fsr2l	equ	0xFD9
 11727                           status	equ	0xFD8
 11728                           
 11729 ;; *************** function _lcd_init *****************
 11730 ;; Defined at:
 11731 ;;		line 56 in file "lcd_x8.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;		None
 11734 ;; Auto vars:     Size  Location     Type
 11735 ;;  i               1   10[BANK0 ] unsigned char 
 11736 ;; Return value:  Size  Location     Type
 11737 ;;                  1    wreg      void 
 11738 ;; Registers used:
 11739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11740 ;; Tracked objects:
 11741 ;;		On entry : 0/0
 11742 ;;		On exit  : 0/0
 11743 ;;		Unchanged: 0/0
 11744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11749 ;;Total ram usage:        1 bytes
 11750 ;; Hardware stack levels used:    1
 11751 ;; Hardware stack levels required when called:    8
 11752 ;; This function calls:
 11753 ;;		_delay_ms
 11754 ;;		_lcd_send_byte
 11755 ;;		_lcd_send_nibble
 11756 ;; This function is called by:
 11757 ;;		_main
 11758 ;; This function uses a non-reentrant model
 11759 ;;
 11760                           
 11761                           	psect	text36
 11762  003B5A                     __ptext36:
 11763                           	opt stack 0
 11764  003B5A                     _lcd_init:
 11765                           	opt stack 22
 11766                           
 11767                           ;lcd_x8.c: 58: unsigned char i;
 11768                           ;lcd_x8.c: 61: PORTEbits.RE2 = 0;
 11769                           
 11770                           ;incstack = 0
 11771  003B5A  9484               	bcf	3972,2,c	;volatile
 11772                           
 11773                           ;lcd_x8.c: 63: PORTEbits.RE1 = 0;
 11774  003B5C  9284               	bcf	3972,1,c	;volatile
 11775                           
 11776                           ;lcd_x8.c: 65: delay_ms(25);
 11777  003B5E  0E00               	movlw	0
 11778  003B60  0100               	movlb	0	; () banked
 11779  003B62  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 11780  003B64  0E19               	movlw	25
 11781  003B66  6F80               	movwf	delay_ms@n& (0+255),b
 11782  003B68  EC74  F020         	call	_delay_ms	;wreg free
 11783                           
 11784                           ;lcd_x8.c: 66: for (i = 1; i <= 3; ++i) {
 11785  003B6C  0E01               	movlw	1
 11786  003B6E  0100               	movlb	0	; () banked
 11787  003B70  6F8A               	movwf	lcd_init@i& (0+255),b
 11788  003B72                     l6079:
 11789                           
 11790                           ; BSR set to: 0
 11791  003B72  0E03               	movlw	3
 11792  003B74  0100               	movlb	0	; () banked
 11793  003B76  658A               	cpfsgt	lcd_init@i& (0+255),b
 11794  003B78  D001               	goto	l6083
 11795  003B7A  D00D               	goto	l6089
 11796  003B7C                     l6083:
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;lcd_x8.c: 67: lcd_send_nibble(3);
 11800  003B7C  0E03               	movlw	3
 11801  003B7E  ECCD  F020         	call	_lcd_send_nibble
 11802                           
 11803                           ;lcd_x8.c: 69: delay_ms(6);
 11804  003B82  0E00               	movlw	0
 11805  003B84  0100               	movlb	0	; () banked
 11806  003B86  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 11807  003B88  0E06               	movlw	6
 11808  003B8A  6F80               	movwf	delay_ms@n& (0+255),b
 11809  003B8C  EC74  F020         	call	_delay_ms	;wreg free
 11810  003B90  0100               	movlb	0	; () banked
 11811  003B92  2B8A               	incf	lcd_init@i& (0+255),f,b
 11812  003B94  D7EE               	goto	l6079
 11813  003B96                     l6089:
 11814                           
 11815                           ; BSR set to: 0
 11816                           ;lcd_x8.c: 70: }
 11817                           ;lcd_x8.c: 72: lcd_send_nibble(2);
 11818  003B96  0E02               	movlw	2
 11819  003B98  ECCD  F020         	call	_lcd_send_nibble
 11820                           
 11821                           ;lcd_x8.c: 74: for (i = 0; i <= 3; ++i)
 11822  003B9C  0E00               	movlw	0
 11823  003B9E  0100               	movlb	0	; () banked
 11824  003BA0  6F8A               	movwf	lcd_init@i& (0+255),b
 11825  003BA2                     l6093:
 11826                           
 11827                           ; BSR set to: 0
 11828  003BA2  0E03               	movlw	3
 11829  003BA4  0100               	movlb	0	; () banked
 11830  003BA6  658A               	cpfsgt	lcd_init@i& (0+255),b
 11831  003BA8  D001               	goto	l6097
 11832  003BAA  0012               	return	
 11833  003BAC                     l6097:
 11834                           
 11835                           ; BSR set to: 0
 11836                           ;lcd_x8.c: 75: lcd_send_byte(0, LCD_INIT_STRING[i]);
 11837  003BAC  0100               	movlb	0	; () banked
 11838  003BAE  518A               	movf	lcd_init@i& (0+255),w,b
 11839  003BB0  0D01               	mullw	1
 11840  003BB2  0EF8               	movlw	low _LCD_INIT_STRING
 11841  003BB4  24F3               	addwf	prodl,w,c
 11842  003BB6  6ED9               	movwf	fsr2l,c
 11843  003BB8  0E00               	movlw	high _LCD_INIT_STRING
 11844  003BBA  20F4               	addwfc	prodh,w,c
 11845  003BBC  6EDA               	movwf	fsr2h,c
 11846  003BBE  50DF               	movf	indf2,w,c
 11847  003BC0  0100               	movlb	0	; () banked
 11848  003BC2  6F88               	movwf	lcd_send_byte@n& (0+255),b
 11849  003BC4  0E00               	movlw	0
 11850  003BC6  ECDF  F01E         	call	_lcd_send_byte
 11851  003BCA  0100               	movlb	0	; () banked
 11852  003BCC  2B8A               	incf	lcd_init@i& (0+255),f,b
 11853  003BCE  D7E9               	goto	l6093
 11854  003BD0                     __end_of_lcd_init:
 11855                           	opt stack 0
 11856                           tblptru	equ	0xFF8
 11857                           tblptrh	equ	0xFF7
 11858                           tblptrl	equ	0xFF6
 11859                           tablat	equ	0xFF5
 11860                           prodh	equ	0xFF4
 11861                           prodl	equ	0xFF3
 11862                           intcon	equ	0xFF2
 11863                           intcon2	equ	0xFF1
 11864                           intcon3	equ	0xFF0
 11865                           postinc0	equ	0xFEE
 11866                           wreg	equ	0xFE8
 11867                           indf1	equ	0xFE7
 11868                           postdec1	equ	0xFE5
 11869                           fsr1h	equ	0xFE2
 11870                           fsr1l	equ	0xFE1
 11871                           indf2	equ	0xFDF
 11872                           postinc2	equ	0xFDE
 11873                           postdec2	equ	0xFDD
 11874                           fsr2h	equ	0xFDA
 11875                           fsr2l	equ	0xFD9
 11876                           status	equ	0xFD8
 11877                           
 11878 ;; *************** function _lcd_send_byte *****************
 11879 ;; Defined at:
 11880 ;;		line 39 in file "lcd_x8.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;  cm_data         1    wreg     unsigned char 
 11883 ;;  n               1    8[BANK0 ] unsigned char 
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;  cm_data         1    9[BANK0 ] unsigned char 
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      void 
 11888 ;; Registers used:
 11889 ;;		wreg, status,2, status,0, cstack
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11895 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11896 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11898 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11899 ;;Total ram usage:        2 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; Hardware stack levels required when called:    7
 11902 ;; This function calls:
 11903 ;;		_delay_cycles
 11904 ;;		_delay_ms
 11905 ;;		_lcd_send_nibble
 11906 ;; This function is called by:
 11907 ;;		_lcd_init
 11908 ;;		_lcd_gotoxy
 11909 ;;		_lcd_putc
 11910 ;;		_Lcd_Shift_Right
 11911 ;;		_Lcd_Shift_Left
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           	psect	text37
 11916  003DBE                     __ptext37:
 11917                           	opt stack 0
 11918  003DBE                     _lcd_send_byte:
 11919                           	opt stack 20
 11920                           
 11921                           ; BSR set to: 0
 11922                           ;incstack = 0
 11923                           ;lcd_send_byte@cm_data stored from wreg
 11924  003DBE  0100               	movlb	0	; () banked
 11925  003DC0  6F89               	movwf	lcd_send_byte@cm_data& (0+255),b
 11926                           
 11927                           ;lcd_x8.c: 43: PORTEbits.RE2 = cm_data;
 11928  003DC2  0100               	movlb	0	; () banked
 11929  003DC4  B189               	btfsc	lcd_send_byte@cm_data& (0+255),0,b
 11930  003DC6  D002               	bra	u5805
 11931  003DC8  9484               	bcf	3972,2,c	;volatile
 11932  003DCA  D001               	bra	u5806
 11933  003DCC                     u5805:
 11934  003DCC  8484               	bsf	3972,2,c	;volatile
 11935  003DCE                     u5806:
 11936                           
 11937                           ;lcd_x8.c: 44: delay_cycles(1);
 11938  003DCE  0E01               	movlw	1
 11939  003DD0  ECE8  F01F         	call	_delay_cycles
 11940                           
 11941                           ;lcd_x8.c: 46: delay_cycles(1);
 11942  003DD4  0E01               	movlw	1
 11943  003DD6  ECE8  F01F         	call	_delay_cycles
 11944                           
 11945                           ;lcd_x8.c: 47: PORTEbits.RE1 = 0;
 11946  003DDA  9284               	bcf	3972,1,c	;volatile
 11947                           
 11948                           ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
 11949  003DDC  0100               	movlb	0	; () banked
 11950  003DDE  3988               	swapf	lcd_send_byte@n& (0+255),w,b
 11951  003DE0  0B0F               	andlw	15
 11952  003DE2  ECCD  F020         	call	_lcd_send_nibble
 11953                           
 11954                           ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
 11955  003DE6  0100               	movlb	0	; () banked
 11956  003DE8  5188               	movf	lcd_send_byte@n& (0+255),w,b
 11957  003DEA  0B0F               	andlw	15
 11958  003DEC  ECCD  F020         	call	_lcd_send_nibble
 11959                           
 11960                           ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 11961  003DF0  0100               	movlb	0	; () banked
 11962  003DF2  5189               	movf	lcd_send_byte@cm_data& (0+255),w,b
 11963  003DF4  0100               	movlb	0	; () banked
 11964  003DF6  B4D8               	btfsc	status,2,c
 11965  003DF8  D005               	goto	l5183
 11966                           
 11967                           ; BSR set to: 0
 11968  003DFA  0E32               	movlw	50
 11969  003DFC                     u7707:
 11970  003DFC  0004               	clrwdt	
 11971  003DFE  2EE8               	decfsz	wreg,f,c
 11972  003E00  D7FD               	goto	u7707
 11973  003E02  0012               	return	
 11974  003E04                     l5183:
 11975                           
 11976                           ;lcd_x8.c: 51: else
 11977                           ;lcd_x8.c: 52: delay_ms(2);
 11978  003E04  0E00               	movlw	0
 11979  003E06  0100               	movlb	0	; () banked
 11980  003E08  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 11981  003E0A  0E02               	movlw	2
 11982  003E0C  6F80               	movwf	delay_ms@n& (0+255),b
 11983  003E0E  EC74  F020         	call	_delay_ms	;wreg free
 11984  003E12  0012               	return	
 11985  003E14                     __end_of_lcd_send_byte:
 11986                           	opt stack 0
 11987                           tblptru	equ	0xFF8
 11988                           tblptrh	equ	0xFF7
 11989                           tblptrl	equ	0xFF6
 11990                           tablat	equ	0xFF5
 11991                           prodh	equ	0xFF4
 11992                           prodl	equ	0xFF3
 11993                           intcon	equ	0xFF2
 11994                           intcon2	equ	0xFF1
 11995                           intcon3	equ	0xFF0
 11996                           postinc0	equ	0xFEE
 11997                           wreg	equ	0xFE8
 11998                           indf1	equ	0xFE7
 11999                           postdec1	equ	0xFE5
 12000                           fsr1h	equ	0xFE2
 12001                           fsr1l	equ	0xFE1
 12002                           indf2	equ	0xFDF
 12003                           postinc2	equ	0xFDE
 12004                           postdec2	equ	0xFDD
 12005                           fsr2h	equ	0xFDA
 12006                           fsr2l	equ	0xFD9
 12007                           status	equ	0xFD8
 12008                           
 12009 ;; *************** function _lcd_send_nibble *****************
 12010 ;; Defined at:
 12011 ;;		line 29 in file "lcd_x8.c"
 12012 ;; Parameters:    Size  Location     Type
 12013 ;;  n               1    wreg     unsigned char 
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;  n               1    7[BANK0 ] unsigned char 
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  1    wreg      void 
 12018 ;; Registers used:
 12019 ;;		wreg, status,2, status,0, cstack
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;Total ram usage:        2 bytes
 12030 ;; Hardware stack levels used:    1
 12031 ;; Hardware stack levels required when called:    6
 12032 ;; This function calls:
 12033 ;;		_delay_cycles
 12034 ;; This function is called by:
 12035 ;;		_lcd_send_byte
 12036 ;;		_lcd_init
 12037 ;; This function uses a non-reentrant model
 12038 ;;
 12039                           
 12040                           	psect	text38
 12041  00419A                     __ptext38:
 12042                           	opt stack 0
 12043  00419A                     _lcd_send_nibble:
 12044                           	opt stack 20
 12045                           
 12046                           ;incstack = 0
 12047                           ;lcd_send_nibble@n stored from wreg
 12048  00419A  0100               	movlb	0	; () banked
 12049  00419C  6F87               	movwf	lcd_send_nibble@n& (0+255),b
 12050                           
 12051                           ;lcd_x8.c: 31: lcd.data = n;
 12052  00419E  C087  F086         	movff	lcd_send_nibble@n,??_lcd_send_nibble
 12053  0041A2  0100               	movlb	0	; () banked
 12054  0041A4  3B86               	swapf	??_lcd_send_nibble& (0+255),f,b
 12055  0041A6  5083               	movf	3971,w,c
 12056  0041A8  0100               	movlb	0	; () banked
 12057  0041AA  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
 12058  0041AC  0B0F               	andlw	-241
 12059  0041AE  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
 12060  0041B0  6E83               	movwf	3971,c
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;lcd_x8.c: 33: delay_cycles(1);
 12064  0041B2  0E01               	movlw	1
 12065  0041B4  ECE8  F01F         	call	_delay_cycles
 12066                           
 12067                           ;lcd_x8.c: 34: PORTEbits.RE1 = 1;
 12068  0041B8  8284               	bsf	3972,1,c	;volatile
 12069                           
 12070                           ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 12071  0041BA  0004               	clrwdt	
 12072  0041BC  F000               	nop		;2 cycle nop
 12073                           
 12074                           ;lcd_x8.c: 36: PORTEbits.RE1 = 0;
 12075  0041BE  9284               	bcf	3972,1,c	;volatile
 12076  0041C0  0012               	return		;funcret
 12077  0041C2                     __end_of_lcd_send_nibble:
 12078                           	opt stack 0
 12079                           tblptru	equ	0xFF8
 12080                           tblptrh	equ	0xFF7
 12081                           tblptrl	equ	0xFF6
 12082                           tablat	equ	0xFF5
 12083                           prodh	equ	0xFF4
 12084                           prodl	equ	0xFF3
 12085                           intcon	equ	0xFF2
 12086                           intcon2	equ	0xFF1
 12087                           intcon3	equ	0xFF0
 12088                           postinc0	equ	0xFEE
 12089                           wreg	equ	0xFE8
 12090                           indf1	equ	0xFE7
 12091                           postdec1	equ	0xFE5
 12092                           fsr1h	equ	0xFE2
 12093                           fsr1l	equ	0xFE1
 12094                           indf2	equ	0xFDF
 12095                           postinc2	equ	0xFDE
 12096                           postdec2	equ	0xFDD
 12097                           fsr2h	equ	0xFDA
 12098                           fsr2l	equ	0xFD9
 12099                           status	equ	0xFD8
 12100                           
 12101 ;; *************** function _delay_cycles *****************
 12102 ;; Defined at:
 12103 ;;		line 20 in file "lcd_x8.c"
 12104 ;; Parameters:    Size  Location     Type
 12105 ;;  n               1    wreg     unsigned char 
 12106 ;; Auto vars:     Size  Location     Type
 12107 ;;  n               1    3[BANK0 ] unsigned char 
 12108 ;;  x               2    4[BANK0 ] int 
 12109 ;; Return value:  Size  Location     Type
 12110 ;;                  1    wreg      void 
 12111 ;; Registers used:
 12112 ;;		wreg, status,2, status,0
 12113 ;; Tracked objects:
 12114 ;;		On entry : 0/0
 12115 ;;		On exit  : 0/0
 12116 ;;		Unchanged: 0/0
 12117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12119 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12120 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12121 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12122 ;;Total ram usage:        6 bytes
 12123 ;; Hardware stack levels used:    1
 12124 ;; Hardware stack levels required when called:    5
 12125 ;; This function calls:
 12126 ;;		Nothing
 12127 ;; This function is called by:
 12128 ;;		_lcd_send_nibble
 12129 ;;		_lcd_send_byte
 12130 ;; This function uses a non-reentrant model
 12131 ;;
 12132                           
 12133                           	psect	text39
 12134  003FD0                     __ptext39:
 12135                           	opt stack 0
 12136  003FD0                     _delay_cycles:
 12137                           	opt stack 20
 12138                           
 12139                           ;incstack = 0
 12140                           ;delay_cycles@n stored from wreg
 12141  003FD0  0100               	movlb	0	; () banked
 12142  003FD2  6F83               	movwf	delay_cycles@n& (0+255),b
 12143                           
 12144                           ;lcd_x8.c: 21: int x;
 12145                           ;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
 12146  003FD4  0E00               	movlw	0
 12147  003FD6  0100               	movlb	0	; () banked
 12148  003FD8  6F85               	movwf	(delay_cycles@x+1)& (0+255),b
 12149  003FDA  0E00               	movlw	0
 12150  003FDC  6F84               	movwf	delay_cycles@x& (0+255),b
 12151  003FDE  D004               	goto	l5149
 12152  003FE0                     l18:
 12153                           
 12154                           ; BSR set to: 0
 12155  003FE0  0004               	clrwdt		;# 
 12156  003FE2  0100               	movlb	0	; () banked
 12157  003FE4  4B84               	infsnz	delay_cycles@x& (0+255),f,b
 12158  003FE6  2B85               	incf	(delay_cycles@x+1)& (0+255),f,b
 12159  003FE8                     l5149:
 12160                           
 12161                           ; BSR set to: 0
 12162  003FE8  0100               	movlb	0	; () banked
 12163  003FEA  5183               	movf	delay_cycles@n& (0+255),w,b
 12164  003FEC  0100               	movlb	0	; () banked
 12165  003FEE  6F80               	movwf	??_delay_cycles& (0+255),b
 12166  003FF0  6B81               	clrf	(??_delay_cycles+1)& (0+255),b
 12167  003FF2  0100               	movlb	0	; () banked
 12168  003FF4  5184               	movf	delay_cycles@x& (0+255),w,b
 12169  003FF6  0100               	movlb	0	; () banked
 12170  003FF8  5D80               	subwf	??_delay_cycles& (0+255),w,b
 12171  003FFA  0100               	movlb	0	; () banked
 12172  003FFC  5181               	movf	(??_delay_cycles+1)& (0+255),w,b
 12173  003FFE  0A80               	xorlw	128
 12174  004000  0100               	movlb	0	; () banked
 12175  004002  6F82               	movwf	(??_delay_cycles+2)& (0+255),b
 12176  004004  0100               	movlb	0	; () banked
 12177  004006  5185               	movf	(delay_cycles@x+1)& (0+255),w,b
 12178  004008  0A80               	xorlw	128
 12179  00400A  0100               	movlb	0	; () banked
 12180  00400C  5982               	subwfb	(??_delay_cycles+2)& (0+255),w,b
 12181  00400E  A0D8               	btfss	status,0,c
 12182  004010  0012               	return	
 12183  004012  D7E6               	goto	l18
 12184  004014                     __end_of_delay_cycles:
 12185                           	opt stack 0
 12186                           tblptru	equ	0xFF8
 12187                           tblptrh	equ	0xFF7
 12188                           tblptrl	equ	0xFF6
 12189                           tablat	equ	0xFF5
 12190                           prodh	equ	0xFF4
 12191                           prodl	equ	0xFF3
 12192                           intcon	equ	0xFF2
 12193                           intcon2	equ	0xFF1
 12194                           intcon3	equ	0xFF0
 12195                           postinc0	equ	0xFEE
 12196                           wreg	equ	0xFE8
 12197                           indf1	equ	0xFE7
 12198                           postdec1	equ	0xFE5
 12199                           fsr1h	equ	0xFE2
 12200                           fsr1l	equ	0xFE1
 12201                           indf2	equ	0xFDF
 12202                           postinc2	equ	0xFDE
 12203                           postdec2	equ	0xFDD
 12204                           fsr2h	equ	0xFDA
 12205                           fsr2l	equ	0xFD9
 12206                           status	equ	0xFD8
 12207                           
 12208 ;; *************** function _delay_ms *****************
 12209 ;; Defined at:
 12210 ;;		line 12 in file "lcd_x8.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;  n               2    0[BANK0 ] unsigned int 
 12213 ;; Auto vars:     Size  Location     Type
 12214 ;;  x               2    2[BANK0 ] int 
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      void 
 12217 ;; Registers used:
 12218 ;;		wreg, status,2, status,0
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12225 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12227 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;Total ram usage:        4 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; Hardware stack levels required when called:    5
 12231 ;; This function calls:
 12232 ;;		Nothing
 12233 ;; This function is called by:
 12234 ;;		_lcd_send_byte
 12235 ;;		_lcd_init
 12236 ;;		_lcd_putc
 12237 ;;		_main
 12238 ;; This function uses a non-reentrant model
 12239 ;;
 12240                           
 12241                           	psect	text40
 12242  0040E8                     __ptext40:
 12243                           	opt stack 0
 12244  0040E8                     _delay_ms:
 12245                           	opt stack 21
 12246                           
 12247                           ;lcd_x8.c: 13: int x;
 12248                           ;lcd_x8.c: 14: for (x = 0; x <= n; x++) {
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;incstack = 0
 12252  0040E8  0E00               	movlw	0
 12253  0040EA  0100               	movlb	0	; () banked
 12254  0040EC  6F83               	movwf	(delay_ms@x+1)& (0+255),b
 12255  0040EE  0E00               	movlw	0
 12256  0040F0  6F82               	movwf	delay_ms@x& (0+255),b
 12257  0040F2  D007               	goto	l11
 12258  0040F4                     l5153:
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;lcd_x8.c: 15: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 12262  0040F4  0EFA               	movlw	250
 12263  0040F6                     u7717:
 12264  0040F6  0004               	clrwdt	
 12265  0040F8  2EE8               	decfsz	wreg,f,c
 12266  0040FA  D7FD               	goto	u7717
 12267  0040FC  0100               	movlb	0	; () banked
 12268  0040FE  4B82               	infsnz	delay_ms@x& (0+255),f,b
 12269  004100  2B83               	incf	(delay_ms@x+1)& (0+255),f,b
 12270  004102                     l11:
 12271                           
 12272                           ; BSR set to: 0
 12273  004102  0100               	movlb	0	; () banked
 12274  004104  5182               	movf	delay_ms@x& (0+255),w,b
 12275  004106  0100               	movlb	0	; () banked
 12276  004108  5D80               	subwf	delay_ms@n& (0+255),w,b
 12277  00410A  0100               	movlb	0	; () banked
 12278  00410C  5183               	movf	(delay_ms@x+1)& (0+255),w,b
 12279  00410E  0100               	movlb	0	; () banked
 12280  004110  5981               	subwfb	(delay_ms@n+1)& (0+255),w,b
 12281  004112  A0D8               	btfss	status,0,c
 12282  004114  0012               	return	
 12283  004116  D7EE               	goto	l5153
 12284  004118                     __end_of_delay_ms:
 12285                           	opt stack 0
 12286                           tblptru	equ	0xFF8
 12287                           tblptrh	equ	0xFF7
 12288                           tblptrl	equ	0xFF6
 12289                           tablat	equ	0xFF5
 12290                           prodh	equ	0xFF4
 12291                           prodl	equ	0xFF3
 12292                           intcon	equ	0xFF2
 12293                           intcon2	equ	0xFF1
 12294                           intcon3	equ	0xFF0
 12295                           postinc0	equ	0xFEE
 12296                           wreg	equ	0xFE8
 12297                           indf1	equ	0xFE7
 12298                           postdec1	equ	0xFE5
 12299                           fsr1h	equ	0xFE2
 12300                           fsr1l	equ	0xFE1
 12301                           indf2	equ	0xFDF
 12302                           postinc2	equ	0xFDE
 12303                           postdec2	equ	0xFDD
 12304                           fsr2h	equ	0xFDA
 12305                           fsr2l	equ	0xFD9
 12306                           status	equ	0xFD8
 12307                           
 12308 ;; *************** function _init_pwm1 *****************
 12309 ;; Defined at:
 12310 ;;		line 5 in file "my_pwm.c"
 12311 ;; Parameters:    Size  Location     Type
 12312 ;;		None
 12313 ;; Auto vars:     Size  Location     Type
 12314 ;;		None
 12315 ;; Return value:  Size  Location     Type
 12316 ;;                  1    wreg      void 
 12317 ;; Registers used:
 12318 ;;		wreg, status,2
 12319 ;; Tracked objects:
 12320 ;;		On entry : 0/0
 12321 ;;		On exit  : 0/0
 12322 ;;		Unchanged: 0/0
 12323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12328 ;;Total ram usage:        0 bytes
 12329 ;; Hardware stack levels used:    1
 12330 ;; Hardware stack levels required when called:    5
 12331 ;; This function calls:
 12332 ;;		Nothing
 12333 ;; This function is called by:
 12334 ;;		_main
 12335 ;; This function uses a non-reentrant model
 12336 ;;
 12337                           
 12338                           	psect	text41
 12339  004284                     __ptext41:
 12340                           	opt stack 0
 12341  004284                     _init_pwm1:
 12342                           	opt stack 25
 12343                           
 12344                           ;my_pwm.c: 7: PR2 = 255;
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;incstack = 0
 12348  004284  68CB               	setf	4043,c	;volatile
 12349                           
 12350                           ;my_pwm.c: 8: T2CON = 0;
 12351  004286  0E00               	movlw	0
 12352  004288  6ECA               	movwf	4042,c	;volatile
 12353                           
 12354                           ;my_pwm.c: 9: T2CONbits.T2CKPS=0b11;
 12355  00428A  0E03               	movlw	3
 12356  00428C  12CA               	iorwf	4042,f,c	;volatile
 12357                           
 12358                           ;my_pwm.c: 10: CCP1CON = 0x0C;
 12359  00428E  0E0C               	movlw	12
 12360  004290  6EBD               	movwf	4029,c	;volatile
 12361                           
 12362                           ;my_pwm.c: 12: T2CONbits.TMR2ON = 1;
 12363  004292  84CA               	bsf	4042,2,c	;volatile
 12364                           
 12365                           ;my_pwm.c: 13: TRISCbits.RC2 =0;
 12366  004294  9494               	bcf	3988,2,c	;volatile
 12367  004296  0012               	return		;funcret
 12368  004298                     __end_of_init_pwm1:
 12369                           	opt stack 0
 12370                           tblptru	equ	0xFF8
 12371                           tblptrh	equ	0xFF7
 12372                           tblptrl	equ	0xFF6
 12373                           tablat	equ	0xFF5
 12374                           prodh	equ	0xFF4
 12375                           prodl	equ	0xFF3
 12376                           intcon	equ	0xFF2
 12377                           intcon2	equ	0xFF1
 12378                           intcon3	equ	0xFF0
 12379                           postinc0	equ	0xFEE
 12380                           wreg	equ	0xFE8
 12381                           indf1	equ	0xFE7
 12382                           postdec1	equ	0xFE5
 12383                           fsr1h	equ	0xFE2
 12384                           fsr1l	equ	0xFE1
 12385                           indf2	equ	0xFDF
 12386                           postinc2	equ	0xFDE
 12387                           postdec2	equ	0xFDD
 12388                           fsr2h	equ	0xFDA
 12389                           fsr2l	equ	0xFD9
 12390                           status	equ	0xFD8
 12391                           
 12392 ;; *************** function _init_adc_no_lib *****************
 12393 ;; Defined at:
 12394 ;;		line 11 in file "my_adc.c"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;		None
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;		None
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  1    wreg      void 
 12401 ;; Registers used:
 12402 ;;		wreg, status,2
 12403 ;; Tracked objects:
 12404 ;;		On entry : 0/0
 12405 ;;		On exit  : 0/0
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;Total ram usage:        0 bytes
 12413 ;; Hardware stack levels used:    1
 12414 ;; Hardware stack levels required when called:    5
 12415 ;; This function calls:
 12416 ;;		Nothing
 12417 ;; This function is called by:
 12418 ;;		_main
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           	psect	text42
 12423  0042BE                     __ptext42:
 12424                           	opt stack 0
 12425  0042BE                     _init_adc_no_lib:
 12426                           	opt stack 25
 12427                           
 12428                           ;my_adc.c: 14: ADCON0 = 0;
 12429                           
 12430                           ;incstack = 0
 12431  0042BE  0E00               	movlw	0
 12432  0042C0  6EC2               	movwf	4034,c	;volatile
 12433                           
 12434                           ;my_adc.c: 15: ADCON0bits.ADON = 1;
 12435  0042C2  80C2               	bsf	4034,0,c	;volatile
 12436                           
 12437                           ;my_adc.c: 18: ADCON2 = 0b10001001;
 12438  0042C4  0E89               	movlw	137
 12439  0042C6  6EC0               	movwf	4032,c	;volatile
 12440  0042C8  0012               	return		;funcret
 12441  0042CA                     __end_of_init_adc_no_lib:
 12442                           	opt stack 0
 12443                           tblptru	equ	0xFF8
 12444                           tblptrh	equ	0xFF7
 12445                           tblptrl	equ	0xFF6
 12446                           tablat	equ	0xFF5
 12447                           prodh	equ	0xFF4
 12448                           prodl	equ	0xFF3
 12449                           intcon	equ	0xFF2
 12450                           intcon2	equ	0xFF1
 12451                           intcon3	equ	0xFF0
 12452                           postinc0	equ	0xFEE
 12453                           wreg	equ	0xFE8
 12454                           indf1	equ	0xFE7
 12455                           postdec1	equ	0xFE5
 12456                           fsr1h	equ	0xFE2
 12457                           fsr1l	equ	0xFE1
 12458                           indf2	equ	0xFDF
 12459                           postinc2	equ	0xFDE
 12460                           postdec2	equ	0xFDD
 12461                           fsr2h	equ	0xFDA
 12462                           fsr2l	equ	0xFD9
 12463                           status	equ	0xFD8
 12464                           
 12465 ;; *************** function ___lwtoft *****************
 12466 ;; Defined at:
 12467 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;  c               2    8[BANK0 ] unsigned int 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  3    8[BANK0 ] float 
 12474 ;; Registers used:
 12475 ;;		wreg, status,2, status,0, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12481 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12484 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12485 ;;Total ram usage:        3 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:    6
 12488 ;; This function calls:
 12489 ;;		___ftpack
 12490 ;; This function is called by:
 12491 ;;		_main
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text43
 12496  004170                     __ptext43:
 12497                           	opt stack 0
 12498  004170                     ___lwtoft:
 12499                           	opt stack 24
 12500                           
 12501                           ;incstack = 0
 12502  004170  C088  F080         	movff	___lwtoft@c,___ftpack@arg
 12503  004174  C089  F081         	movff	___lwtoft@c+1,___ftpack@arg+1
 12504  004178  0100               	movlb	0	; () banked
 12505  00417A  6B82               	clrf	(___ftpack@arg+2)& (0+255),b
 12506  00417C  0E8E               	movlw	142
 12507  00417E  0100               	movlb	0	; () banked
 12508  004180  6F83               	movwf	___ftpack@exp& (0+255),b
 12509  004182  0E00               	movlw	0
 12510  004184  0100               	movlb	0	; () banked
 12511  004186  6F84               	movwf	___ftpack@sign& (0+255),b
 12512  004188  ECB3  F017         	call	___ftpack	;wreg free
 12513  00418C  C080  F088         	movff	?___ftpack,?___lwtoft
 12514  004190  C081  F089         	movff	?___ftpack+1,?___lwtoft+1
 12515  004194  C082  F08A         	movff	?___ftpack+2,?___lwtoft+2
 12516  004198  0012               	return	
 12517  00419A                     __end_of___lwtoft:
 12518                           	opt stack 0
 12519                           tblptru	equ	0xFF8
 12520                           tblptrh	equ	0xFF7
 12521                           tblptrl	equ	0xFF6
 12522                           tablat	equ	0xFF5
 12523                           prodh	equ	0xFF4
 12524                           prodl	equ	0xFF3
 12525                           intcon	equ	0xFF2
 12526                           intcon2	equ	0xFF1
 12527                           intcon3	equ	0xFF0
 12528                           postinc0	equ	0xFEE
 12529                           wreg	equ	0xFE8
 12530                           indf1	equ	0xFE7
 12531                           postdec1	equ	0xFE5
 12532                           fsr1h	equ	0xFE2
 12533                           fsr1l	equ	0xFE1
 12534                           indf2	equ	0xFDF
 12535                           postinc2	equ	0xFDE
 12536                           postdec2	equ	0xFDD
 12537                           fsr2h	equ	0xFDA
 12538                           fsr2l	equ	0xFD9
 12539                           status	equ	0xFD8
 12540                           
 12541 ;; *************** function ___ftpack *****************
 12542 ;; Defined at:
 12543 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  arg             3    0[BANK0 ] unsigned um
 12546 ;;  exp             1    3[BANK0 ] unsigned char 
 12547 ;;  sign            1    4[BANK0 ] unsigned char 
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;		None
 12550 ;; Return value:  Size  Location     Type
 12551 ;;                  3    0[BANK0 ] float 
 12552 ;; Registers used:
 12553 ;;		wreg, status,2, status,0
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12559 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12561 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12562 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12563 ;;Total ram usage:        8 bytes
 12564 ;; Hardware stack levels used:    1
 12565 ;; Hardware stack levels required when called:    5
 12566 ;; This function calls:
 12567 ;;		Nothing
 12568 ;; This function is called by:
 12569 ;;		___awtoft
 12570 ;;		___ftadd
 12571 ;;		___ftdiv
 12572 ;;		___ftmul
 12573 ;;		___lltoft
 12574 ;;		___lwtoft
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           	psect	text44
 12579  002F66                     __ptext44:
 12580                           	opt stack 0
 12581  002F66                     ___ftpack:
 12582                           	opt stack 22
 12583                           
 12584                           ;incstack = 0
 12585  002F66  0100               	movlb	0	; () banked
 12586  002F68  5183               	movf	___ftpack@exp& (0+255),w,b
 12587  002F6A  0100               	movlb	0	; () banked
 12588  002F6C  B4D8               	btfsc	status,2,c
 12589  002F6E  D008               	goto	l5189
 12590                           
 12591                           ; BSR set to: 0
 12592  002F70  0100               	movlb	0	; () banked
 12593  002F72  5180               	movf	___ftpack@arg& (0+255),w,b
 12594  002F74  0100               	movlb	0	; () banked
 12595  002F76  1181               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12596  002F78  0100               	movlb	0	; () banked
 12597  002F7A  1182               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12598  002F7C  A4D8               	btfss	status,2,c
 12599  002F7E  D011               	goto	l5195
 12600  002F80                     l5189:
 12601                           
 12602                           ; BSR set to: 0
 12603  002F80  0E00               	movlw	0
 12604  002F82  0100               	movlb	0	; () banked
 12605  002F84  6F80               	movwf	?___ftpack& (0+255),b
 12606  002F86  0E00               	movlw	0
 12607  002F88  0100               	movlb	0	; () banked
 12608  002F8A  6F81               	movwf	(?___ftpack+1)& (0+255),b
 12609  002F8C  0E00               	movlw	0
 12610  002F8E  0100               	movlb	0	; () banked
 12611  002F90  6F82               	movwf	(?___ftpack+2)& (0+255),b
 12612                           
 12613                           ; BSR set to: 0
 12614  002F92  0012               	return	
 12615  002F94                     l5193:
 12616                           
 12617                           ; BSR set to: 0
 12618  002F94  0100               	movlb	0	; () banked
 12619  002F96  2B83               	incf	___ftpack@exp& (0+255),f,b
 12620  002F98  0100               	movlb	0	; () banked
 12621  002F9A  90D8               	bcf	status,0,c
 12622  002F9C  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12623  002F9E  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12624  002FA0  3380               	rrcf	___ftpack@arg& (0+255),f,b
 12625  002FA2                     l5195:
 12626                           
 12627                           ; BSR set to: 0
 12628  002FA2  0E00               	movlw	0
 12629  002FA4  0100               	movlb	0	; () banked
 12630  002FA6  1580               	andwf	___ftpack@arg& (0+255),w,b
 12631  002FA8  0100               	movlb	0	; () banked
 12632  002FAA  6F85               	movwf	??___ftpack& (0+255),b
 12633  002FAC  0E00               	movlw	0
 12634  002FAE  0100               	movlb	0	; () banked
 12635  002FB0  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12636  002FB2  0100               	movlb	0	; () banked
 12637  002FB4  6F86               	movwf	(??___ftpack+1)& (0+255),b
 12638  002FB6  0EFE               	movlw	254
 12639  002FB8  0100               	movlb	0	; () banked
 12640  002FBA  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12641  002FBC  0100               	movlb	0	; () banked
 12642  002FBE  6F87               	movwf	(??___ftpack+2)& (0+255),b
 12643  002FC0  0100               	movlb	0	; () banked
 12644  002FC2  5185               	movf	??___ftpack& (0+255),w,b
 12645  002FC4  0100               	movlb	0	; () banked
 12646  002FC6  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
 12647  002FC8  0100               	movlb	0	; () banked
 12648  002FCA  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
 12649  002FCC  B4D8               	btfsc	status,2,c
 12650  002FCE  D011               	goto	l5201
 12651  002FD0  D7E1               	goto	l5193
 12652  002FD2                     l5197:
 12653                           
 12654                           ; BSR set to: 0
 12655  002FD2  0100               	movlb	0	; () banked
 12656  002FD4  2B83               	incf	___ftpack@exp& (0+255),f,b
 12657                           
 12658                           ; BSR set to: 0
 12659  002FD6  0E01               	movlw	1
 12660  002FD8  0100               	movlb	0	; () banked
 12661  002FDA  2780               	addwf	___ftpack@arg& (0+255),f,b
 12662  002FDC  0E00               	movlw	0
 12663  002FDE  0100               	movlb	0	; () banked
 12664  002FE0  2381               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12665  002FE2  0E00               	movlw	0
 12666  002FE4  0100               	movlb	0	; () banked
 12667  002FE6  2382               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12668  002FE8  0100               	movlb	0	; () banked
 12669  002FEA  90D8               	bcf	status,0,c
 12670  002FEC  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12671  002FEE  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12672  002FF0  3380               	rrcf	___ftpack@arg& (0+255),f,b
 12673  002FF2                     l5201:
 12674                           
 12675                           ; BSR set to: 0
 12676  002FF2  0E00               	movlw	0
 12677  002FF4  0100               	movlb	0	; () banked
 12678  002FF6  1580               	andwf	___ftpack@arg& (0+255),w,b
 12679  002FF8  0100               	movlb	0	; () banked
 12680  002FFA  6F85               	movwf	??___ftpack& (0+255),b
 12681  002FFC  0E00               	movlw	0
 12682  002FFE  0100               	movlb	0	; () banked
 12683  003000  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12684  003002  0100               	movlb	0	; () banked
 12685  003004  6F86               	movwf	(??___ftpack+1)& (0+255),b
 12686  003006  0EFF               	movlw	255
 12687  003008  0100               	movlb	0	; () banked
 12688  00300A  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12689  00300C  0100               	movlb	0	; () banked
 12690  00300E  6F87               	movwf	(??___ftpack+2)& (0+255),b
 12691  003010  0100               	movlb	0	; () banked
 12692  003012  5185               	movf	??___ftpack& (0+255),w,b
 12693  003014  0100               	movlb	0	; () banked
 12694  003016  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
 12695  003018  0100               	movlb	0	; () banked
 12696  00301A  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
 12697  00301C  B4D8               	btfsc	status,2,c
 12698  00301E  D008               	goto	l5205
 12699  003020  D7D8               	goto	l5197
 12700  003022                     l5203:
 12701                           
 12702                           ; BSR set to: 0
 12703  003022  0100               	movlb	0	; () banked
 12704  003024  0783               	decf	___ftpack@exp& (0+255),f,b
 12705  003026  0100               	movlb	0	; () banked
 12706  003028  90D8               	bcf	status,0,c
 12707  00302A  3780               	rlcf	___ftpack@arg& (0+255),f,b
 12708  00302C  3781               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12709  00302E  3782               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12710  003030                     l5205:
 12711                           
 12712                           ; BSR set to: 0
 12713  003030  0100               	movlb	0	; () banked
 12714  003032  BF81               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 12715  003034  D004               	goto	l836
 12716                           
 12717                           ; BSR set to: 0
 12718  003036  0E02               	movlw	2
 12719  003038  0100               	movlb	0	; () banked
 12720  00303A  6183               	cpfslt	___ftpack@exp& (0+255),b
 12721  00303C  D7F2               	goto	l5203
 12722  00303E                     l836:
 12723                           
 12724                           ; BSR set to: 0
 12725  00303E  0100               	movlb	0	; () banked
 12726  003040  B183               	btfsc	___ftpack@exp& (0+255),0,b
 12727  003042  D002               	goto	l5211
 12728                           
 12729                           ; BSR set to: 0
 12730  003044  0100               	movlb	0	; () banked
 12731  003046  9F81               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12732  003048                     l5211:
 12733                           
 12734                           ; BSR set to: 0
 12735  003048  0100               	movlb	0	; () banked
 12736  00304A  90D8               	bcf	status,0,c
 12737  00304C  3383               	rrcf	___ftpack@exp& (0+255),f,b
 12738  00304E  0100               	movlb	0	; () banked
 12739  003050  5183               	movf	___ftpack@exp& (0+255),w,b
 12740  003052  0100               	movlb	0	; () banked
 12741  003054  1382               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12742                           
 12743                           ; BSR set to: 0
 12744  003056  0100               	movlb	0	; () banked
 12745  003058  5184               	movf	___ftpack@sign& (0+255),w,b
 12746  00305A  0100               	movlb	0	; () banked
 12747  00305C  B4D8               	btfsc	status,2,c
 12748  00305E  D002               	goto	l5217
 12749                           
 12750                           ; BSR set to: 0
 12751  003060  0100               	movlb	0	; () banked
 12752  003062  8F82               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12753  003064                     l5217:
 12754                           
 12755                           ; BSR set to: 0
 12756  003064  C080  F080         	movff	___ftpack@arg,?___ftpack
 12757  003068  C081  F081         	movff	___ftpack@arg+1,?___ftpack+1
 12758  00306C  C082  F082         	movff	___ftpack@arg+2,?___ftpack+2
 12759  003070  0012               	return	
 12760  003072                     __end_of___ftpack:
 12761                           	opt stack 0
 12762                           tblptru	equ	0xFF8
 12763                           tblptrh	equ	0xFF7
 12764                           tblptrl	equ	0xFF6
 12765                           tablat	equ	0xFF5
 12766                           prodh	equ	0xFF4
 12767                           prodl	equ	0xFF3
 12768                           intcon	equ	0xFF2
 12769                           intcon2	equ	0xFF1
 12770                           intcon3	equ	0xFF0
 12771                           postinc0	equ	0xFEE
 12772                           wreg	equ	0xFE8
 12773                           indf1	equ	0xFE7
 12774                           postdec1	equ	0xFE5
 12775                           fsr1h	equ	0xFE2
 12776                           fsr1l	equ	0xFE1
 12777                           indf2	equ	0xFDF
 12778                           postinc2	equ	0xFDE
 12779                           postdec2	equ	0xFDD
 12780                           fsr2h	equ	0xFDA
 12781                           fsr2l	equ	0xFD9
 12782                           status	equ	0xFD8
 12783                           
 12784 ;; *************** function _highIsr *****************
 12785 ;; Defined at:
 12786 ;;		line 177 in file "main.c"
 12787 ;; Parameters:    Size  Location     Type
 12788 ;;		None
 12789 ;; Auto vars:     Size  Location     Type
 12790 ;;		None
 12791 ;; Return value:  Size  Location     Type
 12792 ;;                  1    wreg      void 
 12793 ;; Registers used:
 12794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12795 ;; Tracked objects:
 12796 ;;		On entry : 0/0
 12797 ;;		On exit  : 0/0
 12798 ;;		Unchanged: 0/0
 12799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12802 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12803 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12804 ;;Total ram usage:       14 bytes
 12805 ;; Hardware stack levels used:    1
 12806 ;; Hardware stack levels required when called:    4
 12807 ;; This function calls:
 12808 ;;		_EXT_Int0_isr
 12809 ;;		_EXT_Int1_isr
 12810 ;;		_EXT_Int2_isr
 12811 ;;		_RC_isr
 12812 ;;		_TMR0_isr
 12813 ;;		_TMR3_isr
 12814 ;; This function is called by:
 12815 ;;		Interrupt level 2
 12816 ;; This function uses a non-reentrant model
 12817 ;;
 12818                           
 12819                           	psect	intcode
 12820  000008                     __pintcode:
 12821                           	opt stack 0
 12822  000008                     _highIsr:
 12823                           	opt stack 19
 12824                           
 12825                           ; BSR set to: 0
 12826                           ;incstack = 0
 12827  000008  8272               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12828  00000A  CFFA F031          	movff	pclath,??_highIsr
 12829  00000E  CFFB F032          	movff	pclatu,??_highIsr+1
 12830  000012  ED70  F01B         	call	int_func,f	;refresh shadow registers
 12831                           pclatu	equ	0xFFB
 12832                           pclath	equ	0xFFA
 12833                           tblptru	equ	0xFF8
 12834                           tblptrh	equ	0xFF7
 12835                           tblptrl	equ	0xFF6
 12836                           tablat	equ	0xFF5
 12837                           prodh	equ	0xFF4
 12838                           prodl	equ	0xFF3
 12839                           intcon	equ	0xFF2
 12840                           intcon2	equ	0xFF1
 12841                           intcon3	equ	0xFF0
 12842                           postinc0	equ	0xFEE
 12843                           wreg	equ	0xFE8
 12844                           indf1	equ	0xFE7
 12845                           postdec1	equ	0xFE5
 12846                           fsr1h	equ	0xFE2
 12847                           fsr1l	equ	0xFE1
 12848                           indf2	equ	0xFDF
 12849                           postinc2	equ	0xFDE
 12850                           postdec2	equ	0xFDD
 12851                           fsr2h	equ	0xFDA
 12852                           fsr2l	equ	0xFD9
 12853                           status	equ	0xFD8
 12854                           
 12855                           	psect	intcode_body
 12856  0036E0                     __pintcode_body:
 12857                           	opt stack 19
 12858  0036E0                     int_func:
 12859                           	opt stack 19
 12860  0036E0  0006               	pop		; remove dummy address from shadow register refresh
 12861  0036E2  CFE9 F033          	movff	fsr0l,??_highIsr+2
 12862  0036E6  CFEA F034          	movff	fsr0h,??_highIsr+3
 12863  0036EA  CFE1 F035          	movff	fsr1l,??_highIsr+4
 12864  0036EE  CFE2 F036          	movff	fsr1h,??_highIsr+5
 12865  0036F2  CFD9 F037          	movff	fsr2l,??_highIsr+6
 12866  0036F6  CFDA F038          	movff	fsr2h,??_highIsr+7
 12867  0036FA  CFF3 F039          	movff	prodl,??_highIsr+8
 12868  0036FE  CFF4 F03A          	movff	prodh,??_highIsr+9
 12869  003702  CFF6 F03B          	movff	tblptrl,??_highIsr+10
 12870  003706  CFF7 F03C          	movff	tblptrh,??_highIsr+11
 12871  00370A  CFF8 F03D          	movff	tblptru,??_highIsr+12
 12872  00370E  CFF5 F03E          	movff	tablat,??_highIsr+13
 12873                           
 12874                           ;main.c: 179: if (INTCONbits.INT0IF) EXT_Int0_isr();
 12875  003712  A2F2               	btfss	intcon,1,c	;volatile
 12876  003714  D003               	goto	i2l324
 12877  003716  EC09  F015         	call	_EXT_Int0_isr	;wreg free
 12878  00371A  D017               	goto	i2l335
 12879  00371C                     i2l324:
 12880                           
 12881                           ;main.c: 180: else if (INTCON3bits.INT2F) EXT_Int2_isr();
 12882  00371C  A2F0               	btfss	intcon3,1,c	;volatile
 12883  00371E  D003               	goto	i2l326
 12884  003720  ECAD  F01C         	call	_EXT_Int2_isr	;wreg free
 12885  003724  D012               	goto	i2l335
 12886  003726                     i2l326:
 12887                           
 12888                           ;main.c: 181: else if (INTCON3bits.INT1F) EXT_Int1_isr();
 12889  003726  A0F0               	btfss	intcon3,0,c	;volatile
 12890  003728  D003               	goto	i2l328
 12891  00372A  ECF0  F01C         	call	_EXT_Int1_isr	;wreg free
 12892  00372E  D00D               	goto	i2l335
 12893  003730                     i2l328:
 12894                           
 12895                           ;main.c: 182: else if (PIR2bits.TMR3IF) TMR3_isr();
 12896  003730  A2A1               	btfss	4001,1,c	;volatile
 12897  003732  D003               	goto	i2l330
 12898  003734  EC21  F01E         	call	_TMR3_isr	;wreg free
 12899  003738  D008               	goto	i2l335
 12900  00373A                     i2l330:
 12901                           
 12902                           ;main.c: 183: else if (INTCONbits.TMR0IF) TMR0_isr();
 12903  00373A  A4F2               	btfss	intcon,2,c	;volatile
 12904  00373C  D003               	goto	i2l332
 12905  00373E  EC19  F021         	call	_TMR0_isr	;wreg free
 12906  003742  D003               	goto	i2l335
 12907  003744                     i2l332:
 12908                           
 12909                           ;main.c: 184: else if (PIR1bits.RCIF) RC_isr();
 12910  003744  BA9E               	btfsc	3998,5,c	;volatile
 12911  003746  EC4C  F021         	call	_RC_isr	;wreg free
 12912  00374A                     i2l335:
 12913  00374A  C03E  FFF5         	movff	??_highIsr+13,tablat
 12914  00374E  C03D  FFF8         	movff	??_highIsr+12,tblptru
 12915  003752  C03C  FFF7         	movff	??_highIsr+11,tblptrh
 12916  003756  C03B  FFF6         	movff	??_highIsr+10,tblptrl
 12917  00375A  C03A  FFF4         	movff	??_highIsr+9,prodh
 12918  00375E  C039  FFF3         	movff	??_highIsr+8,prodl
 12919  003762  C038  FFDA         	movff	??_highIsr+7,fsr2h
 12920  003766  C037  FFD9         	movff	??_highIsr+6,fsr2l
 12921  00376A  C036  FFE2         	movff	??_highIsr+5,fsr1h
 12922  00376E  C035  FFE1         	movff	??_highIsr+4,fsr1l
 12923  003772  C034  FFEA         	movff	??_highIsr+3,fsr0h
 12924  003776  C033  FFE9         	movff	??_highIsr+2,fsr0l
 12925  00377A  C032  FFFB         	movff	??_highIsr+1,pclatu
 12926  00377E  C031  FFFA         	movff	??_highIsr,pclath
 12927  003782  9272               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12928  003784  0011               	retfie		f
 12929  003786                     __end_of_highIsr:
 12930                           	opt stack 0
 12931                           pclatu	equ	0xFFB
 12932                           pclath	equ	0xFFA
 12933                           tblptru	equ	0xFF8
 12934                           tblptrh	equ	0xFF7
 12935                           tblptrl	equ	0xFF6
 12936                           tablat	equ	0xFF5
 12937                           prodh	equ	0xFF4
 12938                           prodl	equ	0xFF3
 12939                           intcon	equ	0xFF2
 12940                           intcon2	equ	0xFF1
 12941                           intcon3	equ	0xFF0
 12942                           postinc0	equ	0xFEE
 12943                           fsr0h	equ	0xFEA
 12944                           fsr0l	equ	0xFE9
 12945                           wreg	equ	0xFE8
 12946                           indf1	equ	0xFE7
 12947                           postdec1	equ	0xFE5
 12948                           fsr1h	equ	0xFE2
 12949                           fsr1l	equ	0xFE1
 12950                           indf2	equ	0xFDF
 12951                           postinc2	equ	0xFDE
 12952                           postdec2	equ	0xFDD
 12953                           fsr2h	equ	0xFDA
 12954                           fsr2l	equ	0xFD9
 12955                           status	equ	0xFD8
 12956                           
 12957 ;; *************** function _TMR3_isr *****************
 12958 ;; Defined at:
 12959 ;;		line 270 in file "main.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;		None
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;		None
 12964 ;; Return value:  Size  Location     Type
 12965 ;;                  1    wreg      void 
 12966 ;; Registers used:
 12967 ;;		wreg, status,2, status,0, cstack
 12968 ;; Tracked objects:
 12969 ;;		On entry : 0/0
 12970 ;;		On exit  : 0/0
 12971 ;;		Unchanged: 0/0
 12972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12975 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12976 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12977 ;;Total ram usage:        1 bytes
 12978 ;; Hardware stack levels used:    1
 12979 ;; Hardware stack levels required when called:    1
 12980 ;; This function calls:
 12981 ;;		_TMR3_reset
 12982 ;; This function is called by:
 12983 ;;		_highIsr
 12984 ;; This function uses a non-reentrant model
 12985 ;;
 12986                           
 12987                           	psect	text46
 12988  003C42                     __ptext46:
 12989                           	opt stack 0
 12990  003C42                     _TMR3_isr:
 12991                           	opt stack 21
 12992                           
 12993                           ;main.c: 271: TMR3_reset();
 12994                           
 12995                           ;incstack = 0
 12996  003C42  EC65  F021         	call	_TMR3_reset	;wreg free
 12997                           
 12998                           ;main.c: 272: PIR2bits.TMR3IF = 0;
 12999  003C46  92A1               	bcf	4001,1,c	;volatile
 13000                           
 13001                           ;main.c: 273: if (GlobalConter < 20) {
 13002  003C48  0101               	movlb	1	; () banked
 13003  003C4A  BF0F               	btfsc	(_GlobalConter+1)& (0+255),7,b
 13004  003C4C  D008               	goto	i2l4877
 13005  003C4E  0101               	movlb	1	; () banked
 13006  003C50  510F               	movf	(_GlobalConter+1)& (0+255),w,b
 13007  003C52  E127               	bnz	i2l4887
 13008  003C54  0E14               	movlw	20
 13009  003C56  0101               	movlb	1	; () banked
 13010  003C58  5D0E               	subwf	_GlobalConter& (0+255),w,b
 13011  003C5A  B0D8               	btfsc	status,0,c
 13012  003C5C  D022               	goto	i2l4887
 13013  003C5E                     i2l4877:
 13014                           
 13015                           ; BSR set to: 1
 13016                           ;main.c: 274: if (MD == 1 || MD==3) {
 13017  003C5E  0101               	movlb	1	; () banked
 13018  003C60  0516               	decf	_MD& (0+255),w,b
 13019  003C62  0101               	movlb	1	; () banked
 13020  003C64  1117               	iorwf	(_MD+1)& (0+255),w,b
 13021  003C66  B4D8               	btfsc	status,2,c
 13022  003C68  D007               	goto	i2l4881
 13023                           
 13024                           ; BSR set to: 1
 13025  003C6A  0E03               	movlw	3
 13026  003C6C  0101               	movlb	1	; () banked
 13027  003C6E  1916               	xorwf	_MD& (0+255),w,b
 13028  003C70  0101               	movlb	1	; () banked
 13029  003C72  1117               	iorwf	(_MD+1)& (0+255),w,b
 13030  003C74  A4D8               	btfss	status,2,c
 13031  003C76  0012               	return	
 13032  003C78                     i2l4881:
 13033                           
 13034                           ; BSR set to: 1
 13035                           ;main.c: 275: if (GlobalConter < H) {
 13036  003C78  0101               	movlb	1	; () banked
 13037  003C7A  5110               	movf	_H& (0+255),w,b
 13038  003C7C  0101               	movlb	1	; () banked
 13039  003C7E  5D0E               	subwf	_GlobalConter& (0+255),w,b
 13040  003C80  0101               	movlb	1	; () banked
 13041  003C82  510F               	movf	(_GlobalConter+1)& (0+255),w,b
 13042  003C84  0A80               	xorlw	128
 13043  003C86  6E01               	movwf	??_TMR3_isr& (0+255),c
 13044  003C88  0101               	movlb	1	; () banked
 13045  003C8A  5111               	movf	(_H+1)& (0+255),w,b
 13046  003C8C  0A80               	xorlw	128
 13047  003C8E  5801               	subwfb	??_TMR3_isr& (0+255),w,c
 13048  003C90  B0D8               	btfsc	status,0,c
 13049  003C92  D002               	goto	i2l364
 13050                           
 13051                           ; BSR set to: 1
 13052                           ;main.c: 276: PORTCbits.RC5 = 1;
 13053  003C94  8A82               	bsf	3970,5,c	;volatile
 13054                           
 13055                           ;main.c: 277: } else {
 13056  003C96  D001               	goto	i2l4885
 13057  003C98                     i2l364:
 13058                           
 13059                           ; BSR set to: 1
 13060                           ;main.c: 278: PORTCbits.RC5 = 0;
 13061  003C98  9A82               	bcf	3970,5,c	;volatile
 13062  003C9A                     i2l4885:
 13063                           
 13064                           ; BSR set to: 1
 13065                           ;main.c: 279: }
 13066                           ;main.c: 280: GlobalConter += 1;
 13067  003C9A  0101               	movlb	1	; () banked
 13068  003C9C  4B0E               	infsnz	_GlobalConter& (0+255),f,b
 13069  003C9E  2B0F               	incf	(_GlobalConter+1)& (0+255),f,b
 13070                           
 13071                           ; BSR set to: 1
 13072                           ;main.c: 281: }
 13073                           ;main.c: 282: } else {
 13074  003CA0  0012               	return	
 13075  003CA2                     i2l4887:
 13076                           
 13077                           ; BSR set to: 1
 13078                           ;main.c: 283: GlobalConter = 0;
 13079  003CA2  0E00               	movlw	0
 13080  003CA4  0101               	movlb	1	; () banked
 13081  003CA6  6F0F               	movwf	(_GlobalConter+1)& (0+255),b
 13082  003CA8  0E00               	movlw	0
 13083  003CAA  6F0E               	movwf	_GlobalConter& (0+255),b
 13084  003CAC  0012               	return	
 13085  003CAE                     __end_of_TMR3_isr:
 13086                           	opt stack 0
 13087                           pclatu	equ	0xFFB
 13088                           pclath	equ	0xFFA
 13089                           tblptru	equ	0xFF8
 13090                           tblptrh	equ	0xFF7
 13091                           tblptrl	equ	0xFF6
 13092                           tablat	equ	0xFF5
 13093                           prodh	equ	0xFF4
 13094                           prodl	equ	0xFF3
 13095                           intcon	equ	0xFF2
 13096                           intcon2	equ	0xFF1
 13097                           intcon3	equ	0xFF0
 13098                           postinc0	equ	0xFEE
 13099                           fsr0h	equ	0xFEA
 13100                           fsr0l	equ	0xFE9
 13101                           wreg	equ	0xFE8
 13102                           indf1	equ	0xFE7
 13103                           postdec1	equ	0xFE5
 13104                           fsr1h	equ	0xFE2
 13105                           fsr1l	equ	0xFE1
 13106                           indf2	equ	0xFDF
 13107                           postinc2	equ	0xFDE
 13108                           postdec2	equ	0xFDD
 13109                           fsr2h	equ	0xFDA
 13110                           fsr2l	equ	0xFD9
 13111                           status	equ	0xFD8
 13112                           
 13113 ;; *************** function _TMR0_isr *****************
 13114 ;; Defined at:
 13115 ;;		line 262 in file "main.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;		None
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;		None
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  1    wreg      void 
 13122 ;; Registers used:
 13123 ;;		wreg, status,2
 13124 ;; Tracked objects:
 13125 ;;		On entry : 0/0
 13126 ;;		On exit  : 0/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13133 ;;Total ram usage:        2 bytes
 13134 ;; Hardware stack levels used:    1
 13135 ;; This function calls:
 13136 ;;		Nothing
 13137 ;; This function is called by:
 13138 ;;		_highIsr
 13139 ;; This function uses a non-reentrant model
 13140 ;;
 13141                           
 13142                           	psect	text47
 13143  004232                     __ptext47:
 13144                           	opt stack 0
 13145  004232                     _TMR0_isr:
 13146                           	opt stack 22
 13147                           
 13148                           ;main.c: 263: INTCONbits.T0IF = 0;
 13149                           
 13150                           ; BSR set to: 1
 13151                           ;incstack = 0
 13152  004232  94F2               	bcf	intcon,2,c	;volatile
 13153                           
 13154                           ;main.c: 264: RPS_C = ((unsigned int) TMR1H << 8) | (TMR1L);
 13155  004234  50CF               	movf	4047,w,c	;volatile
 13156  004236  6E01               	movwf	??_TMR0_isr& (0+255),c
 13157  004238  50CE               	movf	4046,w,c	;volatile
 13158  00423A  0101               	movlb	1	; () banked
 13159  00423C  6F18               	movwf	_RPS_C& (0+255),b
 13160  00423E  C001  F119         	movff	??_TMR0_isr,_RPS_C+1
 13161                           
 13162                           ;main.c: 265: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 13163  004242  0E0B               	movlw	11
 13164  004244  6ED7               	movwf	4055,c	;volatile
 13165                           
 13166                           ;main.c: 266: TMR0L = (unsigned char) (3036 & 0x00FF);
 13167  004246  0EDC               	movlw	220
 13168  004248  6ED6               	movwf	4054,c	;volatile
 13169                           
 13170                           ;main.c: 267: TMR1H = 0;
 13171  00424A  0E00               	movlw	0
 13172  00424C  6ECF               	movwf	4047,c	;volatile
 13173                           
 13174                           ;main.c: 268: TMR1L = 0;
 13175  00424E  0E00               	movlw	0
 13176  004250  6ECE               	movwf	4046,c	;volatile
 13177                           
 13178                           ; BSR set to: 1
 13179  004252  0012               	return		;funcret
 13180  004254                     __end_of_TMR0_isr:
 13181                           	opt stack 0
 13182                           pclatu	equ	0xFFB
 13183                           pclath	equ	0xFFA
 13184                           tblptru	equ	0xFF8
 13185                           tblptrh	equ	0xFF7
 13186                           tblptrl	equ	0xFF6
 13187                           tablat	equ	0xFF5
 13188                           prodh	equ	0xFF4
 13189                           prodl	equ	0xFF3
 13190                           intcon	equ	0xFF2
 13191                           intcon2	equ	0xFF1
 13192                           intcon3	equ	0xFF0
 13193                           postinc0	equ	0xFEE
 13194                           fsr0h	equ	0xFEA
 13195                           fsr0l	equ	0xFE9
 13196                           wreg	equ	0xFE8
 13197                           indf1	equ	0xFE7
 13198                           postdec1	equ	0xFE5
 13199                           fsr1h	equ	0xFE2
 13200                           fsr1l	equ	0xFE1
 13201                           indf2	equ	0xFDF
 13202                           postinc2	equ	0xFDE
 13203                           postdec2	equ	0xFDD
 13204                           fsr2h	equ	0xFDA
 13205                           fsr2l	equ	0xFD9
 13206                           status	equ	0xFD8
 13207                           
 13208 ;; *************** function _RC_isr *****************
 13209 ;; Defined at:
 13210 ;;		line 186 in file "main.c"
 13211 ;; Parameters:    Size  Location     Type
 13212 ;;		None
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;		None
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  1    wreg      void 
 13217 ;; Registers used:
 13218 ;;		None
 13219 ;; Tracked objects:
 13220 ;;		On entry : 0/0
 13221 ;;		On exit  : 0/0
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13228 ;;Total ram usage:        0 bytes
 13229 ;; Hardware stack levels used:    1
 13230 ;; This function calls:
 13231 ;;		Nothing
 13232 ;; This function is called by:
 13233 ;;		_highIsr
 13234 ;; This function uses a non-reentrant model
 13235 ;;
 13236                           
 13237                           	psect	text48
 13238  004298                     __ptext48:
 13239                           	opt stack 0
 13240  004298                     _RC_isr:
 13241                           	opt stack 22
 13242                           
 13243                           ;main.c: 188: if (RCSTAbits.FERR || RCSTAbits.OERR)
 13244                           
 13245                           ; BSR set to: 1
 13246                           ;incstack = 0
 13247  004298  B4AB               	btfsc	4011,2,c	;volatile
 13248  00429A  D002               	goto	i2l340
 13249  00429C  A2AB               	btfss	4011,1,c	;volatile
 13250  00429E  D003               	goto	i2l338
 13251  0042A0                     i2l340:
 13252                           
 13253                           ;main.c: 189: {
 13254                           ;main.c: 190: RCSTAbits.CREN = 0;
 13255  0042A0  98AB               	bcf	4011,4,c	;volatile
 13256                           
 13257                           ;main.c: 191: RCSTAbits.CREN = 1;
 13258  0042A2  88AB               	bsf	4011,4,c	;volatile
 13259                           
 13260                           ;main.c: 192: }else
 13261  0042A4  0012               	return	
 13262  0042A6                     i2l338:
 13263                           
 13264                           ;main.c: 193: Received = RCREG;
 13265  0042A6  CFAE F1D4          	movff	4014,_Received	;volatile
 13266  0042AA  0012               	return	
 13267  0042AC                     __end_of_RC_isr:
 13268                           	opt stack 0
 13269                           pclatu	equ	0xFFB
 13270                           pclath	equ	0xFFA
 13271                           tblptru	equ	0xFF8
 13272                           tblptrh	equ	0xFF7
 13273                           tblptrl	equ	0xFF6
 13274                           tablat	equ	0xFF5
 13275                           prodh	equ	0xFF4
 13276                           prodl	equ	0xFF3
 13277                           intcon	equ	0xFF2
 13278                           intcon2	equ	0xFF1
 13279                           intcon3	equ	0xFF0
 13280                           postinc0	equ	0xFEE
 13281                           fsr0h	equ	0xFEA
 13282                           fsr0l	equ	0xFE9
 13283                           wreg	equ	0xFE8
 13284                           indf1	equ	0xFE7
 13285                           postdec1	equ	0xFE5
 13286                           fsr1h	equ	0xFE2
 13287                           fsr1l	equ	0xFE1
 13288                           indf2	equ	0xFDF
 13289                           postinc2	equ	0xFDE
 13290                           postdec2	equ	0xFDD
 13291                           fsr2h	equ	0xFDA
 13292                           fsr2l	equ	0xFD9
 13293                           status	equ	0xFD8
 13294                           
 13295 ;; *************** function _EXT_Int2_isr *****************
 13296 ;; Defined at:
 13297 ;;		line 317 in file "main.c"
 13298 ;; Parameters:    Size  Location     Type
 13299 ;;		None
 13300 ;; Auto vars:     Size  Location     Type
 13301 ;;		None
 13302 ;; Return value:  Size  Location     Type
 13303 ;;                  1    wreg      void 
 13304 ;; Registers used:
 13305 ;;		wreg, status,2, status,0
 13306 ;; Tracked objects:
 13307 ;;		On entry : 0/0
 13308 ;;		On exit  : 0/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13315 ;;Total ram usage:        0 bytes
 13316 ;; Hardware stack levels used:    1
 13317 ;; This function calls:
 13318 ;;		Nothing
 13319 ;; This function is called by:
 13320 ;;		_highIsr
 13321 ;; This function uses a non-reentrant model
 13322 ;;
 13323                           
 13324                           	psect	text49
 13325  00395A                     __ptext49:
 13326                           	opt stack 0
 13327  00395A                     _EXT_Int2_isr:
 13328                           	opt stack 22
 13329                           
 13330                           ;main.c: 318: INTCON3bits.INT2F = 0;
 13331                           
 13332                           ;incstack = 0
 13333  00395A  92F0               	bcf	intcon3,1,c	;volatile
 13334                           
 13335                           ;main.c: 319: if (MD == 1) {
 13336  00395C  0101               	movlb	1	; () banked
 13337  00395E  0516               	decf	_MD& (0+255),w,b
 13338  003960  0101               	movlb	1	; () banked
 13339  003962  1117               	iorwf	(_MD+1)& (0+255),w,b
 13340  003964  A4D8               	btfss	status,2,c
 13341  003966  D00F               	goto	i2l4839
 13342                           
 13343                           ; BSR set to: 1
 13344                           ;main.c: 320: if (H < 20) {
 13345  003968  0101               	movlb	1	; () banked
 13346  00396A  BF11               	btfsc	(_H+1)& (0+255),7,b
 13347  00396C  D008               	goto	i2l4837
 13348  00396E  0101               	movlb	1	; () banked
 13349  003970  5111               	movf	(_H+1)& (0+255),w,b
 13350  003972  E135               	bnz	i2l399
 13351  003974  0E14               	movlw	20
 13352  003976  0101               	movlb	1	; () banked
 13353  003978  5D10               	subwf	_H& (0+255),w,b
 13354  00397A  B0D8               	btfsc	status,0,c
 13355  00397C  0012               	return	
 13356  00397E                     i2l4837:
 13357                           
 13358                           ; BSR set to: 1
 13359                           ;main.c: 321: H++;
 13360  00397E  0101               	movlb	1	; () banked
 13361  003980  4B10               	infsnz	_H& (0+255),f,b
 13362  003982  2B11               	incf	(_H+1)& (0+255),f,b
 13363                           
 13364                           ; BSR set to: 1
 13365                           ;main.c: 322: }
 13366                           ;main.c: 323: } else if (MD == 2) {
 13367  003984  0012               	return	
 13368  003986                     i2l4839:
 13369                           
 13370                           ; BSR set to: 1
 13371  003986  0E02               	movlw	2
 13372  003988  0101               	movlb	1	; () banked
 13373  00398A  1916               	xorwf	_MD& (0+255),w,b
 13374  00398C  0101               	movlb	1	; () banked
 13375  00398E  1117               	iorwf	(_MD+1)& (0+255),w,b
 13376  003990  A4D8               	btfss	status,2,c
 13377  003992  D00F               	goto	i2l4845
 13378                           
 13379                           ; BSR set to: 1
 13380                           ;main.c: 324: if (C < 20) {
 13381  003994  0101               	movlb	1	; () banked
 13382  003996  BF0D               	btfsc	(_C+1)& (0+255),7,b
 13383  003998  D008               	goto	i2l4843
 13384  00399A  0101               	movlb	1	; () banked
 13385  00399C  510D               	movf	(_C+1)& (0+255),w,b
 13386  00399E  E11F               	bnz	i2l399
 13387  0039A0  0E14               	movlw	20
 13388  0039A2  0101               	movlb	1	; () banked
 13389  0039A4  5D0C               	subwf	_C& (0+255),w,b
 13390  0039A6  B0D8               	btfsc	status,0,c
 13391  0039A8  0012               	return	
 13392  0039AA                     i2l4843:
 13393                           
 13394                           ; BSR set to: 1
 13395                           ;main.c: 325: C++;
 13396  0039AA  0101               	movlb	1	; () banked
 13397  0039AC  4B0C               	infsnz	_C& (0+255),f,b
 13398  0039AE  2B0D               	incf	(_C+1)& (0+255),f,b
 13399                           
 13400                           ; BSR set to: 1
 13401                           ;main.c: 326: }
 13402                           ;main.c: 327: } else if (MD == 3) {
 13403  0039B0  0012               	return	
 13404  0039B2                     i2l4845:
 13405                           
 13406                           ; BSR set to: 1
 13407  0039B2  0E03               	movlw	3
 13408  0039B4  0101               	movlb	1	; () banked
 13409  0039B6  1916               	xorwf	_MD& (0+255),w,b
 13410  0039B8  0101               	movlb	1	; () banked
 13411  0039BA  1117               	iorwf	(_MD+1)& (0+255),w,b
 13412  0039BC  A4D8               	btfss	status,2,c
 13413  0039BE  0012               	return	
 13414                           
 13415                           ; BSR set to: 1
 13416                           ;main.c: 328: if (HS < 4) {
 13417  0039C0  0101               	movlb	1	; () banked
 13418  0039C2  BF15               	btfsc	(_HS+1)& (0+255),7,b
 13419  0039C4  D008               	goto	i2l4849
 13420  0039C6  0101               	movlb	1	; () banked
 13421  0039C8  5115               	movf	(_HS+1)& (0+255),w,b
 13422  0039CA  E109               	bnz	i2l399
 13423  0039CC  0E04               	movlw	4
 13424  0039CE  0101               	movlb	1	; () banked
 13425  0039D0  5D14               	subwf	_HS& (0+255),w,b
 13426  0039D2  B0D8               	btfsc	status,0,c
 13427  0039D4  0012               	return	
 13428  0039D6                     i2l4849:
 13429                           
 13430                           ; BSR set to: 1
 13431                           ;main.c: 329: HS++;
 13432  0039D6  0101               	movlb	1	; () banked
 13433  0039D8  4B14               	infsnz	_HS& (0+255),f,b
 13434  0039DA  2B15               	incf	(_HS+1)& (0+255),f,b
 13435                           
 13436                           ; BSR set to: 1
 13437                           
 13438                           ; BSR set to: 1
 13439                           
 13440                           ; BSR set to: 1
 13441  0039DC  0012               	return	
 13442  0039DE                     i2l399:
 13443                           
 13444                           ; BSR set to: 1
 13445  0039DE  0012               	return		;funcret
 13446  0039E0                     __end_of_EXT_Int2_isr:
 13447                           	opt stack 0
 13448                           pclatu	equ	0xFFB
 13449                           pclath	equ	0xFFA
 13450                           tblptru	equ	0xFF8
 13451                           tblptrh	equ	0xFF7
 13452                           tblptrl	equ	0xFF6
 13453                           tablat	equ	0xFF5
 13454                           prodh	equ	0xFF4
 13455                           prodl	equ	0xFF3
 13456                           intcon	equ	0xFF2
 13457                           intcon2	equ	0xFF1
 13458                           intcon3	equ	0xFF0
 13459                           postinc0	equ	0xFEE
 13460                           fsr0h	equ	0xFEA
 13461                           fsr0l	equ	0xFE9
 13462                           wreg	equ	0xFE8
 13463                           indf1	equ	0xFE7
 13464                           postdec1	equ	0xFE5
 13465                           fsr1h	equ	0xFE2
 13466                           fsr1l	equ	0xFE1
 13467                           indf2	equ	0xFDF
 13468                           postinc2	equ	0xFDE
 13469                           postdec2	equ	0xFDD
 13470                           fsr2h	equ	0xFDA
 13471                           fsr2l	equ	0xFD9
 13472                           status	equ	0xFD8
 13473                           
 13474 ;; *************** function _EXT_Int1_isr *****************
 13475 ;; Defined at:
 13476 ;;		line 301 in file "main.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;		None
 13479 ;; Auto vars:     Size  Location     Type
 13480 ;;		None
 13481 ;; Return value:  Size  Location     Type
 13482 ;;                  1    wreg      void 
 13483 ;; Registers used:
 13484 ;;		wreg, status,2, status,0
 13485 ;; Tracked objects:
 13486 ;;		On entry : 0/0
 13487 ;;		On exit  : 0/0
 13488 ;;		Unchanged: 0/0
 13489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13494 ;;Total ram usage:        0 bytes
 13495 ;; Hardware stack levels used:    1
 13496 ;; This function calls:
 13497 ;;		Nothing
 13498 ;; This function is called by:
 13499 ;;		_highIsr
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text50
 13504  0039E0                     __ptext50:
 13505                           	opt stack 0
 13506  0039E0                     _EXT_Int1_isr:
 13507                           	opt stack 22
 13508                           
 13509                           ;main.c: 302: INTCON3bits.INT1F = 0;
 13510                           
 13511                           ; BSR set to: 1
 13512                           ;incstack = 0
 13513  0039E0  90F0               	bcf	intcon3,0,c	;volatile
 13514                           
 13515                           ;main.c: 303: if (MD == 1) {
 13516  0039E2  0101               	movlb	1	; () banked
 13517  0039E4  0516               	decf	_MD& (0+255),w,b
 13518  0039E6  0101               	movlb	1	; () banked
 13519  0039E8  1117               	iorwf	(_MD+1)& (0+255),w,b
 13520  0039EA  A4D8               	btfss	status,2,c
 13521  0039EC  D00F               	goto	i2l4859
 13522                           
 13523                           ; BSR set to: 1
 13524                           ;main.c: 304: if (H > 0) {
 13525  0039EE  0101               	movlb	1	; () banked
 13526  0039F0  BF11               	btfsc	(_H+1)& (0+255),7,b
 13527  0039F2  0012               	return	
 13528  0039F4  0101               	movlb	1	; () banked
 13529  0039F6  5111               	movf	(_H+1)& (0+255),w,b
 13530  0039F8  E104               	bnz	i2u538_40
 13531  0039FA  0101               	movlb	1	; () banked
 13532  0039FC  0510               	decf	_H& (0+255),w,b
 13533  0039FE  A0D8               	btfss	status,0,c
 13534  003A00  0012               	return	
 13535  003A02                     i2u538_40:
 13536                           
 13537                           ; BSR set to: 1
 13538                           ;main.c: 305: H--;
 13539  003A02  0101               	movlb	1	; () banked
 13540  003A04  0710               	decf	_H& (0+255),f,b
 13541  003A06  A0D8               	btfss	status,0,c
 13542  003A08  0711               	decf	(_H+1)& (0+255),f,b
 13543                           
 13544                           ; BSR set to: 1
 13545                           ;main.c: 306: }
 13546                           ;main.c: 307: } else if (MD == 2) {
 13547  003A0A  0012               	return	
 13548  003A0C                     i2l4859:
 13549                           
 13550                           ; BSR set to: 1
 13551  003A0C  0E02               	movlw	2
 13552  003A0E  0101               	movlb	1	; () banked
 13553  003A10  1916               	xorwf	_MD& (0+255),w,b
 13554  003A12  0101               	movlb	1	; () banked
 13555  003A14  1117               	iorwf	(_MD+1)& (0+255),w,b
 13556  003A16  A4D8               	btfss	status,2,c
 13557  003A18  D00F               	goto	i2l4865
 13558                           
 13559                           ; BSR set to: 1
 13560                           ;main.c: 308: if (C > 0) {
 13561  003A1A  0101               	movlb	1	; () banked
 13562  003A1C  BF0D               	btfsc	(_C+1)& (0+255),7,b
 13563  003A1E  0012               	return	
 13564  003A20  0101               	movlb	1	; () banked
 13565  003A22  510D               	movf	(_C+1)& (0+255),w,b
 13566  003A24  E104               	bnz	i2u540_40
 13567  003A26  0101               	movlb	1	; () banked
 13568  003A28  050C               	decf	_C& (0+255),w,b
 13569  003A2A  A0D8               	btfss	status,0,c
 13570  003A2C  0012               	return	
 13571  003A2E                     i2u540_40:
 13572                           
 13573                           ; BSR set to: 1
 13574                           ;main.c: 309: C--;
 13575  003A2E  0101               	movlb	1	; () banked
 13576  003A30  070C               	decf	_C& (0+255),f,b
 13577  003A32  A0D8               	btfss	status,0,c
 13578  003A34  070D               	decf	(_C+1)& (0+255),f,b
 13579                           
 13580                           ; BSR set to: 1
 13581                           ;main.c: 310: }
 13582                           ;main.c: 311: } else if (MD == 3) {
 13583  003A36  0012               	return	
 13584  003A38                     i2l4865:
 13585                           
 13586                           ; BSR set to: 1
 13587  003A38  0E03               	movlw	3
 13588  003A3A  0101               	movlb	1	; () banked
 13589  003A3C  1916               	xorwf	_MD& (0+255),w,b
 13590  003A3E  0101               	movlb	1	; () banked
 13591  003A40  1117               	iorwf	(_MD+1)& (0+255),w,b
 13592  003A42  A4D8               	btfss	status,2,c
 13593  003A44  0012               	return	
 13594                           
 13595                           ; BSR set to: 1
 13596                           ;main.c: 312: if (HS > 0) {
 13597  003A46  0101               	movlb	1	; () banked
 13598  003A48  BF15               	btfsc	(_HS+1)& (0+255),7,b
 13599  003A4A  0012               	return	
 13600  003A4C  0101               	movlb	1	; () banked
 13601  003A4E  5115               	movf	(_HS+1)& (0+255),w,b
 13602  003A50  E104               	bnz	i2u542_40
 13603  003A52  0101               	movlb	1	; () banked
 13604  003A54  0514               	decf	_HS& (0+255),w,b
 13605  003A56  A0D8               	btfss	status,0,c
 13606  003A58  0012               	return	
 13607  003A5A                     i2u542_40:
 13608                           
 13609                           ; BSR set to: 1
 13610                           ;main.c: 313: HS--;
 13611  003A5A  0101               	movlb	1	; () banked
 13612  003A5C  0714               	decf	_HS& (0+255),f,b
 13613  003A5E  A0D8               	btfss	status,0,c
 13614  003A60  0715               	decf	(_HS+1)& (0+255),f,b
 13615                           
 13616                           ; BSR set to: 1
 13617                           
 13618                           ; BSR set to: 1
 13619                           
 13620                           ; BSR set to: 1
 13621  003A62  0012               	return	
 13622  003A64                     __end_of_EXT_Int1_isr:
 13623                           	opt stack 0
 13624                           pclatu	equ	0xFFB
 13625                           pclath	equ	0xFFA
 13626                           tblptru	equ	0xFF8
 13627                           tblptrh	equ	0xFF7
 13628                           tblptrl	equ	0xFF6
 13629                           tablat	equ	0xFF5
 13630                           prodh	equ	0xFF4
 13631                           prodl	equ	0xFF3
 13632                           intcon	equ	0xFF2
 13633                           intcon2	equ	0xFF1
 13634                           intcon3	equ	0xFF0
 13635                           postinc0	equ	0xFEE
 13636                           fsr0h	equ	0xFEA
 13637                           fsr0l	equ	0xFE9
 13638                           wreg	equ	0xFE8
 13639                           indf1	equ	0xFE7
 13640                           postdec1	equ	0xFE5
 13641                           fsr1h	equ	0xFE2
 13642                           fsr1l	equ	0xFE1
 13643                           indf2	equ	0xFDF
 13644                           postinc2	equ	0xFDE
 13645                           postdec2	equ	0xFDD
 13646                           fsr2h	equ	0xFDA
 13647                           fsr2l	equ	0xFD9
 13648                           status	equ	0xFD8
 13649                           
 13650 ;; *************** function _EXT_Int0_isr *****************
 13651 ;; Defined at:
 13652 ;;		line 286 in file "main.c"
 13653 ;; Parameters:    Size  Location     Type
 13654 ;;		None
 13655 ;; Auto vars:     Size  Location     Type
 13656 ;;		None
 13657 ;; Return value:  Size  Location     Type
 13658 ;;                  1    wreg      void 
 13659 ;; Registers used:
 13660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13661 ;; Tracked objects:
 13662 ;;		On entry : 0/0
 13663 ;;		On exit  : 0/0
 13664 ;;		Unchanged: 0/0
 13665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;Total ram usage:        2 bytes
 13671 ;; Hardware stack levels used:    1
 13672 ;; Hardware stack levels required when called:    3
 13673 ;; This function calls:
 13674 ;;		_TMR3_reset
 13675 ;;		i2_set_pwm1_percent
 13676 ;;		i2_strcpy
 13677 ;; This function is called by:
 13678 ;;		_highIsr
 13679 ;; This function uses a non-reentrant model
 13680 ;;
 13681                           
 13682                           	psect	text51
 13683  002A12                     __ptext51:
 13684                           	opt stack 0
 13685  002A12                     _EXT_Int0_isr:
 13686                           	opt stack 19
 13687                           
 13688                           ;main.c: 287: INTCONbits.INT0F = 0;
 13689                           
 13690                           ; BSR set to: 1
 13691                           ;incstack = 0
 13692  002A12  92F2               	bcf	intcon,1,c	;volatile
 13693                           
 13694                           ;main.c: 288: switch (MD) {
 13695  002A14  D09B               	goto	i2l4825
 13696  002A16                     i2l4767:
 13697                           
 13698                           ;main.c: 290: MD = 1;strcpy(MDS,MD1S);HCstate='H';H=0;C=0;HCP=0;
 13699  002A16  0E00               	movlw	0
 13700  002A18  0101               	movlb	1	; () banked
 13701  002A1A  6F17               	movwf	(_MD+1)& (0+255),b
 13702  002A1C  0E01               	movlw	1
 13703  002A1E  6F16               	movwf	_MD& (0+255),b
 13704                           
 13705                           ; BSR set to: 1
 13706  002A20  0E60               	movlw	low _MDS
 13707  002A22  6E01               	movwf	i2strcpy@to,c
 13708  002A24  0E01               	movlw	high _MDS
 13709  002A26  6E02               	movwf	i2strcpy@to+1,c
 13710  002A28  0E3F               	movlw	low _MD1S
 13711  002A2A  6E03               	movwf	i2strcpy@from,c
 13712  002A2C  0E00               	movlw	high _MD1S
 13713  002A2E  6E04               	movwf	i2strcpy@from+1,c
 13714  002A30  ECA3  F01F         	call	i2_strcpy	;wreg free
 13715  002A34  0E48               	movlw	72
 13716  002A36  0101               	movlb	1	; () banked
 13717  002A38  6FD2               	movwf	_HCstate& (0+255),b
 13718                           
 13719                           ; BSR set to: 1
 13720  002A3A  0E00               	movlw	0
 13721  002A3C  0101               	movlb	1	; () banked
 13722  002A3E  6F11               	movwf	(_H+1)& (0+255),b
 13723  002A40  0E00               	movlw	0
 13724  002A42  6F10               	movwf	_H& (0+255),b
 13725                           
 13726                           ; BSR set to: 1
 13727  002A44  0E00               	movlw	0
 13728  002A46  0101               	movlb	1	; () banked
 13729  002A48  6F0D               	movwf	(_C+1)& (0+255),b
 13730  002A4A  0E00               	movlw	0
 13731  002A4C  6F0C               	movwf	_C& (0+255),b
 13732                           
 13733                           ; BSR set to: 1
 13734  002A4E  0E00               	movlw	0
 13735  002A50  0101               	movlb	1	; () banked
 13736  002A52  6F13               	movwf	(_HCP+1)& (0+255),b
 13737  002A54  0E00               	movlw	0
 13738  002A56  6F12               	movwf	_HCP& (0+255),b
 13739                           
 13740                           ;main.c: 291: break;
 13741  002A58  0012               	return	
 13742  002A5A                     i2l4779:
 13743  002A5A  0E00               	movlw	0
 13744  002A5C  0101               	movlb	1	; () banked
 13745  002A5E  6F17               	movwf	(_MD+1)& (0+255),b
 13746  002A60  0E02               	movlw	2
 13747  002A62  6F16               	movwf	_MD& (0+255),b
 13748                           
 13749                           ; BSR set to: 1
 13750  002A64  0E60               	movlw	low _MDS
 13751  002A66  6E01               	movwf	i2strcpy@to,c
 13752  002A68  0E01               	movlw	high _MDS
 13753  002A6A  6E02               	movwf	i2strcpy@to+1,c
 13754  002A6C  0E50               	movlw	low _MD2S
 13755  002A6E  6E03               	movwf	i2strcpy@from,c
 13756  002A70  0E00               	movlw	high _MD2S
 13757  002A72  6E04               	movwf	i2strcpy@from+1,c
 13758  002A74  ECA3  F01F         	call	i2_strcpy	;wreg free
 13759  002A78  0E43               	movlw	67
 13760  002A7A  0101               	movlb	1	; () banked
 13761  002A7C  6FD2               	movwf	_HCstate& (0+255),b
 13762                           
 13763                           ; BSR set to: 1
 13764  002A7E  0E00               	movlw	0
 13765  002A80  0101               	movlb	1	; () banked
 13766  002A82  6F11               	movwf	(_H+1)& (0+255),b
 13767  002A84  0E00               	movlw	0
 13768  002A86  6F10               	movwf	_H& (0+255),b
 13769                           
 13770                           ; BSR set to: 1
 13771  002A88  0E00               	movlw	0
 13772  002A8A  0101               	movlb	1	; () banked
 13773  002A8C  6F0D               	movwf	(_C+1)& (0+255),b
 13774  002A8E  0E00               	movlw	0
 13775  002A90  6F0C               	movwf	_C& (0+255),b
 13776                           
 13777                           ; BSR set to: 1
 13778  002A92  0E00               	movlw	0
 13779  002A94  0101               	movlb	1	; () banked
 13780  002A96  6F13               	movwf	(_HCP+1)& (0+255),b
 13781  002A98  0E00               	movlw	0
 13782  002A9A  6F12               	movwf	_HCP& (0+255),b
 13783                           
 13784                           ;main.c: 293: break;
 13785  002A9C  0012               	return	
 13786  002A9E                     i2l4791:
 13787  002A9E  0E00               	movlw	0
 13788  002AA0  0101               	movlb	1	; () banked
 13789  002AA2  6F17               	movwf	(_MD+1)& (0+255),b
 13790  002AA4  0E03               	movlw	3
 13791  002AA6  6F16               	movwf	_MD& (0+255),b
 13792                           
 13793                           ; BSR set to: 1
 13794  002AA8  9A82               	bcf	3970,5,c	;volatile
 13795                           
 13796                           ; BSR set to: 1
 13797  002AAA  0E00               	movlw	0
 13798  002AAC  6E27               	movwf	i2set_pwm1_percent@value,c
 13799  002AAE  0E00               	movlw	0
 13800  002AB0  6E28               	movwf	i2set_pwm1_percent@value+1,c
 13801  002AB2  0E00               	movlw	0
 13802  002AB4  6E29               	movwf	i2set_pwm1_percent@value+2,c
 13803  002AB6  EC61  F01C         	call	i2_set_pwm1_percent	;wreg free
 13804  002ABA  EC65  F021         	call	_TMR3_reset	;wreg free
 13805  002ABE  0E60               	movlw	low _MDS
 13806  002AC0  6E01               	movwf	i2strcpy@to,c
 13807  002AC2  0E01               	movlw	high _MDS
 13808  002AC4  6E02               	movwf	i2strcpy@to+1,c
 13809  002AC6  0E61               	movlw	low _MD3S
 13810  002AC8  6E03               	movwf	i2strcpy@from,c
 13811  002ACA  0E00               	movlw	high _MD3S
 13812  002ACC  6E04               	movwf	i2strcpy@from+1,c
 13813  002ACE  ECA3  F01F         	call	i2_strcpy	;wreg free
 13814  002AD2  0E52               	movlw	82
 13815  002AD4  0101               	movlb	1	; () banked
 13816  002AD6  6FD2               	movwf	_HCstate& (0+255),b
 13817                           
 13818                           ; BSR set to: 1
 13819  002AD8  0E00               	movlw	0
 13820  002ADA  0101               	movlb	1	; () banked
 13821  002ADC  6F11               	movwf	(_H+1)& (0+255),b
 13822  002ADE  0E00               	movlw	0
 13823  002AE0  6F10               	movwf	_H& (0+255),b
 13824                           
 13825                           ; BSR set to: 1
 13826  002AE2  0E00               	movlw	0
 13827  002AE4  0101               	movlb	1	; () banked
 13828  002AE6  6F0D               	movwf	(_C+1)& (0+255),b
 13829  002AE8  0E00               	movlw	0
 13830  002AEA  6F0C               	movwf	_C& (0+255),b
 13831                           
 13832                           ; BSR set to: 1
 13833  002AEC  0E00               	movlw	0
 13834  002AEE  0101               	movlb	1	; () banked
 13835  002AF0  6F13               	movwf	(_HCP+1)& (0+255),b
 13836  002AF2  0E00               	movlw	0
 13837  002AF4  6F12               	movwf	_HCP& (0+255),b
 13838                           
 13839                           ;main.c: 295: break;
 13840  002AF6  0012               	return	
 13841  002AF8                     i2l4809:
 13842  002AF8  0E00               	movlw	0
 13843  002AFA  0101               	movlb	1	; () banked
 13844  002AFC  6F17               	movwf	(_MD+1)& (0+255),b
 13845  002AFE  0E01               	movlw	1
 13846  002B00  6F16               	movwf	_MD& (0+255),b
 13847                           
 13848                           ; BSR set to: 1
 13849  002B02  0E60               	movlw	low _MDS
 13850  002B04  6E01               	movwf	i2strcpy@to,c
 13851  002B06  0E01               	movlw	high _MDS
 13852  002B08  6E02               	movwf	i2strcpy@to+1,c
 13853  002B0A  0E3F               	movlw	low _MD1S
 13854  002B0C  6E03               	movwf	i2strcpy@from,c
 13855  002B0E  0E00               	movlw	high _MD1S
 13856  002B10  6E04               	movwf	i2strcpy@from+1,c
 13857  002B12  ECA3  F01F         	call	i2_strcpy	;wreg free
 13858  002B16  0E00               	movlw	0
 13859  002B18  6E27               	movwf	i2set_pwm1_percent@value,c
 13860  002B1A  0E00               	movlw	0
 13861  002B1C  6E28               	movwf	i2set_pwm1_percent@value+1,c
 13862  002B1E  0E00               	movlw	0
 13863  002B20  6E29               	movwf	i2set_pwm1_percent@value+2,c
 13864  002B22  EC61  F01C         	call	i2_set_pwm1_percent	;wreg free
 13865  002B26  0E48               	movlw	72
 13866  002B28  0101               	movlb	1	; () banked
 13867  002B2A  6FD2               	movwf	_HCstate& (0+255),b
 13868                           
 13869                           ; BSR set to: 1
 13870  002B2C  0E00               	movlw	0
 13871  002B2E  0101               	movlb	1	; () banked
 13872  002B30  6F11               	movwf	(_H+1)& (0+255),b
 13873  002B32  0E00               	movlw	0
 13874  002B34  6F10               	movwf	_H& (0+255),b
 13875                           
 13876                           ; BSR set to: 1
 13877  002B36  0E00               	movlw	0
 13878  002B38  0101               	movlb	1	; () banked
 13879  002B3A  6F0D               	movwf	(_C+1)& (0+255),b
 13880  002B3C  0E00               	movlw	0
 13881  002B3E  6F0C               	movwf	_C& (0+255),b
 13882                           
 13883                           ; BSR set to: 1
 13884  002B40  0E00               	movlw	0
 13885  002B42  0101               	movlb	1	; () banked
 13886  002B44  6F13               	movwf	(_HCP+1)& (0+255),b
 13887  002B46  0E00               	movlw	0
 13888  002B48  6F12               	movwf	_HCP& (0+255),b
 13889                           
 13890                           ; BSR set to: 1
 13891                           ;main.c: 299: }
 13892                           
 13893                           ; BSR set to: 1
 13894                           ;main.c: 298: break;
 13895                           
 13896                           ;main.c: 297: default:
 13897  002B4A  0012               	return	
 13898  002B4C                     i2l4825:
 13899  002B4C  C116  F02F         	movff	_MD,??_EXT_Int0_isr
 13900  002B50  C117  F030         	movff	_MD+1,??_EXT_Int0_isr+1
 13901                           
 13902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13903                           ; Switch size 1, requested type "space"
 13904                           ; Number of cases is 1, Range of values is 0 to 0
 13905                           ; switch strategies available:
 13906                           ; Name         Instructions Cycles
 13907                           ; simple_byte            4     3 (average)
 13908                           ;	Chosen strategy is simple_byte
 13909  002B54  5030               	movf	??_EXT_Int0_isr+1,w,c
 13910  002B56  0A00               	xorlw	0	; case 0
 13911  002B58  A4D8               	btfss	status,2,c
 13912  002B5A  0012               	return	
 13913                           
 13914                           ; Switch size 1, requested type "space"
 13915                           ; Number of cases is 4, Range of values is 0 to 3
 13916                           ; switch strategies available:
 13917                           ; Name         Instructions Cycles
 13918                           ; simple_byte           13     7 (average)
 13919                           ;	Chosen strategy is simple_byte
 13920  002B5C  502F               	movf	??_EXT_Int0_isr,w,c
 13921  002B5E  0A00               	xorlw	0	; case 0
 13922  002B60  B4D8               	btfsc	status,2,c
 13923  002B62  D759               	goto	i2l4767
 13924  002B64  0A01               	xorlw	1	; case 1
 13925  002B66  B4D8               	btfsc	status,2,c
 13926  002B68  D778               	goto	i2l4779
 13927  002B6A  0A03               	xorlw	3	; case 2
 13928  002B6C  B4D8               	btfsc	status,2,c
 13929  002B6E  D797               	goto	i2l4791
 13930  002B70  0A01               	xorlw	1	; case 3
 13931  002B72  A4D8               	btfss	status,2,c
 13932  002B74  0012               	return	
 13933  002B76  D7C0               	goto	i2l4809
 13934  002B78                     __end_of_EXT_Int0_isr:
 13935                           	opt stack 0
 13936                           pclatu	equ	0xFFB
 13937                           pclath	equ	0xFFA
 13938                           tblptru	equ	0xFF8
 13939                           tblptrh	equ	0xFF7
 13940                           tblptrl	equ	0xFF6
 13941                           tablat	equ	0xFF5
 13942                           prodh	equ	0xFF4
 13943                           prodl	equ	0xFF3
 13944                           intcon	equ	0xFF2
 13945                           intcon2	equ	0xFF1
 13946                           intcon3	equ	0xFF0
 13947                           postinc0	equ	0xFEE
 13948                           fsr0h	equ	0xFEA
 13949                           fsr0l	equ	0xFE9
 13950                           wreg	equ	0xFE8
 13951                           indf1	equ	0xFE7
 13952                           postdec1	equ	0xFE5
 13953                           fsr1h	equ	0xFE2
 13954                           fsr1l	equ	0xFE1
 13955                           indf2	equ	0xFDF
 13956                           postinc2	equ	0xFDE
 13957                           postdec2	equ	0xFDD
 13958                           fsr2h	equ	0xFDA
 13959                           fsr2l	equ	0xFD9
 13960                           status	equ	0xFD8
 13961                           
 13962 ;; *************** function i2_strcpy *****************
 13963 ;; Defined at:
 13964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\strcpy.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;  to              2    0[COMRAM] PTR unsigned char 
 13967 ;;		 -> print_data@Buffer(64), print_data@CoolerState(6), print_data@HeaterState(6), print_data@MODE(8), 
 13968 ;;		 -> MDS(17), 
 13969 ;;  from            2    2[COMRAM] PTR const unsigned char 
 13970 ;;		 -> STR_18(1), STR_16(7), STR_15(6), STR_14(6), 
 13971 ;;		 -> STR_13(5), STR_12(8), STR_11(5), STR_10(5), 
 13972 ;;		 -> MD3S(17), MD2S(17), MD1S(17), MD0S(17), 
 13973 ;; Auto vars:     Size  Location     Type
 13974 ;;  strcpy          2    4[COMRAM] PTR unsigned char 
 13975 ;;		 -> print_data@Buffer(64), print_data@CoolerState(6), print_data@HeaterState(6), print_data@MODE(8), 
 13976 ;;		 -> MDS(17), 
 13977 ;; Return value:  Size  Location     Type
 13978 ;;                  2    0[COMRAM] PTR unsigned char 
 13979 ;; Registers used:
 13980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13981 ;; Tracked objects:
 13982 ;;		On entry : 0/0
 13983 ;;		On exit  : 0/0
 13984 ;;		Unchanged: 0/0
 13985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13989 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13990 ;;Total ram usage:        6 bytes
 13991 ;; Hardware stack levels used:    1
 13992 ;; This function calls:
 13993 ;;		Nothing
 13994 ;; This function is called by:
 13995 ;;		_EXT_Int0_isr
 13996 ;; This function uses a non-reentrant model
 13997 ;;
 13998                           
 13999                           	psect	text52
 14000  003F46                     __ptext52:
 14001                           	opt stack 0
 14002  003F46                     i2_strcpy:
 14003                           	opt stack 21
 14004                           
 14005                           ;incstack = 0
 14006  003F46  C001  F005         	movff	i2strcpy@to,i2strcpy@cp
 14007  003F4A  C002  F006         	movff	i2strcpy@to+1,i2strcpy@cp+1
 14008  003F4E  D004               	goto	i2l4521
 14009  003F50                     i2l4519:
 14010  003F50  4A05               	infsnz	i2strcpy@cp,f,c
 14011  003F52  2A06               	incf	i2strcpy@cp+1,f,c
 14012  003F54  4A03               	infsnz	i2strcpy@from,f,c
 14013  003F56  2A04               	incf	i2strcpy@from+1,f,c
 14014  003F58                     i2l4521:
 14015  003F58  C003  FFF6         	movff	i2strcpy@from,tblptrl
 14016  003F5C  C004  FFF7         	movff	i2strcpy@from+1,tblptrh
 14017  003F60  0E00               	movlw	low (__mediumconst shr (0+16))
 14018  003F62  6EF8               	movwf	tblptru,c
 14019  003F64  C005  FFD9         	movff	i2strcpy@cp,fsr2l
 14020  003F68  C006  FFDA         	movff	i2strcpy@cp+1,fsr2h
 14021  003F6C  0E0F               	movlw	(high __ramtop+-1)
 14022  003F6E  64F7               	cpfsgt	tblptrh,c
 14023  003F70  D003               	bra	i2u513_47
 14024  003F72  0008               	tblrd		*
 14025  003F74  50F5               	movf	tablat,w,c
 14026  003F76  D005               	bra	i2u513_40
 14027  003F78                     i2u513_47:
 14028  003F78  CFF6 FFE1          	movff	tblptrl,fsr1l
 14029  003F7C  CFF7 FFE2          	movff	tblptrh,fsr1h
 14030  003F80  50E7               	movf	indf1,w,c
 14031  003F82                     i2u513_40:
 14032  003F82  6EDF               	movwf	indf2,c
 14033  003F84  50DF               	movf	indf2,w,c
 14034  003F86  B4D8               	btfsc	status,2,c
 14035  003F88  0012               	return	
 14036  003F8A  D7E2               	goto	i2l4519
 14037  003F8C                     __end_ofi2_strcpy:
 14038                           	opt stack 0
 14039                           pclatu	equ	0xFFB
 14040                           pclath	equ	0xFFA
 14041                           tblptru	equ	0xFF8
 14042                           tblptrh	equ	0xFF7
 14043                           tblptrl	equ	0xFF6
 14044                           tablat	equ	0xFF5
 14045                           prodh	equ	0xFF4
 14046                           prodl	equ	0xFF3
 14047                           intcon	equ	0xFF2
 14048                           intcon2	equ	0xFF1
 14049                           intcon3	equ	0xFF0
 14050                           postinc0	equ	0xFEE
 14051                           fsr0h	equ	0xFEA
 14052                           fsr0l	equ	0xFE9
 14053                           wreg	equ	0xFE8
 14054                           indf1	equ	0xFE7
 14055                           postdec1	equ	0xFE5
 14056                           fsr1h	equ	0xFE2
 14057                           fsr1l	equ	0xFE1
 14058                           indf2	equ	0xFDF
 14059                           postinc2	equ	0xFDE
 14060                           postdec2	equ	0xFDD
 14061                           fsr2h	equ	0xFDA
 14062                           fsr2l	equ	0xFD9
 14063                           status	equ	0xFD8
 14064                           
 14065 ;; *************** function i2_set_pwm1_percent *****************
 14066 ;; Defined at:
 14067 ;;		line 24 in file "my_pwm.c"
 14068 ;; Parameters:    Size  Location     Type
 14069 ;;  value           3   38[COMRAM] float 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;  set_pwm1_per    3   41[COMRAM] float 
 14072 ;;  set_pwm1_per    2   44[COMRAM] int 
 14073 ;; Return value:  Size  Location     Type
 14074 ;;                  1    wreg      void 
 14075 ;; Registers used:
 14076 ;;		wreg, status,2, status,0, cstack
 14077 ;; Tracked objects:
 14078 ;;		On entry : 0/0
 14079 ;;		On exit  : 0/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14082 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14083 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14086 ;;Total ram usage:        8 bytes
 14087 ;; Hardware stack levels used:    1
 14088 ;; Hardware stack levels required when called:    2
 14089 ;; This function calls:
 14090 ;;		i2___ftadd
 14091 ;;		i2___ftdiv
 14092 ;;		i2___ftmul
 14093 ;;		i2___fttol
 14094 ;;		i2_set_pwm1_raw
 14095 ;; This function is called by:
 14096 ;;		_EXT_Int0_isr
 14097 ;; This function uses a non-reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text53
 14101  0038C2                     __ptext53:
 14102                           	opt stack 0
 14103  0038C2                     i2_set_pwm1_percent:
 14104                           	opt stack 19
 14105                           
 14106                           ;my_pwm.c: 26: float tmp = value*1023.0/100.0;
 14107                           
 14108                           ;incstack = 0
 14109  0038C2  0EC0               	movlw	192
 14110  0038C4  6E0C               	movwf	i2___ftmul@f2,c
 14111  0038C6  0E7F               	movlw	127
 14112  0038C8  6E0D               	movwf	i2___ftmul@f2+1,c
 14113  0038CA  0E44               	movlw	68
 14114  0038CC  6E0E               	movwf	i2___ftmul@f2+2,c
 14115  0038CE  C027  F009         	movff	i2set_pwm1_percent@value,i2___ftmul@f1
 14116  0038D2  C028  F00A         	movff	i2set_pwm1_percent@value+1,i2___ftmul@f1+1
 14117  0038D6  C029  F00B         	movff	i2set_pwm1_percent@value+2,i2___ftmul@f1+2
 14118  0038DA  ECB3  F018         	call	i2___ftmul	;wreg free
 14119  0038DE  C009  F018         	movff	?i2___ftmul,i2___ftdiv@f1
 14120  0038E2  C00A  F019         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 14121  0038E6  C00B  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 14122  0038EA  0E00               	movlw	0
 14123  0038EC  6E1B               	movwf	i2___ftdiv@f2,c
 14124  0038EE  0EC8               	movlw	200
 14125  0038F0  6E1C               	movwf	i2___ftdiv@f2+1,c
 14126  0038F2  0E42               	movlw	66
 14127  0038F4  6E1D               	movwf	i2___ftdiv@f2+2,c
 14128  0038F6  EC2D  F019         	call	i2___ftdiv	;wreg free
 14129  0038FA  C018  F02A         	movff	?i2___ftdiv,i2set_pwm1_percent@tmp
 14130  0038FE  C019  F02B         	movff	?i2___ftdiv+1,i2set_pwm1_percent@tmp+1
 14131  003902  C01A  F02C         	movff	?i2___ftdiv+2,i2set_pwm1_percent@tmp+2
 14132                           
 14133                           ;my_pwm.c: 27: int raw_val = (int)(tmp +0.5);
 14134  003906  0E00               	movlw	0
 14135  003908  6E0C               	movwf	i2___ftadd@f2,c
 14136  00390A  0E00               	movlw	0
 14137  00390C  6E0D               	movwf	i2___ftadd@f2+1,c
 14138  00390E  0E3F               	movlw	63
 14139  003910  6E0E               	movwf	i2___ftadd@f2+2,c
 14140  003912  C02A  F009         	movff	i2set_pwm1_percent@tmp,i2___ftadd@f1
 14141  003916  C02B  F00A         	movff	i2set_pwm1_percent@tmp+1,i2___ftadd@f1+1
 14142  00391A  C02C  F00B         	movff	i2set_pwm1_percent@tmp+2,i2___ftadd@f1+2
 14143  00391E  ECA0  F012         	call	i2___ftadd	;wreg free
 14144  003922  C009  F015         	movff	?i2___ftadd,i2___fttol@f1
 14145  003926  C00A  F016         	movff	?i2___ftadd+1,i2___fttol@f1+1
 14146  00392A  C00B  F017         	movff	?i2___ftadd+2,i2___fttol@f1+2
 14147  00392E  EC39  F018         	call	i2___fttol	;wreg free
 14148  003932  C015  F02D         	movff	?i2___fttol,i2set_pwm1_percent@raw_val
 14149  003936  C016  F02E         	movff	?i2___fttol+1,i2set_pwm1_percent@raw_val+1
 14150                           
 14151                           ;my_pwm.c: 28: if ( raw_val> 1023) raw_val = 1023;
 14152  00393A  BE2E               	btfsc	i2set_pwm1_percent@raw_val+1,7,c
 14153  00393C  D007               	goto	i2l4515
 14154  00393E  0E04               	movlw	4
 14155  003940  5C2E               	subwf	i2set_pwm1_percent@raw_val+1,w,c
 14156  003942  A0D8               	btfss	status,0,c
 14157  003944  D003               	goto	i2l4515
 14158  003946  0E03               	movlw	3
 14159  003948  6E2E               	movwf	i2set_pwm1_percent@raw_val+1,c
 14160  00394A  682D               	setf	i2set_pwm1_percent@raw_val,c
 14161  00394C                     i2l4515:
 14162                           
 14163                           ;my_pwm.c: 29: set_pwm1_raw(raw_val);
 14164  00394C  C02D  F001         	movff	i2set_pwm1_percent@raw_val,i2set_pwm1_raw@raw_value
 14165  003950  C02E  F002         	movff	i2set_pwm1_percent@raw_val+1,i2set_pwm1_raw@raw_value+1
 14166  003954  EC8C  F020         	call	i2_set_pwm1_raw	;wreg free
 14167  003958  0012               	return		;funcret
 14168  00395A                     __end_ofi2_set_pwm1_percent:
 14169                           	opt stack 0
 14170                           pclatu	equ	0xFFB
 14171                           pclath	equ	0xFFA
 14172                           tblptru	equ	0xFF8
 14173                           tblptrh	equ	0xFF7
 14174                           tblptrl	equ	0xFF6
 14175                           tablat	equ	0xFF5
 14176                           prodh	equ	0xFF4
 14177                           prodl	equ	0xFF3
 14178                           intcon	equ	0xFF2
 14179                           intcon2	equ	0xFF1
 14180                           intcon3	equ	0xFF0
 14181                           postinc0	equ	0xFEE
 14182                           fsr0h	equ	0xFEA
 14183                           fsr0l	equ	0xFE9
 14184                           wreg	equ	0xFE8
 14185                           indf1	equ	0xFE7
 14186                           postdec1	equ	0xFE5
 14187                           fsr1h	equ	0xFE2
 14188                           fsr1l	equ	0xFE1
 14189                           indf2	equ	0xFDF
 14190                           postinc2	equ	0xFDE
 14191                           postdec2	equ	0xFDD
 14192                           fsr2h	equ	0xFDA
 14193                           fsr2l	equ	0xFD9
 14194                           status	equ	0xFD8
 14195                           
 14196 ;; *************** function i2_set_pwm1_raw *****************
 14197 ;; Defined at:
 14198 ;;		line 16 in file "my_pwm.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;  raw_value       2    0[COMRAM] unsigned int 
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;		None
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  1    wreg      void 
 14205 ;; Registers used:
 14206 ;;		wreg, status,2, status,0
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14215 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14216 ;;Total ram usage:        4 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; This function calls:
 14219 ;;		Nothing
 14220 ;; This function is called by:
 14221 ;;		i2_set_pwm1_percent
 14222 ;; This function uses a non-reentrant model
 14223 ;;
 14224                           
 14225                           	psect	text54
 14226  004118                     __ptext54:
 14227                           	opt stack 0
 14228  004118                     i2_set_pwm1_raw:
 14229                           	opt stack 20
 14230                           
 14231                           ;my_pwm.c: 18: CCPR1L = (raw_value >> 2) & 0x00FF;
 14232                           
 14233                           ;incstack = 0
 14234  004118  C001  F003         	movff	i2set_pwm1_raw@raw_value,??i2_set_pwm1_raw
 14235  00411C  C002  F004         	movff	i2set_pwm1_raw@raw_value+1,??i2_set_pwm1_raw+1
 14236  004120  90D8               	bcf	status,0,c
 14237  004122  3204               	rrcf	??i2_set_pwm1_raw+1,f,c
 14238  004124  3203               	rrcf	??i2_set_pwm1_raw,f,c
 14239  004126  90D8               	bcf	status,0,c
 14240  004128  3204               	rrcf	??i2_set_pwm1_raw+1,f,c
 14241  00412A  3203               	rrcf	??i2_set_pwm1_raw,f,c
 14242  00412C  5003               	movf	??i2_set_pwm1_raw,w,c
 14243  00412E  6EBE               	movwf	4030,c	;volatile
 14244                           
 14245                           ;my_pwm.c: 19: CCP1CONbits.DC1B = raw_value & 0x0003;
 14246  004130  C001  F003         	movff	i2set_pwm1_raw@raw_value,??i2_set_pwm1_raw
 14247  004134  0E03               	movlw	3
 14248  004136  1603               	andwf	??i2_set_pwm1_raw,f,c
 14249  004138  3A03               	swapf	??i2_set_pwm1_raw,f,c
 14250  00413A  50BD               	movf	4029,w,c	;volatile
 14251  00413C  1803               	xorwf	??i2_set_pwm1_raw,w,c
 14252  00413E  0BCF               	andlw	-49
 14253  004140  1803               	xorwf	??i2_set_pwm1_raw,w,c
 14254  004142  6EBD               	movwf	4029,c	;volatile
 14255  004144  0012               	return		;funcret
 14256  004146                     __end_ofi2_set_pwm1_raw:
 14257                           	opt stack 0
 14258                           pclatu	equ	0xFFB
 14259                           pclath	equ	0xFFA
 14260                           tblptru	equ	0xFF8
 14261                           tblptrh	equ	0xFF7
 14262                           tblptrl	equ	0xFF6
 14263                           tablat	equ	0xFF5
 14264                           prodh	equ	0xFF4
 14265                           prodl	equ	0xFF3
 14266                           intcon	equ	0xFF2
 14267                           intcon2	equ	0xFF1
 14268                           intcon3	equ	0xFF0
 14269                           postinc0	equ	0xFEE
 14270                           fsr0h	equ	0xFEA
 14271                           fsr0l	equ	0xFE9
 14272                           wreg	equ	0xFE8
 14273                           indf1	equ	0xFE7
 14274                           postdec1	equ	0xFE5
 14275                           fsr1h	equ	0xFE2
 14276                           fsr1l	equ	0xFE1
 14277                           indf2	equ	0xFDF
 14278                           postinc2	equ	0xFDE
 14279                           postdec2	equ	0xFDD
 14280                           fsr2h	equ	0xFDA
 14281                           fsr2l	equ	0xFD9
 14282                           status	equ	0xFD8
 14283                           
 14284 ;; *************** function i2___fttol *****************
 14285 ;; Defined at:
 14286 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
 14287 ;; Parameters:    Size  Location     Type
 14288 ;;  f1              3   20[COMRAM] float 
 14289 ;; Auto vars:     Size  Location     Type
 14290 ;;  __fttol         4   30[COMRAM] unsigned long 
 14291 ;;  __fttol         1   34[COMRAM] unsigned char 
 14292 ;;  __fttol         1   29[COMRAM] unsigned char 
 14293 ;; Return value:  Size  Location     Type
 14294 ;;                  4   20[COMRAM] long 
 14295 ;; Registers used:
 14296 ;;		wreg, status,2, status,0
 14297 ;; Tracked objects:
 14298 ;;		On entry : 0/0
 14299 ;;		On exit  : 0/0
 14300 ;;		Unchanged: 0/0
 14301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14303 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14304 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;Total ram usage:       15 bytes
 14307 ;; Hardware stack levels used:    1
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		i2_set_pwm1_percent
 14312 ;; This function uses a non-reentrant model
 14313 ;;
 14314                           
 14315                           	psect	text55
 14316  003072                     __ptext55:
 14317                           	opt stack 0
 14318  003072                     i2___fttol:
 14319                           	opt stack 20
 14320                           
 14321                           ;incstack = 0
 14322  003072  C017  F019         	movff	i2___fttol@f1+2,??i2___fttol
 14323  003076  6A1A               	clrf	(??i2___fttol+1)& (0+255),c
 14324  003078  6A1B               	clrf	(??i2___fttol+2)& (0+255),c
 14325  00307A  3416               	rlcf	i2___fttol@f1+1,w,c
 14326  00307C  3619               	rlcf	??i2___fttol& (0+255),f,c
 14327  00307E  E301               	bnc	u428_41
 14328  003080  801A               	bsf	(??i2___fttol+1)& (0+255),0,c
 14329  003082                     u428_41:
 14330  003082  5019               	movf	??i2___fttol,w,c
 14331  003084  6E23               	movwf	i2___fttol@exp1,c
 14332  003086  5023               	movf	i2___fttol@exp1,w,c
 14333  003088  A4D8               	btfss	status,2,c
 14334  00308A  D009               	goto	i2l4047
 14335  00308C  0E00               	movlw	0
 14336  00308E  6E15               	movwf	?i2___fttol,c
 14337  003090  0E00               	movlw	0
 14338  003092  6E16               	movwf	?i2___fttol+1,c
 14339  003094  0E00               	movlw	0
 14340  003096  6E17               	movwf	?i2___fttol+2,c
 14341  003098  0E00               	movlw	0
 14342  00309A  6E18               	movwf	?i2___fttol+3,c
 14343  00309C  0012               	return	
 14344  00309E                     i2l4047:
 14345  00309E  0E17               	movlw	23
 14346  0030A0  6E19               	movwf	??i2___fttol& (0+255),c
 14347  0030A2  C015  F01A         	movff	i2___fttol@f1,??i2___fttol+1
 14348  0030A6  C016  F01B         	movff	i2___fttol@f1+1,??i2___fttol+2
 14349  0030AA  C017  F01C         	movff	i2___fttol@f1+2,??i2___fttol+3
 14350  0030AE  2819               	incf	??i2___fttol,w,c
 14351  0030B0  6E1D               	movwf	(??i2___fttol+4)& (0+255),c
 14352  0030B2  D004               	goto	i2u430_40
 14353  0030B4                     i2u430_45:
 14354  0030B4  90D8               	bcf	status,0,c
 14355  0030B6  321C               	rrcf	??i2___fttol+3,f,c
 14356  0030B8  321B               	rrcf	??i2___fttol+2,f,c
 14357  0030BA  321A               	rrcf	??i2___fttol+1,f,c
 14358  0030BC                     i2u430_40:
 14359  0030BC  2E1D               	decfsz	(??i2___fttol+4)& (0+255),f,c
 14360  0030BE  D7FA               	goto	i2u430_45
 14361  0030C0  501A               	movf	??i2___fttol+1,w,c
 14362  0030C2  6E1E               	movwf	i2___fttol@sign1,c
 14363  0030C4  8E16               	bsf	i2___fttol@f1+1,7,c
 14364  0030C6  0EFF               	movlw	255
 14365  0030C8  1615               	andwf	i2___fttol@f1,f,c
 14366  0030CA  0EFF               	movlw	255
 14367  0030CC  1616               	andwf	i2___fttol@f1+1,f,c
 14368  0030CE  0E00               	movlw	0
 14369  0030D0  1617               	andwf	i2___fttol@f1+2,f,c
 14370  0030D2  5015               	movf	i2___fttol@f1,w,c
 14371  0030D4  6E1F               	movwf	i2___fttol@lval,c
 14372  0030D6  5016               	movf	i2___fttol@f1+1,w,c
 14373  0030D8  6E20               	movwf	i2___fttol@lval+1,c
 14374  0030DA  5017               	movf	i2___fttol@f1+2,w,c
 14375  0030DC  6E21               	movwf	i2___fttol@lval+2,c
 14376  0030DE  6A22               	clrf	i2___fttol@lval+3,c
 14377  0030E0  0E8E               	movlw	142
 14378  0030E2  5E23               	subwf	i2___fttol@exp1,f,c
 14379  0030E4  AE23               	btfss	i2___fttol@exp1,7,c
 14380  0030E6  D016               	goto	i2l4069
 14381  0030E8  5023               	movf	i2___fttol@exp1,w,c
 14382  0030EA  0A80               	xorlw	128
 14383  0030EC  0F8F               	addlw	143
 14384  0030EE  B0D8               	btfsc	status,0,c
 14385  0030F0  D009               	goto	i2l4065
 14386  0030F2  0E00               	movlw	0
 14387  0030F4  6E15               	movwf	?i2___fttol,c
 14388  0030F6  0E00               	movlw	0
 14389  0030F8  6E16               	movwf	?i2___fttol+1,c
 14390  0030FA  0E00               	movlw	0
 14391  0030FC  6E17               	movwf	?i2___fttol+2,c
 14392  0030FE  0E00               	movlw	0
 14393  003100  6E18               	movwf	?i2___fttol+3,c
 14394  003102  0012               	return	
 14395  003104                     i2l4065:
 14396  003104  90D8               	bcf	status,0,c
 14397  003106  3222               	rrcf	i2___fttol@lval+3,f,c
 14398  003108  3221               	rrcf	i2___fttol@lval+2,f,c
 14399  00310A  3220               	rrcf	i2___fttol@lval+1,f,c
 14400  00310C  321F               	rrcf	i2___fttol@lval,f,c
 14401  00310E  3E23               	incfsz	i2___fttol@exp1,f,c
 14402  003110  D7F9               	goto	i2l4065
 14403  003112  D015               	goto	i2l4079
 14404  003114                     i2l4069:
 14405  003114  0E17               	movlw	23
 14406  003116  6423               	cpfsgt	i2___fttol@exp1,c
 14407  003118  D00F               	goto	i2l4077
 14408  00311A  0E00               	movlw	0
 14409  00311C  6E15               	movwf	?i2___fttol,c
 14410  00311E  0E00               	movlw	0
 14411  003120  6E16               	movwf	?i2___fttol+1,c
 14412  003122  0E00               	movlw	0
 14413  003124  6E17               	movwf	?i2___fttol+2,c
 14414  003126  0E00               	movlw	0
 14415  003128  6E18               	movwf	?i2___fttol+3,c
 14416  00312A  0012               	return	
 14417  00312C                     i2l4075:
 14418  00312C  90D8               	bcf	status,0,c
 14419  00312E  361F               	rlcf	i2___fttol@lval,f,c
 14420  003130  3620               	rlcf	i2___fttol@lval+1,f,c
 14421  003132  3621               	rlcf	i2___fttol@lval+2,f,c
 14422  003134  3622               	rlcf	i2___fttol@lval+3,f,c
 14423  003136  0623               	decf	i2___fttol@exp1,f,c
 14424  003138                     i2l4077:
 14425  003138  5023               	movf	i2___fttol@exp1,w,c
 14426  00313A  A4D8               	btfss	status,2,c
 14427  00313C  D7F7               	goto	i2l4075
 14428  00313E                     i2l4079:
 14429  00313E  501E               	movf	i2___fttol@sign1,w,c
 14430  003140  B4D8               	btfsc	status,2,c
 14431  003142  D008               	goto	i2l4083
 14432  003144  1E22               	comf	i2___fttol@lval+3,f,c
 14433  003146  1E21               	comf	i2___fttol@lval+2,f,c
 14434  003148  1E20               	comf	i2___fttol@lval+1,f,c
 14435  00314A  6C1F               	negf	i2___fttol@lval,c
 14436  00314C  0E00               	movlw	0
 14437  00314E  2220               	addwfc	i2___fttol@lval+1,f,c
 14438  003150  2221               	addwfc	i2___fttol@lval+2,f,c
 14439  003152  2222               	addwfc	i2___fttol@lval+3,f,c
 14440  003154                     i2l4083:
 14441  003154  C01F  F015         	movff	i2___fttol@lval,?i2___fttol
 14442  003158  C020  F016         	movff	i2___fttol@lval+1,?i2___fttol+1
 14443  00315C  C021  F017         	movff	i2___fttol@lval+2,?i2___fttol+2
 14444  003160  C022  F018         	movff	i2___fttol@lval+3,?i2___fttol+3
 14445  003164  0012               	return	
 14446  003166                     __end_ofi2___fttol:
 14447                           	opt stack 0
 14448                           pclatu	equ	0xFFB
 14449                           pclath	equ	0xFFA
 14450                           tblptru	equ	0xFF8
 14451                           tblptrh	equ	0xFF7
 14452                           tblptrl	equ	0xFF6
 14453                           tablat	equ	0xFF5
 14454                           prodh	equ	0xFF4
 14455                           prodl	equ	0xFF3
 14456                           intcon	equ	0xFF2
 14457                           intcon2	equ	0xFF1
 14458                           intcon3	equ	0xFF0
 14459                           postinc0	equ	0xFEE
 14460                           fsr0h	equ	0xFEA
 14461                           fsr0l	equ	0xFE9
 14462                           wreg	equ	0xFE8
 14463                           indf1	equ	0xFE7
 14464                           postdec1	equ	0xFE5
 14465                           fsr1h	equ	0xFE2
 14466                           fsr1l	equ	0xFE1
 14467                           indf2	equ	0xFDF
 14468                           postinc2	equ	0xFDE
 14469                           postdec2	equ	0xFDD
 14470                           fsr2h	equ	0xFDA
 14471                           fsr2l	equ	0xFD9
 14472                           status	equ	0xFD8
 14473                           
 14474 ;; *************** function i2___ftmul *****************
 14475 ;; Defined at:
 14476 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;  f1              3    8[COMRAM] float 
 14479 ;;  f2              3   11[COMRAM] float 
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;  __ftmul         3   18[COMRAM] unsigned um
 14482 ;;  __ftmul         1   22[COMRAM] unsigned char 
 14483 ;;  __ftmul         1   21[COMRAM] unsigned char 
 14484 ;;  __ftmul         1   17[COMRAM] unsigned char 
 14485 ;; Return value:  Size  Location     Type
 14486 ;;                  3    8[COMRAM] float 
 14487 ;; Registers used:
 14488 ;;		wreg, status,2, status,0, cstack
 14489 ;; Tracked objects:
 14490 ;;		On entry : 0/0
 14491 ;;		On exit  : 0/0
 14492 ;;		Unchanged: 0/0
 14493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14494 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14497 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14498 ;;Total ram usage:       15 bytes
 14499 ;; Hardware stack levels used:    1
 14500 ;; Hardware stack levels required when called:    1
 14501 ;; This function calls:
 14502 ;;		i2___ftpack
 14503 ;; This function is called by:
 14504 ;;		i2_set_pwm1_percent
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           
 14508                           	psect	text56
 14509  003166                     __ptext56:
 14510                           	opt stack 0
 14511  003166                     i2___ftmul:
 14512                           	opt stack 19
 14513                           
 14514                           ;incstack = 0
 14515  003166  C00B  F00F         	movff	i2___ftmul@f1+2,??i2___ftmul
 14516  00316A  6A10               	clrf	(??i2___ftmul+1)& (0+255),c
 14517  00316C  6A11               	clrf	(??i2___ftmul+2)& (0+255),c
 14518  00316E  340A               	rlcf	i2___ftmul@f1+1,w,c
 14519  003170  360F               	rlcf	??i2___ftmul& (0+255),f,c
 14520  003172  E301               	bnc	u422_41
 14521  003174  8010               	bsf	(??i2___ftmul+1)& (0+255),0,c
 14522  003176                     u422_41:
 14523  003176  500F               	movf	??i2___ftmul,w,c
 14524  003178  6E12               	movwf	i2___ftmul@exp,c
 14525  00317A  5012               	movf	i2___ftmul@exp,w,c
 14526  00317C  A4D8               	btfss	status,2,c
 14527  00317E  D007               	goto	i2l3999
 14528  003180  0E00               	movlw	0
 14529  003182  6E09               	movwf	?i2___ftmul,c
 14530  003184  0E00               	movlw	0
 14531  003186  6E0A               	movwf	?i2___ftmul+1,c
 14532  003188  0E00               	movlw	0
 14533  00318A  6E0B               	movwf	?i2___ftmul+2,c
 14534  00318C  0012               	return	
 14535  00318E                     i2l3999:
 14536  00318E  C00E  F00F         	movff	i2___ftmul@f2+2,??i2___ftmul
 14537  003192  6A10               	clrf	(??i2___ftmul+1)& (0+255),c
 14538  003194  6A11               	clrf	(??i2___ftmul+2)& (0+255),c
 14539  003196  340D               	rlcf	i2___ftmul@f2+1,w,c
 14540  003198  360F               	rlcf	??i2___ftmul& (0+255),f,c
 14541  00319A  E301               	bnc	u424_41
 14542  00319C  8010               	bsf	(??i2___ftmul+1)& (0+255),0,c
 14543  00319E                     u424_41:
 14544  00319E  500F               	movf	??i2___ftmul,w,c
 14545  0031A0  6E17               	movwf	i2___ftmul@sign,c
 14546  0031A2  5017               	movf	i2___ftmul@sign,w,c
 14547  0031A4  A4D8               	btfss	status,2,c
 14548  0031A6  D007               	goto	i2l4005
 14549  0031A8  0E00               	movlw	0
 14550  0031AA  6E09               	movwf	?i2___ftmul,c
 14551  0031AC  0E00               	movlw	0
 14552  0031AE  6E0A               	movwf	?i2___ftmul+1,c
 14553  0031B0  0E00               	movlw	0
 14554  0031B2  6E0B               	movwf	?i2___ftmul+2,c
 14555  0031B4  0012               	return	
 14556  0031B6                     i2l4005:
 14557  0031B6  5017               	movf	i2___ftmul@sign,w,c
 14558  0031B8  0F7B               	addlw	123
 14559  0031BA  2612               	addwf	i2___ftmul@exp,f,c
 14560  0031BC  C00B  F017         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 14561  0031C0  500E               	movf	i2___ftmul@f2+2,w,c
 14562  0031C2  1A17               	xorwf	i2___ftmul@sign,f,c
 14563  0031C4  0E80               	movlw	128
 14564  0031C6  1617               	andwf	i2___ftmul@sign,f,c
 14565  0031C8  8E0A               	bsf	i2___ftmul@f1+1,7,c
 14566  0031CA  8E0D               	bsf	i2___ftmul@f2+1,7,c
 14567  0031CC  0EFF               	movlw	255
 14568  0031CE  160C               	andwf	i2___ftmul@f2,f,c
 14569  0031D0  0EFF               	movlw	255
 14570  0031D2  160D               	andwf	i2___ftmul@f2+1,f,c
 14571  0031D4  0E00               	movlw	0
 14572  0031D6  160E               	andwf	i2___ftmul@f2+2,f,c
 14573  0031D8  0E00               	movlw	0
 14574  0031DA  6E13               	movwf	i2___ftmul@f3_as_product,c
 14575  0031DC  0E00               	movlw	0
 14576  0031DE  6E14               	movwf	i2___ftmul@f3_as_product+1,c
 14577  0031E0  0E00               	movlw	0
 14578  0031E2  6E15               	movwf	i2___ftmul@f3_as_product+2,c
 14579  0031E4  0E07               	movlw	7
 14580  0031E6  6E16               	movwf	i2___ftmul@cntr,c
 14581  0031E8                     i2l4019:
 14582  0031E8  A009               	btfss	i2___ftmul@f1,0,c
 14583  0031EA  D006               	goto	i2l4023
 14584  0031EC  500C               	movf	i2___ftmul@f2,w,c
 14585  0031EE  2613               	addwf	i2___ftmul@f3_as_product,f,c
 14586  0031F0  500D               	movf	i2___ftmul@f2+1,w,c
 14587  0031F2  2214               	addwfc	i2___ftmul@f3_as_product+1,f,c
 14588  0031F4  500E               	movf	i2___ftmul@f2+2,w,c
 14589  0031F6  2215               	addwfc	i2___ftmul@f3_as_product+2,f,c
 14590  0031F8                     i2l4023:
 14591  0031F8  90D8               	bcf	status,0,c
 14592  0031FA  320B               	rrcf	i2___ftmul@f1+2,f,c
 14593  0031FC  320A               	rrcf	i2___ftmul@f1+1,f,c
 14594  0031FE  3209               	rrcf	i2___ftmul@f1,f,c
 14595  003200  90D8               	bcf	status,0,c
 14596  003202  360C               	rlcf	i2___ftmul@f2,f,c
 14597  003204  360D               	rlcf	i2___ftmul@f2+1,f,c
 14598  003206  360E               	rlcf	i2___ftmul@f2+2,f,c
 14599  003208  2E16               	decfsz	i2___ftmul@cntr,f,c
 14600  00320A  D7EE               	goto	i2l4019
 14601  00320C  0E09               	movlw	9
 14602  00320E  6E16               	movwf	i2___ftmul@cntr,c
 14603  003210                     i2l4029:
 14604  003210  A009               	btfss	i2___ftmul@f1,0,c
 14605  003212  D006               	goto	i2l4033
 14606  003214  500C               	movf	i2___ftmul@f2,w,c
 14607  003216  2613               	addwf	i2___ftmul@f3_as_product,f,c
 14608  003218  500D               	movf	i2___ftmul@f2+1,w,c
 14609  00321A  2214               	addwfc	i2___ftmul@f3_as_product+1,f,c
 14610  00321C  500E               	movf	i2___ftmul@f2+2,w,c
 14611  00321E  2215               	addwfc	i2___ftmul@f3_as_product+2,f,c
 14612  003220                     i2l4033:
 14613  003220  90D8               	bcf	status,0,c
 14614  003222  320B               	rrcf	i2___ftmul@f1+2,f,c
 14615  003224  320A               	rrcf	i2___ftmul@f1+1,f,c
 14616  003226  3209               	rrcf	i2___ftmul@f1,f,c
 14617  003228  90D8               	bcf	status,0,c
 14618  00322A  3215               	rrcf	i2___ftmul@f3_as_product+2,f,c
 14619  00322C  3214               	rrcf	i2___ftmul@f3_as_product+1,f,c
 14620  00322E  3213               	rrcf	i2___ftmul@f3_as_product,f,c
 14621  003230  2E16               	decfsz	i2___ftmul@cntr,f,c
 14622  003232  D7EE               	goto	i2l4029
 14623  003234  C013  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 14624  003238  C014  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 14625  00323C  C015  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 14626  003240  C012  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 14627  003244  C017  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 14628  003248  EC19  F01B         	call	i2___ftpack	;wreg free
 14629  00324C  C001  F009         	movff	?i2___ftpack,?i2___ftmul
 14630  003250  C002  F00A         	movff	?i2___ftpack+1,?i2___ftmul+1
 14631  003254  C003  F00B         	movff	?i2___ftpack+2,?i2___ftmul+2
 14632  003258  0012               	return	
 14633  00325A                     __end_ofi2___ftmul:
 14634                           	opt stack 0
 14635                           pclatu	equ	0xFFB
 14636                           pclath	equ	0xFFA
 14637                           tblptru	equ	0xFF8
 14638                           tblptrh	equ	0xFF7
 14639                           tblptrl	equ	0xFF6
 14640                           tablat	equ	0xFF5
 14641                           prodh	equ	0xFF4
 14642                           prodl	equ	0xFF3
 14643                           intcon	equ	0xFF2
 14644                           intcon2	equ	0xFF1
 14645                           intcon3	equ	0xFF0
 14646                           postinc0	equ	0xFEE
 14647                           fsr0h	equ	0xFEA
 14648                           fsr0l	equ	0xFE9
 14649                           wreg	equ	0xFE8
 14650                           indf1	equ	0xFE7
 14651                           postdec1	equ	0xFE5
 14652                           fsr1h	equ	0xFE2
 14653                           fsr1l	equ	0xFE1
 14654                           indf2	equ	0xFDF
 14655                           postinc2	equ	0xFDE
 14656                           postdec2	equ	0xFDD
 14657                           fsr2h	equ	0xFDA
 14658                           fsr2l	equ	0xFD9
 14659                           status	equ	0xFD8
 14660                           
 14661 ;; *************** function i2___ftdiv *****************
 14662 ;; Defined at:
 14663 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;  f1              3   23[COMRAM] float 
 14666 ;;  f2              3   26[COMRAM] float 
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;  __ftdiv         3   33[COMRAM] float 
 14669 ;;  __ftdiv         1   37[COMRAM] unsigned char 
 14670 ;;  __ftdiv         1   36[COMRAM] unsigned char 
 14671 ;;  __ftdiv         1   32[COMRAM] unsigned char 
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  3   23[COMRAM] float 
 14674 ;; Registers used:
 14675 ;;		wreg, status,2, status,0, cstack
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14681 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14682 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14683 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14684 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14685 ;;Total ram usage:       15 bytes
 14686 ;; Hardware stack levels used:    1
 14687 ;; Hardware stack levels required when called:    1
 14688 ;; This function calls:
 14689 ;;		i2___ftpack
 14690 ;; This function is called by:
 14691 ;;		i2_set_pwm1_percent
 14692 ;; This function uses a non-reentrant model
 14693 ;;
 14694                           
 14695                           	psect	text57
 14696  00325A                     __ptext57:
 14697                           	opt stack 0
 14698  00325A                     i2___ftdiv:
 14699                           	opt stack 19
 14700                           
 14701                           ;incstack = 0
 14702  00325A  C01A  F01E         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 14703  00325E  6A1F               	clrf	(??i2___ftdiv+1)& (0+255),c
 14704  003260  6A20               	clrf	(??i2___ftdiv+2)& (0+255),c
 14705  003262  3419               	rlcf	i2___ftdiv@f1+1,w,c
 14706  003264  361E               	rlcf	??i2___ftdiv& (0+255),f,c
 14707  003266  E301               	bnc	u417_41
 14708  003268  801F               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 14709  00326A                     u417_41:
 14710  00326A  501E               	movf	??i2___ftdiv,w,c
 14711  00326C  6E25               	movwf	i2___ftdiv@exp,c
 14712  00326E  5025               	movf	i2___ftdiv@exp,w,c
 14713  003270  A4D8               	btfss	status,2,c
 14714  003272  D007               	goto	i2l3953
 14715  003274  0E00               	movlw	0
 14716  003276  6E18               	movwf	?i2___ftdiv,c
 14717  003278  0E00               	movlw	0
 14718  00327A  6E19               	movwf	?i2___ftdiv+1,c
 14719  00327C  0E00               	movlw	0
 14720  00327E  6E1A               	movwf	?i2___ftdiv+2,c
 14721  003280  0012               	return	
 14722  003282                     i2l3953:
 14723  003282  C01D  F01E         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 14724  003286  6A1F               	clrf	(??i2___ftdiv+1)& (0+255),c
 14725  003288  6A20               	clrf	(??i2___ftdiv+2)& (0+255),c
 14726  00328A  341C               	rlcf	i2___ftdiv@f2+1,w,c
 14727  00328C  361E               	rlcf	??i2___ftdiv& (0+255),f,c
 14728  00328E  E301               	bnc	u419_41
 14729  003290  801F               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 14730  003292                     u419_41:
 14731  003292  501E               	movf	??i2___ftdiv,w,c
 14732  003294  6E26               	movwf	i2___ftdiv@sign,c
 14733  003296  5026               	movf	i2___ftdiv@sign,w,c
 14734  003298  A4D8               	btfss	status,2,c
 14735  00329A  D007               	goto	i2l3959
 14736  00329C  0E00               	movlw	0
 14737  00329E  6E18               	movwf	?i2___ftdiv,c
 14738  0032A0  0E00               	movlw	0
 14739  0032A2  6E19               	movwf	?i2___ftdiv+1,c
 14740  0032A4  0E00               	movlw	0
 14741  0032A6  6E1A               	movwf	?i2___ftdiv+2,c
 14742  0032A8  0012               	return	
 14743  0032AA                     i2l3959:
 14744  0032AA  0E00               	movlw	0
 14745  0032AC  6E22               	movwf	i2___ftdiv@f3,c
 14746  0032AE  0E00               	movlw	0
 14747  0032B0  6E23               	movwf	i2___ftdiv@f3+1,c
 14748  0032B2  0E00               	movlw	0
 14749  0032B4  6E24               	movwf	i2___ftdiv@f3+2,c
 14750  0032B6  5026               	movf	i2___ftdiv@sign,w,c
 14751  0032B8  0F89               	addlw	137
 14752  0032BA  5E25               	subwf	i2___ftdiv@exp,f,c
 14753  0032BC  C01A  F026         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 14754  0032C0  501D               	movf	i2___ftdiv@f2+2,w,c
 14755  0032C2  1A26               	xorwf	i2___ftdiv@sign,f,c
 14756  0032C4  0E80               	movlw	128
 14757  0032C6  1626               	andwf	i2___ftdiv@sign,f,c
 14758  0032C8  8E19               	bsf	i2___ftdiv@f1+1,7,c
 14759  0032CA  0EFF               	movlw	255
 14760  0032CC  1618               	andwf	i2___ftdiv@f1,f,c
 14761  0032CE  0EFF               	movlw	255
 14762  0032D0  1619               	andwf	i2___ftdiv@f1+1,f,c
 14763  0032D2  0E00               	movlw	0
 14764  0032D4  161A               	andwf	i2___ftdiv@f1+2,f,c
 14765  0032D6  8E1C               	bsf	i2___ftdiv@f2+1,7,c
 14766  0032D8  0EFF               	movlw	255
 14767  0032DA  161B               	andwf	i2___ftdiv@f2,f,c
 14768  0032DC  0EFF               	movlw	255
 14769  0032DE  161C               	andwf	i2___ftdiv@f2+1,f,c
 14770  0032E0  0E00               	movlw	0
 14771  0032E2  161D               	andwf	i2___ftdiv@f2+2,f,c
 14772  0032E4  0E18               	movlw	24
 14773  0032E6  6E21               	movwf	i2___ftdiv@cntr,c
 14774  0032E8                     i2l3979:
 14775  0032E8  90D8               	bcf	status,0,c
 14776  0032EA  3622               	rlcf	i2___ftdiv@f3,f,c
 14777  0032EC  3623               	rlcf	i2___ftdiv@f3+1,f,c
 14778  0032EE  3624               	rlcf	i2___ftdiv@f3+2,f,c
 14779  0032F0  501B               	movf	i2___ftdiv@f2,w,c
 14780  0032F2  5C18               	subwf	i2___ftdiv@f1,w,c
 14781  0032F4  501C               	movf	i2___ftdiv@f2+1,w,c
 14782  0032F6  5819               	subwfb	i2___ftdiv@f1+1,w,c
 14783  0032F8  501D               	movf	i2___ftdiv@f2+2,w,c
 14784  0032FA  581A               	subwfb	i2___ftdiv@f1+2,w,c
 14785  0032FC  A0D8               	btfss	status,0,c
 14786  0032FE  D007               	goto	i2l894
 14787  003300  501B               	movf	i2___ftdiv@f2,w,c
 14788  003302  5E18               	subwf	i2___ftdiv@f1,f,c
 14789  003304  501C               	movf	i2___ftdiv@f2+1,w,c
 14790  003306  5A19               	subwfb	i2___ftdiv@f1+1,f,c
 14791  003308  501D               	movf	i2___ftdiv@f2+2,w,c
 14792  00330A  5A1A               	subwfb	i2___ftdiv@f1+2,f,c
 14793  00330C  8022               	bsf	i2___ftdiv@f3,0,c
 14794  00330E                     i2l894:
 14795  00330E  90D8               	bcf	status,0,c
 14796  003310  3618               	rlcf	i2___ftdiv@f1,f,c
 14797  003312  3619               	rlcf	i2___ftdiv@f1+1,f,c
 14798  003314  361A               	rlcf	i2___ftdiv@f1+2,f,c
 14799  003316  2E21               	decfsz	i2___ftdiv@cntr,f,c
 14800  003318  D7E7               	goto	i2l3979
 14801  00331A  C022  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 14802  00331E  C023  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 14803  003322  C024  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 14804  003326  C025  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 14805  00332A  C026  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 14806  00332E  EC19  F01B         	call	i2___ftpack	;wreg free
 14807  003332  C001  F018         	movff	?i2___ftpack,?i2___ftdiv
 14808  003336  C002  F019         	movff	?i2___ftpack+1,?i2___ftdiv+1
 14809  00333A  C003  F01A         	movff	?i2___ftpack+2,?i2___ftdiv+2
 14810  00333E  0012               	return	
 14811  003340                     __end_ofi2___ftdiv:
 14812                           	opt stack 0
 14813                           pclatu	equ	0xFFB
 14814                           pclath	equ	0xFFA
 14815                           tblptru	equ	0xFF8
 14816                           tblptrh	equ	0xFF7
 14817                           tblptrl	equ	0xFF6
 14818                           tablat	equ	0xFF5
 14819                           prodh	equ	0xFF4
 14820                           prodl	equ	0xFF3
 14821                           intcon	equ	0xFF2
 14822                           intcon2	equ	0xFF1
 14823                           intcon3	equ	0xFF0
 14824                           postinc0	equ	0xFEE
 14825                           fsr0h	equ	0xFEA
 14826                           fsr0l	equ	0xFE9
 14827                           wreg	equ	0xFE8
 14828                           indf1	equ	0xFE7
 14829                           postdec1	equ	0xFE5
 14830                           fsr1h	equ	0xFE2
 14831                           fsr1l	equ	0xFE1
 14832                           indf2	equ	0xFDF
 14833                           postinc2	equ	0xFDE
 14834                           postdec2	equ	0xFDD
 14835                           fsr2h	equ	0xFDA
 14836                           fsr2l	equ	0xFD9
 14837                           status	equ	0xFD8
 14838                           
 14839 ;; *************** function i2___ftadd *****************
 14840 ;; Defined at:
 14841 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
 14842 ;; Parameters:    Size  Location     Type
 14843 ;;  f1              3    8[COMRAM] float 
 14844 ;;  f2              3   11[COMRAM] float 
 14845 ;; Auto vars:     Size  Location     Type
 14846 ;;  __ftadd         1   19[COMRAM] unsigned char 
 14847 ;;  __ftadd         1   18[COMRAM] unsigned char 
 14848 ;;  __ftadd         1   17[COMRAM] unsigned char 
 14849 ;; Return value:  Size  Location     Type
 14850 ;;                  3    8[COMRAM] float 
 14851 ;; Registers used:
 14852 ;;		wreg, status,2, status,0, cstack
 14853 ;; Tracked objects:
 14854 ;;		On entry : 0/0
 14855 ;;		On exit  : 0/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14858 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14859 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14860 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14861 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14862 ;;Total ram usage:       12 bytes
 14863 ;; Hardware stack levels used:    1
 14864 ;; Hardware stack levels required when called:    1
 14865 ;; This function calls:
 14866 ;;		i2___ftpack
 14867 ;; This function is called by:
 14868 ;;		i2_set_pwm1_percent
 14869 ;; This function uses a non-reentrant model
 14870 ;;
 14871                           
 14872                           	psect	text58
 14873  002540                     __ptext58:
 14874                           	opt stack 0
 14875  002540                     i2___ftadd:
 14876                           	opt stack 19
 14877                           
 14878                           ;incstack = 0
 14879  002540  C00B  F00F         	movff	i2___ftadd@f1+2,??i2___ftadd
 14880  002544  6A10               	clrf	(??i2___ftadd+1)& (0+255),c
 14881  002546  6A11               	clrf	(??i2___ftadd+2)& (0+255),c
 14882  002548  340A               	rlcf	i2___ftadd@f1+1,w,c
 14883  00254A  360F               	rlcf	??i2___ftadd& (0+255),f,c
 14884  00254C  E301               	bnc	u396_41
 14885  00254E  8010               	bsf	(??i2___ftadd+1)& (0+255),0,c
 14886  002550                     u396_41:
 14887  002550  500F               	movf	??i2___ftadd,w,c
 14888  002552  6E14               	movwf	i2___ftadd@exp1,c
 14889  002554  C00E  F00F         	movff	i2___ftadd@f2+2,??i2___ftadd
 14890  002558  6A10               	clrf	(??i2___ftadd+1)& (0+255),c
 14891  00255A  6A11               	clrf	(??i2___ftadd+2)& (0+255),c
 14892  00255C  340D               	rlcf	i2___ftadd@f2+1,w,c
 14893  00255E  360F               	rlcf	??i2___ftadd& (0+255),f,c
 14894  002560  E301               	bnc	u397_41
 14895  002562  8010               	bsf	(??i2___ftadd+1)& (0+255),0,c
 14896  002564                     u397_41:
 14897  002564  500F               	movf	??i2___ftadd,w,c
 14898  002566  6E13               	movwf	i2___ftadd@exp2,c
 14899  002568  5014               	movf	i2___ftadd@exp1,w,c
 14900  00256A  B4D8               	btfsc	status,2,c
 14901  00256C  D00B               	goto	i2l859
 14902  00256E  5013               	movf	i2___ftadd@exp2,w,c
 14903  002570  5C14               	subwf	i2___ftadd@exp1,w,c
 14904  002572  B0D8               	btfsc	status,0,c
 14905  002574  D00E               	goto	i2l3885
 14906  002576  5014               	movf	i2___ftadd@exp1,w,c
 14907  002578  0800               	sublw	0
 14908  00257A  2413               	addwf	i2___ftadd@exp2,w,c
 14909  00257C  6E0F               	movwf	??i2___ftadd& (0+255),c
 14910  00257E  0E18               	movlw	24
 14911  002580  640F               	cpfsgt	??i2___ftadd,c
 14912  002582  D007               	goto	i2l3885
 14913  002584                     i2l859:
 14914  002584  C00C  F009         	movff	i2___ftadd@f2,?i2___ftadd
 14915  002588  C00D  F00A         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 14916  00258C  C00E  F00B         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 14917  002590  0012               	return	
 14918  002592                     i2l3885:
 14919  002592  5013               	movf	i2___ftadd@exp2,w,c
 14920  002594  B4D8               	btfsc	status,2,c
 14921  002596  D00B               	goto	i2l863
 14922  002598  5014               	movf	i2___ftadd@exp1,w,c
 14923  00259A  5C13               	subwf	i2___ftadd@exp2,w,c
 14924  00259C  B0D8               	btfsc	status,0,c
 14925  00259E  D00E               	goto	i2l3891
 14926  0025A0  5013               	movf	i2___ftadd@exp2,w,c
 14927  0025A2  0800               	sublw	0
 14928  0025A4  2414               	addwf	i2___ftadd@exp1,w,c
 14929  0025A6  6E0F               	movwf	??i2___ftadd& (0+255),c
 14930  0025A8  0E18               	movlw	24
 14931  0025AA  640F               	cpfsgt	??i2___ftadd,c
 14932  0025AC  D007               	goto	i2l3891
 14933  0025AE                     i2l863:
 14934  0025AE  C009  F009         	movff	i2___ftadd@f1,?i2___ftadd
 14935  0025B2  C00A  F00A         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 14936  0025B6  C00B  F00B         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 14937  0025BA  0012               	return	
 14938  0025BC                     i2l3891:
 14939  0025BC  0E06               	movlw	6
 14940  0025BE  6E12               	movwf	i2___ftadd@sign,c
 14941  0025C0  BE0B               	btfsc	i2___ftadd@f1+2,7,c
 14942  0025C2  8E12               	bsf	i2___ftadd@sign,7,c
 14943  0025C4  BE0E               	btfsc	i2___ftadd@f2+2,7,c
 14944  0025C6  8C12               	bsf	i2___ftadd@sign,6,c
 14945  0025C8  8E0A               	bsf	i2___ftadd@f1+1,7,c
 14946  0025CA  0EFF               	movlw	255
 14947  0025CC  1609               	andwf	i2___ftadd@f1,f,c
 14948  0025CE  0EFF               	movlw	255
 14949  0025D0  160A               	andwf	i2___ftadd@f1+1,f,c
 14950  0025D2  0E00               	movlw	0
 14951  0025D4  160B               	andwf	i2___ftadd@f1+2,f,c
 14952  0025D6  8E0D               	bsf	i2___ftadd@f2+1,7,c
 14953  0025D8  0EFF               	movlw	255
 14954  0025DA  160C               	andwf	i2___ftadd@f2,f,c
 14955  0025DC  0EFF               	movlw	255
 14956  0025DE  160D               	andwf	i2___ftadd@f2+1,f,c
 14957  0025E0  0E00               	movlw	0
 14958  0025E2  160E               	andwf	i2___ftadd@f2+2,f,c
 14959  0025E4  5013               	movf	i2___ftadd@exp2,w,c
 14960  0025E6  5C14               	subwf	i2___ftadd@exp1,w,c
 14961  0025E8  B0D8               	btfsc	status,0,c
 14962  0025EA  D01B               	goto	i2l3917
 14963  0025EC                     i2l3907:
 14964  0025EC  90D8               	bcf	status,0,c
 14965  0025EE  360C               	rlcf	i2___ftadd@f2,f,c
 14966  0025F0  360D               	rlcf	i2___ftadd@f2+1,f,c
 14967  0025F2  360E               	rlcf	i2___ftadd@f2+2,f,c
 14968  0025F4  0613               	decf	i2___ftadd@exp2,f,c
 14969  0025F6  5014               	movf	i2___ftadd@exp1,w,c
 14970  0025F8  1813               	xorwf	i2___ftadd@exp2,w,c
 14971  0025FA  B4D8               	btfsc	status,2,c
 14972  0025FC  D00D               	goto	i2l3915
 14973  0025FE  0612               	decf	i2___ftadd@sign,f,c
 14974  002600  C012  F00F         	movff	i2___ftadd@sign,??i2___ftadd
 14975  002604  0E07               	movlw	7
 14976  002606  160F               	andwf	??i2___ftadd,f,c
 14977  002608  B4D8               	btfsc	status,2,c
 14978  00260A  D006               	goto	i2l3915
 14979  00260C  D7EF               	goto	i2l3907
 14980  00260E                     i2l3913:
 14981  00260E  90D8               	bcf	status,0,c
 14982  002610  320B               	rrcf	i2___ftadd@f1+2,f,c
 14983  002612  320A               	rrcf	i2___ftadd@f1+1,f,c
 14984  002614  3209               	rrcf	i2___ftadd@f1,f,c
 14985  002616  2A14               	incf	i2___ftadd@exp1,f,c
 14986  002618                     i2l3915:
 14987  002618  5013               	movf	i2___ftadd@exp2,w,c
 14988  00261A  1814               	xorwf	i2___ftadd@exp1,w,c
 14989  00261C  B4D8               	btfsc	status,2,c
 14990  00261E  D01F               	goto	i2l874
 14991  002620  D7F6               	goto	i2l3913
 14992  002622                     i2l3917:
 14993  002622  5014               	movf	i2___ftadd@exp1,w,c
 14994  002624  5C13               	subwf	i2___ftadd@exp2,w,c
 14995  002626  B0D8               	btfsc	status,0,c
 14996  002628  D01A               	goto	i2l874
 14997  00262A                     i2l3919:
 14998  00262A  90D8               	bcf	status,0,c
 14999  00262C  3609               	rlcf	i2___ftadd@f1,f,c
 15000  00262E  360A               	rlcf	i2___ftadd@f1+1,f,c
 15001  002630  360B               	rlcf	i2___ftadd@f1+2,f,c
 15002  002632  0614               	decf	i2___ftadd@exp1,f,c
 15003  002634  5014               	movf	i2___ftadd@exp1,w,c
 15004  002636  1813               	xorwf	i2___ftadd@exp2,w,c
 15005  002638  B4D8               	btfsc	status,2,c
 15006  00263A  D00D               	goto	i2l3927
 15007  00263C  0612               	decf	i2___ftadd@sign,f,c
 15008  00263E  C012  F00F         	movff	i2___ftadd@sign,??i2___ftadd
 15009  002642  0E07               	movlw	7
 15010  002644  160F               	andwf	??i2___ftadd,f,c
 15011  002646  B4D8               	btfsc	status,2,c
 15012  002648  D006               	goto	i2l3927
 15013  00264A  D7EF               	goto	i2l3919
 15014  00264C                     i2l3925:
 15015  00264C  90D8               	bcf	status,0,c
 15016  00264E  320E               	rrcf	i2___ftadd@f2+2,f,c
 15017  002650  320D               	rrcf	i2___ftadd@f2+1,f,c
 15018  002652  320C               	rrcf	i2___ftadd@f2,f,c
 15019  002654  2A13               	incf	i2___ftadd@exp2,f,c
 15020  002656                     i2l3927:
 15021  002656  5013               	movf	i2___ftadd@exp2,w,c
 15022  002658  1814               	xorwf	i2___ftadd@exp1,w,c
 15023  00265A  A4D8               	btfss	status,2,c
 15024  00265C  D7F7               	goto	i2l3925
 15025  00265E                     i2l874:
 15026  00265E  AE12               	btfss	i2___ftadd@sign,7,c
 15027  002660  D00C               	goto	i2l883
 15028  002662  0EFF               	movlw	255
 15029  002664  1A09               	xorwf	i2___ftadd@f1,f,c
 15030  002666  0EFF               	movlw	255
 15031  002668  1A0A               	xorwf	i2___ftadd@f1+1,f,c
 15032  00266A  0EFF               	movlw	255
 15033  00266C  1A0B               	xorwf	i2___ftadd@f1+2,f,c
 15034  00266E  0E01               	movlw	1
 15035  002670  2609               	addwf	i2___ftadd@f1,f,c
 15036  002672  0E00               	movlw	0
 15037  002674  220A               	addwfc	i2___ftadd@f1+1,f,c
 15038  002676  0E00               	movlw	0
 15039  002678  220B               	addwfc	i2___ftadd@f1+2,f,c
 15040  00267A                     i2l883:
 15041  00267A  AC12               	btfss	i2___ftadd@sign,6,c
 15042  00267C  D00C               	goto	i2l3933
 15043  00267E  0EFF               	movlw	255
 15044  002680  1A0C               	xorwf	i2___ftadd@f2,f,c
 15045  002682  0EFF               	movlw	255
 15046  002684  1A0D               	xorwf	i2___ftadd@f2+1,f,c
 15047  002686  0EFF               	movlw	255
 15048  002688  1A0E               	xorwf	i2___ftadd@f2+2,f,c
 15049  00268A  0E01               	movlw	1
 15050  00268C  260C               	addwf	i2___ftadd@f2,f,c
 15051  00268E  0E00               	movlw	0
 15052  002690  220D               	addwfc	i2___ftadd@f2+1,f,c
 15053  002692  0E00               	movlw	0
 15054  002694  220E               	addwfc	i2___ftadd@f2+2,f,c
 15055  002696                     i2l3933:
 15056  002696  0E00               	movlw	0
 15057  002698  6E12               	movwf	i2___ftadd@sign,c
 15058  00269A  5009               	movf	i2___ftadd@f1,w,c
 15059  00269C  260C               	addwf	i2___ftadd@f2,f,c
 15060  00269E  500A               	movf	i2___ftadd@f1+1,w,c
 15061  0026A0  220D               	addwfc	i2___ftadd@f2+1,f,c
 15062  0026A2  500B               	movf	i2___ftadd@f1+2,w,c
 15063  0026A4  220E               	addwfc	i2___ftadd@f2+2,f,c
 15064  0026A6  AE0E               	btfss	i2___ftadd@f2+2,7,c
 15065  0026A8  D00E               	goto	i2l3943
 15066  0026AA  0EFF               	movlw	255
 15067  0026AC  1A0C               	xorwf	i2___ftadd@f2,f,c
 15068  0026AE  0EFF               	movlw	255
 15069  0026B0  1A0D               	xorwf	i2___ftadd@f2+1,f,c
 15070  0026B2  0EFF               	movlw	255
 15071  0026B4  1A0E               	xorwf	i2___ftadd@f2+2,f,c
 15072  0026B6  0E01               	movlw	1
 15073  0026B8  260C               	addwf	i2___ftadd@f2,f,c
 15074  0026BA  0E00               	movlw	0
 15075  0026BC  220D               	addwfc	i2___ftadd@f2+1,f,c
 15076  0026BE  0E00               	movlw	0
 15077  0026C0  220E               	addwfc	i2___ftadd@f2+2,f,c
 15078  0026C2  0E01               	movlw	1
 15079  0026C4  6E12               	movwf	i2___ftadd@sign,c
 15080  0026C6                     i2l3943:
 15081  0026C6  C00C  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 15082  0026CA  C00D  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 15083  0026CE  C00E  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 15084  0026D2  C014  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 15085  0026D6  C012  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 15086  0026DA  EC19  F01B         	call	i2___ftpack	;wreg free
 15087  0026DE  C001  F009         	movff	?i2___ftpack,?i2___ftadd
 15088  0026E2  C002  F00A         	movff	?i2___ftpack+1,?i2___ftadd+1
 15089  0026E6  C003  F00B         	movff	?i2___ftpack+2,?i2___ftadd+2
 15090  0026EA  0012               	return	
 15091  0026EC                     __end_ofi2___ftadd:
 15092                           	opt stack 0
 15093                           pclatu	equ	0xFFB
 15094                           pclath	equ	0xFFA
 15095                           tblptru	equ	0xFF8
 15096                           tblptrh	equ	0xFF7
 15097                           tblptrl	equ	0xFF6
 15098                           tablat	equ	0xFF5
 15099                           prodh	equ	0xFF4
 15100                           prodl	equ	0xFF3
 15101                           intcon	equ	0xFF2
 15102                           intcon2	equ	0xFF1
 15103                           intcon3	equ	0xFF0
 15104                           postinc0	equ	0xFEE
 15105                           fsr0h	equ	0xFEA
 15106                           fsr0l	equ	0xFE9
 15107                           wreg	equ	0xFE8
 15108                           indf1	equ	0xFE7
 15109                           postdec1	equ	0xFE5
 15110                           fsr1h	equ	0xFE2
 15111                           fsr1l	equ	0xFE1
 15112                           indf2	equ	0xFDF
 15113                           postinc2	equ	0xFDE
 15114                           postdec2	equ	0xFDD
 15115                           fsr2h	equ	0xFDA
 15116                           fsr2l	equ	0xFD9
 15117                           status	equ	0xFD8
 15118                           
 15119 ;; *************** function i2___ftpack *****************
 15120 ;; Defined at:
 15121 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 15122 ;; Parameters:    Size  Location     Type
 15123 ;;  arg             3    0[COMRAM] unsigned um
 15124 ;;  exp             1    3[COMRAM] unsigned char 
 15125 ;;  sign            1    4[COMRAM] unsigned char 
 15126 ;; Auto vars:     Size  Location     Type
 15127 ;;		None
 15128 ;; Return value:  Size  Location     Type
 15129 ;;                  3    0[COMRAM] float 
 15130 ;; Registers used:
 15131 ;;		wreg, status,2, status,0
 15132 ;; Tracked objects:
 15133 ;;		On entry : 0/0
 15134 ;;		On exit  : 0/0
 15135 ;;		Unchanged: 0/0
 15136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15137 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15139 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15140 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15141 ;;Total ram usage:        8 bytes
 15142 ;; Hardware stack levels used:    1
 15143 ;; This function calls:
 15144 ;;		Nothing
 15145 ;; This function is called by:
 15146 ;;		i2___ftadd
 15147 ;;		i2___ftdiv
 15148 ;;		i2___ftmul
 15149 ;; This function uses a non-reentrant model
 15150 ;;
 15151                           
 15152                           	psect	text59
 15153  003632                     __ptext59:
 15154                           	opt stack 0
 15155  003632                     i2___ftpack:
 15156                           	opt stack 19
 15157                           
 15158                           ;incstack = 0
 15159  003632  5004               	movf	i2___ftpack@exp,w,c
 15160  003634  B4D8               	btfsc	status,2,c
 15161  003636  D005               	goto	i2l3513
 15162  003638  5001               	movf	i2___ftpack@arg,w,c
 15163  00363A  1002               	iorwf	i2___ftpack@arg+1,w,c
 15164  00363C  1003               	iorwf	i2___ftpack@arg+2,w,c
 15165  00363E  A4D8               	btfss	status,2,c
 15166  003640  D00C               	goto	i2l3519
 15167  003642                     i2l3513:
 15168  003642  0E00               	movlw	0
 15169  003644  6E01               	movwf	?i2___ftpack,c
 15170  003646  0E00               	movlw	0
 15171  003648  6E02               	movwf	?i2___ftpack+1,c
 15172  00364A  0E00               	movlw	0
 15173  00364C  6E03               	movwf	?i2___ftpack+2,c
 15174  00364E  0012               	return	
 15175  003650                     i2l3517:
 15176  003650  2A04               	incf	i2___ftpack@exp,f,c
 15177  003652  90D8               	bcf	status,0,c
 15178  003654  3203               	rrcf	i2___ftpack@arg+2,f,c
 15179  003656  3202               	rrcf	i2___ftpack@arg+1,f,c
 15180  003658  3201               	rrcf	i2___ftpack@arg,f,c
 15181  00365A                     i2l3519:
 15182  00365A  0E00               	movlw	0
 15183  00365C  1401               	andwf	i2___ftpack@arg,w,c
 15184  00365E  6E06               	movwf	??i2___ftpack& (0+255),c
 15185  003660  0E00               	movlw	0
 15186  003662  1402               	andwf	i2___ftpack@arg+1,w,c
 15187  003664  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 15188  003666  0EFE               	movlw	254
 15189  003668  1403               	andwf	i2___ftpack@arg+2,w,c
 15190  00366A  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 15191  00366C  5006               	movf	??i2___ftpack,w,c
 15192  00366E  1007               	iorwf	??i2___ftpack+1,w,c
 15193  003670  1008               	iorwf	??i2___ftpack+2,w,c
 15194  003672  B4D8               	btfsc	status,2,c
 15195  003674  D00C               	goto	i2l3525
 15196  003676  D7EC               	goto	i2l3517
 15197  003678                     i2l3521:
 15198  003678  2A04               	incf	i2___ftpack@exp,f,c
 15199  00367A  0E01               	movlw	1
 15200  00367C  2601               	addwf	i2___ftpack@arg,f,c
 15201  00367E  0E00               	movlw	0
 15202  003680  2202               	addwfc	i2___ftpack@arg+1,f,c
 15203  003682  0E00               	movlw	0
 15204  003684  2203               	addwfc	i2___ftpack@arg+2,f,c
 15205  003686  90D8               	bcf	status,0,c
 15206  003688  3203               	rrcf	i2___ftpack@arg+2,f,c
 15207  00368A  3202               	rrcf	i2___ftpack@arg+1,f,c
 15208  00368C  3201               	rrcf	i2___ftpack@arg,f,c
 15209  00368E                     i2l3525:
 15210  00368E  0E00               	movlw	0
 15211  003690  1401               	andwf	i2___ftpack@arg,w,c
 15212  003692  6E06               	movwf	??i2___ftpack& (0+255),c
 15213  003694  0E00               	movlw	0
 15214  003696  1402               	andwf	i2___ftpack@arg+1,w,c
 15215  003698  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 15216  00369A  0EFF               	movlw	255
 15217  00369C  1403               	andwf	i2___ftpack@arg+2,w,c
 15218  00369E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 15219  0036A0  5006               	movf	??i2___ftpack,w,c
 15220  0036A2  1007               	iorwf	??i2___ftpack+1,w,c
 15221  0036A4  1008               	iorwf	??i2___ftpack+2,w,c
 15222  0036A6  B4D8               	btfsc	status,2,c
 15223  0036A8  D006               	goto	i2l3529
 15224  0036AA  D7E6               	goto	i2l3521
 15225  0036AC                     i2l3527:
 15226  0036AC  0604               	decf	i2___ftpack@exp,f,c
 15227  0036AE  90D8               	bcf	status,0,c
 15228  0036B0  3601               	rlcf	i2___ftpack@arg,f,c
 15229  0036B2  3602               	rlcf	i2___ftpack@arg+1,f,c
 15230  0036B4  3603               	rlcf	i2___ftpack@arg+2,f,c
 15231  0036B6                     i2l3529:
 15232  0036B6  BE02               	btfsc	i2___ftpack@arg+1,7,c
 15233  0036B8  D003               	goto	i2l836
 15234  0036BA  0E02               	movlw	2
 15235  0036BC  6004               	cpfslt	i2___ftpack@exp,c
 15236  0036BE  D7F6               	goto	i2l3527
 15237  0036C0                     i2l836:
 15238  0036C0  A004               	btfss	i2___ftpack@exp,0,c
 15239  0036C2  9E02               	bcf	i2___ftpack@arg+1,7,c
 15240  0036C4  90D8               	bcf	status,0,c
 15241  0036C6  3204               	rrcf	i2___ftpack@exp,f,c
 15242  0036C8  5004               	movf	i2___ftpack@exp,w,c
 15243  0036CA  1203               	iorwf	i2___ftpack@arg+2,f,c
 15244  0036CC  5005               	movf	i2___ftpack@sign,w,c
 15245  0036CE  A4D8               	btfss	status,2,c
 15246  0036D0  8E03               	bsf	i2___ftpack@arg+2,7,c
 15247  0036D2  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 15248  0036D6  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 15249  0036DA  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 15250  0036DE  0012               	return	
 15251  0036E0                     __end_ofi2___ftpack:
 15252                           	opt stack 0
 15253                           pclatu	equ	0xFFB
 15254                           pclath	equ	0xFFA
 15255                           tblptru	equ	0xFF8
 15256                           tblptrh	equ	0xFF7
 15257                           tblptrl	equ	0xFF6
 15258                           tablat	equ	0xFF5
 15259                           prodh	equ	0xFF4
 15260                           prodl	equ	0xFF3
 15261                           intcon	equ	0xFF2
 15262                           intcon2	equ	0xFF1
 15263                           intcon3	equ	0xFF0
 15264                           postinc0	equ	0xFEE
 15265                           fsr0h	equ	0xFEA
 15266                           fsr0l	equ	0xFE9
 15267                           wreg	equ	0xFE8
 15268                           indf1	equ	0xFE7
 15269                           postdec1	equ	0xFE5
 15270                           fsr1h	equ	0xFE2
 15271                           fsr1l	equ	0xFE1
 15272                           indf2	equ	0xFDF
 15273                           postinc2	equ	0xFDE
 15274                           postdec2	equ	0xFDD
 15275                           fsr2h	equ	0xFDA
 15276                           fsr2l	equ	0xFD9
 15277                           status	equ	0xFD8
 15278                           
 15279 ;; *************** function _TMR3_reset *****************
 15280 ;; Defined at:
 15281 ;;		line 195 in file "main.c"
 15282 ;; Parameters:    Size  Location     Type
 15283 ;;		None
 15284 ;; Auto vars:     Size  Location     Type
 15285 ;;		None
 15286 ;; Return value:  Size  Location     Type
 15287 ;;                  1    wreg      void 
 15288 ;; Registers used:
 15289 ;;		wreg, status,2
 15290 ;; Tracked objects:
 15291 ;;		On entry : 0/0
 15292 ;;		On exit  : 0/0
 15293 ;;		Unchanged: 0/0
 15294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15299 ;;Total ram usage:        0 bytes
 15300 ;; Hardware stack levels used:    1
 15301 ;; This function calls:
 15302 ;;		Nothing
 15303 ;; This function is called by:
 15304 ;;		_TMR3_isr
 15305 ;;		_EXT_Int0_isr
 15306 ;; This function uses a non-reentrant model
 15307 ;;
 15308                           
 15309                           	psect	text60
 15310  0042CA                     __ptext60:
 15311                           	opt stack 0
 15312  0042CA                     _TMR3_reset:
 15313                           	opt stack 21
 15314                           
 15315                           ;main.c: 196: TMR3H = (unsigned char) ((60536 >> 8) & 0x00FF);
 15316                           
 15317                           ;incstack = 0
 15318  0042CA  0EEC               	movlw	236
 15319  0042CC  6EB3               	movwf	4019,c	;volatile
 15320                           
 15321                           ;main.c: 197: TMR3L = (unsigned char) (60536 & 0x00FF);
 15322  0042CE  0E78               	movlw	120
 15323  0042D0  6EB2               	movwf	4018,c	;volatile
 15324  0042D2  0012               	return		;funcret
 15325  0042D4                     __end_of_TMR3_reset:
 15326                           	opt stack 0
 15327                           pclatu	equ	0xFFB
 15328                           pclath	equ	0xFFA
 15329                           tblptru	equ	0xFF8
 15330                           tblptrh	equ	0xFF7
 15331                           tblptrl	equ	0xFF6
 15332                           tablat	equ	0xFF5
 15333                           prodh	equ	0xFF4
 15334                           prodl	equ	0xFF3
 15335                           intcon	equ	0xFF2
 15336                           intcon2	equ	0xFF1
 15337                           intcon3	equ	0xFF0
 15338                           postinc0	equ	0xFEE
 15339                           fsr0h	equ	0xFEA
 15340                           fsr0l	equ	0xFE9
 15341                           wreg	equ	0xFE8
 15342                           indf1	equ	0xFE7
 15343                           postdec1	equ	0xFE5
 15344                           fsr1h	equ	0xFE2
 15345                           fsr1l	equ	0xFE1
 15346                           indf2	equ	0xFDF
 15347                           postinc2	equ	0xFDE
 15348                           postdec2	equ	0xFDD
 15349                           fsr2h	equ	0xFDA
 15350                           fsr2l	equ	0xFD9
 15351                           status	equ	0xFD8
 15352                           pclatu	equ	0xFFB
 15353                           pclath	equ	0xFFA
 15354                           tblptru	equ	0xFF8
 15355                           tblptrh	equ	0xFF7
 15356                           tblptrl	equ	0xFF6
 15357                           tablat	equ	0xFF5
 15358                           prodh	equ	0xFF4
 15359                           prodl	equ	0xFF3
 15360                           intcon	equ	0xFF2
 15361                           intcon2	equ	0xFF1
 15362                           intcon3	equ	0xFF0
 15363                           postinc0	equ	0xFEE
 15364                           fsr0h	equ	0xFEA
 15365                           fsr0l	equ	0xFE9
 15366                           wreg	equ	0xFE8
 15367                           indf1	equ	0xFE7
 15368                           postdec1	equ	0xFE5
 15369                           fsr1h	equ	0xFE2
 15370                           fsr1l	equ	0xFE1
 15371                           indf2	equ	0xFDF
 15372                           postinc2	equ	0xFDE
 15373                           postdec2	equ	0xFDD
 15374                           fsr2h	equ	0xFDA
 15375                           fsr2l	equ	0xFD9
 15376                           status	equ	0xFD8
 15377                           
 15378                           	psect	rparam
 15379  0000                     pclatu	equ	0xFFB
 15380                           pclath	equ	0xFFA
 15381                           tblptru	equ	0xFF8
 15382                           tblptrh	equ	0xFF7
 15383                           tblptrl	equ	0xFF6
 15384                           tablat	equ	0xFF5
 15385                           prodh	equ	0xFF4
 15386                           prodl	equ	0xFF3
 15387                           intcon	equ	0xFF2
 15388                           intcon2	equ	0xFF1
 15389                           intcon3	equ	0xFF0
 15390                           postinc0	equ	0xFEE
 15391                           fsr0h	equ	0xFEA
 15392                           fsr0l	equ	0xFE9
 15393                           wreg	equ	0xFE8
 15394                           indf1	equ	0xFE7
 15395                           postdec1	equ	0xFE5
 15396                           fsr1h	equ	0xFE2
 15397                           fsr1l	equ	0xFE1
 15398                           indf2	equ	0xFDF
 15399                           postinc2	equ	0xFDE
 15400                           postdec2	equ	0xFDD
 15401                           fsr2h	equ	0xFDA
 15402                           fsr2l	equ	0xFD9
 15403                           status	equ	0xFD8
 15404                           
 15405                           	psect	temp
 15406  000072                     btemp:
 15407                           	opt stack 0
 15408  000072                     	ds	1
 15409  0000                     int$flags	set	btemp
 15410                           pclatu	equ	0xFFB
 15411                           pclath	equ	0xFFA
 15412                           tblptru	equ	0xFF8
 15413                           tblptrh	equ	0xFF7
 15414                           tblptrl	equ	0xFF6
 15415                           tablat	equ	0xFF5
 15416                           prodh	equ	0xFF4
 15417                           prodl	equ	0xFF3
 15418                           intcon	equ	0xFF2
 15419                           intcon2	equ	0xFF1
 15420                           intcon3	equ	0xFF0
 15421                           postinc0	equ	0xFEE
 15422                           fsr0h	equ	0xFEA
 15423                           fsr0l	equ	0xFE9
 15424                           wreg	equ	0xFE8
 15425                           indf1	equ	0xFE7
 15426                           postdec1	equ	0xFE5
 15427                           fsr1h	equ	0xFE2
 15428                           fsr1l	equ	0xFE1
 15429                           indf2	equ	0xFDF
 15430                           postinc2	equ	0xFDE
 15431                           postdec2	equ	0xFDD
 15432                           fsr2h	equ	0xFDA
 15433                           fsr2l	equ	0xFD9
 15434                           status	equ	0xFD8


Data Sizes:
    Strings     297
    Constant    118
    Data        76
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     62     113
    BANK0           128    120     124
    BANK1           256     96     230
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[1]), STR_16(CODE[7]), STR_15(CODE[6]), STR_14(CODE[6]), 
		 -> STR_13(CODE[5]), STR_12(CODE[8]), STR_11(CODE[5]), STR_10(CODE[5]), 
		 -> MD3S(COMRAM[17]), MD2S(COMRAM[17]), MD1S(COMRAM[17]), MD0S(BANK1[17]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 64
		 -> print_data@Buffer(BANK1[64]), print_data@CoolerState(BANK1[6]), print_data@HeaterState(BANK1[6]), print_data@MODE(BANK1[8]), 
		 -> MDS(BANK1[17]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 64
		 -> print_data@Buffer(BANK1[64]), print_data@CoolerState(BANK1[6]), print_data@HeaterState(BANK1[6]), print_data@MODE(BANK1[8]), 
		 -> MDS(BANK1[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_21(CODE[9]), STR_20(CODE[12]), STR_19(CODE[7]), STR_17(CODE[35]), 
		 -> print_data@CoolerState(BANK1[6]), print_data@HeaterState(BANK1[6]), print_data@MODE(BANK1[8]), STR_9(CODE[17]), 
		 -> STR_8(CODE[18]), STR_7(CODE[19]), STR_6(CODE[19]), STR_5(CODE[17]), 
		 -> MDS(BANK1[17]), STR_4(CODE[17]), STR_3(CODE[19]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> print_data@Buffer(BANK1[64]), Buffer4(BANK1[17]), Buffer3(BANK1[17]), Buffer2(BANK1[17]), 
		 -> Buffer1(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 64
		 -> STR_22(CODE[32]), print_data@Buffer(BANK1[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> print_data@Buffer(BANK1[64]), print_data@CoolerState(BANK1[6]), print_data@HeaterState(BANK1[6]), print_data@MODE(BANK1[8]), 
		 -> MDS(BANK1[17]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 17
		 -> Buffer4(BANK1[17]), Buffer3(BANK1[17]), Buffer2(BANK1[17]), Buffer1(BANK1[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->_EXT_Int0_isr
    _EXT_Int0_isr->i2_set_pwm1_percent
    i2_set_pwm1_percent->i2___ftdiv
    i2___fttol->i2___ftadd
    i2___ftmul->i2___ftpack
    i2___ftdiv->i2___ftmul
    i2___ftadd->i2___ftpack

Critical Paths under _main in BANK0

    _main->_sprintf
    _set_pwm1_percent->___fttol
    _read_adc_voltage->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___wmul
    _print_data->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftneg->___awtoft
    ___ftge->___ftadd
    _send_string_no_lib->_send_byte_no_lib
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles
    ___lwtoft->___ftpack

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_print_data

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  220341
                                             84 BANK1     12    12      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
                           _delay_ms
                    _init_adc_no_lib
                          _init_pwm1
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
                         _print_data
                   _read_adc_voltage
                   _set_pwm1_percent
                      _setupInterupt
                         _setupPorts
                        _setupSerial
                        _setupTimers
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _setupTimers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       6
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupInterupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_pwm1_percent                                     8     5      3   18867
                                             72 BANK0      8     5      3
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                       _set_pwm1_raw
 ---------------------------------------------------------------------------------
 (2) _set_pwm1_raw                                         4     2      2     293
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                     9     6      3   11005
                                             50 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___wmul
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      65
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4196
                                             35 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3179
                                             20 BANK0      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _print_data                                          84    84      0   79907
                                              0 BANK1     84    84      0
                         _lcd_gotoxy
                           _lcd_puts
                 _send_string_no_lib
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4    1831
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             49    36     13   69424
                                             72 BANK0     48    35     13
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   14695
                                             35 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   14416
                                             35 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    3466
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6728
                                             20 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1819
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1985
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     827
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2763
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     848
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     703
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     892
                                             57 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    6289
                                             57 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5925
                                             45 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     681
                                             24 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1672
                                             57 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) _send_string_no_lib                                   2     0      2     712
                                              1 BANK0      2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (3) _send_byte_no_lib                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2    4794
                                             14 BANK0      2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    4113
                                             13 BANK0      1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           3     2      1    2161
                                             10 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    2156
                                             10 BANK0      1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_byte                                        2     1      1    1360
                                              8 BANK0      2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_send_nibble                                      2     2      0      99
                                              6 BANK0      2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (6) _delay_cycles                                         6     6      0      68
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) _delay_ms                                             4     2      2     530
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_pwm1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2692
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _highIsr                                             14    14      0    3771
                                             48 COMRAM    14    14      0
                       _EXT_Int0_isr
                       _EXT_Int1_isr
                       _EXT_Int2_isr
                             _RC_isr
                           _TMR0_isr
                           _TMR3_isr
 ---------------------------------------------------------------------------------
 (9) _TMR3_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
                         _TMR3_reset
 ---------------------------------------------------------------------------------
 (9) _TMR0_isr                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) _RC_isr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EXT_Int2_isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EXT_Int1_isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EXT_Int0_isr                                         2     2      0    3771
                                             46 COMRAM     2     2      0
                         _TMR3_reset
                 i2_set_pwm1_percent
                           i2_strcpy
 ---------------------------------------------------------------------------------
 (10) i2_strcpy                                            6     2      4     283
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2_set_pwm1_percent                                  8     5      3    3488
                                             38 COMRAM     8     5      3
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___fttol
                     i2_set_pwm1_raw
 ---------------------------------------------------------------------------------
 (11) i2_set_pwm1_raw                                      4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) i2___fttol                                          15    11      4     278
                                             20 COMRAM    15    11      4
                          i2___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftmul                                          15     9      6     843
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (11) i2___ftdiv                                          15     9      6     797
                                             23 COMRAM    15     9      6
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (11) i2___ftadd                                          12     6      6    1357
                                              8 COMRAM    12     6      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___ftpack                                          8     3      5     465
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (10) _TMR3_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftge
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___fttol
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _delay_ms
   _init_adc_no_lib
   _init_pwm1
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_puts
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _print_data
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_puts
       _lcd_putc
         _delay_ms
         _lcd_gotoxy
           _lcd_send_byte
             _delay_cycles
             _delay_ms
             _lcd_send_nibble
               _delay_cycles
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
     _send_string_no_lib
       _send_byte_no_lib
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _strcpy
   _read_adc_voltage
     ___awtoft
       ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     _read_adc_raw_no_lib
   _set_pwm1_percent
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___fttol (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _set_pwm1_raw (ARG)
   _setupInterupt
   _setupPorts
   _setupSerial
   _setupTimers
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _strcpy

 _highIsr (ROOT)
   _EXT_Int0_isr
     _TMR3_reset
     i2_set_pwm1_percent
       i2___ftadd
         i2___ftpack
       i2___ftdiv
         i2___ftmul (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2___ftmul
         i2___ftpack
       i2___fttol
         i2___ftadd (ARG)
           i2___ftpack
       i2_set_pwm1_raw
     i2_strcpy
   _EXT_Int1_isr
   _EXT_Int2_isr
   _RC_isr
   _TMR0_isr
   _TMR3_isr
     _TMR3_reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     60      E6       7       89.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     78      7C       5       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3E      71       1       89.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D3      34        0.0%
DATA                 0      0     1D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jun 11 10:27:28 2022

           ?_read_adc_voltage 00B2                             _C 010C                             _H 0110  
          ??_read_adc_voltage 00B5                            l11 4102                            l18 3FE0  
                          l81 3E80                            _MD 0116                            _HS 0114  
                          _OT 0103                            _SP 0109                            _RT 0106  
              ?_lcd_send_byte 0088                  ___awdiv@sign 008B           ___wmul@multiplicand 0090  
                 __CFG_BORV$3 000000                    i2___ftpack 3632                 main@HeatError 01CB  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_OSC$XT 000000                  ___ftadd@exp1 00B8  
                ___ftadd@exp2 00B7                   __CFG_LVP$ON 000000                  ___ftadd@sign 00B6  
                 __CFG_WDT$ON 000000                           l310 144C                           l316 15D8  
                         l290 0F14                           l455 42B4                           l456 42B2  
                         l563 08BE                           l804 2A00                           l901 27B4  
                         l902 27F8                           l836 303E                           l908 2878  
                         l933 40DA                           l863 237A                           l865 23A2  
                         l874 2478                           l883 24A2                           l859 2340  
                         l894 2DEC                           l983 3570                           l993 38B0  
                         _HCP 0112                  __CFG_CPB$OFF 000000                           _MDS 0160  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                           _lcd 000F83  
               main@CoolError 01C5                  ___awmod@sign 0085                           prod 000FF3  
   read_adc_voltage@raw_value 00B9                           wreg 000FE8                   lcd_gotoxy@x 008B  
                 lcd_gotoxy@y 008A                  ___ftdiv@cntr 00AC                  ___ftdiv@sign 00B1  
                        l5201 2FF2                          l5211 3048                          l5203 3022  
                        l6003 3F06                          l5205 3030                          l6013 3D3E  
                        l5301 24CC                          l6005 3F12                          l6021 2D10  
                        l5223 3E1A                          l5311 251A                          l5217 3064  
                        l5153 40F4                          l5225 3E1E                          l5233 3E2E  
                        l6009 3D12                          l3641 2726                          l5321 2BB2  
                        l5227 3E22                          l5235 3E4A                          l5403 34BC  
                        l6027 2D4A                          l5149 3FE8                          l5229 3E26  
                        l5253 234E                          l3805 2EEE                          l5341 2C3A  
                        l5183 3E04                          l3823 2F54                          l3815 2F1E  
                        l3647 2760                          l5431 37FC                          l5423 37C6  
                        l5415 37A2                          l5351 2C78                          l5327 2BEC  
                        l5511 1AB4                          l5503 1950                          l6047 2DAA  
                        l5193 2F94                          l5281 2408                          l5265 2398  
                        l3817 2F2E                          l3809 2F02                          l3681 2842  
                        l5425 37D2                          l5345 2C58                          l6129 3624  
                        l5195 2FA2                          l6083 3B7C                          l5451 3CEC  
                        l3763 3380                          l5283 2416                          l5275 23DA  
                        l5259 2388                          l3819 2F38                          l5611 34F4  
                        l5371 3424                          l5427 37D8                          l5435 380A  
                        l5419 37B2                          l5355 2C96                          l6235 1C1A  
                        l6411 0F50                          l5197 2FD2                          l5189 2F80  
                        l6093 3BA2                          l5445 3CB4                          l3773 3404  
                        l5293 245E                          l5285 2424                          l5613 3504  
                        l3677 282E                          l5517 1B7A                          l5701 0172  
                        l6229 1BFC                          l6069 3FA8                          l6405 0F32  
                        l6079 3B72                          l5447 3CD0                          l5455 3CF8  
                        l3767 33C0                          l5295 246C                          l5287 2430  
                        l5623 355E                          l5615 350A                          l5631 3844  
                        l3687 285E                          l5383 3458                          l5439 381E  
                        l5471 21AC                          l5711 0212                          l6271 1DB4  
                        l6247 1CB8                          l6503 1586                          l6097 3BAC  
                        l6089 3B96                          l5449 3CDE                          l5633 3854  
                        l5545 28D6                          l3689 286E                          l5385 3464  
                        l5377 343A                          l5529 4166                          l5801 0572  
                        l5713 0218                          l5705 01D6                          l6257 1D34  
                        l6249 1CEC                          l6521 168C                          l6505 159C  
                        l6513 15FA                          l3787 2E5C                          l5635 385A  
                        l5539 28B0                          l5395 349A                          l5387 346A  
                        l5811 05EA                          l5731 029C                          l5723 0266  
                        l5707 0202                          l6291 1EA6                          l6283 1E3C  
                        l6275 1DE0                          l6259 1D58                          l6523 1696  
                        l6507 15A6                          l6443 117A                          l6435 112E  
                        l5645 3A6C                          l5493 1864                          l5821 0648  
                        l5725 0272                          l6285 1E58                          l6461 1292  
                        l6525 16B2                          l6429 1100                          l5655 41EA  
                        l5639 389E                          l5647 3A7C                          l5591 29F6  
                        l5583 29CA                          l5567 297E                          l5559 292A  
                        l5399 34A8                          l5479 2290                          l5807 05BC  
                        l5743 02EE                          l5719 0240                          l5751 0366  
                        l6279 1E0A                          l5913 0A54                          l5905 0A2C  
                        l5825 06AE                          l5737 02BC                          l5729 0284  
                        l5681 004A                          l6289 1E8A                          l6481 141A  
                        l6457 126C                          l5659 41FE                          l5579 29B6  
                        l5499 192A                          l5931 0ACC                          l5907 0A3A  
                        l5851 077E                          l5843 074A                          l5827 06B4  
                        l5915 0A62                          l5739 02D6                          l5675 002A  
                        l6459 1276                          l6467 1318                          l5597 3ED2  
                        l5589 29E6                          l5933 0AD2                          l5925 0AA6  
                        l5861 07CE                          l5853 0786                          l5757 0380  
                        l5749 0306                          l6477 13FA                          l5871 0872  
                        l5855 079A                          l5847 076C                          l5839 06FA  
                        l5791 04E8                          l5783 0478                          l5767 03C6  
                        l5687 0092                          l5695 0134                          l6479 1410  
                        l6487 146C                          l6495 14EE                          l5953 0B70  
                        l5945 0B18                          l5971 0C1E                          l5891 08F2  
                        l5883 08C2                          l5859 07C6                          l5795 0516  
                        l5981 0C5A                          l5973 0C28                          l5965 0BDC  
                        l5949 0B40                          l5877 088C                          l5869 0864  
                        l5797 052C                          l5991 0D16                          l5975 0C34  
                        l5967 0BE6                          l5959 0BA4                          l5895 0944  
                        l5879 08A0                          l5799 055C                          l5993 0D1C  
                        l5987 0C88                          l5995 0D32                          l5997 0D78  
                        STR_1 FF74                          STR_2 FF96                          STR_3 FF18  
                        STR_4 FF63                          STR_5 FF85                          STR_6 FF3E  
                        STR_7 FF2B                          STR_8 FF51                          STR_9 FFA7  
                        _MD0S 01D5                          _MD1S 003F                          _MD2S 0050  
                        _MD3S 0061                          _PIE1 000F9D                          _PIE2 000FA0  
                        u3601 2702                          u3621 273C                          u6111 2B8E  
                        u3811 2E38                          u6131 2BC8                          u3830 2E82  
                        u7200 3F3C                          u3835 2E78                          u7220 3D34  
                        u7230 3D60                          u7207 3F32                          u6600 00DE  
                        u6610 012C                          u7227 3D2A                          u7251 2CEC  
                        u7180 0D6A                          u5805 3DCC                          u7237 3D56  
                        u5901 22EE                          u5806 3DCE                          u6630 0156  
                        u5911 230C                          u6607 00D4                          u7271 2D26  
                        u7360 1BF8                          u6617 0122                          u6730 033E  
                        u6650 01AA                          u7450 1E1E                          u7370 1C16  
                        u7610 13F0                          u7187 0D60                          u6660 01F8  
                        u6580 0080                          u7460 1E6C                          u6637 014C  
                        u6737 0334                          u6657 01A0                          u7707 3DFC  
                        u6667 01EE                          u6587 0076                          u6780 040C  
                        u7660 157C                          u7717 40F6                          u6785 0400  
                        u6970 08B6              ?_lcd_send_nibble 0001                          _main 0D86  
                ___ftpack@arg 0080              _send_byte_no_lib 42AC                  ___ftpack@exp 0083  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0072  
                i2___ftadd@f1 0009                  i2___ftadd@f2 000C                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 0016  
               __CFG_IESO$OFF 000000                  i2___ftdiv@f1 0018                  i2___ftdiv@f2 001B  
                i2___ftdiv@f3 0022                  _sprintf$2274 00DB                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 00A1                  i2___ftmul@f1 0009                  i2___ftmul@f2 000C  
                ___param_bank 000010                  ___ftmul@sign 00A2                  i2___fttol@f1 0015  
                ___fttol@exp1 00C7              _set_pwm1_percent 3582                  ___fttol@lval 00C3  
             ??_setupInterupt 0080          __end_of_delay_cycles 4014                         ?_main 0001  
             __end_of___awdiv 34C6               __end_of___ftadd 2540                         STR_10 FFF9  
                       STR_11 FFF4                         STR_12 FFCD                         STR_20 FFB8  
                       STR_13 FFEF                         STR_21 FFC4                         STR_14 FFE9  
                       STR_22 FEF8                         STR_15 FFE3                         STR_16 FFD5  
                       STR_17 FED5                         STR_18 FF17                         STR_19 FFDC  
             __end_of___awmod 3828               __end_of___ftdiv 2E22               __end_of___ftneg 40E8  
             __end_of___lldiv 3582               __end_of___ftmul 2CD6                         _T0CON 000FD5  
             ___awdiv@divisor 0088               __end_of___llmod 38C2               __end_of___ftsub 3EFC  
             __end_of___fttol 2F66                         _T2CON 000FCA                i2_set_pwm1_raw 4118  
                       _T3CON 000FB1                         i2l330 373A                         i2l340 42A0  
                       i2l332 3744                         i2l324 371C                         i2l326 3726  
                       i2l335 374A                         i2l328 3730                         i2l338 42A6  
                       i2l364 3C98                         i2l399 39DE                         i2l836 36C0  
                       i2l863 25AE                         i2l874 265E                         i2l883 267A  
                       i2l859 2584               ___awdiv@counter 008A                         i2l894 330E  
                       _RCREG 000FAE                         _RCSTA 000FAB                         _TMR0H 000FD7  
                       _TMR1H 000FCF                         _TMR0L 000FD6                         _TMR3H 000FB3  
                       _TMR1L 000FCE                         _TMR3L 000FB2                         _SPBRG 000FAF  
     read_adc_voltage@channel 00B8                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
                       _RPS_C 0118                         _TXREG 000FAD                         _TXSTA 000FAC  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                  ___lltoft@exp 0090  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000               __end_of_highIsr 3786  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                 ___awtoft@sign 0097              __end_of_TMR0_isr 4254  
            __end_of_TMR3_isr 3CAE               __end_of_dpowers FE87                         _scale 16F2  
             __end_of_isdigit 4170               _init_adc_no_lib 42BE                 ___ftpack@sign 0084  
                 ?_TMR3_reset 0001                         tablat 000FF5                         status 000FD8  
     read_adc_voltage@voltage 00B5               __end_of_sprintf 0D86                 i2___ftdiv@exp 0025  
          __size_ofi2___ftadd 01AC                __CFG_PBADEN$ON 000000            __size_ofi2___ftdiv 00E6  
          __size_ofi2___ftmul 00F4            __size_ofi2___fttol 00F4              __end_ofi2_strcpy 3F8C  
  __end_ofi2_set_pwm1_percent 395A               __initialization 3AE0                  __end_of_main 16F2  
             ??_lcd_send_byte 0089                 i2___ftmul@exp 0012        __end_ofi2_set_pwm1_raw 4146  
                 ?i2___ftpack 0001                        ??_main 00F8                 ___fttol@sign1 00C2  
     i2set_pwm1_percent@value 0027                 __activetblptr 000002          __size_of__tdiv_to_l_ 019E  
                  i2strcpy@cp 0005                    i2strcpy@to 0001                 main@coolError 01C8  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 008D                        ?_scale 00A3                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _CCPR1L 000FBE              ___awdiv@dividend 0086  
            __end_of___awtoft 3FD0              __end_of___ftpack 3072              __end_of___lltoft 3AE0  
                      i2l4005 31B6                        i2l4023 31F8                        i2l4033 3220  
                      i2l4019 31E8                        i2l4029 3210                        i2l4047 309E  
                      i2l3521 3678                        i2l3513 3642                        i2l4065 3104  
                      i2l4083 3154                        i2l4075 312C                        i2l3525 368E  
                      i2l3517 3650                        i2l4077 3138                        i2l4069 3114  
                      i2l3527 36AC                        i2l3519 365A                        i2l4079 313E  
                      i2l3529 36B6                        i2l4521 3F58                        i2l4515 394C  
                      i2l4519 3F50                        i2l3913 260E                        i2l3915 2618  
                      i2l3907 25EC                        i2l3933 2696                        i2l3925 264C  
                      i2l3917 2622                        i2l3943 26C6                        i2l3927 2656  
                      i2l3919 262A                        _INTCON 000FF2                        i2l3953 3282  
                      i2l4809 2AF8                        i2l4825 2B4C                        i2l3891 25BC  
                      i2l4843 39AA                        i2l3885 2592                        i2l4845 39B2  
                      i2l4837 397E                        i2l3959 32AA                        i2l4791 2A9E  
                      i2l4767 2A16                        i2l4839 3986                        i2l4865 3A38  
                      i2l4849 39D6                        i2l4881 3C78                        i2l3979 32E8  
                      i2l4779 2A5A                        i2l4859 3A0C                        i2l4885 3C9A  
                      i2l4877 3C5E                        i2l3999 318E                        i2l4887 3CA2  
                      u422_41 3176                        u424_41 319E                        u417_41 326A  
            __end_of___lwtoft 419A                        u419_41 3292                        u428_41 3082  
                      u396_41 2550                        u397_41 2564                        _SPBRGH 000FB0  
                      _RC_isr 4298              __end_of_delay_ms 4118                        _Cstate 01D1  
              __CFG_XINST$OFF 000000                        _Hstate 01D3              __end_of__powers_ FED5  
            __end_of_lcd_init 3BD0              __end_of_lcd_putc 3D10              __end_of_lcd_puts 420E  
                      ___ftge 3340                        ___wmul 404E                     ??___awdiv 008A  
                   ??___ftadd 00B3                __CFG_STVREN$ON 000000                     ??___awmod 0084  
                   ??___ftdiv 00A9                     ??___ftneg 009B                     ??___lldiv 0088  
                   ??___ftmul 009A                     ??___llmod 0095                     ??___ftsub 00BF  
                   ??___fttol 00BD     i2set_pwm1_percent@raw_val 002D                    _TonCounter 011A  
              print_data@MODE 01B1                        _fround 202C                        clear_0 3AE6  
             ?i2_set_pwm1_raw 0001              ___awdiv@quotient 008C               ___awmod@divisor 0082  
             ___awmod@counter 0084           __size_of_TMR3_reset 000A                     ??_highIsr 0031  
                      _strcpy 3EFC         ___ftmul@f3_as_product 009E       __end_of_init_adc_no_lib 42CA  
                __pdataCOMRAM 003F                     ??_isdigit 0080             __end_ofi2___ftadd 26EC  
           __end_ofi2___ftdiv 3340                i2___ftadd@exp1 0014                i2___ftadd@exp2 0013  
           __end_ofi2___ftmul 325A             __end_ofi2___fttol 3166                i2___ftadd@sign 0012  
                __mediumconst FE5E           send_string_no_lib@p 0081                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8            _send_string_no_lib 3D10  
                ?_setupSerial 0001                     ??_sprintf 00D5                  ?_setupTimers 0001  
              i2___ftdiv@cntr 0021                    __accesstop 0080       __end_of__initialization 3B4C  
              i2___ftdiv@sign 0026           ?_send_string_no_lib 0081                    ___ftadd@f1 00AD  
                  ___ftadd@f2 00B0           __size_ofi2___ftpack 00AE                    ___ftge@ff1 00B9  
                  ___ftge@ff2 00BC                 ___rparam_used 000001                    ___ftdiv@f1 00A3  
                  ___ftdiv@f2 00A6                    ___ftdiv@f3 00AD                    ___ftneg@f1 0098  
                  ___awtoft@c 0094                i2___ftpack@arg 0001                i2___ftpack@exp 0004  
                  ___ftmul@f1 0094                    ___ftmul@f2 0097                    ___ftsub@f1 00B9  
                  ___ftsub@f2 00BC                    ___fttol@f1 00B9                __pcstackCOMRAM 0001  
       __size_of_delay_cycles 0044                  __pidataBANK0 42D4                  __pidataBANK1 426E  
                  ___lltoft@c 0088                 ?_EXT_Int0_isr 0001                 ?_EXT_Int1_isr 0001  
               ?_EXT_Int2_isr 0001                i2___ftmul@cntr 0016                 __end_of_scale 1BA0  
                   ?_TMR0_isr 0001                i2___ftmul@sign 0017                     ?_TMR3_isr 0001  
              i2___fttol@exp1 0023          ??_send_string_no_lib 0083                    ___lwtoft@c 0088  
              i2___fttol@lval 001F      __end_of_send_byte_no_lib 42BE         i2set_pwm1_percent@tmp 002A  
                  __div_to_l_ 288A     __size_of_read_adc_voltage 0072             lcd_gotoxy@address 008C  
                   ?i2_strcpy 0001               __div_to_l_@exp1 008B               __div_to_l_@cntr 008A  
                     ??_scale 00A6               __div_to_l_@quot 0086                  sprintf@width 00F0  
    __end_of_set_pwm1_percent 3632                    __pbssBANK1 0100   __end_of_read_adc_raw_no_lib 3EB0  
                _delay_cycles 3FD0                       ?_RC_isr 0001                 __div_to_l_@f1 0080  
               __div_to_l_@f2 0083            __size_of_init_pwm1 0014                lcd_send_byte@n 0088  
                     ?___ftge 00B9                ??_EXT_Int0_isr 002F                ??_EXT_Int1_isr 0001  
              ??_EXT_Int2_isr 0001                       ?___wmul 008E              lcd_send_nibble@n 0087  
                  ??_TMR0_isr 0001                    ??_TMR3_isr 0001                       _CCP1CON 000FBD  
                     ?_fround 00A3                     ?___awtoft 0094                     ?___ftpack 0080  
                   ?___lltoft 0088                       ?_strcpy 0080                     ?___lwtoft 0088  
            ?_init_adc_no_lib 0001                       _INTCON2 000FF1                       _INTCON3 000FF0  
                   ?_delay_ms 0080                    _lcd_gotoxy 3E14                    ??i2_strcpy 0005  
                     _HCstate 01D2                     ?_lcd_init 0001                     ?_lcd_putc 0001  
                   ?_lcd_puts 008E                  ??_TMR3_reset 0001                       _Buffer1 011C  
                     _Buffer2 012D                       _Buffer3 013E                       _Buffer4 014F  
             __size_of_RC_isr 0014             __end_of__npowers_ FEAE                       __Hparam 0000  
                  _scale$2273 00A6                       __Lparam 0000      __size_of_lcd_send_nibble 0028  
             __size_of___ftge 00C8                       ___awdiv 3408                       ___ftadd 22D8  
                     ___awmod 3786                       ___ftdiv 2CD6                       ___ftneg 40B8  
                     ___lldiv 34C6               __size_of___wmul 0036                       ___ftmul 2B78  
                     ___llmod 3828                       ___ftsub 3EB0                       ___fttol 2E22  
               ?_set_pwm1_raw 0080                       __pcinit 3AE0                  ??i2___ftpack 0006  
                  ??___awtoft 0097                    ??___ftpack 0085               __size_of_fround 02AC  
     i2___ftmul@f3_as_product 0013                       __ramtop 1000         __end_of_setupInterupt 41E8  
                  ??___lltoft 008C                       __ptext0 0D86                       __ptext1 3D68  
                     __ptext2 420E                       __ptext3 4254                       __ptext4 41C2  
                     __ptext5 3582                       __ptext6 4014                       __ptext7 3BD0  
                     __ptext8 3E64                       __ptext9 2CD6                       _highIsr 0008  
                  ??___lwtoft 008B                     _T0CONbits 000FD5            __end_of_TMR3_reset 42D4  
             __size_of_strcpy 004A                     _T1CONbits 000FCD                   ?__div_to_l_ 0080  
                     _dpowers FE5F            i2_set_pwm1_percent 38C2                     _T2CONbits 000FCA  
                     _isdigit 4146                     _T3CONbits 000FB1             __end_of_init_pwm1 4298  
            ___awmod@dividend 0080                  _GlobalConter 010E                    ??_delay_ms 0082  
                     _sprintf 001A                    ??_lcd_init 008A           ?i2_set_pwm1_percent 0027  
              __pintcode_body 36E0                    ??_lcd_putc 008D                    ??_lcd_puts 0090  
        end_of_initialization 3B4C          __size_of_setupSerial 0024          __size_of_setupTimers 0056  
               __Lmediumconst FE5E                       int_func 36E0          lcd_send_byte@cm_data 0089  
          __end_ofi2___ftpack 36E0               ___lldiv@divisor 0084               ___lldiv@counter 008C  
            ??i2_set_pwm1_raw 0003                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
        ??i2_set_pwm1_percent 002A                ??_set_pwm1_raw 0082                __tdiv_to_l_@f1 0080  
              __tdiv_to_l_@f2 0083         __end_of_lcd_send_byte 3E14              setupSerial@dummy 0080  
               ??__tdiv_to_l_ 0086                     _PORTBbits 000F81                     _PORTCbits 000F82  
                   _PORTEbits 000F84                    _setupPorts 4254                    _print_data 1BA0  
         set_pwm1_percent@tmp 00CB              _read_adc_voltage 3BD0                     _TRISCbits 000F94  
                 ?_lcd_gotoxy 008A                     i2___ftadd 2540          __end_of_EXT_Int0_isr 2B78  
        __end_of_EXT_Int1_isr 3A64               _LCD_INIT_STRING 00F8          __end_of_EXT_Int2_isr 39E0  
                   i2___ftdiv 325A                     i2___ftmul 3166                     i2___fttol 3072  
                 _CCP1CONbits 000FBD                   ___ftdiv@exp 00B0                     _TXSTAbits 000FAC  
             i2___ftpack@sign 0005                __end_of_RC_isr 42AC           __size_of__div_to_l_ 0188  
                 ___ftmul@exp 009D             send_byte_no_lib@c 0080                __end_of___ftge 3408  
              __end_of___wmul 4084                   _BAUDCONbits 000FB8                 __pidataCOMRAM 4084  
               delay_cycles@n 0083                 delay_cycles@x 0084             ??_lcd_send_nibble 0086  
          main@HeatError_1269 01CE             __size_of_TMR0_isr 0022                __end_of_fround 22D8  
           __size_of_TMR3_isr 006C             ?_send_byte_no_lib 0001                __end_of_strcpy 3F46  
         start_initialization 3AE0            ??_send_byte_no_lib 0080           __end_of__tdiv_to_l_ 288A  
             i2___fttol@sign1 001E                    ?i2___ftadd 0009                    ?i2___ftdiv 0018  
                  ?i2___ftmul 0009                    ?i2___fttol 0015             ?_set_pwm1_percent 00C8  
           __size_ofi2_strcpy 0046            ??_set_pwm1_percent 00CB               ___llmod@divisor 0091  
                    ??_RC_isr 0001               ___llmod@counter 0095                      ??___ftge 00BF  
         __size_of_lcd_gotoxy 0050                      ??___wmul 0092                   __pdataBANK0 00F8  
                 __pdataBANK1 01D1  read_adc_raw_no_lib@raw_value 0085              __CFG_LPT1OSC$OFF 000000  
                    ??_fround 00A6                 sprintf@tmpval 00E6   __size_of_send_string_no_lib 0058  
                    ??_strcpy 0084                   ?_setupPorts 0001                   ?_print_data 0001  
                  fround@prec 00AC             __size_of___awtoft 0044             __size_of___ftpack 010C  
           __size_of___lltoft 007C             __size_of___lwtoft 002A                 __pcstackBANK0 0080  
               __pcstackBANK1 0171         print_data@HeaterState 01B9                  _isdigit$1900 0081  
           __size_of_delay_ms 0030          __end_of_set_pwm1_raw 404E                  i2strcpy@from 0003  
           __size_of_lcd_init 0076                   sprintf@flag 00E4             __size_of_lcd_putc 0062  
           __size_of_lcd_puts 0026                   sprintf@fval 00F2                   sprintf@prec 00F5  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008  __size_of_read_adc_raw_no_lib 004C  
               __pmediumconst FE5E                      ?___awdiv 0086                      ?___ftadd 00AD  
                    ?___awmod 0080                      ?___ftdiv 00A3                      ?___ftneg 0098  
                    ?___lldiv 0080                      ?___ftmul 0094                      ?___llmod 008D  
                    ?___ftsub 00B9                     __npowers_ FE87                      ?___fttol 00B9  
       print_data@CoolerState 01BF                   __tdiv_to_l_ 26EC                      ?_highIsr 0001  
                ??__div_to_l_ 0086         __size_of_EXT_Int0_isr 0166                      ?_isdigit 0001  
       __size_of_EXT_Int1_isr 0084         __size_of_EXT_Int2_isr 0086                   ??i2___ftadd 000F  
                    ?_sprintf 00C8                   ??i2___ftdiv 001E                     _init_pwm1 4284  
                 ??i2___ftmul 000F                __size_of_scale 04AE                   ??i2___fttol 0019  
    __size_of_init_adc_no_lib 000C                ___wmul@product 0092                     delay_ms@n 0080  
                   delay_ms@x 0082                      _PIE1bits 000F9D                      _PIE2bits 000FA0  
         __size_of_setupPorts 001A           __size_of_print_data 048C                      i2u430_40 30BC  
                    i2u430_45 30B4                      i2u513_40 3F82                      _PIR1bits 000F9E  
                    i2u513_47 3F78            __end_of__div_to_l_ 2A12                      _PIR2bits 000FA1  
                    i2u540_40 3A2E      __end_of_read_adc_voltage 3C42                      i2u542_40 3A5A  
                    i2u538_40 3A02                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
  read_adc_raw_no_lib@channel 0084                  _EXT_Int0_isr 2A12                  _EXT_Int1_isr 39E0  
                _EXT_Int2_isr 395A                      _TMR0_isr 4232                      _TMR3_isr 3C42  
                  _ADCON0bits 000FC2             ___wmul@multiplier 008E                     lcd_init@i 008A  
                    _FanSpeed 0100                     lcd_putc@c 008D                     lcd_puts@s 008E  
                ??_lcd_gotoxy 008B                      i2_strcpy 3F46                 ??_setupSerial 0080  
               ??_setupTimers 0080                    ?_init_pwm1 0001                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                     copy_data0 3B00                     copy_data1 3B20  
                   copy_data2 3B40        __size_of_setupInterupt 0026                      _Received 01D4  
             _lcd_send_nibble 419A                      __Hrparam 0000         set_pwm1_raw@raw_value 0080  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000            __end_of_lcd_gotoxy 3E64  
 __size_ofi2_set_pwm1_percent 0098              __size_of___awdiv 00BE              __size_of___ftadd 0268  
            __size_of___awmod 00A2              __size_of___ftdiv 014C              __size_of___ftneg 0030  
            __size_of___lldiv 00BC              __size_of___ftmul 015E              __size_of___llmod 009A  
            __size_of___ftsub 004C              __size_of___fttol 0144                      ___awtoft 3F8C  
                    ___ftpack 2F66                   _fround$2271 00A9                   _fround$2272 00A6  
                    ___lltoft 3A64                      ___lwtoft 4170              __size_of_highIsr 377E  
                  sprintf@len 00E2                    sprintf@exp 00EE                    sprintf@val 00EA  
       __size_of_set_pwm1_raw 003A              __size_of_isdigit 002A                      _delay_ms 40E8  
                    __ptext10 3F8C                      __ptext11 1BA0                      __ptext20 3408  
                    __ptext12 3EFC                      __ptext21 26EC                      __ptext13 001A  
                    __ptext30 3340                      __ptext22 288A                      __ptext14 16F2  
                    __ptext31 3D10                      __ptext23 3A64                      __ptext15 4146  
                    __ptext40 40E8                      __ptext32 42AC                      __ptext24 3828  
                    __ptext16 202C                      __ptext41 4284                      __ptext33 41E8  
                    __ptext25 34C6                      __ptext17 404E                      __ptext50 39E0  
                    __ptext42 42BE                      __ptext34 3CAE                      __ptext26 2E22  
                    __ptext18 2B78                      __ptext51 2A12                      __ptext43 4170  
                    __ptext35 3E14                      __ptext27 3EB0                      __ptext19 3786  
                    __ptext60 42CA                      __ptext52 3F46                      __ptext44 2F66  
                    __ptext36 3B5A                      __ptext28 22D8                      __ptext53 38C2  
                    __ptext37 3DBE                      __ptext29 40B8                      __ptext54 4118  
                    __ptext46 3C42                      __ptext38 419A                      __ptext55 3072  
                    __ptext47 4232                      __ptext39 3FD0                      __ptext56 3166  
                    __ptext48 4298                      __ptext57 325A                      __ptext49 395A  
                    __ptext58 2540                      __ptext59 3632                      __powers_ FEAE  
                    _lcd_init 3B5A                      _lcd_putc 3CAE                      _lcd_puts 41E8  
            __size_of_sprintf 0D6C       set_pwm1_percent@raw_val 00CE                    strcpy@from 0082  
      __size_of_lcd_send_byte 0056                 ?_delay_cycles 0001                 __size_of_main 096C  
   __size_of_send_byte_no_lib 0012           __end_of_setupSerial 4232           __end_of_setupTimers 3DBE  
           ??_init_adc_no_lib 0080              print_data@Buffer 0171                      int$flags 0072  
   __size_of_set_pwm1_percent 00B0                  _set_pwm1_raw 4014                  ??_setupPorts 0080  
               _setupInterupt 41C2                  ??_print_data 00F8       __size_ofi2_set_pwm1_raw 002E  
                  _INTCONbits 000FF2                      isdigit@c 0082           _read_adc_raw_no_lib 3E64  
                    scale@scl 00A9                   ??_init_pwm1 0080                      intlevel2 0000  
                   sprintf@ap 00E0                     sprintf@cp 00DE       __end_of_lcd_send_nibble 41C2  
            __tdiv_to_l_@exp1 008E                     sprintf@sp 00C8              __tdiv_to_l_@cntr 008D  
              ??_delay_cycles 0080              __tdiv_to_l_@quot 0089              ___lldiv@dividend 0080  
          __end_of_setupPorts 426E            __end_of_print_data 202C          ?_read_adc_raw_no_lib 0080  
  __end_of_send_string_no_lib 3D68                 _lcd_send_byte 3DBE                  ?__tdiv_to_l_ 0080  
              ?_setupInterupt 0001                      sprintf@c 00F7                      sprintf@f 00CA  
            ___lldiv@quotient 0088                      strcpy@cp 0084         set_pwm1_percent@value 00C8  
                    strcpy@to 0080                   _setupSerial 420E                   _setupTimers 3D68  
                  _TMR3_reset 42CA       i2set_pwm1_raw@raw_value 0001         ??_read_adc_raw_no_lib 0082  
